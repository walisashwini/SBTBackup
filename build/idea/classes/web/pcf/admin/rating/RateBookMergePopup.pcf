<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Popup
    afterCommit="EditRateBook.go(mergedRateBook)"
    beforeCommit="RateBookMerge.merge()"
    canEdit="true"
    id="RateBookMergePopup"
    startInEditMode="true"
    title="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.RateBookMerge&quot;)">
    <LocationEntryPoint
      signature="RateBookMergePopup(book1 : RateBook, book2 : RateBook)"/>
    <Variable
      name="book1"
      type="RateBook"/>
    <Variable
      name="book2"
      type="RateBook"/>
    <Variable
      initialValue="new gw.rating.rtm.RateBookMerge (book1, book2)"
      name="RateBookMerge"
      type="gw.rating.rtm.RateBookMerge"/>
    <Variable
      initialValue="RateBookMerge.MergedRateBook"
      name="mergedRateBook"
      type="entity.RateBook"/>
    <Variable
      initialValue="true"
      name="showAllRows"
      type="boolean"/>
    <Variable
      initialValue="new gw.pcf.rating.rtm.RateBookMergeUIHelper(book1, book2)"
      name="mergeUIHelper"
      type="gw.pcf.rating.rtm.RateBookMergeUIHelper"/>
    <Screen>
      <Toolbar>
        <EditButtons
          editVisible="false"
          updateLabel="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.CompleteMerge&quot;)"/>
      </Toolbar>
      <ListViewPanel>
        <Row>
          <LinkCell
            visible="true">
            <Link
              id="ConflictToolTipText"
              label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Instructions&quot;)"/>
          </LinkCell>
        </Row>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <TextInput
            id="FirstRateBook"
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.First&quot;)"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.CodeAndEdition&quot;, book1.BookCode, book1.BookEdition)"/>
          <TextInput
            id="SecondRateBook"
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Second&quot;)"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.CodeAndEdition&quot;, book2.BookCode, book2.BookEdition)"/>
          <TextInput
            editable="true"
            id="PropertyBookEdition"
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.Edition&quot;)"
            required="true"
            validationExpression="RateBookMerge.IsMergedRateBookUnique"
            value="mergedRateBook.BookEdition"/>
          <BooleanRadioInput
            editable="true"
            falseLabel="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.ShowConflicts&quot;)"
            id="ShowAllRows"
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Show&quot;)"
            trueLabel="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.AllRows&quot;)"
            value="showAllRows">
            <PostOnChange/>
          </BooleanRadioInput>
        </InputColumn>
      </DetailViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Properties&quot;)"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateBookPropertiesLV">
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookDesc.PropertyInfo.Name)"
          name="DescriptionWrapper"
          type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#UWCompany.PropertyInfo.Name)"
          name="UWCompanyWrapper"
          type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookJurisdiction.PropertyInfo.Name)"
          name="JursidictionWrapper"
          type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#PolicyLine.PropertyInfo.Name)"
          name="PolicyLineWrapper"
          type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookOffering.PropertyInfo.Name)"
          name="OfferingWrapper"
          type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#ExpirationDate.PropertyInfo.Name)"
          name="BeforeDateWrapper"
		  type="java.util.List"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookGroup.PropertyInfo.Name)"
          name="BookGroupWrapper"
		  type="java.util.List"/>
        <Row
          renderAsSmartHeader="true">
          <TextCell
            id="NameHeader"
            value="DisplayKey.get(&quot;Web.Rating.RateTables.Name&quot;)"/>
          <TextCell
            id="ResultHeader"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Result&quot;)"/>
          <TextCell
            id="SelectorHeader"
            required="false"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.PropertyHeader&quot;, book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookCode != book2.BookCode)">
          <TextCell
            id="PropertyBookCode"
            label="DisplayKey.get(&quot;Web.Rating.RateTables.Name&quot;)"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Code&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookCode.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookCode.PropertyInfo.Name)"
            id="BookCodeResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.BookCode != book2.BookCode)"
            id="BookCodeSelector"
            sortValueRange="false"
            value="mergedRateBook.BookCode"
            valueRange="(book1.BookCode == book2.BookCode)?{book1.BookCode}:{book1.BookCode, book2.BookCode}"
            valueType="java.lang.String"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookName != book2.BookName)">
          <TextCell
            id="PropertyBookName"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Name&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookName.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookName.PropertyInfo.Name)"
            id="BookNameResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.BookName != book2.BookName)"
            id="BookNameSelector"
            sortValueRange="false"
            value="mergedRateBook.BookName"
            valueRange="(book1.BookName == book2.BookName)?{book1.BookName}:{book1.BookName, book2.BookName}"
            valueType="java.lang.String"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookDesc != book2.BookDesc)">
          <TextCell
            id="PropertyBookDescription"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Description&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookDesc.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookDesc.PropertyInfo.Name)"
            id="BookDescriptionResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.BookDesc != book2.BookDesc)"
            id="BookDescriptionSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookDesc.PropertyInfo.Name]"
            valueRange="DescriptionWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.CascadedLookup != book2.CascadedLookup)">
          <TextCell
            id="PropertyCascadedLookup"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.CascadedLookup&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#CascadedLookup.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#CascadedLookup.PropertyInfo.Name)"
            id="CascadedLookupResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            align="left"
            editable="(book1.CascadedLookup != book2.CascadedLookup)"
            id="CascadedLookupSelector"
            optionLabel="VALUE ? DisplayKey.get(&quot;Web.Rating.RateBooks.CascadedLookup.Boolean.True&quot;) : DisplayKey.get(&quot;Web.Rating.RateBooks.CascadedLookup.Boolean.False&quot;)"
            sortValueRange="false"
            value="mergedRateBook.CascadedLookup"
            valueRange="(book1.CascadedLookup == book2.CascadedLookup)?{book1.CascadedLookup}:{book1.CascadedLookup, book2.CascadedLookup}"
            valueType="java.lang.Boolean"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookGroup != book2.BookGroup)">
          <TextCell
            id="PropertyBookGroup"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.BookGroup&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookGroup.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookGroup.PropertyInfo.Name)"
            id="BookGroupResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            align="left"
            editable="(book1.BookGroup != book2.BookGroup)"
            id="BookGroupSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookGroup.PropertyInfo.Name]"
            valueRange="BookGroupWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.UWCompany != book2.UWCompany)">
          <TextCell
            id="PropertyUWCompany"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.UWCompany&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#UWCompany.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#UWCompany.PropertyInfo.Name)"
            id="UWCompanyResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.UWCompany != book2.UWCompany)"
            id="UWCompanySelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#UWCompany.PropertyInfo.Name]"
            valueRange="UWCompanyWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookJurisdiction != book2.BookJurisdiction)">
          <TextCell
            id="PropertyBookJurisdiction"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Jurisdiction&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookJurisdiction.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookJurisdiction.PropertyInfo.Name)"
            id="BookJurisdictionResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.BookJurisdiction != book2.BookJurisdiction)"
            id="BookJurisdictionSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookJurisdiction.PropertyInfo.Name]"
            valueRange="JursidictionWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.PolicyLine != book2.PolicyLine)">
          <TextCell
            id="PropertyPolicyLine"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.PolicyLine&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#PolicyLine.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#PolicyLine.PropertyInfo.Name)"
            id="PolicyLineResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.PolicyLine != book2.PolicyLine)"
            id="PolicyLineSelector"
            optionLabel="(VALUE as String ==DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.None&quot;))?DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Generic&quot;):VALUE.toString()"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#PolicyLine.PropertyInfo.Name]"
            valueRange="PolicyLineWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookOffering != book2.BookOffering)">
          <TextCell
            id="PropertyBookOffering"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Offering&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookOffering.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookOffering.PropertyInfo.Name)"
            id="BookOfferingResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.BookOffering != book2.BookOffering)"
            id="BookOfferingSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookOffering.PropertyInfo.Name]"
            valueRange="OfferingWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.EffectiveDate != book2.EffectiveDate) or (book1.ExpirationDate != book2.ExpirationDate)">
          <TextCell
            id="PropertyBookEffectiveDateLabel"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.EffectiveDate&quot;)"/>
          <TextCell
            id="blank1"/>
          <TextCell
            id="blank2"/>
        </Row>
        <Row
          visible="showAllRows or (book1.EffectiveDate != book2.EffectiveDate)">
          <TextCell
            id="PropertyBookEffectiveDate"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.EffectiveDate.After&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#EffectiveDate.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#EffectiveDate.PropertyInfo.Name)"
            id="EffectiveDateResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.EffectiveDate != book2.EffectiveDate)"
            id="EffectiveDateSelector"
            optionLabel="VALUE.formatDate(SHORT)"
            sortValueRange="false"
            value="mergedRateBook.EffectiveDate"
            valueRange="(book1.EffectiveDate == book2.EffectiveDate)?{book1.EffectiveDate}:{book1.EffectiveDate, book2.EffectiveDate}"
            valueType="java.util.Date"/>
        </Row>
        <Row
          visible="showAllRows or (book1.ExpirationDate != book2.ExpirationDate)">
          <TextCell
            id="PropertyExpirationDate"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.EffectiveDate.Before&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#ExpirationDate.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#ExpirationDate.PropertyInfo.Name)"
            id="ExpirationDateResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.ExpirationDate != book2.ExpirationDate)"
            id="ExpirationDateSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#ExpirationDate.PropertyInfo.Name]"
            valueRange="BeforeDateWrapper"
            valueType="gw.rating.rtm.NullableRadioValueWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)">
          <TextCell
            id="PropertyRenewalEffectiveDateLabel"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.RenewalEffectiveDate&quot;)"/>
          <TextCell
            id="blank3"/>
          <TextCell
            id="blank4"/>
        </Row>
        <Row
          visible="showAllRows or (book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)">
          <TextCell
            id="PropertyRenewalEffectiveDate"
            value="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.EffectiveDate.After&quot;)"/>
          <BooleanRadioCell
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#RenewalEffectiveDate.PropertyInfo.Name)"
            iconType="svgFileName"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#RenewalEffectiveDate.PropertyInfo.Name)"
            id="RenewalEffectiveDateResult"
            value="true"
            valueType="boolean"/>
          <RangeRadioCell
            editable="(book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)"
            id="RenewalEffectiveDatenSelector"
            optionLabel="VALUE.formatDate(SHORT)"
            sortValueRange="false"
            value="mergedRateBook.RenewalEffectiveDate"
            valueRange="(book1.RenewalEffectiveDate == book2.RenewalEffectiveDate)?{book1.RenewalEffectiveDate}:{book1.RenewalEffectiveDate, book2.RenewalEffectiveDate}"
            valueType="java.util.Date"/>
        </Row>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.RateTables&quot;)"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateTablesLV">
        <RowIterator
          editable="true"
          elementName="rateTableKey"
          id="RateTables"
          pageSize="0"
          valueType="java.util.List&lt;gw.util.Pair&lt;java.lang.String, java.lang.String&gt;&gt;"
          value="RateBookMerge.RateTableKeys">
          <Variable
            initialValue="RateBookMerge.RateTableIconMap.get(rateTableKey)"
            name="conflictStatus"
            type="gw.rating.rtm.RateBookMerge.conflictStatus"/>
          <Row
            visible="showAllRows or RateBookMerge.tableConflictExists(rateTableKey)">
            <TextCell
              id="PropertyName"
              label="DisplayKey.get(&quot;Web.Rating.RateTables.Code&quot;)"
              value="rateTableKey.First.toString()"/>
            <BooleanRadioCell
              enableSort="false"
              icon="mergeUIHelper.getIcon(conflictStatus)"
              iconType="svgFileName"
              iconLabel="mergeUIHelper.getIconToolTip(conflictStatus)"
              id="RateTableResult"
              label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Result&quot;)"
              showHeaderIcon="false"
              value="true"
              valueType="boolean"/>
            <RangeRadioCell
              editable="RateBookMerge.tableConflictExists(rateTableKey)"
              enableSort="false"
              id="RateTableSelector"
              label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.PropertyHeader&quot;, book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"
              optionLabel="mergeUIHelper.getRoutineOrTableOptionLabel(conflictStatus, VALUE.Definition.TableName)"
              value="RateBookMerge.MergedRateTables[rateTableKey]"
              valueRange="RateBookMerge.getRateTableFromBothBooks(rateTableKey)"
              valueType="entity.RateTable"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="DisplayKey.get(&quot;Web.Rating.RateBooks.CalcRoutines&quot;)"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateRoutinesLV">
        <RowIterator
          editable="true"
          elementName="rateRoutine"
          id="RateRoutines"
          pageSize="0"
          valueType="java.util.List&lt;entity.CalcRoutineDefinition&gt;"
          value="RateBookMerge.RateRoutines">
          <Variable
            initialValue="RateBookMerge.RateRoutinesIconMap.get(rateRoutine.Code)"
            name="conflictStatus"
            type="gw.rating.rtm.RateBookMerge.conflictStatus"/>
          <Row
            visible="showAllRows or RateBookMerge.rateRoutineConflictsExist(rateRoutine)">
            <TextCell
              id="RateRoutineName"
              label="DisplayKey.get(&quot;Web.Rating.RateTables.Code&quot;)"
              value="rateRoutine.Code"/>
            <BooleanRadioCell
              enableSort="false"
              icon="mergeUIHelper.getIcon(conflictStatus)"
              iconType="svgFileName"
              iconLabel="mergeUIHelper.getIconToolTip(conflictStatus)"
              id="RateRoutineResult"
              label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.Result&quot;)"
              showHeaderIcon="false"
              value="true"
              valueType="boolean"/>
            <RangeRadioCell
              editable="RateBookMerge.rateRoutineConflictsExist(rateRoutine)"
              enableSort="false"
              id="RateRoutineSelector"
              label="DisplayKey.get(&quot;Web.Rating.RateBooks.Merge.PropertyHeader&quot;, book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"
              optionLabel="mergeUIHelper.getRoutineOrTableOptionLabel(conflictStatus, VALUE.Name)"
              value="RateBookMerge.MergedRateRoutines[rateRoutine.Code]"
              valueRange="RateBookMerge.getRateRoutinesFromBooks(rateRoutine.Code)"
              valueType="entity.CalcRoutineDefinition"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </Screen>
  </Popup>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="pcf.xsd">
  <Screen
    editable="true"
    id="RateRoutineEditScreen">
    <Require
      name="rateRoutine"
      type="CalcRoutineDefinition"/>
    <Require
      name="newRateRoutine"
      type="boolean"/>
    <Require
      name="copyVersionTyp"
      type="gw.rating.flow.util.CopyVersionType"/>
    <Variable
      initialValue="new gw.pcf.rating.flow.RateRoutineEditScreenHelper(rateRoutine, CurrentLocation)"
      name="helper"
      type="gw.pcf.rating.flow.RateRoutineEditScreenHelper"/>
    <Variable
      initialValue="helper.initializeInScopeParamInScopeUsageMap(rateRoutine)"
      name="inScopeParamInScopeUsageMap"
      recalculateOnRefresh="true"
      type="java.util.Map&lt;CalcRoutineParamName,List&lt;gw.rating.flow.util.InScopeUsage&gt;&gt;"/>
    <Variable
      initialValue="helper.getCostDataUsages(rateRoutine.ParameterSet)"
      name="costDataUsages"
      recalculateOnRefresh="true"
      type="java.util.List&lt;gw.rating.flow.util.InScopeUsage&gt;"/>
    <Variable
      initialValue="(rateRoutine.ParameterSet != null) ? rateRoutine.ParameterSet.WritableParameterUsages : null"
      name="writableParamUsages"
      recalculateOnRefresh="true"
      type="java.util.Map&lt;CalcRoutineParameter, java.util.List&lt;gw.rating.flow.util.InScopeUsage&gt;&gt;"/>
    <Variable
      initialValue="(writableParamUsages != null) ? writableParamUsages.Keys.toList().orderBy(\ crp -&gt; crp.DisplayName) : null"
      name="writableParams"
      recalculateOnRefresh="true"
      type="List&lt;CalcRoutineParameter&gt;"/>
    <Variable
      initialValue="false"
      name="checkAll"
      type="boolean"/>
    <Variable
      initialValue="{}"
      name="highlightedRows"
      type="java.util.Map&lt;CalcStepDefinition, java.util.List&lt;java.lang.Integer&gt;&gt;"/>
    <Variable
      initialValue="helper.OrderedSteps"
      name="orderedSteps"
      recalculateOnRefresh="true"
      type="java.util.List&lt;entity.CalcStepDefinition&gt;"/>
    <Variable
      initialValue="rateRoutine.StepIndentLevels as java.util.HashMap&lt;entity.CalcStepDefinition, java.lang.Integer&gt;"
      name="indentLevelMap"
      recalculateOnRefresh="true"
      type="java.util.HashMap&lt;entity.CalcStepDefinition, java.lang.Integer&gt;"/>
    <Variable
      initialValue="helper.getIndex(rateRoutine, indentLevelMap)"
      name="sectionIndex"
      recalculateOnRefresh="true"
      type="java.util.List&lt;gw.pcf.rating.flow.RateRoutineEditScreenHelper.RateRoutineSection&gt;"/>
    <Variable
      initialValue="sectionIndex?.first()"
      name="currentSection"
      type="gw.pcf.rating.flow.RateRoutineEditScreenHelper.RateRoutineSection"/>
    <Variable
      initialValue="(CalcStepOperatorType.Type as gw.entity.ITypeList).getTypeKeysByFilterName(&quot;MainColumnOperators&quot;)"
      name="mainColumnOperators"
      type="java.util.List"/>
    <Toolbar
      id="RateRoutineToolBar">
      <ToolbarButton
        action="rateRoutine.canUpdate(); CurrentLocation.commit()"
        default="true"
        hideIfReadOnly="true"
        id="UpdateButton"
        label="DisplayKey.get(&quot;Button.Update&quot;)"
        shortcut="U"
        visible="CurrentLocation.InEditMode"/>
      <EditButtons
        cancelLabel="DisplayKey.get(&quot;Web.Rating.RateRoutines.ExitButton&quot;)"
        cancelShortcut="C"
        cancelVisible="true"
        hideIfReadOnly="true"
        updateDefault="true"
        updateVisible="false"/>
      <ToolbarButton
        action="rateRoutine.canUpdate(); helper.saveDraft()"
        available="true"
        id="SaveDraftButton"
        label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Save&quot;)"
        shortcut="Y"/>
      <ToolbarButton
        available="false"
        confirmMessage="DisplayKey.get(&quot;Web.Rating.RateRoutines.DeleteConfirmation&quot;)"
        id="Delete"
        label="DisplayKey.get(&quot;Web.Rating.RateRoutines.DeleteButton&quot;)"
        tooltip="DisplayKey.get(&quot;Web.Rating.RateRoutines.DeleteButtonTooltip&quot;)"/>
    </Toolbar>
    <AlertBar
      id="AlertBarForViewButton"
      label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.ViewDisabledHelp&quot;)"
      visible="currentSection!= null and helper.bundleContainsChanges(CurrentLocation.Bundle)"/>
    <PanelRow>
      <PanelColumn>
        <PanelRef
          def="RateRoutineDV(rateRoutine, newRateRoutine, copyVersionTyp, highlightedRows, costDataUsages)">
        </PanelRef>
      </PanelColumn>
      <PanelColumn>
        <PanelRef
          def="LocalizedValuesDV(rateRoutine, { &quot;Name&quot;, &quot;Description&quot; }, { DisplayKey.get(&quot;Web.Rating.RateRoutines.Name&quot;), DisplayKey.get(&quot;Web.Rating.RateRoutines.Description&quot;) })"/>
      </PanelColumn>
    </PanelRow>
    <PanelRow>
      <PanelColumn>
        <PanelRef>
          <TitleBar
            id="StepsTitlebar"
            title="currentSection == null ? DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Steps&quot;) : helper.getTitleBarHeadingInSection(currentSection, rateRoutine)"/>
          <Toolbar
            id="RateRoutineStepsToolbar">
            <ToolbarButton
              id="ViewButton"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.View&quot;)"
              tooltip="helper.bundleContainsChanges(CurrentLocation.Bundle) ? DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.ViewDisabledHelp&quot;) : DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.ViewEnabledHelp&quot;)"
              visible="(currentSection != null)">
              <MenuItemIterator
                elementName="rateRoutineSection"
                id="viewSectionsMenu"
                value="sectionIndex.toTypedArray()"
                valueType="gw.pcf.rating.flow.RateRoutineEditScreenHelper.RateRoutineSection[]">
                <MenuItem
                  action="currentSection = rateRoutineSection"
                  available="currentSection == rateRoutineSection or not helper.bundleContainsChanges(CurrentLocation.Bundle)"
                  checked="rateRoutineSection == currentSection"
                  hideIfDisabled="false"
                  id="sectionItem"
                  label="helper.makeSectionLabel(rateRoutineSection, rateRoutine, highlightedRows)"/>
              </MenuItemIterator>
            </ToolbarButton>
            <ToolbarButton
              available="currentSection == null"
              id="AddButton"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Append&quot;)">
              <MenuItem
                action="helper.appendRows(1)"
                id="Add1"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Add1&quot;)"
                retainScrollPosition="true"/>
              <MenuItem
                action="helper.appendRows(10)"
                id="Add10"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Add10&quot;)"
                retainScrollPosition="true"/>
            </ToolbarButton>
            <CheckedValuesToolbarButton
              id="RowEditButton"
              iterator="RatingRoutineActions"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Insert&quot;)">
              <CheckedValuesMenuItem
                allCheckedRowsAction="currentSection = helper.copySteps(CheckedValues,currentSection)"
                id="Duplicate"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Duplicate&quot;)"
                retainScrollPosition="true"/>
              <CheckedValuesMenuItem
                allCheckedRowsAction="currentSection = helper.insertBefore(CheckedValues,currentSection)"
                id="InsertBefore"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.InsertBefore&quot;)"
                retainScrollPosition="true"/>
              <CheckedValuesMenuItem
                allCheckedRowsAction="currentSection = helper.insertAfter(CheckedValues, currentSection)"
                id="InsertAfter"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.InsertAfter&quot;)"
                retainScrollPosition="true"/>
              <CheckedValuesMenuItem
                allCheckedRowsAction="currentSection = helper.insertBefore(CheckedValues,currentSection, 10)"
                id="Insert10Before"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Insert10Before&quot;)"
                retainScrollPosition="true"/>
              <CheckedValuesMenuItem
                allCheckedRowsAction="currentSection = helper.insertAfter(CheckedValues, currentSection, 10)"
                id="Insert10After"
                label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Insert10After&quot;)"
                retainScrollPosition="true"/>
            </CheckedValuesToolbarButton>
            <CheckedValuesToolbarButton
              allCheckedRowsAction="currentSection = helper.removeRows(CheckedValues, currentSection)"
              confirmMessage="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.RemoveRowConfirmation&quot;)"
              id="removeButton"
              iterator="RatingRoutineActions"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.RemoveRow&quot;)"
              shortcut="ShiftR"/>
            <CheckedValuesToolbarButton
              allCheckedRowsAction="helper.moveUp(CheckedValues)"
              id="MoveUp"
              iterator="RatingRoutineActions"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.MoveUp&quot;)"
              retainScrollPosition="true"/>
            <CheckedValuesToolbarButton
              allCheckedRowsAction="helper.moveDown(CheckedValues)"
              id="MoveDown"
              iterator="RatingRoutineActions"
              label="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.MoveDown&quot;)"
              retainScrollPosition="true"/>
            <ToolbarDivider/>
            <ToolbarButton
              action="gw.rating.flow.validation.RateRoutineValidation.validateForRateRoutineEditScreen(rateRoutine, TC_DEFAULT, gw.rating.flow.validation.ValidationGroup.ALL, highlightedRows); gw.api.util.LocationUtil.addRequestScopedInfoMessage(DisplayKey.get(&quot;Validation.Rating.RateRoutineDefinition.ValidatationPasses&quot;))"
              available="true"
              id="ValidateButton"
              label="currentSection != null ? DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.ValidateAll&quot;) : DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Validate&quot;)"
              retainScrollPosition="true"
              shortcut="V"/>
          </Toolbar>
          <ListViewPanel
            alternateEntryStyle="false">
            <Row
              renderAsSmartHeader="true">
              <TextCell
                id="RateRoutineStepErrorColumnLabel"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.ErrorCrossRefNum&quot;)"/>
              <TextCell
                id="RateRoutineInstructionColumnLabel"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Instruction&quot;)"/>
              <TextCell
                align="center"
                enableSort="false"
                id="StepOperatorColumnLabel"
                showHeaderIcon="false"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Operator&quot;)"/>
              <TextCell
                align="center"
                id="LeftParenthesisGroupColumnLabel"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.LeftParenthesis&quot;)"/>
              <TextCell
                id="RateRoutineOperandColumnLabel"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Operand&quot;)"/>
              <TextCell
                align="center"
                id="RightParenthesisGroupColumnLabel"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.RightParenthesis&quot;)"/>
              <TextCell
                enableSort="false"
                id="StepNoteColumnLabel"
                showHeaderIcon="false"
                value="DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.Notes&quot;)"/>
            </Row>
            <RowIterator
              canPick="false"
              checkBoxVisible="not helper.isStepInLoopBlock(ratingRoutineStep) or helper.stepStartsLoopBlock(ratingRoutineStep)"
              editable="true"
              elementName="ratingRoutineStep"
              hasCheckBoxes="true"
              id="RatingRoutineActions"
              pageSize="0"
              startChecked="helper.startChecked(ratingRoutineStep)"
              value="orderedSteps.where(\ s -&gt; currentSection == null or currentSection.showRow(s.SortOrder))"
              valueType="java.util.List&lt;entity.CalcStepDefinition&gt;">
              <ToolbarFlag
                name="trueFlag"/>
              <Row
                editable="false"
                useTitleStyle="true"
                visible="helper.isStepInLoopBlock(ratingRoutineStep) and not (ratingRoutineStep.IsSectionCommentStep or ratingRoutineStep.IsVoidFunctionStep)">
                <TextCell
                  align="center"
                  enableSort="false"
                  id="LineNumber"
                  valueType="java.lang.Integer"/>
                <ModalCellRef
                  def="RateRoutineStepInstruction(ratingRoutineStep, helper, indentLevelMap)"
                  id="RateRoutineStepInstruction"
                  mode="ratingRoutineStep.StepType.Categories.whereTypeIs(CalcStepCategory).first().Code"/>
                <RangeCell
                  align="center"
                  available="helper.operatorAvailable(ratingRoutineStep)"
                  enableSort="false"
                  filter="(CalcStepOperatorType.Type as gw.entity.ITypeList).getTypeKeysByFilterName(&quot;MainColumnOperators&quot;).contains(VALUE)"
                  id="ActionOperator"
                  noneSelectedLabel="&quot; &quot;"
                  optionLabel="VALUE.LabelForDisplay"
                  showHeaderIcon="false"
                  value="ratingRoutineStep.PrimaryOperand.OperatorType"
                  valueRange="CalcStepOperatorType.getTypeKeys(false)"
                  valueType="typekey.CalcStepOperatorType"
                  valueVisible="helper.operatorAvailable(ratingRoutineStep) and not ratingRoutineStep.IsSectionCommentStep"
                  width="64">
                  <PostOnChange
                    onChange="helper.updateOperandForOperatorChange(ratingRoutineStep)"/>
                </RangeCell>
                <TextCell
                  align="center"
                  id="LoopBlockLeftParenthesisGroup"
                  requestValidationExpression="VALUE.toCharArray().toList().countWhere(\ c -&gt; c != '(') == 0 ? null: DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.OnlyLeftParenthesisHere&quot;)"
                  value="ratingRoutineStep.PrimaryOperand.LeftParenthesisGroup"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"
                  width="45"/>
                <TextCell
                  enableSort="false"
                  id="ActionOperand"
                  value="ratingRoutineStep.PrimaryOperand.OperandName"/>
                <TextCell
                  align="center"
                  id="LoopBlockRightParenthesisGroup"
                  requestValidationExpression="VALUE.toCharArray().toList().countWhere(\ c -&gt; c != ')') == 0 ? null: DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.OnlyRightParenthesisHere&quot;)"
                  value="ratingRoutineStep.PrimaryOperand.RightParenthesisGroup"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"
                  width="45"/>
                <TextCell
                  enableSort="false"
                  id="LoopBlockStepNote"
                  showHeaderIcon="false"
                  value="ratingRoutineStep.Notes"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"/>
              </Row>
              <Row
                highlighted="highlightedRows.containsKey(ratingRoutineStep)"
                visible="not helper.isStepInLoopBlock(ratingRoutineStep) and not (ratingRoutineStep.IsSectionCommentStep or ratingRoutineStep.IsVoidFunctionStep)">
                <TextCell
                  id="RateRoutineStepError"
                  value="highlightedRows.get(ratingRoutineStep)!= null ? highlightedRows.get(ratingRoutineStep).join(&quot;,&quot;) : &quot; &quot;"/>
                <ModalCellRef
                  def="RateRoutineStepEditInstruction(ratingRoutineStep, helper, indentLevelMap, writableParamUsages, writableParams, costDataUsages)"
                  editable="true"
                  id="RateRoutineInstruction"
                  mode="helper.getStepEditInstructionMode(ratingRoutineStep)"/>
                <RangeCell
                  align="center"
                  available="helper.operatorAvailable(ratingRoutineStep)"
                  editable="true"
                  enableSort="false"
                  filter="mainColumnOperators.contains(VALUE)"
                  id="StepOperator"
                  noneSelectedLabel="&quot; &quot;"
                  optionLabel="VALUE.LabelForDisplay"
                  showHeaderIcon="false"
                  value="ratingRoutineStep.PrimaryOperand.OperatorType"
                  valueRange="CalcStepOperatorType.getTypeKeys(false)"
                  valueType="typekey.CalcStepOperatorType"
                  valueVisible="helper.operatorAvailable(ratingRoutineStep) and not ratingRoutineStep.IsSectionCommentStep">
                  <PostOnChange
                    onChange="helper.updateOperandForOperatorChange(ratingRoutineStep)"/>
                </RangeCell>
                <TextCell
                  align="center"
                  editable="!(ratingRoutineStep.StepType.hasCategory(CalcStepCategory.TC_FLOWCONTROL) or ratingRoutineStep.IsSectionCommentStep)"
                  id="LeftParenthesisGroup"
                  requestValidationExpression="VALUE.toCharArray().toList().countWhere(\ c -&gt; c != '(') == 0 ? null: DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.OnlyLeftParenthesisHere&quot;)"
                  value="ratingRoutineStep.PrimaryOperand.LeftParenthesisGroup"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"/>
                <ModalCellRef
                  def="RateRoutineStepEditOperand(ratingRoutineStep, rateRoutine, inScopeParamInScopeUsageMap, costDataUsages, orderedSteps)"
                  editable="true"
                  id="RateRoutineOperand"
                  mode="gw.pcf.rating.flow.RateRoutineEditScreenHelper.getRateRoutineStepOperandMode(ratingRoutineStep)"/>
                <TextCell
                  align="center"
                  editable="!(ratingRoutineStep.StepType.hasCategory(CalcStepCategory.TC_FLOWCONTROL) or ratingRoutineStep.IsSectionCommentStep)"
                  id="RightParenthesisGroup"
                  requestValidationExpression="VALUE.toCharArray().toList().countWhere(\ c -&gt; c != ')') == 0 ? null: DisplayKey.get(&quot;Web.Rating.Flow.CalcRoutine.OnlyRightParenthesisHere&quot;)"
                  value="ratingRoutineStep.PrimaryOperand.RightParenthesisGroup"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"/>
                <TextCell
                  editable="true"
                  enableSort="false"
                  id="StepNote"
                  showHeaderIcon="false"
                  value="ratingRoutineStep.Notes"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"/>
              </Row>
              <Row
                highlighted="highlightedRows.containsKey(ratingRoutineStep)"
                visible="not helper.isStepInLoopBlock(ratingRoutineStep) and ratingRoutineStep.IsSectionCommentStep">
                <TextCell
                  id="RateRoutineStepErrorCommentRow"
                  value="highlightedRows.get(ratingRoutineStep)!= null ? highlightedRows.get(ratingRoutineStep).join(&quot;,&quot;) : &quot; &quot;"/>
                <ModalCellRef
                  def="RateRoutineStepEditInstruction(ratingRoutineStep, helper, indentLevelMap, writableParamUsages, writableParams, costDataUsages)"
                  editable="true"
                  id="RateRoutineInstructionCommentRow"
                  mode="helper.getStepEditInstructionMode(ratingRoutineStep)"/>
                <TextAreaCell
                  colspan="5"
                  editable="true"
                  id="SectionComment"
                  numRows="2"
                  outputConversion="rateRoutine.indentValue(ratingRoutineStep, VALUE, indentLevelMap)"
                  value="ratingRoutineStep.SectionComment"/>
              </Row>
              <Row
                highlighted="highlightedRows.containsKey(ratingRoutineStep)"
                visible="not helper.isStepInLoopBlock(ratingRoutineStep) and ratingRoutineStep.IsVoidFunctionStep">
                <TextCell
                  id="RateRoutineStepErrorVoidFunctionRow"
                  value="highlightedRows.get(ratingRoutineStep)!= null ? highlightedRows.get(ratingRoutineStep).join(&quot;,&quot;) : &quot; &quot;"/>
                <ModalCellRef
                  def="RateRoutineStepEditInstruction(ratingRoutineStep, helper, indentLevelMap, writableParamUsages, writableParams, costDataUsages)"
                  editable="true"
                  id="RateRoutineInstructionVoidFunctionRow"
                  mode="helper.getStepEditInstructionMode(ratingRoutineStep)"/>
                <TextCell
                  colspan="5"
                  editable="true"
                  enableSort="false"
                  id="VoidFunctionStepNote"
                  showHeaderIcon="false"
                  value="ratingRoutineStep.Notes"
                  valueVisible="not ratingRoutineStep.IsSectionCommentStep"/>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
      </PanelColumn>
    </PanelRow>
  </Screen>
</PCF>
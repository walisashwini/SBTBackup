<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <ListViewTile
    hideViewMoreIfShortList="true"
    id="FederatedMyActivitiesListViewTile"
    stretch="true"
    title="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Title')"
    viewMoreAction="DesktopActivities.push()"
    viewMoreLabel="DisplayKey.get('Web.Tile.ViewAll')">
    <RowIterator
      editable="false"
      elementName="activity"
      type="gw.api.web.desktop.data.activity.ActivityDTO"
      value="new gw.api.web.desktop.data.activity.ActivityFederatedData()"
      valueType="gw.api.web.desktop.data.FederatedDataIteratorBackingData">
      <ToolbarFilter
        name="activityFilter">
        <ToolbarFilterOptionGroup
          filters="gw.api.web.desktop.data.activity.ActivityDataFilters.allFilters()"/>
      </ToolbarFilter>
      <IteratorSort
        sortBy="activity.PriorityValue"
        sortOrder="1"/>
      <IteratorSort
        sortBy="activity.PriorityCode"
        sortOrder="2"/>
      <IteratorSort
        sortBy="activity.TargetDate"
        sortOrder="3"/>
      <Row
        useArchivedStyle="activity.IsArchived">
        <BooleanRadioCell
          align="right"
          id="EscalatedIcon"
          icon="&quot;escalated&quot;"
          iconColor="gw.api.web.color.GWColor.THEME_ALERT_ERROR"
          iconType="svgFileName"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.EscalatedActivityTooltip&quot;)"
          tooltip="DisplayKey.get(&quot;Web.DesktopActivitiesLV.EscalatedActivityTooltip&quot;)"
          value="activity.Escalated"
          valueType="boolean"/>
        <DateCell
          id="DueDate"
          fontColor="activity.UIOverdueColor"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.DueDate')"
          value="activity.TargetDate"
          wrap="false"/>
        <TextCell
          grow="true"
          id="Subject"
          action="FederatedActivityForward.push(activity.PublicId, activity.AccountPublicId, activity.Id)"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Subject')"
          available="gw.api.web.activity.FederatedActivityViewPermissionHandler.canViewActivity(User.util.getCurrentUser(), activity)"
          value="activity.Subject"
          wrap="true"/>
        <TypeKeyCell
          id="Priority"
          fontColor="activity.UIPriorityColor"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Priority')"
          sortBy="activity.PriorityValue, activity.PriorityCode"
          value="typekey.Priority.get(activity.PriorityCode)"
          valueType="typekey.Priority"
          wrap="false"/>
        <TypeKeyCell
          id="Status"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Status')"
          sortBy="activity.StatusPriority, activity.StatusCode"
          value="typekey.ActivityStatus.get(activity.StatusCode)"
          valueType="typekey.ActivityStatus"
          wrap="false"/>
        <TextCell
          grow="true"
          id="AccountHolder"
          action="FederatedContactForward.push(activity.AccountPublicId, activity.ContactPublicId)"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.AccountHolder')"
          available="gw.api.web.activity.FederatedActivityViewPermissionHandler.canViewActivity(User.util.getCurrentUser(), activity)"
          value="activity.ContactName"/>
        <DateCell
          id="EscalationDate"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.EscalationDate')"
          value="activity.EscalationDate"
          wrap="false"/>
        <TextCell
          grow="true"
          id="Product"
          label="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Product')"
          sortBy="activity.PolicyProductCode"
          value="activity.PolicyProduct"/>
        <ButtonCell
          id="CompleteButton"
          action="var activityEntity = Activity.finder.findActivityByPublicId(activity.PublicId); gw.api.web.activity.ActivityUtil.completeActivity(activityEntity, null)"
          value="DisplayKey.get('Web.Dashboard.Underwriter.MyActivities.Complete')"
          available="gw.api.web.activity.FederatedActivityUtil.canCompleteActivity(User.util.getCurrentUser(), activity) and not activity.Recurring"/>
      </Row>
    </RowIterator>
  </ListViewTile>
</PCF>
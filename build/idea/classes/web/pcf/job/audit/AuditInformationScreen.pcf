<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Screen
    id="AuditInformationScreen">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Variable
      initialValue="new gw.pcf.job.audit.AuditInformationHelper(CurrentLocation, policyPeriod)"
      name="helper"
      type="gw.pcf.job.audit.AuditInformationHelper"/>
    <TitleBar/>
    <Toolbar>
      <ToolbarButton
        action="CreateNewAuditInformationPopup.push(policyPeriod)"
        available="policyPeriod.CanAcceptNewAudit"
        id="CreateAdHocAudit"
        label="DisplayKey.get(&quot;Web.PolicyFile.Audits.NewAudit&quot;)"
        visible="perm.Audit.create and policyPeriod.IsAuditable"/>
    </Toolbar>
    <ListViewPanel
      id="AuditsLV">
      <Row
        renderAsSmartHeader="true">
        <TextCell
          id="AuditPeriodStartDateLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.StartDate&quot;)"/>
        <TextCell
          id="AuditPeriodEndDateLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.EndDate&quot;)"/>
        <TextCell
          id="AuditTypeLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.AuditType&quot;)"/>
        <TextCell
          id="AuditMethodLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.AuditMethod&quot;)"/>
        <TextCell
          id="InitDateLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.InitDate&quot;)"/>
        <TextCell
          id="DueDateLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.DueDate&quot;)"/>
        <TextCell
          id="StatusLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.AuditStatus&quot;)"/>
        <TextCell
          align="right"
          id="TotalTransactionLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.TransactionAmount&quot;)"/>
        <TextCell
          align="right"
          id="TotalCostLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.TotalCost&quot;)"/>
        <TextCell
          id="ActionLabel"
          value="DisplayKey.get(&quot;Web.PolicyFile.Audits.Actions&quot;)"/>
      </Row>
      <RowIterator
        editable="true"
        elementName="info"
        id="InfoIterator"
        pageSize="20"
        value="policyPeriod.DisplayableAuditInfoList"
        valueType="gw.job.audit.DisplayableAuditInfo[]">
        <ToolbarFilter
          id="AuditInfoFilters"
          name="displayableInfoFilters">
          <ToolbarFilterOptionGroup
            filters="new gw.job.audit.AuditInformationFilterSet().FilterOptions"/>
        </ToolbarFilter>
        <Row>
          <DateCell
            id="AuditPeriodStartDate"
            value="info.StartDate"/>
          <DateCell
            id="AuditPeriodEndDate"
            sortOrder="1"
            value="info.EndDate"/>
          <TextCell
            action="JobForward.go(info.Audit, info.Audit.PolicyPeriod)"
            actionAvailable="helper.canViewAuditJob(info.ActualInfo)"
            id="AuditType"
            value="info.Type"/>
          <TextCell
            id="AuditMethod"
            value="info.Method"/>
          <DateCell
            id="InitDate"
            value="info.InitDate"/>
          <DateCell
            id="DueDate"
            value="info.DueDate"/>
          <TextCell
            id="AuditStatus"
            value="info.Status"/>
          <MonetaryAmountCell
            formatType="currency"
            id="TotalTransactions"
            value="info.TransactionAmount"/>
          <MonetaryAmountCell
            formatType="currency"
            id="TotalCost"
            value="info.TotalCost"/>
          <LinkCell
            id="Actions">
            <Link
              action="EditAuditInformationPopup.push(policyPeriod, info.ActualInfo)"
              id="Edit"
              label="DisplayKey.get(&quot;Web.PolicyFile.Audits.Edit&quot;)"
              styleClass="miniButton"
              visible="helper.canEditAudit(info.ActualInfo)"/>
            <Link
              action="helper.reviseAndGoToWiz(info.Audit)"
              id="Revise"
              label="DisplayKey.get(&quot;Web.PolicyFile.Audits.Revise&quot;)"
              styleClass="miniButton"
              visible="helper.canReviseAudit(info.ActualInfo)"/>
            <Link
              action="helper.reversePremiumReport(info.ActualInfo)"
              confirmMessage="DisplayKey.get(&quot;Web.AuditWizard.Confirmation.Reverse&quot;, info.ActualInfo.UIDisplayName)"
              id="Reverse"
              label="DisplayKey.get(&quot;Web.PolicyFile.Audits.Reverse&quot;)"
              styleClass="miniButton"
              visible="helper.canReverseAudit(info.ActualInfo)"/>
            <Link
              action="helper.startAudit(info.ActualInfo)"
              id="Start"
              label="DisplayKey.get(&quot;Web.PolicyFile.Audits.Start&quot;)"
              styleClass="miniButton"
              visible="helper.canStartAudit(info.ActualInfo)"/>
            <Link
              action="helper.waiveAndCommit(info.ActualInfo)"
              confirmMessage="DisplayKey.get(&quot;Web.AuditWizard.Confirmation.Waive&quot;, info.ActualInfo.UIDisplayName)"
              id="Waive"
              label="DisplayKey.get(&quot;Web.PolicyFile.Audits.Waive&quot;)"
              styleClass="miniButton"
              visible="helper.canWaiveAudit(info.ActualInfo)"/>
          </LinkCell>
        </Row>
      </RowIterator>
    </ListViewPanel>
  </Screen>
</PCF>
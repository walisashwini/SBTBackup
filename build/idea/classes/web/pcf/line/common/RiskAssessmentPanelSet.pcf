<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <PanelSet
    id="RiskAssessmentPanelSet">
    <Require
      name="policyLocation"
      type="PolicyLocation"/>
    <Require
      name="riskAssessmentBroker"
      type="gw.web.policylocation.riskassessment.LocationRiskAssessmentBroker"/>
    <Variable
      initialValue="riskAssessmentBroker.IsRiskAssessmentStale"
      name="riskAssessmentResultIsStale"
      type="Boolean"/>
    <Variable
      initialValue="riskAssessmentBroker.displayFailedRiskAssessmentErrorMessages()"
      name="errorMessages"
      recalculateOnRefresh="true"
      type="String"/>
    <PanelSet
      id="TemplatePanelSet"
      visible="gw.riskassessment.SpotlightConfigParameters.shouldShowThumbnailMap()">
      <TemplatePanel
        renderCall="web.pcf.line.common.LocationMapFrame.render(__writer, __escaper, gw.riskassessment.SpotlightConfigParameters.createSpotlightMapURL(policyLocation, riskAssessmentBroker.Latitude, riskAssessmentBroker.Longitude))"></TemplatePanel>
    </PanelSet>
    <DetailViewPanel>
      <InputColumn>
        <CheckBoxInput
          editable="true"
          id="AcceptRejectCheckbox"
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.UseThisNewDataInfo')"
          value="riskAssessmentBroker.UseNewAssessmentData"
          valueLabel="DisplayKey.get('Web.Policy.LocationContainer.Location.UseThisNewData')"
          visible="riskAssessmentBroker.ViewInSpotlightClicked">
          <PostOnChange/>
        </CheckBoxInput>
        <InputDivider
          visible="riskAssessmentBroker.ViewInSpotlightClicked"/>
      </InputColumn>
    </DetailViewPanel>
    <DetailViewPanel
      id="LocationSpotlightDV"
      visible="gw.api.system.PCConfigParameters.SingleLocationRiskAssessmentEnabled.Value and gw.api.system.PCConfigParameters.RiskAssessmentIntegrationEnabled.Value">
      <InputColumn>
        <ContentInput
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.LastSpotlightEvaluation')">
          <Link
            id="LastRiskAssessmentEvaluation"
            label="riskAssessmentBroker.RiskAssessmentResult.FormattedAssessmentDate ?: DisplayKey.get('Web.Policy.LocationContainer.Location.RiskAssessment.NoEvaluationDate')"/>
          <Link
            id="EvaluationDateSpacer"
            label="DisplayKey.get('Web.Policy.LocationContainer.Location.RiskAssessment.EvaluationDateSpacer')"
            />
          <Link
            icon="&quot;warning&quot;"
            iconColor="gw.api.web.color.GWColor.THEME_ALERT_WARNING"
            iconType="svgFileName"
            id="LastRiskAssessmentIsStaleIcon"
            tooltip="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.RiskAssessment.RiskAssessmentResultIsStale&quot;)"
            visible="riskAssessmentResultIsStale and not (riskAssessmentBroker.ViewInSpotlightClicked and riskAssessmentBroker.UseNewAssessmentData)"/>
        </ContentInput>
        <ContentInput>
          <Link
            action="riskAssessmentBroker.viewInSpotlight(policyLocation)"
            available=" true //todo if Spotlight is available"
            id="ViewInSpotlightLink"
            label="DisplayKey.get('Web.Policy.LocationContainer.Location.EvaluateInSpotlight')"
            styleClass="miniButton"
            visible="gw.api.system.PCConfigParameters.RiskAssessmentIntegrationEnabled.Value and gw.api.system.PCConfigParameters.SingleLocationRiskAssessmentEnabled.Value"/>
        </ContentInput>
        <TextInput
          id="Latitude"
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.Latitude')"
          value="riskAssessmentBroker.Latitude"
          valueType="java.math.BigDecimal"/>
        <TextInput
          id="Longitude"
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.Longitude')"
          value="riskAssessmentBroker.Longitude"
          valueType="java.math.BigDecimal"/>
        <TextInput
          id="SpotlightFloodRisk"
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.SpotlightFloodRisk')"
          value="riskAssessmentBroker.FloodRisk"
          valueType="String"/>
        <TextInput
          id="SpotlightFloodScore"
          label="DisplayKey.get('Web.Policy.LocationContainer.Location.SpotlightDistanceToFloodZone')"
          value="riskAssessmentBroker.FloodScore"
          valueType="String"/>
      </InputColumn>
    </DetailViewPanel>
    <PanelSet
      id="RiskAssessmentDetailsPanelSet"
      visible="riskAssessmentBroker.RiskAssessmentResult!=null">
      <DetailViewPanel
        id="RiskAssessmentDetail_DV">
        <InputColumn>
          <ContentInput
            boldLabel="true"
            label="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.RiskAssessmentDetails.RiskProfile&quot;,riskAssessmentBroker.RiskProfileData.name)">
            <Link
              action="riskAssessmentBroker.toggleShowHideRiskAssessmentDetailButton()"
              id="showHideRiskAssessmentDetailsButton"
              label="riskAssessmentBroker.ShowHideRiskAssessmentDetailButtonLabel"
              retainScrollPosition="true"
              showConfirmMessage="false"
              styleClass="miniButton"/>
          </ContentInput>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        alternateEntryStyle="false"
        id="RiskAssessment_LV"
        visible="riskAssessmentBroker.RiskAssessmentDetailsVisible">
        <RowIterator
          editable="false"
          elementName="assessmentResult"
          id="assessmentResult"
          value="riskAssessmentBroker.LocationResults"
          valueType="java.util.List&lt;gw.api.spotlight.inbound.InboundLocationResultData&gt;">
          <Row
            useArchivedStyle="false"
            useTitleStyle="true">
            <TextCell
              colspan="2"
              id="assessmentName"
              value="assessmentResult.assessment.name"
              valueType="String"/>
            <LinkCell
              align="right">
              <Link
                icon="assessmentResult.severity.severityIcon.First"
                iconColor="assessmentResult.severity.severityIcon.Second"
                iconType="svgFileName"
                id="severity"
                label="&quot;&quot;"
                tooltip="assessmentResult.severity.severityCode"
                visible="assessmentResult.severity.severityCode != null"/>
            </LinkCell>
          </Row>
          <RowIterator
            editable="false"
            elementName="detail"
            id="detail"
            pageSize="0"
            value="assessmentResult.details"
            valueType="java.util.List&lt;gw.api.spotlight.inbound.InboundLocationDetailsData&gt;">
            <Row>
              <EmptyCell
                id="emptyCell"/>
              <LinkCell>
                <Link
                  id="detailLabel"
                  label="(detail as gw.api.spotlight.inbound.InboundLocationDetailsData).label"
                  tooltip="(detail as gw.api.spotlight.inbound.InboundLocationDetailsData).label"/>
              </LinkCell>
              <TextCell
                align="right"
                id="detailValue"
                value="(detail as gw.api.spotlight.inbound.InboundLocationDetailsData).formattedValue"
                valueType="String"/>
            </Row>
          </RowIterator>
        </RowIterator>
      </ListViewPanel>
    </PanelSet>
  </PanelSet>
</PCF>
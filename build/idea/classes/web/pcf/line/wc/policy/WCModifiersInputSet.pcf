<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="WCModifiersInputSet">
    <Require
      name="modifiers"
      type="List&lt;Modifier&gt;"/>
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <InputIterator
      elementName="rateModifier"
      id="ModIteratorEligible"
      value="modifiers.where( \ mod -&gt; mod.DataType == TC_RATE and not mod.ScheduleRate).toTypedArray()"
      valueType="entity.Modifier[]">
      <IteratorSort
        sortBy="rateModifier.Pattern.Priority"
        sortOrder="1"/>
      <IteratorSort
        sortBy="rateModifier.Pattern.Name"
        sortDirection="descending"
        sortOrder="2"/>
      <InputGroup
        allowToggle="true"
        alwaysShowCheckbox="true"
        childrenVisible="rateModifier.Eligible"
        id="EligibilityInputGroup"
        label="DisplayKey.get(&quot;Web.Policy.Modifiers.Eligibility&quot;, rateModifier.Pattern.Name)"
        onToggle="toggleEligible(rateModifier)">
        <HiddenInput
          id="ModifierName"
          value="rateModifier.Pattern.Name"
          valueType="java.lang.String"/>
        <TextInput
          action="WCScheduleCreditPopup.push(rateModifier, policyPeriod.OpenForEdit)"
          actionAvailable="rateModifier.Pattern.PublicID == &quot;WCScheduleCredits&quot;"
          editable="rateModifier.Pattern.PublicID != &quot;WCScheduleCredits&quot;"
          id="ModifierInput"
          label="rateModifier.Pattern.Name"
          requestValidationExpression="rateModifier.getModifierValidation(VALUE)"
          value="rateModifier.RateWithinLimits"
          valueType="java.math.BigDecimal"/>
        <BooleanRadioInput
          editable="true"
          id="ValueFinal"
          label="DisplayKey.get(&quot;Web.Policy.Modifiers.ExModFinal&quot;)"
          value="rateModifier.ValueFinal"
          visible="rateModifier.PatternCode == &quot;ExpMod&quot; or rateModifier.PatternCode == &quot;GLExperienceMod&quot;"/>
      </InputGroup>
    </InputIterator>
    <InputIterator
      elementName="modifier"
      id="ModIterator"
      value="modifiers.where( \ mod -&gt; mod.DataType != TC_RATE or mod.ScheduleRate).toTypedArray()"
      valueType="entity.Modifier[]">
      <IteratorSort
        sortBy="modifier.Pattern.Priority"
        sortOrder="1"/>
      <IteratorSort
        sortBy="modifier.Pattern.Name"
        sortDirection="descending"
        sortOrder="2"/>
      <HiddenInput
        id="ModifierName"
        value="modifier.Pattern.Name"
        valueType="java.lang.String"/>
      <TextInput
        action="WCScheduleCreditPopup.push(modifier, policyPeriod.OpenForEdit)"
        actionAvailable="policyPeriod.CanViewModifiers and modifier.Pattern.PublicID == &quot;WCScheduleCredits&quot;"
        editable="modifier.Pattern.PublicID != &quot;WCScheduleCredits&quot;"
        id="ModifierInput_Rate"
        label="modifier.Pattern.Name"
        requestValidationExpression="modifier.getModifierValidation(VALUE)"
        value="modifier.RateWithinLimits"
        valueType="java.math.BigDecimal"
        visible="modifier.DataType == ModifierDataType.TC_RATE"/>
      <BooleanRadioInput
        editable="true"
        id="ModifierInput_Boolean"
        label="modifier.Pattern.Name"
        value="modifier.BooleanModifier"
        visible="modifier.DataType == ModifierDataType.TC_BOOLEAN"/>
      <RangeInput
        editable="true"
        id="ModifierInput_TypeKey"
        label="modifier.Pattern.Name"
        value="modifier.TypeKeyModifier"
        valueRange="gw.util.TypekeyUtil.getTypeKeys(modifier.TypeList).map(\ t -&gt; (t as gw.entity.TypeKey).Code)"
        valueType="java.lang.String"
        visible="modifier.DataType == ModifierDataType.TC_TYPEKEY"/>
      <DateInput
        editable="true"
        id="ModifierInput_Date"
        label="modifier.Pattern.Name"
        value="modifier.DateModifier"
        visible="modifier.DataType == ModifierDataType.TC_DATE"/>
    </InputIterator>
    <Code><![CDATA[function toggleEligible(mod : Modifier) {
  if (mod.Eligible) {
    mod.RateModifier = null
    mod.Eligible = false
  } else {
    mod.Eligible = true
  }
}]]></Code>
  </InputSet>
</PCF>
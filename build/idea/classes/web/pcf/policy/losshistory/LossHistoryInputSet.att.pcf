<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <InputSet
    id="LossHistoryInputSet"
    mode="att">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Variable
      name="documentsActionsHelper"
      type="gw.document.DocumentsActionsUIHelper"/>
    <Variable
      initialValue="documentsActionsHelper.DocumentContentServerAvailable"
      name="contentActionsEnabled"
      type="boolean"/>
    <Variable
      initialValue="documentsActionsHelper.DocumentMetadataActionsAvailable"
      name="metadataActionsEnabled"
      type="boolean"/>
    <Variable
      initialValue="createLossHistorySearchCriteria().performSearch() as gw.api.database.IQueryBeanResult&lt;Document&gt;"
      name="documents"
      type="gw.api.database.IQueryBeanResult&lt;Document&gt;"/>
    <TextInput
      editable="true"
      id="NumberOfLosses"
      label="DisplayKey.get(&quot;Web.Policy.LossHistory.Attach.NumberOfLosses&quot;)"
      required="true"
      value="policyPeriod.Policy.NumPriorLosses"
      valueType="java.lang.Integer"/>
    <MonetaryAmountInput
      currency="policyPeriod.PreferredCoverageCurrency"
      editable="true"
      id="TotalIncurred"
      label="DisplayKey.get(&quot;Web.Policy.LossHistory.Attach.TotalIncurred&quot;)"
      required="true"
      value="policyPeriod.Policy.PriorTotalIncurred"/>
    <ListViewInput>
      <Toolbar>
        <ToolbarButton
          action="NewLossHistoryDocumentsWorksheet.goInWorkspace(policyPeriod)"
          available="contentActionsEnabled"
          id="NewDocument"
          label="DisplayKey.get(&quot;Web.Policy.LossHistory.Attach.NewDocuments&quot;)"
          shortcut="O"/>
        <ToolbarButton
          action="null"
          available="contentActionsEnabled"
          id="RefreshAsyncContent"
          label="DisplayKey.get('Web.DocumentsLV.Button.AsynchronousRefresh')"
          tooltip="DisplayKey.get('Web.DocumentsLV.Button.AsynchronousRefresh.Tooltip')"
          visible="documentsActionsHelper.isShowAsynchronousRefreshAction(documents.toTypedArray())"/>
      </Toolbar>
      <ListViewPanel
        id="LossHistoryDocumentsLV">
        <RowIterator
          editable="false"
          elementName="Document"
          value="documents"
          valueType="gw.api.database.IQueryBeanResult&lt;entity.Document&gt;">
          <Row>
            <LinkCell
              id="Name"
              label="DisplayKey.get(&quot;Web.Policy.LossHistory.Document.Name&quot;)"
              printWidth="4">
                <Link
                  action="Document.downloadContent()"
                  available="documentsActionsHelper.isViewDocumentContentAvailable(Document, contentActionsEnabled)"
                  download="inline"
                  id="NameLink"
                  label="Document.Name"
                  styleClass="none"
                  tooltip="documentsActionsHelper.getViewDocumentContentTooltip(Document)"/>
            </LinkCell>
            <LinkCell
              id="Actions"
              label="DisplayKey.get(&quot;Web.DocumentsLV.Actions&quot;)">
                <Link
                  action="DocumentDetailsPopup.push(Document)"
                  available="metadataActionsEnabled"
                  icon="&quot;info&quot;"
                  iconType="svgFileName"
                  id="ViewPropertiesLink"
                  tooltip="DisplayKey.get(&quot;Web.Policy.Documents.Document.ViewAndEdit.ViewProperties.Tooltip&quot;)"/>
              <Link
                action="gw.api.web.document.DocumentsHelper.deleteDocument(Document)"
                available="metadataActionsEnabled"
                confirmMessage="DisplayKey.get(&quot;Web.DocumentsLV.Button.Delete.Confirm&quot;)"
                icon="&quot;delete&quot;"
                iconType="svgFileName"
                id="DocumentsLV_DeleteLink"
                tooltip="DisplayKey.get(&quot;Web.Policy.Documents.Document.Remove.Tooltip&quot;)"
                visible="documentsActionsHelper.isDeleteDocumentLinkVisible(Document)"/>
              <Link
                id="DocumentsLV_ActionsDisabled"
                label="documentsActionsHelper.AsynchronousActionsMessage"
                styleClass="none"
                visible="documentsActionsHelper.isDocumentPending(Document)"/>
            </LinkCell>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </ListViewInput>
    <Code><![CDATA[function createLossHistorySearchCriteria() : DocumentSearchCriteria {
        var c = new DocumentSearchCriteria(policyPeriod)
        c.RelatedTo = policyPeriod
        c.Type = TC_LOSS_HISTORY
        return c
      }]]></Code>
  </InputSet>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Forward
    id="PolicyAsLossDateForward"
    parent="PolicyForward()">
    <LocationEntryPoint
      signature="PolicyAsLossDateForward(policyNumber : String, retrieveAsOfDate : java.util.Date)"/>
    <!-- Parameters -->
    <Variable
      name="policyNumber"
      type="String"/>
    <Variable
      initialValue="java.util.Date.CurrentDate"
      name="retrieveAsOfDate"
      type="java.util.Date"/>
    <!-- Use Local variables, otherwise the policy could be retrieved multiple times! -->
    <Variable
      initialValue="retrievePeriod()"
      name="retrievedPeriod"
      type="PolicyPeriod"/>
    <Variable
      initialValue="getErrorMessage(retrievedPeriod)"
      name="errorMessage"
      type="String"/>
    <ForwardCondition
      action="PolicySearch.go(errorMessage)"
      condition="retrievedPeriod == null"/>
    <ForwardCondition
      action="PolicyFileForward.go(retrievedPeriod, retrievedPeriod.SliceDate, &quot;PolicySummary with Error&quot;, {errorMessage})"
      condition="retrievedPeriod.Promoted"/>
    <ForwardCondition
      action="JobForward.go(retrievedPeriod.Job)"
      condition="not retrievedPeriod.Promoted"/>
    <Code><![CDATA[function retrievePeriod() : PolicyPeriod {
        return Policy.retrievePeriod(policyNumber, retrieveAsOfDate)
      }

      function getAsOfDate( period: PolicyPeriod, asOfDate: java.util.Date ): java.util.Date {
        if ( asOfDate.before( period.PeriodStart ) ) {
          return period.PeriodStart
        } else if ( not asOfDate.before( period.PeriodEnd ) ) {
          return period.PeriodEnd.addSeconds( -1 )
        } else {
          return asOfDate
        }
      }

      function getErrorMessage( period: PolicyPeriod) : String {
        if (period == null) {
          return DisplayKey.get("Web.Errors.NoPolicyFound", policyNumber)
        }
        else if (!period.isWithinValidPeriod(retrieveAsOfDate)) {
            return DisplayKey.get("Web.Errors.NoPolicyInForce", retrieveAsOfDate)
         }
        return null
      }]]></Code>
  </Forward>
</PCF>
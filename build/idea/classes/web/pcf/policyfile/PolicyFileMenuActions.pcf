<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <MenuActions
    flatten="true"
    id="PolicyFileMenuActions">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Require
      name="asOfDate"
      type="java.util.Date"/>
    <Variable
      initialValue="policyPeriod.Policy.Jobs.firstWhere(\ j -&gt; j typeis Submission) as Submission"
      name="submission"
      recalculateOnRefresh="true"
      type="entity.Submission"/>
    <Variable
      initialValue="policyPeriod.Policy.findLastCoveredPeriod()"
      name="latestCoveredPeriod"
      recalculateOnRefresh="true"
      type="entity.PolicyPeriod"/>
    <Variable
      initialValue="latestCoveredPeriod?.getSlice(latestCoveredPeriod.getCoverageEndDate().addSeconds(-1))"
      name="latestPeriod"
      recalculateOnRefresh="true"
      type="entity.PolicyPeriod"/>
    <Variable
      initialValue="gw.plugin.Plugins.get(gw.plugin.policy.IPolicyPlugin).canStartReinstatement(policyPeriod) == null"
      name="canStartReinstatement"
      type="boolean"/>
    <MenuItem
      id="WizardMenuActions_Goto"
      label="DisplayKey.get(&quot;Web.JobWizard.GoTo&quot;)"
      shortcut="G"
      visible="true">
      <MenuItem
        action="AccountFileForward.go(policyPeriod.Policy.Account)"
        id="WizardMenuActions_ToAccountFile"
        label="DisplayKey.get(&quot;Web.JobWizard.ToAccountFile&quot;)"
        visible="policyPeriod.Policy.Account != null and !policyPeriod.Policy.Account.New"/>
      <!-- Can only view PolicyFile from bound periods or from open jobs after the first submission -->
      <MenuItem
        action="var periodToView = policyPeriod.Promoted ? policyPeriod : policyPeriod.BasedOn; PolicyFileForward.go(periodToView, periodToView.EditEffectiveDate)"
        id="WizardMenuActions_ToPolicyFile"
        label="DisplayKey.get(&quot;Web.JobWizard.ToPolicyFile&quot;)"
        shortcut="F"
        visible="(policyPeriod.Promoted) or (policyPeriod.Job typeis Issuance) or (not policyPeriod.Job?.createsNewPolicy())"/>
    </MenuItem>
    <MenuItemDivider/>
    <MenuItem
      id="PolicyFileMenuActions_Create"
      label="DisplayKey.get(&quot;Web.PolicyFile.Create&quot;)">
      <MenuItem
        action="NewNoteWorksheet.goInWorkspace(policyPeriod, asOfDate)"
        id="PolicyFileMenuActions_NewNote"
        label="DisplayKey.get(&quot;Web.PolicyFile.NewNote&quot;)"
        shortcut="N"
        visible="perm.Note.create"/>
      <MenuItem
        id="PolicyFileMenuActions_NewDocument"
        label="DisplayKey.get(&quot;Web.PolicyFile.NewDocument&quot;)"
        shortcut="O"
        visible="perm.Document.create and gw.document.DocumentsActionsUIHelper.DocumentContentServerAvailable">
        <MenuItemSetRef
          def="NewPolicyDocumentMenuItemSet(policyPeriod)"/>
      </MenuItem>
      <MenuItem
        id="PolicyFileMenuActions_NewActivity"
        label="DisplayKey.get(&quot;Web.PolicyFile.NewActivity&quot;)"
        shortcut="A"
        visible="perm.System.actcreate">
        <MenuItemSetRef
          def="NewActivityMenuItemSet(null, policyPeriod.Policy, policyPeriod)"/>
      </MenuItem>
      <MenuItem
        action="EmailWorksheet.goInWorkspace(policyPeriod, policyPeriod.Policy, null)"
        id="PolicyFileMenuActions_NewEmail"
        label="DisplayKey.get(&quot;Web.PolicyFile.NewEmail&quot;)"
        shortcut="N"/>
      <MenuItem
        action="PreRenewalDirectionPage.go(policyPeriod, policyPeriod.Policy, asOfDate)"
        id="PolicyFileMenuActions_PreRenewalDirection"
        label="DisplayKey.get(&quot;Web.PolicyFile.PreRenewalDirection&quot;)"
        shortcut="P"
        visible="policyPeriod.Policy.OpenRenewalJob == null or policyPeriod.PolicyTerm.PreRenewalDirection != null"/>
      <MenuItem
        action="gw.web.policyfile.PolicyFileMenuActionsUIHelper.copySubmission(submission)"
        id="PolicyFileMenuActions_CopySubmission"
        label="DisplayKey.get(&quot;Web.PolicyFile.CopySubmission&quot;)"
        shortcut="C"
        visible="gw.web.policyfile.PolicyFileMenuActionsUIHelper.canCopySubmission(submission)"/>
      <MenuItem
        action="SpinPolicy.go(latestPeriod, asOfDate)"
        id="PolicyFileMenuActions_SpinPolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.SpinPolicy.MenuAction&quot;)"
        visible="perm.PolicyPeriod.splitpolicy(policyPeriod) and gw.job.CopyDataVisibilityByProduct.isCopyDataVisibleForProduct(policyPeriod.Policy.ProductCode) and latestPeriod != null"/>
      <MenuItem
        action="SplitPolicy.go(latestPeriod, asOfDate)"
        id="PolicyFileMenuActions_SplitPolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.SplitPolicy.MenuAction&quot;)"
        visible="perm.PolicyPeriod.splitpolicy(policyPeriod) and gw.job.CopyDataVisibilityByProduct.isCopyDataVisibleForProduct(policyPeriod.Policy.ProductCode) and latestPeriod != null"/>
    </MenuItem>
    <MenuItemDivider/>
    <MenuItem
      id="PolicyFileMenuActions_NewWorkOrder"
      label="DisplayKey.get(&quot;Web.PolicyFile.NewWorkOrder&quot;)">
      <MenuItem
        action="gw.web.policyfile.PolicyFileMenuActionsUIHelper.startIssuance(policyPeriod, CurrentLocation)"
        id="PolicyFileMenuActions_IssueSubmission"
        label="DisplayKey.get(&quot;Web.PolicyFile.IssuePolicy&quot;)"
        visible="perm.PolicyPeriod.issue(policyPeriod) and policyPeriod.Policy.canStartIssuance() == null"/>
      <MenuItem
        action="StartPolicyChange.go(policyPeriod)"
        id="PolicyFileMenuActions_ChangePolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.ChangePolicy&quot;)"
        shortcut="G"
        visible="perm.PolicyPeriod.change(policyPeriod) and policyPeriod.Policy.Issued"/>
      <MenuItem
        action="StartCancellation.go(policyPeriod)"
        id="PolicyFileMenuActions_CancelPolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.CancelPolicy&quot;)"
        shortcut="A"
        visible="perm.PolicyPeriod.cancel(policyPeriod) and policyPeriod.CancellationDate != policyPeriod.PeriodStart"/>
      <MenuItem
        id="PolicyFileMenuActions_RescindCancellation"
        label="DisplayKey.get(&quot;Web.PolicyFile.RescindCancellation&quot;)"
        visible="perm.System.cancelrescind">
        <MenuItemIterator
          elementName="cancellationJob"
          value="gw.web.policyfile.PolicyFileMenuActionsUIHelper.getRescindableCancellations(policyPeriod)"
          valueType="entity.Cancellation[]">
          <MenuItem
            action="JobForward.go(cancellationJob, cancellationJob.PolicyPeriod)"
            id="item"
            label="gw.web.policyfile.PolicyFileMenuActionsUIHelper.getCancellationLabel(cancellationJob)"/>
        </MenuItemIterator>
      </MenuItem>
      <MenuItem
        action="gw.web.policyfile.PolicyFileMenuActionsUIHelper.startReinstatement(policyPeriod, CurrentLocation)"
        confirmMessage="(policyPeriod.hasFinalAuditFinished()) ? DisplayKey.get(&quot;Web.Job.FinalAuditCompletedReinstatement&quot;) : &quot;&quot;"
        id="PolicyFileMenuActions_ReinstatePolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.ReinstatePolicy&quot;)"
        visible="perm.PolicyPeriod.reinstate(policyPeriod) and canStartReinstatement"/>
      <MenuItemSetRef
        def="StartRewriteMenuItemSet(policyPeriod)"/>
      <MenuItem
        action="gw.web.policyfile.PolicyFileMenuActionsUIHelper.startRenewal(policyPeriod, CurrentLocation)"
        confirmMessage="DisplayKey.get(&quot;Web.PolicyFile.RenewPolicy.Confirm&quot;)"
        id="PolicyFileMenuActions_RenewPolicy"
        label="DisplayKey.get(&quot;Web.PolicyFile.RenewPolicy&quot;)"
        visible="perm.PolicyPeriod.renew(policyPeriod) and policyPeriod.Policy.canStartRenewal() == null"/>
    </MenuItem>
    <MenuItemDivider/>
    <MenuItem
      id="PolicyFileMenuActions_Archiving"
      label="DisplayKey.get(&quot;Web.JobWizard.Archive.Title&quot;)"
      visible="perm.System.archivedisable or perm.System.archiveenable">
      <MenuItem
        action="ArchiveSuspendResumePopup.push(policyPeriod.PolicyTerm.Policy)"
        id="PolicyFileMenuActions_SuspendResumeArchiving"
        label="DisplayKey.get(&quot;Web.JobWizard.Archive.EnableDisable&quot;)"/>
    </MenuItem>
  </MenuActions>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <PanelSet
    desc="Provides a reusable panel displaying a Contact's Addresses in a ListDetailPanel."
    id="AddressesPanelSet">
    <Require
      name="contact"
      type="Contact"/>
    <Require
      name="showAddressTools"
      type="boolean"/>
    <Require
      name="account"
      type="entity.Account"/>
    <Require
      name="period"
      type="entity.PolicyPeriod"/>
    <Variable
      initialValue="gw.util.concurrent.LocklessLazyVar.make(\ -&gt; period.OpenForEdit)"
      name="openForEditInit"
      recalculateOnRefresh="true"
      type="gw.util.concurrent.LocklessLazyVar&lt;java.lang.Boolean&gt;"/>
    <Variable
      initialValue="period != null ? openForEditInit.get() : CurrentLocation.InEditMode"
      name="openForEdit"
      recalculateOnRefresh="true"
      type="java.lang.Boolean"/>
    <ListDetailPanel
      selectionName="selectedAddress"
      selectionType="Address">
      <PanelRef>
        <TitleBar
          title="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail&quot;)"/>
        <Toolbar>
          <IteratorButtons
            iterator="AddressesLV"/>
        </Toolbar>
        <ListViewPanel
          desc="List of addresses"
          id="AddressesLV">
          <RowIterator
            checkBoxVisible="address != contact.PrimaryAddress &amp;&amp; address != period?.PolicyAddress.Address"
            editable="true"
            elementName="address"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            pageSize="4"
            toAdd="contact.addAddress(address)"
            toRemove="if (address != contact.PrimaryAddress &amp;&amp; address != period?.PolicyAddress.Address) contact.safeRemoveAddress(address) "
            value="contact.AllAddresses"
            valueType="entity.Address[]">
            <Row>
              <RadioButtonCell
                action="contact.makePrimaryAddress(address)"
                align="center"
                editable="true"
                id="Primary"
                label="DisplayKey.get(&quot;Web.Addresses.Primary&quot;)"
                radioButtonGroup="PrimaryAddress"
                value="address == contact.PrimaryAddress">
                <PostOnChange/>
              </RadioButtonCell>
              <TypeKeyCell
                id="AddressType"
                label="DisplayKey.get(&quot;Web.Addresses.AddressType&quot;)"
                value="address.AddressType"
                valueType="typekey.AddressType"/>
              <TextCell
                id="DisplayedName"
                label="DisplayKey.get(&quot;Web.Addresses.Address&quot;)"
                value="address.addressString(&quot;,&quot;, false, false)"
                wrap="true"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </PanelRef>
      <CardViewPanel>
        <Card
          id="AddressDetailCard"
          title="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail&quot;)">
          <DetailViewPanel
            id="AddressDetailDV">
            <InputColumn>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.Address.SelectionIsPolicyAddress&quot;)"
                visible="selectedAddress == period?.PolicyAddress.Address"/>
              <InputSetRef
                def="LinkedAddressInputSet(selectedAddress, contact, period, account, openForEdit)"/>
              <InputSetRef
                def="AddressInputSet(new gw.pcf.contacts.AddressInputSetAddressOwner(selectedAddress, false, true))"
                editable="selectedAddress.LinkedAddress == null"/>
              <TypeKeyInput
                editable="selectedAddress.LinkedAddress == null"
                id="AddressType"
                label="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail.AddressType&quot;)"
                required="true"
                value="selectedAddress.AddressType"
                valueType="typekey.AddressType"/>
              <TextInput
                editable="selectedAddress.LinkedAddress == null"
                id="Description"
                label="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail.Description&quot;)"
                value="selectedAddress.Description"/>
              <DateInput
                editable="selectedAddress.LinkedAddress == null"
                id="ValidUntil"
                label="DisplayKey.get(&quot;Web.ContactDetail.AddressDetail.ValidUntil&quot;)"
                value="selectedAddress.ValidUntil"/>
            </InputColumn>
          </DetailViewPanel>
        </Card>
        <Card
          id="AddressToolsCard"
          title="DisplayKey.get(&quot;Web.ContactDetail.AddressTools&quot;)"
          visible="showAddressTools and contact.PrimaryAddress != selectedAddress and not selectedAddress.New">
          <PanelRef
            id="AddressTools">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ContactDetail.AddressTools.MergeAddress&quot;)"/>
            <Toolbar>
              <ToolbarButton
                available="showAddressTools and contact.PrimaryAddress != selectedAddress and not selectedAddress.New"
                id="MergeAddresses"
                label="DisplayKey.get(&quot;Web.ContactDetail.AddressTools.MergeAddressInto&quot;)">
                <MenuItemIterator
                  elementName="survivorAddress"
                  value="contact.AllAddresses.subtract({selectedAddress}).where(\ a -&gt; not a.New).toTypedArray()"
                  valueType="entity.Address[]">
                  <MenuItem
                    action="contact.mergeAddresses(survivorAddress, selectedAddress);gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, entity.Address)"
                    confirmMessage="DisplayKey.get(&quot;Web.ContactDetail.AddressTools.MergeAddress.Confirm&quot;, survivorAddress, selectedAddress)"
                    id="survivorAddress"
                    label="survivorAddress.DisplayName"/>
                </MenuItemIterator>
              </ToolbarButton>
            </Toolbar>
            <PanelRow/>
          </PanelRef>
        </Card>
      </CardViewPanel>
    </ListDetailPanel>
  </PanelSet>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Page
    autosaveable="false"
    canEdit="true"
    countsAsWork="false"
    id="PCPurge"
    onConcurrentDataChange="jobToPurgeOrPrune = null"
    startInEditMode="true"
    title="DisplayKey.get(&quot;Web.Purge.InternalTools.PCPurge&quot;)">
    <Variable
      initialValue="new gw.api.web.purge.PurgeTestPageHelper()"
      name="purgeHelper"
      type="gw.api.web.purge.PurgeTestPageHelper"/>
    <Variable
      name="jobToPurgeOrPrune"
      type="Job"/>
    <Screen
      id="PCPurgeToolsScreen">
      <Variable
        name="purgeJobID"
        type="String"/>
      <AlertBar
        allowDismiss="false"
        id="purgeSucceededMessage"
        label="purgeHelper.PurgeSucceededMessage"
        visible="purgeHelper.ShowPurgeSucceeded"/>
      <PanelRef>
        <DetailViewPanel
          columnDivider="false">
          <InputColumn>
            <TextInput
              editable="true"
              id="JobNumberTextInput"
              label="DisplayKey.get(&quot;Web.Purge.InternalTools.JobToPurge&quot;)"
              required="true"
              value="purgeJobID"/>
          </InputColumn>
          <InputColumn>
            <ButtonInput
              action="purgeHelper.findJob(purgeJobID, \ job -&gt; { jobToPurgeOrPrune = job })"
              align="right"
              default="true"
              id="FindJobButton"
              value="DisplayKey.get(&quot;Web.Purge.FindOrRefreshJob&quot;)"/>
          </InputColumn>
          <InputColumn>
            <TextInput
              id="FindJobButtonAdditionalInfo"
              value="DisplayKey.get(&quot;Web.Purge.InfoMessages.FindOrRefreshJob&quot;)"/>
          </InputColumn>
        </DetailViewPanel>
      </PanelRef>
      <PanelDivider/>
      <PanelSet
        id="JobPertinentPanelSet"
        visible="jobToPurgeOrPrune != null">
        <Variable
          initialValue="false"
          name="skipValidationForPurgingPolicyPeriod"
          type="Boolean"/>
        <Variable
          initialValue="false"
          name="skipValidationForPurgingJob"
          type="Boolean"/>
        <Variable
          initialValue="false"
          name="skipValidationForPruningJob"
          type="Boolean"/>
        <PanelSet
          id="PurgeJobPanelSet">
          <DetailViewPanel>
            <InputColumn>
              <Label
                id="PurgeJobLabel"
                label="DisplayKey.get(&quot;Web.Purge.PurgeOrPruneJob&quot;)"/>
            </InputColumn>
          </DetailViewPanel>
          <PanelRef>
            <DetailViewPanel
              inline="true"
              visible="jobToPurgeOrPrune != null">
              <InputColumn>
                <TextInput
                  id="JobPurgeStatus"
                  label="DisplayKey.get(&quot;Web.Purge.Job.JobNumber&quot;)"
                  value="jobToPurgeOrPrune.JobNumber"/>
                <TextInput
                  id="JobSubType"
                  label="DisplayKey.get(&quot;Web.Purge.Job.JobSubtype&quot;)"
                  value="jobToPurgeOrPrune.Subtype.DisplayName"/>
                <TextInput
                  id="JobCloseDate"
                  label="DisplayKey.get(&quot;Web.Purge.Job.CloseDate&quot;)"
                  value="jobToPurgeOrPrune.CloseDate == null ? &quot;Null&quot; : jobToPurgeOrPrune.CloseDate.formatDate(SHORT)"/>
              </InputColumn>
              <InputColumn>
                <TextInput
                  id="JobDoNotDestroyFlag"
                  label="DisplayKey.get(&quot;Web.Purge.Job.DoNotDestroy&quot;)"
                  value="jobToPurgeOrPrune.Policy.DoNotDestroy.toString().capitalize()"/>
                <TextInput
                  id="JobNumberOfPeriods"
                  label="DisplayKey.get(&quot;Web.Purge.Job.PolicyPeriods&quot;)"
                  value="jobToPurgeOrPrune.Periods.Count"
                  valueType="java.lang.Integer"/>
                <TextInput
                  id="EndOfCoverage"
                  label="DisplayKey.get(&quot;Web.Purge.Job.EndOfCoverage&quot;)"
                  value="jobToPurgeOrPrune.SelectedVersion.EndOfCoverageDate == null ? &quot;Null&quot; : jobToPurgeOrPrune.SelectedVersion.EndOfCoverageDate.formatDate(SHORT)"/>
              </InputColumn>
            </DetailViewPanel>
          </PanelRef>
          <PanelRef>
            <DetailViewPanel
              columnDivider="false">
              <InputColumn>
                <CheckBoxInput
                  editable="true"
                  helpText="DisplayKey.get(&quot;Web.Purge.InfoMessages.SkipChecksForPurging&quot;)"
                  id="skipValidationForPurgingJob"
                  label="DisplayKey.get(&quot;Web.Purge.SkipChecksForPurging&quot;)"
                  value="skipValidationForPurgingJob"/>
              </InputColumn>
              <InputColumn>
                <ButtonInput
                  action="purgeHelper.purgeJob(jobToPurgeOrPrune, skipValidationForPurgingJob); jobToPurgeOrPrune = null"
                  hideIfDisabled="false"
                  id="PurgeJobButton"
                  value="DisplayKey.get(&quot;Web.Purge.PurgeJob&quot;)"/>
              </InputColumn>
            </DetailViewPanel>
          </PanelRef>
          <PanelRef>
            <DetailViewPanel
              columnDivider="false">
              <InputColumn>
                <CheckBoxInput
                  editable="true"
                  helpText="DisplayKey.get(&quot;Web.Purge.InfoMessages.SkipChecksForPruning&quot;)"
                  id="skipValidationForPruningJob"
                  label="DisplayKey.get(&quot;Web.Purge.SkipChecksForPruning&quot;)"
                  value="skipValidationForPruningJob"/>
              </InputColumn>
              <InputColumn>
                <ButtonInput
                  action="purgeHelper.pruneJob(jobToPurgeOrPrune, skipValidationForPruningJob)"
                  hideIfDisabled="false"
                  id="PruneJobButton"
                  value="DisplayKey.get(&quot;Web.Purge.PruneJob&quot;)"/>
              </InputColumn>
            </DetailViewPanel>
          </PanelRef>
        </PanelSet>
        <PanelDivider/>
        <PanelSet
          id="PurgePolicyPeriodsPanelSet">
          <DetailViewPanel>
            <InputColumn>
              <Label
                id="PurgePolicyPeriodLabel"
                label="DisplayKey.get(&quot;Web.Purge.InternalTools.PurgePolicyPeriods&quot;)"/>
            </InputColumn>
          </DetailViewPanel>
          <PanelRef>
            <Toolbar
              id="policyPeriodToolbar"
              visible="false"/>
            <ListViewPanel
              id="PolicyPeriodLV">
              <RowIterator
                editable="false"
                elementName="policyPeriod"
                id="policyPeriodsOnJob"
                value="jobToPurgeOrPrune.Periods"
                valueType="entity.PolicyPeriod[]">
                <Variable
                  initialValue="purgeHelper.isPurgeable(policyPeriod, jobToPurgeOrPrune)"
                  name="isPurgeable"
                  type="Boolean"/>
                <Variable
                  initialValue="isPurgeable ? null : gw.api.web.color.GWColor.THEME_INACTIVE"
                  name="selectedColor"
                  type="gw.api.web.color.GWColor"/>
                <Row>
                  <TextCell
                    fontColor="selectedColor"
                    id="policyPeriodVersion"
                    label="DisplayKey.get(&quot;Web.Purge.PolicyPeriod&quot;)"
                    value="DisplayKey.get(&quot;Web.Purge.VersionAndStatus&quot;, policyPeriod.BranchName, purgeHelper.isSelectedVersion(policyPeriod.PublicID, jobToPurgeOrPrune) ? DisplayKey.get(&quot;Web.Purge.Selected&quot;):DisplayKey.get(&quot;Web.Purge.Unselected&quot;))"/>
                  <DateCell
                    fontColor="selectedColor"
                    id="policyPeriodStart"
                    label="DisplayKey.get(&quot;Web.Purge.PolicyPeriodStart&quot;)"
                    value="policyPeriod.PeriodStart ?: gw.api.upgrade.Coercions.makeDateFrom(&quot;&quot;)"/>
                  <DateCell
                    fontColor="selectedColor"
                    id="policyPeriodEnd"
                    label="DisplayKey.get(&quot;Web.Purge.PolicyPeriodEnd&quot;)"
                    value="policyPeriod.PeriodEnd ?: gw.api.upgrade.Coercions.makeDateFrom(&quot;&quot;)"/>
                  <TypeKeyCell
                    fontColor="selectedColor"
                    id="policyPeriodStatus"
                    label="DisplayKey.get(&quot;Web.Purge.Status&quot;)"
                    value="policyPeriod.Status"
                    valueType="typekey.PolicyPeriodStatus"/>
                  <TextCell
                    fontColor="selectedColor"
                    id="policyPeriodDoNotDestroy"
                    label="DisplayKey.get(&quot;Web.Purge.DoNotDestroyFlag&quot;)"
                    value="policyPeriod.DoNotDestroy.toString().capitalize()"/>
                  <ButtonCell
                    action="policyPeriod[&quot;DoNotDestroy&quot;]=policyPeriod.DoNotDestroy?false:true"
                    align="center"
                    enableSort="true"
                    hideChildrenIfReadOnly="true"
                    id="FlipDoNotDestroyBit"
                    label="DisplayKey.get(&quot;Web.Purge.FlipDoNotDestroyBit&quot;)"
                    value="policyPeriod.DoNotDestroy?DisplayKey.get(&quot;Web.Purge.Unset&quot;):DisplayKey.get(&quot;Web.Purge.Set&quot;)"/>
                  <ButtonCell
                    action="purgeHelper.purgePolicyPeriod(policyPeriod, skipValidationForPurgingPolicyPeriod)"
                    align="center"
                    available="isPurgeable"
                    hideIfDisabled="false"
                    id="policyPeriodPurgeAction"
                    value="DisplayKey.get(&quot;Web.Purge.Purge&quot;)"
                    visible="true"/>
                </Row>
              </RowIterator>
            </ListViewPanel>
          </PanelRef>
          <DetailViewPanel>
            <InputColumn>
              <CheckBoxInput
                editable="true"
                helpText="DisplayKey.get(&quot;Web.Purge.InfoMessages.SkipChecksForPurgingPeriod&quot;)"
                id="skipValidationForPurgingPolicyPeriods"
                label="DisplayKey.get(&quot;Web.Purge.SkipChecksForPurgingPolicyPeriod&quot;)"
                value="skipValidationForPurgingPolicyPeriod">
                <PostOnChange/>
              </CheckBoxInput>
            </InputColumn>
          </DetailViewPanel>
        </PanelSet>
        <PanelDivider/>
      </PanelSet>
      <PanelRef
        id="FlushOtherWorkQueuesPanel">
        <PanelSet>
          <DetailViewPanel
            columnDivider="false">
            <InputColumn>
              <Label
                id="FlushWorkQueues"
                label="DisplayKey.get(&quot;Web.Archive.InternalTools.FlushOtherWorkQueues&quot;)"/>
            </InputColumn>
            <InputColumn>
              <ButtonInput
                action="purgeHelper.doFlushWorkQueues()"
                id="FlushWorkQueuesButton"
                value="DisplayKey.get(&quot;Web.Purge.Run&quot;)"/>
            </InputColumn>
          </DetailViewPanel>
        </PanelSet>
      </PanelRef>
      <PanelRef
        id="RunPurgeBatchProcessPanel">
        <PanelSet>
          <DetailViewPanel
            columnDivider="false">
            <InputColumn>
              <Label
                id="RunPurgeBatchProcessLabel"
                label="DisplayKey.get(&quot;Web.Purge.RunPurgeBatchProcess&quot;)"/>
            </InputColumn>
            <InputColumn>
              <ButtonInput
                action="purgeHelper.runPurgeBatchProcess()"
                id="RunPurgeBatchProcessButton"
                value="DisplayKey.get(&quot;Web.Purge.Run&quot;)"/>
            </InputColumn>
          </DetailViewPanel>
        </PanelSet>
      </PanelRef>
      <PanelRef
        def="ServerToolsDisclaimerDV()"/>
    </Screen>
  </Page>
</PCF>
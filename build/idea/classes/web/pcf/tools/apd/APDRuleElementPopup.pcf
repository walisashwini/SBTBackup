<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Popup
    afterCancel="if (element.RuleConditions.IsEmpty) {rule.removeElement(element)}"
    canEdit="startInEditMode"
    canVisit="true"
    id="APDRuleElementPopup"
    startInEditMode="startInEditMode"
    title="gw.apd.web.APDRulePopupHelper.getRulePopupTitle(rule)">
    <LocationEntryPoint
      signature="APDRuleElementPopup(rule : APDRule, element : APDRuleElement, startInEditMode : boolean)"/>
    <Variable
      name="rule"
      type="APDRule"/>
    <Variable
      name="element"
      type="APDRuleElement"/>
    <Variable
      name="startInEditMode"
      type="boolean"/>
    <Variable
      initialValue="if (rule typeis APDAttributeRule) return rule.Attribute else return null"
      name="attribute"
      type="APDAttribute"/>
    <Variable
      initialValue="if (rule typeis APDClauseRule) return rule.Clause else return null"
      name="clause"
      type="APDClause"/>
    <Variable
      initialValue="if (rule typeis APDDropdownEntryRule) return rule.DropdownEntry else return null"
      name="dropdownEntry"
      type="APDDropdownEntry"/>
    <Variable
      name="helper"
      type="gw.apd.web.APDRulePopupHelper"/>
    <Screen>
      <Toolbar>
        <EditButtons/>
      </Toolbar>
      <DetailViewPanel>
        <InputColumn>
          <TextInput
            id="attributeLabel"
            label="DisplayKey.get(&quot;Web.APDAttributeRule.Label&quot;)"
            value="attribute.Label"
            visible="rule.Subtype == typekey.APDRule.TC_APDATTRIBUTERULE and attribute.Label.HasContent"/>
          <TextInput
            id="clauseLabel"
            label="DisplayKey.get(&quot;Web.APDAttributeRule.Label&quot;)"
            value="clause.Name"
            visible="clause.Name.HasContent"/>
          <TextInput
            id="dropdownEntryLabel"
            label="DisplayKey.get(&quot;Web.APDAttributeRule.Label&quot;)"
            value="dropdownEntry.Name"
            visible="dropdownEntry.Name.HasContent"/>
          <InputSet
            visible="rule.RuleType == APDRuleType.TC_DEFAULT or rule.RuleType == APDRuleType.TC_MIN or rule.RuleType == APDRuleType.TC_MAX">
            <BooleanDropdownInput
              editable="true"
              id="DefaultBitValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.DefaultBitValue"
              visible="attribute.Type == APDFieldType.TC_BOOLEAN and rule.RuleType == APDRuleType.TC_DEFAULT">
              <PostOnChange/>
            </BooleanDropdownInput>
            <RangeInput
              editable="true"
              id="DefaultCodeValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.DefaultCodeValue"
              valueRange="attribute.CodesToUse"
              valueType="APDDropdownEntry"
              visible="attribute.Type == APDFieldType.TC_TYPEKEY and rule.RuleType == APDRuleType.TC_DEFAULT">
              <PostOnChange/>
            </RangeInput>
            <DateInput
              editable="true"
              id="DefaultDateValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.DefaultDateValue"
              visible="attribute.Type == APDFieldType.TC_DATE">
              <PostOnChange/>
            </DateInput>
            <TextInput
              editable="true"
              id="DefaultDecimalValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              userInputRestriction="decimal"
              value="element.DefaultDecimalValue"
              valueType="java.math.BigDecimal"
              visible="attribute.Type == APDFieldType.TC_BIGDECIMAL or attribute.Type == APDFieldType.TC_MONEY">
              <PostOnChange/>
            </TextInput>
            <TextInput
              editable="true"
              id="DefaultIntegerValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              userInputRestriction="integer"
              value="element.DefaultIntegerValue"
              valueType="Integer"
              visible="attribute.Type == APDFieldType.TC_INTEGER">
              <PostOnChange/>
            </TextInput>
            <TextInput
              editable="true"
              id="DefaultStringValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.DefaultStringValue"
              visible="attribute.Type == APDFieldType.TC_VARCHAR and rule.RuleType == APDRuleType.TC_DEFAULT">
              <PostOnChange/>
            </TextInput>
          </InputSet>
          <InputSet
            visible="rule.RuleType == APDRuleType.TC_EXISTENCE">
            <RangeInput
              editable="true"
              id="DefaultExistence"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.Existence"
              valueRange="rule.ExistenceOptions"
              valueType="APDDataExistenceType">
              <PostOnChange/>
            </RangeInput>
          </InputSet>
          <InputSet
            visible="rule.RuleType == APDRuleType.TC_TAG">
            <TypeKeyInput
              editable="true"
              id="DefaultTagValue"
              label="helper.getResultingLabel(rule)"
              required="true"
              value="element.DefaultTagValue"
              valueType="APDTagApplicability">
              <PostOnChange/>
            </TypeKeyInput>
          </InputSet>
          <TextInput
            id="RuleDescText"
            labelAbove="true"
            value="helper.getRuleElementDisplayDescription(element)"/>
        </InputColumn>
      </DetailViewPanel>
      <PanelRef>
        <Toolbar>
          <IteratorButtons
            iterator="RuleConditions"/>
        </Toolbar>
        <ListViewPanel>
          <RowIterator
            editable="true"
            elementName="condition"
            hideCheckBoxesIfReadOnly="true"
            id="RuleConditions"
            numEntriesRequired="1"
            toCreateAndAdd="element.createAndAddRuleCondition()"
            toRemove="element.removeFromRuleConditions(condition)"
            validationLabel="DisplayKey.get(&quot;Web.APDAttributeRule.APDRuleElement.Condition&quot;)"
            value="element.RuleConditions"
            valueType="APDRuleCondition[]">
            <Row>
              <RangeCell
                editable="true"
                id="Attribute"
                label="DisplayKey.get(&quot;Web.APDAttributeRule.APDRuleElement.APDCondition.Attribute&quot;)"
                maxWidth="600px"
                optionLabel="VALUE.QualifiedLabel"
                value="condition.Attribute"
                valueRange="rule.CandidateDataRuleAttributes"
                valueType="entity.APDAttribute">
                <PostOnChange/>
              </RangeCell>
              <RangeCell
                editable="true"
                id="Operator"
                label="DisplayKey.get(&quot;Web.APDAttributeRule.APDRuleElement.APDCondition.Operator&quot;)"
                required="true"
                value="condition.Operator"
                valueRange="condition.ApplicableOperators"
                valueType="APDRuleConditionOperator"
                valueVisible="condition.Attribute != null"/>
              <ModalCellRef
                def="APDRuleConditionValue(condition)"
                editable="condition.Attribute != null"
                label="DisplayKey.get(&quot;Web.APDAttributeRule.APDRuleElement.APDCondition.Value&quot;)"
                mode="condition.Attribute.Type"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </PanelRef>
    </Screen>
  </Popup>
</PCF>
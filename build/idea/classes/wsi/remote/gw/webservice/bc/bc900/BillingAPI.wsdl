<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:gwsoap="http://guidewire.com/ws/soapheaders" xmlns:gwwsdl="http://guidewire.com/pl/wsdl" xmlns:pogo="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria" xmlns:pogo10="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo" xmlns:pogo11="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo" xmlns:pogo2="http://guidewire.com/bc/typekey" xmlns:pogo3="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult" xmlns:pogo4="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo" xmlns:pogo5="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord" xmlns:pogo6="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem" xmlns:pogo7="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo" xmlns:pogo8="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo" xmlns:pogo9="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo" xmlns:soap11="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BillingAPI" name="BillingAPI" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BillingAPI">
  <wsdl:types>
    <xs:schema xmlns:gw="http://guidewire.com/xsd" xmlns:imported="http://guidewire.com/pc/integration/BillingAPI/entity" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BillingAPI">
      <xs:import namespace="http://guidewire.com/ws/soapheaders" schemaLocation="soapheaders.xsd"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/pc/integration/BillingAPI/entity" schemaLocation="entity.xsd"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <!-- searchForAccounts(BCAccountSearchCriteria, Integer) : BCAccountSearchResult[] -->
      <xs:element name="searchForAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchCriteria" type="pogo:BCAccountSearchCriteria"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="searchForAccountsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo3:BCAccountSearchResult"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="BadIdentifierException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SOAPServerException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="WsiAuthenticationException">
        <xs:complexType/>
      </xs:element>
      <!-- getAccountInvoiceStreams(String, Currency, String) : InvoiceStreamInfo[] -->
      <xs:element name="getAccountInvoiceStreams">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
            <xs:element minOccurs="0" name="paymentPlanPublicID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountInvoiceStreamsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo4:InvoiceStreamInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RequiredFieldException">
        <xs:complexType/>
      </xs:element>
      <!-- getAllSubAccounts(String) : BCAccountSearchResult[] -->
      <xs:element name="getAllSubAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSubAccountsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo3:BCAccountSearchResult"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAllSubAccountsForCurrency(String, Currency) : BCAccountSearchResult[] -->
      <xs:element name="getAllSubAccountsForCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSubAccountsForCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo3:BCAccountSearchResult"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- transferPolicyPeriods(PCPolicyPeriodInfo[], String, String) -->
      <xs:element name="transferPolicyPeriods">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="policyPeriodInfos">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:PCPolicyPeriodInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="targetAccountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="transferPolicyPeriodsResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="AlreadyExecutedException">
        <xs:complexType/>
      </xs:element>
      <xs:element name="EntityStateException">
        <xs:complexType/>
      </xs:element>
      <!-- isAccountExist(String) : boolean -->
      <xs:element name="isAccountExist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAccountExistResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- findAllPaymentAllocationPlans() : PaymentAllocationPlanInfo[] -->
      <xs:element name="findAllPaymentAllocationPlans">
        <xs:complexType/>
      </xs:element>
      <xs:element name="findAllPaymentAllocationPlansResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:PaymentAllocationPlanInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- createAccount(PCAccountInfo, Currency, String) : String -->
      <xs:element name="createAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountInfo" type="imported:PCAccountInfo"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DBDuplicateKeyException">
        <xs:complexType/>
      </xs:element>
      <!-- updateAccount(PCAccountInfo, String) : String -->
      <xs:element name="updateAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountInfo" type="imported:PCAccountInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAvailableBillingMethods(String, Currency) : String[] -->
      <xs:element name="getAvailableBillingMethods">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerCodeId" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvailableBillingMethodsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- issuePolicyPeriod(IssuePolicyInfo, String) : String -->
      <xs:element name="issuePolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuePolicyInfo" type="imported:IssuePolicyInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="issuePolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewInstallmentPlanInvoices(PolicyChangeInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewInstallmentPlanInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyChangeInfo" type="imported:PolicyChangeInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewInstallmentPlanInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewPolicyChangeInvoices(PolicyChangeInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewPolicyChangeInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyChangeInfo" type="imported:PolicyChangeInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewPolicyChangeInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewInstallmentsPlanInvoices(IssuePolicyInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewInstallmentsPlanInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuePolicyInfo" type="imported:IssuePolicyInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewInstallmentsPlanInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewIssuanceInvoices(IssuePolicyInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewIssuanceInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuePolicyInfo" type="imported:IssuePolicyInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewIssuanceInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewRenewalInvoices(RenewalInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewRenewalInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="renewalInfo" type="imported:RenewalInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewRenewalInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewRewriteInvoices(RewriteInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewRewriteInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="rewriteInfo" type="imported:RewriteInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewRewriteInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewReinstatementInvoices(ReinstatementInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewReinstatementInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="reinstatementInfo" type="imported:ReinstatementInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewReinstatementInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewPremiumReportInvoices(PremiumReportInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewPremiumReportInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="reportInfo" type="imported:PremiumReportInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewPremiumReportInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewFinalAuditInvoices(FinalAuditInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewFinalAuditInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finalAuditInfo" type="imported:FinalAuditInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewFinalAuditInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewCancellationInvoices(CancelPolicyInfo) : InvoiceSummaryItem[] -->
      <xs:element name="previewCancellationInvoices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="cancelInfo" type="imported:CancelPolicyInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewCancellationInvoicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo6:InvoiceSummaryItem"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- updateChargeWrittenDate(String, Date) -->
      <xs:element name="updateChargeWrittenDate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="chargeID" type="xs:string"/>
            <xs:element gw:type="java.util.Date" minOccurs="0" name="writtenDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateChargeWrittenDateResponse">
        <xs:complexType/>
      </xs:element>
      <!-- updatePolicyPeriodTermConfirmed(String, int, Boolean) -->
      <xs:element name="updatePolicyPeriodTermConfirmed">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyNumber" type="xs:string"/>
            <xs:element name="termNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="isConfirmed" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePolicyPeriodTermConfirmedResponse">
        <xs:complexType/>
      </xs:element>
      <!-- cancelPolicyPeriod(CancelPolicyInfo, String) : String -->
      <xs:element name="cancelPolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="cancelInfo" type="imported:CancelPolicyInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cancelPolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- changePolicyPeriod(PolicyChangeInfo, String) : String -->
      <xs:element name="changePolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="changeInfo" type="imported:PolicyChangeInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- reinstatePolicyPeriod(ReinstatementInfo, String) : String -->
      <xs:element name="reinstatePolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="reinstatementInfo" type="imported:ReinstatementInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reinstatePolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- issueFinalAudit(FinalAuditInfo, String) : String -->
      <xs:element name="issueFinalAudit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finalAuditInfo" type="imported:FinalAuditInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="issueFinalAuditResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- issuePremiumReport(PremiumReportInfo, String) : String -->
      <xs:element name="issuePremiumReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="premiumReportInfo" type="imported:PremiumReportInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="issuePremiumReportResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- renewPolicyPeriod(RenewalInfo, String) : String -->
      <xs:element name="renewPolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="renewalInfo" type="imported:RenewalInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renewPolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- rewritePolicyPeriod(RewriteInfo, String) : String -->
      <xs:element name="rewritePolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="rewriteInfo" type="imported:RewriteInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="rewritePolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- addPolicyPeriodGeneralCharges(PolicyPeriodGeneralInfo, String) : String -->
      <xs:element name="addPolicyPeriodGeneralCharges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyPeriodGeneralInfo" type="imported:PolicyPeriodGeneralInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPolicyPeriodGeneralChargesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SOAPException">
        <xs:complexType/>
      </xs:element>
      <!-- addAccountGeneralCharges(AccountGeneralInfo, String) : String -->
      <xs:element name="addAccountGeneralCharges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountGeneralInfo" type="imported:AccountGeneralInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addAccountGeneralChargesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- addCollateralCharges(CollateralInfo, String) : String -->
      <xs:element name="addCollateralCharges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="collateralInfo" type="imported:CollateralInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollateralChargesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- addSegregatedCollateralCharges(CollateralInfo, String) : String -->
      <xs:element name="addSegregatedCollateralCharges">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="collateralInfo" type="imported:CollateralInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSegregatedCollateralChargesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAllAgencyBillPlans() : AgencyBillPlanInfo[] -->
      <xs:element name="getAllAgencyBillPlans">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getAllAgencyBillPlansResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:AgencyBillPlanInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAllCommissionPlans() : CommissionPlanInfo[] -->
      <xs:element name="getAllCommissionPlans">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getAllCommissionPlansResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:CommissionPlanInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewApplicableCommissionSubPlan(IssuePolicyInfo, String) : CommissionSubPlanInfo -->
      <xs:element name="previewApplicableCommissionSubPlan">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuePolicyInfo" type="imported:IssuePolicyInfo"/>
            <xs:element minOccurs="0" name="producerCodePublicID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewApplicableCommissionSubPlanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="pogo7:CommissionSubPlanInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- previewCommissionRates(IssuePolicyInfo, String) : ChargeInfo[] -->
      <xs:element name="previewCommissionRates">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuePolicyInfo" type="imported:IssuePolicyInfo"/>
            <xs:element minOccurs="0" name="policyRoleCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="previewCommissionRatesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:ChargeInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- createProducer(PCNewProducerInfo, String) : String -->
      <xs:element name="createProducer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="newProducerInfo" type="imported:PCNewProducerInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createProducerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DataConversionException">
        <xs:complexType/>
      </xs:element>
      <!-- updateProducer(PCProducerInfo, String) : String -->
      <xs:element name="updateProducer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerInfo" type="imported:PCProducerInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProducerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- isProducerExist(String) : boolean -->
      <xs:element name="isProducerExist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isProducerExistResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getProducerInfo(String) : PCProducerInfo -->
      <xs:element name="getProducerInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProducerInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="imported:PCProducerInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- createProducerCode(NewProducerCodeInfo, String) : String -->
      <xs:element name="createProducerCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerCodeInfo" type="imported:NewProducerCodeInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createProducerCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- updateProducerCode(ProducerCodeInfo, String) : String -->
      <xs:element name="updateProducerCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerCodeInfo" type="imported:ProducerCodeInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProducerCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- isProducerCodeExist(String, String) : boolean -->
      <xs:element name="isProducerCodeExist">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="producerId" type="xs:string"/>
            <xs:element minOccurs="0" name="code" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isProducerCodeExistResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getProducerCodeInfo(String) : ProducerCodeInfo -->
      <xs:element name="getProducerCodeInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="publicID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProducerCodeInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="imported:ProducerCodeInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- updateContact(PCContactInfo, String) : String[] -->
      <xs:element name="updateContact">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="contactInfo" type="imported:PCContactInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateContactResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAllPaymentPlans() : PaymentPlanInfo[] -->
      <xs:element name="getAllPaymentPlans">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getAllPaymentPlansResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:PaymentPlanInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getPaymentPlansForAccount(String, Currency) : PaymentPlanInfo[] -->
      <xs:element name="getPaymentPlansForAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaymentPlansForAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="imported:PaymentPlanInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- changePaymentPlan(String, PaymentPlanInfo) : boolean -->
      <xs:element name="changePaymentPlan">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyPeriodPublicID" type="xs:string"/>
            <xs:element minOccurs="0" name="paymentPlanInfo" type="imported:PaymentPlanInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePaymentPlanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- waiveFinalAudit(PCPolicyPeriodInfo, String) : String -->
      <xs:element name="waiveFinalAudit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyPeriodInfo" type="imported:PCPolicyPeriodInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="waiveFinalAuditResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- scheduleFinalAudit(PCPolicyPeriodInfo, String) : String -->
      <xs:element name="scheduleFinalAudit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyPeriodInfo" type="imported:PCPolicyPeriodInfo"/>
            <xs:element minOccurs="0" name="transactionId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="scheduleFinalAuditResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getPolicyPeriod(PCPolicyPeriodInfo) : IssuePolicyInfo -->
      <xs:element name="getPolicyPeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyPeriodInfo" type="imported:PCPolicyPeriodInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyPeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="imported:IssuePolicyInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getUnapplieds(String) : PCUnappliedInfo[] -->
      <xs:element name="getUnapplieds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUnappliedsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo11:PCUnappliedInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getUnappliedFunds(String, Currency) : PCUnappliedInfo[] -->
      <xs:element name="getUnappliedFunds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUnappliedFundsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo11:PCUnappliedInfo"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- getAccountPaymentInstruments(String, Currency) : PaymentInstrumentRecord[] -->
      <xs:element name="getAccountPaymentInstruments">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountPaymentInstrumentsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element gw:viewas="array" minOccurs="0" name="return">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo5:PaymentInstrumentRecord"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- createPaymentInstrumentOnAccount(String, Currency, PaymentInstrumentRecord) : PaymentInstrumentRecord -->
      <xs:element name="createPaymentInstrumentOnAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="currency" type="pogo2:Currency"/>
            <xs:element minOccurs="0" name="paymentInstrumentRecord" type="pogo5:PaymentInstrumentRecord"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createPaymentInstrumentOnAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="pogo5:PaymentInstrumentRecord"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:complexType name="BCAccountSearchCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountName" type="xs:string"/>
          <xs:element minOccurs="0" name="AccountNameKanji" type="xs:string"/>
          <xs:element minOccurs="0" name="AccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="Currency" type="pogo2:Currency"/>
          <xs:element minOccurs="0" name="IsListBill" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/typekey">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:simpleType name="Currency">
        <xs:restriction base="xs:string">
          <xs:enumeration value="usd"/>
          <xs:enumeration value="eur"/>
          <xs:enumeration value="gbp"/>
          <xs:enumeration value="cad"/>
          <xs:enumeration value="aud"/>
          <xs:enumeration value="rub"/>
          <xs:enumeration value="jpy"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Periodicity">
        <xs:restriction base="xs:string">
          <xs:enumeration value="monthly"/>
          <xs:enumeration value="everyweek"/>
          <xs:enumeration value="everyotherweek"/>
          <xs:enumeration value="twicepermonth"/>
          <xs:enumeration value="everyothermonth"/>
          <xs:enumeration value="quarterly"/>
          <xs:enumeration value="everyfourmonths"/>
          <xs:enumeration value="everysixmonths"/>
          <xs:enumeration value="everyyear"/>
          <xs:enumeration value="everyotheryear"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ach"/>
          <xs:enumeration value="cash"/>
          <xs:enumeration value="check"/>
          <xs:enumeration value="creditcard"/>
          <xs:enumeration value="misc"/>
          <xs:enumeration value="responsive"/>
          <xs:enumeration value="accountunapplied"/>
          <xs:enumeration value="producerunapplied"/>
          <xs:enumeration value="wire"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargeCategory">
        <xs:restriction base="xs:string">
          <xs:enumeration value="fee"/>
          <xs:enumeration value="general"/>
          <xs:enumeration value="premium"/>
          <xs:enumeration value="recapture"/>
          <xs:enumeration value="tax"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceItemType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="commissionadjustment"/>
          <xs:enumeration value="commissionremainder"/>
          <xs:enumeration value="deposit"/>
          <xs:enumeration value="installment"/>
          <xs:enumeration value="onetime"/>
          <xs:enumeration value="commissionupgrade"/>
          <xs:enumeration value="depositadjustment"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayableCriteria">
        <xs:restriction base="xs:string">
          <xs:enumeration value="firstpaymentreceived"/>
          <xs:enumeration value="paymentreceived"/>
          <xs:enumeration value="binding"/>
          <xs:enumeration value="billing"/>
          <xs:enumeration value="invoicepaid"/>
          <xs:enumeration value="effectivedate"/>
          <xs:enumeration value="expirationdate"/>
          <xs:enumeration value="custom"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyRole">
        <xs:restriction base="xs:string">
          <xs:enumeration value="primary"/>
          <xs:enumeration value="secondary"/>
          <xs:enumeration value="referrer"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="BCAccountSearchResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccountName" type="xs:string"/>
          <xs:element minOccurs="0" name="AccountNameKanji" type="xs:string"/>
          <xs:element minOccurs="0" name="AccountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="Currency" type="pogo2:Currency"/>
          <xs:element minOccurs="0" name="PrimaryPayer" type="xs:string"/>
          <xs:element minOccurs="0" name="isListBill" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="InvoiceStreamInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Days" type="xs:string"/>
          <xs:element minOccurs="0" name="Description" type="xs:string"/>
          <xs:element minOccurs="0" name="DueDateBilling" type="xs:boolean"/>
          <xs:element minOccurs="0" name="Interval" type="pogo2:Periodicity"/>
          <xs:element minOccurs="0" name="PaymentInstrumentRecord" type="pogo5:PaymentInstrumentRecord"/>
          <xs:element minOccurs="0" name="PublicID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="PaymentInstrumentRecord">
        <xs:sequence>
          <xs:element minOccurs="0" name="Detail" type="xs:string"/>
          <xs:element minOccurs="0" name="DisplayName" type="xs:string"/>
          <xs:element minOccurs="0" name="OneTime" type="xs:boolean"/>
          <xs:element minOccurs="0" name="PaymentMethod" type="pogo2:PaymentMethod"/>
          <xs:element minOccurs="0" name="PublicID" type="xs:string"/>
          <xs:element minOccurs="0" name="Token" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:gw="http://guidewire.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="InvoiceSummaryItem">
        <xs:sequence>
          <xs:element gw:type="gw.pl.currency.MonetaryAmount" minOccurs="0" name="Amount" type="xs:string"/>
          <xs:element minOccurs="0" name="Category" type="pogo2:ChargeCategory"/>
          <xs:element minOccurs="0" name="CategoryDisplay" type="xs:string"/>
          <xs:element minOccurs="0" name="ChargeName" type="xs:string"/>
          <xs:element gw:type="java.util.Date" minOccurs="0" name="InvoiceDate" type="xs:dateTime"/>
          <xs:element gw:type="java.util.Date" minOccurs="0" name="InvoiceDueDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="Type" type="pogo2:InvoiceItemType"/>
          <xs:element minOccurs="0" name="TypeDisplay" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="CommissionSubPlanInfo">
        <xs:sequence>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="CommissionableChargeItems">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="xs:string"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" name="PayableCriteria" type="pogo2:PayableCriteria"/>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="PremiumIncentives">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo8:PremiumIncentiveInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="Priority" type="xs:int"/>
          <xs:element minOccurs="0" name="PublicID" type="xs:string"/>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="Rates">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo9:CommissionSubPlanRateInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:viewas="array" minOccurs="0" name="SpecialRates">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Entry" nillable="true" type="pogo10:CommissionSubPlanChargePatternRateInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="SuspendForDelinquency" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="PremiumIncentiveInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="BonusPercentage" type="xs:decimal"/>
          <xs:element xmlns:gw="http://guidewire.com/xsd" gw:type="gw.pl.currency.MonetaryAmount" minOccurs="0" name="Threshold" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="CommissionSubPlanRateInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Rate" type="xs:decimal"/>
          <xs:element minOccurs="0" name="Role" type="pogo2:PolicyRole"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="CommissionSubPlanChargePatternRateInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="ChargePatternCode" type="xs:string"/>
          <xs:element minOccurs="0" name="Rate" type="xs:decimal"/>
          <xs:element minOccurs="0" name="Role" type="pogo2:PolicyRole"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PCUnappliedInfo">
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanChargePatternRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanRateInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/PremiumIncentiveInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/CommissionSubPlanInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceSummaryItem"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/bc/bc900/PaymentInstrumentRecord"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/InvoiceStreamInfo"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchResult"/>
      <xs:import namespace="http://guidewire.com/bc/typekey"/>
      <xs:import namespace="http://guidewire.com/bc/ws/gw/webservice/policycenter/bc900/BCAccountSearchCriteria"/>
      <xs:complexType name="PCUnappliedInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Description" type="xs:string"/>
          <xs:element minOccurs="0" name="PublicID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:portType name="BillingAPIPortType">
    <wsdl:operation name="searchForAccounts">
      <wsdl:input message="tns:searchForAccounts" name="searchForAccounts"/>
      <wsdl:output message="tns:searchForAccountsResponse" name="searchForAccountsResponse"/>
      <!-- If there are too many results -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountInvoiceStreams">
      <wsdl:input message="tns:getAccountInvoiceStreams" name="getAccountInvoiceStreams"/>
      <wsdl:output message="tns:getAccountInvoiceStreamsResponse" name="getAccountInvoiceStreamsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccounts">
      <wsdl:input message="tns:getAllSubAccounts" name="getAllSubAccounts"/>
      <wsdl:output message="tns:getAllSubAccountsResponse" name="getAllSubAccountsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccountsForCurrency">
      <wsdl:input message="tns:getAllSubAccountsForCurrency" name="getAllSubAccountsForCurrency"/>
      <wsdl:output message="tns:getAllSubAccountsForCurrencyResponse" name="getAllSubAccountsForCurrencyResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="transferPolicyPeriods">
      <wsdl:input message="tns:transferPolicyPeriods" name="transferPolicyPeriods"/>
      <wsdl:output message="tns:transferPolicyPeriodsResponse" name="transferPolicyPeriodsResponse"/>
      <!-- If cannot find the policy period of account specified -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required field is missing  -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If this call is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If any of the PolicyPeriods is either retrieved or has frozen InvoiceItems. -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isAccountExist">
      <wsdl:input message="tns:isAccountExist" name="isAccountExist"/>
      <wsdl:output message="tns:isAccountExistResponse" name="isAccountExistResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="findAllPaymentAllocationPlans">
      <wsdl:input message="tns:findAllPaymentAllocationPlans" name="findAllPaymentAllocationPlans"/>
      <wsdl:output message="tns:findAllPaymentAllocationPlansResponse" name="findAllPaymentAllocationPlansResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="createAccount">
      <wsdl:input message="tns:createAccount" name="createAccount"/>
      <wsdl:output message="tns:createAccountResponse" name="createAccountResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- if the account number is duplicated -->
      <wsdl:fault message="tns:DBDuplicateKeyException" name="DBDuplicateKeyException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateAccount">
      <wsdl:input message="tns:updateAccount" name="updateAccount"/>
      <wsdl:output message="tns:updateAccountResponse" name="updateAccountResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no account exists with the given account number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableBillingMethods">
      <wsdl:input message="tns:getAvailableBillingMethods" name="getAvailableBillingMethods"/>
      <wsdl:output message="tns:getAvailableBillingMethodsResponse" name="getAvailableBillingMethodsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no producer exists with the given producer code -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="issuePolicyPeriod">
      <wsdl:input message="tns:issuePolicyPeriod" name="issuePolicyPeriod"/>
      <wsdl:output message="tns:issuePolicyPeriodResponse" name="issuePolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If a policy already exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentPlanInvoices">
      <wsdl:documentation>@deprecated: Renamed; use previewPolicyChangeInvoices instead</wsdl:documentation>
      <wsdl:input message="tns:previewInstallmentPlanInvoices" name="previewInstallmentPlanInvoices"/>
      <wsdl:output message="tns:previewInstallmentPlanInvoicesResponse" name="previewInstallmentPlanInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewPolicyChangeInvoices">
      <wsdl:input message="tns:previewPolicyChangeInvoices" name="previewPolicyChangeInvoices"/>
      <wsdl:output message="tns:previewPolicyChangeInvoicesResponse" name="previewPolicyChangeInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentsPlanInvoices">
      <wsdl:documentation>@deprecated: Renamed; use previewIssuanceInvoices instead</wsdl:documentation>
      <wsdl:input message="tns:previewInstallmentsPlanInvoices" name="previewInstallmentsPlanInvoices"/>
      <wsdl:output message="tns:previewInstallmentsPlanInvoicesResponse" name="previewInstallmentsPlanInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewIssuanceInvoices">
      <wsdl:input message="tns:previewIssuanceInvoices" name="previewIssuanceInvoices"/>
      <wsdl:output message="tns:previewIssuanceInvoicesResponse" name="previewIssuanceInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewRenewalInvoices">
      <wsdl:input message="tns:previewRenewalInvoices" name="previewRenewalInvoices"/>
      <wsdl:output message="tns:previewRenewalInvoicesResponse" name="previewRenewalInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewRewriteInvoices">
      <wsdl:input message="tns:previewRewriteInvoices" name="previewRewriteInvoices"/>
      <wsdl:output message="tns:previewRewriteInvoicesResponse" name="previewRewriteInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewReinstatementInvoices">
      <wsdl:input message="tns:previewReinstatementInvoices" name="previewReinstatementInvoices"/>
      <wsdl:output message="tns:previewReinstatementInvoicesResponse" name="previewReinstatementInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewPremiumReportInvoices">
      <wsdl:input message="tns:previewPremiumReportInvoices" name="previewPremiumReportInvoices"/>
      <wsdl:output message="tns:previewPremiumReportInvoicesResponse" name="previewPremiumReportInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewFinalAuditInvoices">
      <wsdl:input message="tns:previewFinalAuditInvoices" name="previewFinalAuditInvoices"/>
      <wsdl:output message="tns:previewFinalAuditInvoicesResponse" name="previewFinalAuditInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewCancellationInvoices">
      <wsdl:input message="tns:previewCancellationInvoices" name="previewCancellationInvoices"/>
      <wsdl:output message="tns:previewCancellationInvoicesResponse" name="previewCancellationInvoicesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateChargeWrittenDate">
      <wsdl:input message="tns:updateChargeWrittenDate" name="updateChargeWrittenDate"/>
      <wsdl:output message="tns:updateChargeWrittenDateResponse" name="updateChargeWrittenDateResponse"/>
      <!-- if the charge or writtenDate variable is null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no charge exists with the given PublicID -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If the Charge has frozen InvoiceItems. -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updatePolicyPeriodTermConfirmed">
      <wsdl:input message="tns:updatePolicyPeriodTermConfirmed" name="updatePolicyPeriodTermConfirmed"/>
      <wsdl:output message="tns:updatePolicyPeriodTermConfirmedResponse" name="updatePolicyPeriodTermConfirmedResponse"/>
      <!-- if the policyNumber or termNumber or isConfirmed variable is null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the PolicyPeriod is closed -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelPolicyPeriod">
      <wsdl:input message="tns:cancelPolicyPeriod" name="cancelPolicyPeriod"/>
      <wsdl:output message="tns:cancelPolicyPeriodResponse" name="cancelPolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="changePolicyPeriod">
      <wsdl:input message="tns:changePolicyPeriod" name="changePolicyPeriod"/>
      <wsdl:output message="tns:changePolicyPeriodResponse" name="changePolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If PolicyPeriod is closed and the change is not permitted. -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If PolicyPeriod has been retrieved from the archive and the change is not permitted. -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="reinstatePolicyPeriod">
      <wsdl:input message="tns:reinstatePolicyPeriod" name="reinstatePolicyPeriod"/>
      <wsdl:output message="tns:reinstatePolicyPeriodResponse" name="reinstatePolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="issueFinalAudit">
      <wsdl:input message="tns:issueFinalAudit" name="issueFinalAudit"/>
      <wsdl:output message="tns:issueFinalAuditResponse" name="issueFinalAuditResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="issuePremiumReport">
      <wsdl:input message="tns:issuePremiumReport" name="issuePremiumReport"/>
      <wsdl:output message="tns:issuePremiumReportResponse" name="issuePremiumReportResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="renewPolicyPeriod">
      <wsdl:input message="tns:renewPolicyPeriod" name="renewPolicyPeriod"/>
      <wsdl:output message="tns:renewPolicyPeriodResponse" name="renewPolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="rewritePolicyPeriod">
      <wsdl:input message="tns:rewritePolicyPeriod" name="rewritePolicyPeriod"/>
      <wsdl:output message="tns:rewritePolicyPeriodResponse" name="rewritePolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="addPolicyPeriodGeneralCharges">
      <wsdl:input message="tns:addPolicyPeriodGeneralCharges" name="addPolicyPeriodGeneralCharges"/>
      <wsdl:output message="tns:addPolicyPeriodGeneralChargesResponse" name="addPolicyPeriodGeneralChargesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If the charge category is not Fee or General. -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no policy period exists with the given PCPolicyPublicID and TermNUmber or PolicyNumber and TermNumber -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If policyPeriodGeneralInfo is null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="addAccountGeneralCharges">
      <wsdl:input message="tns:addAccountGeneralCharges" name="addAccountGeneralCharges"/>
      <wsdl:output message="tns:addAccountGeneralChargesResponse" name="addAccountGeneralChargesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If the charge category is not Fee or General. -->
      <wsdl:fault message="tns:SOAPException" name="SOAPException"/>
      <!-- If the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no account exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If accountGeneralInfo is null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="addCollateralCharges">
      <wsdl:input message="tns:addCollateralCharges" name="addCollateralCharges"/>
      <wsdl:output message="tns:addCollateralChargesResponse" name="addCollateralChargesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no account exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="addSegregatedCollateralCharges">
      <wsdl:input message="tns:addSegregatedCollateralCharges" name="addSegregatedCollateralCharges"/>
      <wsdl:output message="tns:addSegregatedCollateralChargesResponse" name="addSegregatedCollateralChargesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no account exists with the given number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllAgencyBillPlans">
      <wsdl:input message="tns:getAllAgencyBillPlans" name="getAllAgencyBillPlans"/>
      <wsdl:output message="tns:getAllAgencyBillPlansResponse" name="getAllAgencyBillPlansResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllCommissionPlans">
      <wsdl:input message="tns:getAllCommissionPlans" name="getAllCommissionPlans"/>
      <wsdl:output message="tns:getAllCommissionPlansResponse" name="getAllCommissionPlansResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewApplicableCommissionSubPlan">
      <wsdl:input message="tns:previewApplicableCommissionSubPlan" name="previewApplicableCommissionSubPlan"/>
      <wsdl:output message="tns:previewApplicableCommissionSubPlanResponse" name="previewApplicableCommissionSubPlanResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If issuePolicyInfo or producerCodePublicID is null. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If a policy period  with the given PCPolicyPublicID and TermNumber already exists, or producerCodePublicID is invalid. -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="previewCommissionRates">
      <wsdl:input message="tns:previewCommissionRates" name="previewCommissionRates"/>
      <wsdl:output message="tns:previewCommissionRatesResponse" name="previewCommissionRatesResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If there is no existing CommissionSubPlan with the given PublicID, or policy role exists with the given code. -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="createProducer">
      <wsdl:input message="tns:createProducer" name="createProducer"/>
      <wsdl:output message="tns:createProducerResponse" name="createProducerResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no AgencyBill Plan exists with a given PublicID -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If more than one AgencyBill Plan is specified with a given Currency -->
      <wsdl:fault message="tns:DataConversionException" name="DataConversionException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateProducer">
      <wsdl:input message="tns:updateProducer" name="updateProducer"/>
      <wsdl:output message="tns:updateProducerResponse" name="updateProducerResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If no producer exists with the given public id -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isProducerExist">
      <wsdl:input message="tns:isProducerExist" name="isProducerExist"/>
      <wsdl:output message="tns:isProducerExistResponse" name="isProducerExistResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getProducerInfo">
      <wsdl:input message="tns:getProducerInfo" name="getProducerInfo"/>
      <wsdl:output message="tns:getProducerInfoResponse" name="getProducerInfoResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no producer exists with the given public identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="createProducerCode">
      <wsdl:input message="tns:createProducerCode" name="createProducerCode"/>
      <wsdl:output message="tns:createProducerCodeResponse" name="createProducerCodeResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateProducerCode">
      <wsdl:input message="tns:updateProducerCode" name="updateProducerCode"/>
      <wsdl:output message="tns:updateProducerCodeResponse" name="updateProducerCodeResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If no producer code exists with the given public identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isProducerCodeExist">
      <wsdl:input message="tns:isProducerCodeExist" name="isProducerCodeExist"/>
      <wsdl:output message="tns:isProducerCodeExistResponse" name="isProducerCodeExistResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getProducerCodeInfo">
      <wsdl:input message="tns:getProducerCodeInfo" name="getProducerCodeInfo"/>
      <wsdl:output message="tns:getProducerCodeInfoResponse" name="getProducerCodeInfoResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no producer code exists with the given public identifier -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <wsdl:input message="tns:updateContact" name="updateContact"/>
      <wsdl:output message="tns:updateContactResponse" name="updateContactResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPaymentPlans">
      <wsdl:input message="tns:getAllPaymentPlans" name="getAllPaymentPlans"/>
      <wsdl:output message="tns:getAllPaymentPlansResponse" name="getAllPaymentPlansResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaymentPlansForAccount">
      <wsdl:input message="tns:getPaymentPlansForAccount" name="getPaymentPlansForAccount"/>
      <wsdl:output message="tns:getPaymentPlansForAccountResponse" name="getPaymentPlansForAccountResponse"/>
      <!-- If no account exists with the given account number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="changePaymentPlan">
      <wsdl:input message="tns:changePaymentPlan" name="changePaymentPlan"/>
      <wsdl:output message="tns:changePaymentPlanResponse" name="changePaymentPlanResponse"/>
      <!-- If no payment plan exists to match the given info -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- Policy period public id is not valid -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- Policy period public id cannot be null -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="waiveFinalAudit">
      <wsdl:input message="tns:waiveFinalAudit" name="waiveFinalAudit"/>
      <wsdl:output message="tns:waiveFinalAuditResponse" name="waiveFinalAuditResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleFinalAudit">
      <wsdl:input message="tns:scheduleFinalAudit" name="scheduleFinalAudit"/>
      <wsdl:output message="tns:scheduleFinalAuditResponse" name="scheduleFinalAuditResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- if the SOAP request is already executed -->
      <wsdl:fault message="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
      <!-- If the PolicyPeriod has been archived -->
      <wsdl:fault message="tns:EntityStateException" name="EntityStateException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyPeriod">
      <wsdl:input message="tns:getPolicyPeriod" name="getPolicyPeriod"/>
      <wsdl:output message="tns:getPolicyPeriodResponse" name="getPolicyPeriodResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getUnapplieds">
      <wsdl:input message="tns:getUnapplieds" name="getUnapplieds"/>
      <wsdl:output message="tns:getUnappliedsResponse" name="getUnappliedsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getUnappliedFunds">
      <wsdl:input message="tns:getUnappliedFunds" name="getUnappliedFunds"/>
      <wsdl:output message="tns:getUnappliedFundsResponse" name="getUnappliedFundsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no account exists with the given account number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountPaymentInstruments">
      <wsdl:input message="tns:getAccountPaymentInstruments" name="getAccountPaymentInstruments"/>
      <wsdl:output message="tns:getAccountPaymentInstrumentsResponse" name="getAccountPaymentInstrumentsResponse"/>
      <!-- If communication error or any other problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- If no account exists with the given account number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="createPaymentInstrumentOnAccount">
      <wsdl:input message="tns:createPaymentInstrumentOnAccount" name="createPaymentInstrumentOnAccount"/>
      <wsdl:output message="tns:createPaymentInstrumentOnAccountResponse" name="createPaymentInstrumentOnAccountResponse"/>
      <!-- If communication error or any other SOAP problem occurs. -->
      <wsdl:fault message="tns:SOAPServerException" name="SOAPServerException"/>
      <!-- If no account exists with the given account number -->
      <wsdl:fault message="tns:BadIdentifierException" name="BadIdentifierException"/>
      <!-- If required parameter is missing. -->
      <wsdl:fault message="tns:RequiredFieldException" name="RequiredFieldException"/>
      <!-- The PaymentInstrument identified by the non-null PublicID already exists in the system) -->
      <wsdl:fault message="tns:DataConversionException" name="DataConversionException"/>
      <!-- If paymentInstrumentRecord.OneTime is true -->
      <wsdl:fault message="tns:DataConversionException" name="DataConversionException"/>
      <wsdl:fault message="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BillingAPISoap12Binding" type="tns:BillingAPIPortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchForAccounts">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="searchForAccounts">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForAccountsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountInvoiceStreams">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAccountInvoiceStreams">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccountInvoiceStreamsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccounts">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAllSubAccounts">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSubAccountsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccountsForCurrency">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAllSubAccountsForCurrency">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSubAccountsForCurrencyResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="transferPolicyPeriods">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="transferPolicyPeriods">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="transferPolicyPeriodsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAccountExist">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="isAccountExist">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isAccountExistResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllPaymentAllocationPlans">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="findAllPaymentAllocationPlans">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllPaymentAllocationPlansResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAccount">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="createAccount">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAccountResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DBDuplicateKeyException">
        <soap12:fault name="DBDuplicateKeyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAccount">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateAccount">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAccountResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableBillingMethods">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAvailableBillingMethods">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableBillingMethodsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issuePolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="issuePolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issuePolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentPlanInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewInstallmentPlanInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewInstallmentPlanInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewPolicyChangeInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewPolicyChangeInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewPolicyChangeInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentsPlanInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewInstallmentsPlanInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewInstallmentsPlanInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewIssuanceInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewIssuanceInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewIssuanceInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewRenewalInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewRenewalInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewRenewalInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewRewriteInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewRewriteInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewRewriteInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewReinstatementInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewReinstatementInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewReinstatementInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewPremiumReportInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewPremiumReportInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewPremiumReportInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewFinalAuditInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewFinalAuditInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewFinalAuditInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewCancellationInvoices">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewCancellationInvoices">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewCancellationInvoicesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateChargeWrittenDate">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateChargeWrittenDate">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateChargeWrittenDateResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicyPeriodTermConfirmed">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updatePolicyPeriodTermConfirmed">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePolicyPeriodTermConfirmedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelPolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="cancelPolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelPolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="changePolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reinstatePolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="reinstatePolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reinstatePolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issueFinalAudit">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="issueFinalAudit">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issueFinalAuditResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issuePremiumReport">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="issuePremiumReport">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issuePremiumReportResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renewPolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="renewPolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="renewPolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rewritePolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="rewritePolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="rewritePolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicyPeriodGeneralCharges">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="addPolicyPeriodGeneralCharges">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPolicyPeriodGeneralChargesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAccountGeneralCharges">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="addAccountGeneralCharges">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addAccountGeneralChargesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <soap12:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollateralCharges">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="addCollateralCharges">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addCollateralChargesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSegregatedCollateralCharges">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="addSegregatedCollateralCharges">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addSegregatedCollateralChargesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAgencyBillPlans">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAllAgencyBillPlans">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAgencyBillPlansResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCommissionPlans">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAllCommissionPlans">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCommissionPlansResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewApplicableCommissionSubPlan">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewApplicableCommissionSubPlan">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewApplicableCommissionSubPlanResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewCommissionRates">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="previewCommissionRates">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewCommissionRatesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProducer">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="createProducer">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProducerResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap12:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProducer">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateProducer">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProducerResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isProducerExist">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="isProducerExist">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isProducerExistResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerInfo">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getProducerInfo">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProducerInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProducerCode">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="createProducerCode">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProducerCodeResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProducerCode">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateProducerCode">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProducerCodeResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isProducerCodeExist">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="isProducerCodeExist">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isProducerCodeExistResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerCodeInfo">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getProducerCodeInfo">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProducerCodeInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="updateContact">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateContactResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaymentPlans">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAllPaymentPlans">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllPaymentPlansResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaymentPlansForAccount">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getPaymentPlansForAccount">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPaymentPlansForAccountResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePaymentPlan">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="changePaymentPlan">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePaymentPlanResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waiveFinalAudit">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="waiveFinalAudit">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="waiveFinalAuditResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleFinalAudit">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="scheduleFinalAudit">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="scheduleFinalAuditResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap12:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap12:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyPeriod">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getPolicyPeriod">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPolicyPeriodResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnapplieds">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getUnapplieds">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnappliedsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnappliedFunds">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getUnappliedFunds">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnappliedFundsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountPaymentInstruments">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="getAccountPaymentInstruments">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccountPaymentInstrumentsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPaymentInstrumentOnAccount">
      <soap12:operation soapActionRequired="false" style="document"/>
      <wsdl:input name="createPaymentInstrumentOnAccount">
        <soap12:body use="literal"/>
        <soap12:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap12:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPaymentInstrumentOnAccountResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap12:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap12:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap12:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap12:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap12:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap12:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BillingAPISoap11Binding" type="tns:BillingAPIPortType">
    <soap11:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchForAccounts">
      <soap11:operation style="document"/>
      <wsdl:input name="searchForAccounts">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForAccountsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountInvoiceStreams">
      <soap11:operation style="document"/>
      <wsdl:input name="getAccountInvoiceStreams">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccountInvoiceStreamsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccounts">
      <soap11:operation style="document"/>
      <wsdl:input name="getAllSubAccounts">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSubAccountsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSubAccountsForCurrency">
      <soap11:operation style="document"/>
      <wsdl:input name="getAllSubAccountsForCurrency">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSubAccountsForCurrencyResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="transferPolicyPeriods">
      <soap11:operation style="document"/>
      <wsdl:input name="transferPolicyPeriods">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="transferPolicyPeriodsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAccountExist">
      <soap11:operation style="document"/>
      <wsdl:input name="isAccountExist">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isAccountExistResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllPaymentAllocationPlans">
      <soap11:operation style="document"/>
      <wsdl:input name="findAllPaymentAllocationPlans">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllPaymentAllocationPlansResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAccount">
      <soap11:operation style="document"/>
      <wsdl:input name="createAccount">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAccountResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DBDuplicateKeyException">
        <soap11:fault name="DBDuplicateKeyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAccount">
      <soap11:operation style="document"/>
      <wsdl:input name="updateAccount">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAccountResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableBillingMethods">
      <soap11:operation style="document"/>
      <wsdl:input name="getAvailableBillingMethods">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableBillingMethodsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issuePolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="issuePolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issuePolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentPlanInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewInstallmentPlanInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewInstallmentPlanInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewPolicyChangeInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewPolicyChangeInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewPolicyChangeInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewInstallmentsPlanInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewInstallmentsPlanInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewInstallmentsPlanInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewIssuanceInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewIssuanceInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewIssuanceInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewRenewalInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewRenewalInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewRenewalInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewRewriteInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewRewriteInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewRewriteInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewReinstatementInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewReinstatementInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewReinstatementInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewPremiumReportInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewPremiumReportInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewPremiumReportInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewFinalAuditInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewFinalAuditInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewFinalAuditInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewCancellationInvoices">
      <soap11:operation style="document"/>
      <wsdl:input name="previewCancellationInvoices">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewCancellationInvoicesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateChargeWrittenDate">
      <soap11:operation style="document"/>
      <wsdl:input name="updateChargeWrittenDate">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateChargeWrittenDateResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicyPeriodTermConfirmed">
      <soap11:operation style="document"/>
      <wsdl:input name="updatePolicyPeriodTermConfirmed">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePolicyPeriodTermConfirmedResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelPolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="cancelPolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelPolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="changePolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reinstatePolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="reinstatePolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reinstatePolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issueFinalAudit">
      <soap11:operation style="document"/>
      <wsdl:input name="issueFinalAudit">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issueFinalAuditResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="issuePremiumReport">
      <soap11:operation style="document"/>
      <wsdl:input name="issuePremiumReport">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="issuePremiumReportResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renewPolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="renewPolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="renewPolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rewritePolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="rewritePolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="rewritePolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicyPeriodGeneralCharges">
      <soap11:operation style="document"/>
      <wsdl:input name="addPolicyPeriodGeneralCharges">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPolicyPeriodGeneralChargesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAccountGeneralCharges">
      <soap11:operation style="document"/>
      <wsdl:input name="addAccountGeneralCharges">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addAccountGeneralChargesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <soap11:fault name="SOAPException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollateralCharges">
      <soap11:operation style="document"/>
      <wsdl:input name="addCollateralCharges">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addCollateralChargesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSegregatedCollateralCharges">
      <soap11:operation style="document"/>
      <wsdl:input name="addSegregatedCollateralCharges">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addSegregatedCollateralChargesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAgencyBillPlans">
      <soap11:operation style="document"/>
      <wsdl:input name="getAllAgencyBillPlans">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAgencyBillPlansResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCommissionPlans">
      <soap11:operation style="document"/>
      <wsdl:input name="getAllCommissionPlans">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCommissionPlansResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewApplicableCommissionSubPlan">
      <soap11:operation style="document"/>
      <wsdl:input name="previewApplicableCommissionSubPlan">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewApplicableCommissionSubPlanResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewCommissionRates">
      <soap11:operation style="document"/>
      <wsdl:input name="previewCommissionRates">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="previewCommissionRatesResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProducer">
      <soap11:operation style="document"/>
      <wsdl:input name="createProducer">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProducerResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap11:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProducer">
      <soap11:operation style="document"/>
      <wsdl:input name="updateProducer">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProducerResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isProducerExist">
      <soap11:operation style="document"/>
      <wsdl:input name="isProducerExist">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isProducerExistResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerInfo">
      <soap11:operation style="document"/>
      <wsdl:input name="getProducerInfo">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProducerInfoResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProducerCode">
      <soap11:operation style="document"/>
      <wsdl:input name="createProducerCode">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProducerCodeResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProducerCode">
      <soap11:operation style="document"/>
      <wsdl:input name="updateProducerCode">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProducerCodeResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isProducerCodeExist">
      <soap11:operation style="document"/>
      <wsdl:input name="isProducerCodeExist">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="isProducerCodeExistResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerCodeInfo">
      <soap11:operation style="document"/>
      <wsdl:input name="getProducerCodeInfo">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProducerCodeInfoResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <soap11:operation style="document"/>
      <wsdl:input name="updateContact">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateContactResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaymentPlans">
      <soap11:operation style="document"/>
      <wsdl:input name="getAllPaymentPlans">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllPaymentPlansResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaymentPlansForAccount">
      <soap11:operation style="document"/>
      <wsdl:input name="getPaymentPlansForAccount">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPaymentPlansForAccountResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePaymentPlan">
      <soap11:operation style="document"/>
      <wsdl:input name="changePaymentPlan">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePaymentPlanResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waiveFinalAudit">
      <soap11:operation style="document"/>
      <wsdl:input name="waiveFinalAudit">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="waiveFinalAuditResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleFinalAudit">
      <soap11:operation style="document"/>
      <wsdl:input name="scheduleFinalAudit">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="scheduleFinalAuditResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExecutedException">
        <soap11:fault name="AlreadyExecutedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <soap11:fault name="EntityStateException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyPeriod">
      <soap11:operation style="document"/>
      <wsdl:input name="getPolicyPeriod">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPolicyPeriodResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnapplieds">
      <soap11:operation style="document"/>
      <wsdl:input name="getUnapplieds">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnappliedsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnappliedFunds">
      <soap11:operation style="document"/>
      <wsdl:input name="getUnappliedFunds">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnappliedFundsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountPaymentInstruments">
      <soap11:operation style="document"/>
      <wsdl:input name="getAccountPaymentInstruments">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccountPaymentInstrumentsResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPaymentInstrumentOnAccount">
      <soap11:operation style="document"/>
      <wsdl:input name="createPaymentInstrumentOnAccount">
        <soap11:body use="literal"/>
        <soap11:header message="tns:gw-authentication" part="gw-authentication" use="literal"/>
        <soap11:header message="tns:gw-locale" part="gw-locale" use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPaymentInstrumentOnAccountResponse">
        <soap11:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SOAPServerException">
        <soap11:fault name="SOAPServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <soap11:fault name="BadIdentifierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <soap11:fault name="RequiredFieldException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap11:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <soap11:fault name="DataConversionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="WsiAuthenticationException">
        <soap11:fault name="WsiAuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BillingAPI">
    <wsdl:port binding="tns:BillingAPISoap12Binding" name="BillingAPISoap12Port">
      <soap12:address location="http://localhost:8580/bc/ws/gw/webservice/policycenter/bc900/BillingAPI"/>
      <gwwsdl:address location="${bc}/ws/gw/webservice/policycenter/bc900/BillingAPI"/>
    </wsdl:port>
    <wsdl:port binding="tns:BillingAPISoap11Binding" name="BillingAPISoap11Port">
      <soap11:address location="http://localhost:8580/bc/ws/gw/webservice/policycenter/bc900/BillingAPI/soap11"/>
      <gwwsdl:address location="${bc}/ws/gw/webservice/policycenter/bc900/BillingAPI/soap11"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:message name="searchForAccounts">
    <wsdl:part element="tns:searchForAccounts" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="searchForAccountsResponse">
    <wsdl:part element="tns:searchForAccountsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="BadIdentifierException">
    <wsdl:part element="tns:BadIdentifierException" name="BadIdentifierException"/>
  </wsdl:message>
  <wsdl:message name="SOAPServerException">
    <wsdl:part element="tns:SOAPServerException" name="SOAPServerException"/>
  </wsdl:message>
  <wsdl:message name="WsiAuthenticationException">
    <wsdl:part element="tns:WsiAuthenticationException" name="WsiAuthenticationException"/>
  </wsdl:message>
  <wsdl:message name="getAccountInvoiceStreams">
    <wsdl:part element="tns:getAccountInvoiceStreams" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAccountInvoiceStreamsResponse">
    <wsdl:part element="tns:getAccountInvoiceStreamsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="RequiredFieldException">
    <wsdl:part element="tns:RequiredFieldException" name="RequiredFieldException"/>
  </wsdl:message>
  <wsdl:message name="getAllSubAccounts">
    <wsdl:part element="tns:getAllSubAccounts" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllSubAccountsResponse">
    <wsdl:part element="tns:getAllSubAccountsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllSubAccountsForCurrency">
    <wsdl:part element="tns:getAllSubAccountsForCurrency" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllSubAccountsForCurrencyResponse">
    <wsdl:part element="tns:getAllSubAccountsForCurrencyResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="transferPolicyPeriods">
    <wsdl:part element="tns:transferPolicyPeriods" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="transferPolicyPeriodsResponse">
    <wsdl:part element="tns:transferPolicyPeriodsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="AlreadyExecutedException">
    <wsdl:part element="tns:AlreadyExecutedException" name="AlreadyExecutedException"/>
  </wsdl:message>
  <wsdl:message name="EntityStateException">
    <wsdl:part element="tns:EntityStateException" name="EntityStateException"/>
  </wsdl:message>
  <wsdl:message name="isAccountExist">
    <wsdl:part element="tns:isAccountExist" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isAccountExistResponse">
    <wsdl:part element="tns:isAccountExistResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="findAllPaymentAllocationPlans">
    <wsdl:part element="tns:findAllPaymentAllocationPlans" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="findAllPaymentAllocationPlansResponse">
    <wsdl:part element="tns:findAllPaymentAllocationPlansResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAccount">
    <wsdl:part element="tns:createAccount" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAccountResponse">
    <wsdl:part element="tns:createAccountResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="DBDuplicateKeyException">
    <wsdl:part element="tns:DBDuplicateKeyException" name="DBDuplicateKeyException"/>
  </wsdl:message>
  <wsdl:message name="updateAccount">
    <wsdl:part element="tns:updateAccount" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateAccountResponse">
    <wsdl:part element="tns:updateAccountResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableBillingMethods">
    <wsdl:part element="tns:getAvailableBillingMethods" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableBillingMethodsResponse">
    <wsdl:part element="tns:getAvailableBillingMethodsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issuePolicyPeriod">
    <wsdl:part element="tns:issuePolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issuePolicyPeriodResponse">
    <wsdl:part element="tns:issuePolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewInstallmentPlanInvoices">
    <wsdl:part element="tns:previewInstallmentPlanInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewInstallmentPlanInvoicesResponse">
    <wsdl:part element="tns:previewInstallmentPlanInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewPolicyChangeInvoices">
    <wsdl:part element="tns:previewPolicyChangeInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewPolicyChangeInvoicesResponse">
    <wsdl:part element="tns:previewPolicyChangeInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewInstallmentsPlanInvoices">
    <wsdl:part element="tns:previewInstallmentsPlanInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewInstallmentsPlanInvoicesResponse">
    <wsdl:part element="tns:previewInstallmentsPlanInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewIssuanceInvoices">
    <wsdl:part element="tns:previewIssuanceInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewIssuanceInvoicesResponse">
    <wsdl:part element="tns:previewIssuanceInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewRenewalInvoices">
    <wsdl:part element="tns:previewRenewalInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewRenewalInvoicesResponse">
    <wsdl:part element="tns:previewRenewalInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewRewriteInvoices">
    <wsdl:part element="tns:previewRewriteInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewRewriteInvoicesResponse">
    <wsdl:part element="tns:previewRewriteInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewReinstatementInvoices">
    <wsdl:part element="tns:previewReinstatementInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewReinstatementInvoicesResponse">
    <wsdl:part element="tns:previewReinstatementInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewPremiumReportInvoices">
    <wsdl:part element="tns:previewPremiumReportInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewPremiumReportInvoicesResponse">
    <wsdl:part element="tns:previewPremiumReportInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewFinalAuditInvoices">
    <wsdl:part element="tns:previewFinalAuditInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewFinalAuditInvoicesResponse">
    <wsdl:part element="tns:previewFinalAuditInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewCancellationInvoices">
    <wsdl:part element="tns:previewCancellationInvoices" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewCancellationInvoicesResponse">
    <wsdl:part element="tns:previewCancellationInvoicesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateChargeWrittenDate">
    <wsdl:part element="tns:updateChargeWrittenDate" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateChargeWrittenDateResponse">
    <wsdl:part element="tns:updateChargeWrittenDateResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updatePolicyPeriodTermConfirmed">
    <wsdl:part element="tns:updatePolicyPeriodTermConfirmed" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updatePolicyPeriodTermConfirmedResponse">
    <wsdl:part element="tns:updatePolicyPeriodTermConfirmedResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelPolicyPeriod">
    <wsdl:part element="tns:cancelPolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelPolicyPeriodResponse">
    <wsdl:part element="tns:cancelPolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="changePolicyPeriod">
    <wsdl:part element="tns:changePolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="changePolicyPeriodResponse">
    <wsdl:part element="tns:changePolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="reinstatePolicyPeriod">
    <wsdl:part element="tns:reinstatePolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="reinstatePolicyPeriodResponse">
    <wsdl:part element="tns:reinstatePolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issueFinalAudit">
    <wsdl:part element="tns:issueFinalAudit" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issueFinalAuditResponse">
    <wsdl:part element="tns:issueFinalAuditResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issuePremiumReport">
    <wsdl:part element="tns:issuePremiumReport" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="issuePremiumReportResponse">
    <wsdl:part element="tns:issuePremiumReportResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="renewPolicyPeriod">
    <wsdl:part element="tns:renewPolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="renewPolicyPeriodResponse">
    <wsdl:part element="tns:renewPolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="rewritePolicyPeriod">
    <wsdl:part element="tns:rewritePolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="rewritePolicyPeriodResponse">
    <wsdl:part element="tns:rewritePolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addPolicyPeriodGeneralCharges">
    <wsdl:part element="tns:addPolicyPeriodGeneralCharges" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addPolicyPeriodGeneralChargesResponse">
    <wsdl:part element="tns:addPolicyPeriodGeneralChargesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SOAPException">
    <wsdl:part element="tns:SOAPException" name="SOAPException"/>
  </wsdl:message>
  <wsdl:message name="addAccountGeneralCharges">
    <wsdl:part element="tns:addAccountGeneralCharges" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addAccountGeneralChargesResponse">
    <wsdl:part element="tns:addAccountGeneralChargesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addCollateralCharges">
    <wsdl:part element="tns:addCollateralCharges" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addCollateralChargesResponse">
    <wsdl:part element="tns:addCollateralChargesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addSegregatedCollateralCharges">
    <wsdl:part element="tns:addSegregatedCollateralCharges" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addSegregatedCollateralChargesResponse">
    <wsdl:part element="tns:addSegregatedCollateralChargesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllAgencyBillPlans">
    <wsdl:part element="tns:getAllAgencyBillPlans" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllAgencyBillPlansResponse">
    <wsdl:part element="tns:getAllAgencyBillPlansResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllCommissionPlans">
    <wsdl:part element="tns:getAllCommissionPlans" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllCommissionPlansResponse">
    <wsdl:part element="tns:getAllCommissionPlansResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewApplicableCommissionSubPlan">
    <wsdl:part element="tns:previewApplicableCommissionSubPlan" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewApplicableCommissionSubPlanResponse">
    <wsdl:part element="tns:previewApplicableCommissionSubPlanResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewCommissionRates">
    <wsdl:part element="tns:previewCommissionRates" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="previewCommissionRatesResponse">
    <wsdl:part element="tns:previewCommissionRatesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createProducer">
    <wsdl:part element="tns:createProducer" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createProducerResponse">
    <wsdl:part element="tns:createProducerResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="DataConversionException">
    <wsdl:part element="tns:DataConversionException" name="DataConversionException"/>
  </wsdl:message>
  <wsdl:message name="updateProducer">
    <wsdl:part element="tns:updateProducer" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateProducerResponse">
    <wsdl:part element="tns:updateProducerResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isProducerExist">
    <wsdl:part element="tns:isProducerExist" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isProducerExistResponse">
    <wsdl:part element="tns:isProducerExistResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProducerInfo">
    <wsdl:part element="tns:getProducerInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProducerInfoResponse">
    <wsdl:part element="tns:getProducerInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createProducerCode">
    <wsdl:part element="tns:createProducerCode" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createProducerCodeResponse">
    <wsdl:part element="tns:createProducerCodeResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateProducerCode">
    <wsdl:part element="tns:updateProducerCode" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateProducerCodeResponse">
    <wsdl:part element="tns:updateProducerCodeResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isProducerCodeExist">
    <wsdl:part element="tns:isProducerCodeExist" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="isProducerCodeExistResponse">
    <wsdl:part element="tns:isProducerCodeExistResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProducerCodeInfo">
    <wsdl:part element="tns:getProducerCodeInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProducerCodeInfoResponse">
    <wsdl:part element="tns:getProducerCodeInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateContact">
    <wsdl:part element="tns:updateContact" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="updateContactResponse">
    <wsdl:part element="tns:updateContactResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllPaymentPlans">
    <wsdl:part element="tns:getAllPaymentPlans" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllPaymentPlansResponse">
    <wsdl:part element="tns:getAllPaymentPlansResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPaymentPlansForAccount">
    <wsdl:part element="tns:getPaymentPlansForAccount" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPaymentPlansForAccountResponse">
    <wsdl:part element="tns:getPaymentPlansForAccountResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="changePaymentPlan">
    <wsdl:part element="tns:changePaymentPlan" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="changePaymentPlanResponse">
    <wsdl:part element="tns:changePaymentPlanResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waiveFinalAudit">
    <wsdl:part element="tns:waiveFinalAudit" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waiveFinalAuditResponse">
    <wsdl:part element="tns:waiveFinalAuditResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="scheduleFinalAudit">
    <wsdl:part element="tns:scheduleFinalAudit" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="scheduleFinalAuditResponse">
    <wsdl:part element="tns:scheduleFinalAuditResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPolicyPeriod">
    <wsdl:part element="tns:getPolicyPeriod" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPolicyPeriodResponse">
    <wsdl:part element="tns:getPolicyPeriodResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getUnapplieds">
    <wsdl:part element="tns:getUnapplieds" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getUnappliedsResponse">
    <wsdl:part element="tns:getUnappliedsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getUnappliedFunds">
    <wsdl:part element="tns:getUnappliedFunds" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getUnappliedFundsResponse">
    <wsdl:part element="tns:getUnappliedFundsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAccountPaymentInstruments">
    <wsdl:part element="tns:getAccountPaymentInstruments" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAccountPaymentInstrumentsResponse">
    <wsdl:part element="tns:getAccountPaymentInstrumentsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createPaymentInstrumentOnAccount">
    <wsdl:part element="tns:createPaymentInstrumentOnAccount" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createPaymentInstrumentOnAccountResponse">
    <wsdl:part element="tns:createPaymentInstrumentOnAccountResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="gw-authentication">
    <wsdl:part element="gwsoap:authentication" name="gw-authentication"/>
  </wsdl:message>
  <wsdl:message name="gw-locale">
    <wsdl:part element="gwsoap:locale" name="gw-locale"/>
  </wsdl:message>
</wsdl:definitions>
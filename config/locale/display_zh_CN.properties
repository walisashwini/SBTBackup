APDCoverable.DefaultChildrenLabel = 风险对象
APDCoverable.DefaultExposureLabel = 赔付明细
APDProduct.CodeIdentifier.AlreadyInUse = 代码标识符{0}已被使用。请另选一个。
APDRiskCoverable.Identifiers.None = <新>
Account.History.AccountCreated = 账户已创建
Account.History.AccountHolderChanged = 账户所有者已更改
Account.History.AccountMerged = {1}的附属{0}号账户已合并到此账户中
Account.History.Status.PendingToActive = 待定账户变为活动
Account.MergeAccounts.InsufficientPermissionsOnPolicies = 无法合并账户：对此账户内保单的权限不足。
Account.MovePolicies.Error.Move.NotSuitableAccountType = 无法移动保单{0}：此账户被{1}锁定，不适用于{2}保单。
Account.MovePolicies.Error.Rewrite.NotSuitableAccountType = 无法重新填写保单{0}：此账户被{1}锁定，不适用于{2}保单。
Account.MovePolicies.History.Job = 保单交易{0}从账户{1}移到账户{2}
Account.MovePolicies.History.Policy = 保单{0}从账户{1}移到账户{2}
Account.PrimaryLocation.Error.NoMainContact = 无法创建主要地点。未创建主要联系人！
Account.PrimaryLocation.Error.NoPrimaryAddress = 无法创建主要地点。主要联系人没有主要地址！
Account.RelatedAccount.Error.Duplicate = 在账户{1}与{2}之间找到重复的“{0}”个关系。
Account.RelatedAccount.Error.NoRelationship = 账户{2}与{3}之间的“{1}”关系中不涉及账户{0}。
Account.RelatedAccount.Error.RelationshipWithSelf = 账户{0}与自身相关。
Account.Withdrawn.Date = 撤消日期
AccountAPI.AddContact.Error.CannotAddAccountHolder = 无法对账户添加其他账户持有人。
AccountAPI.Contact.Error.MultipleMatches = 找到多位名为{0}的联系人。
AccountAPI.Contact.Error.NotFound = 找不到联系人{0}。
AccountAPI.Error.AccountContactRole.CannotDeleteAccountHolderRole = 不允许删除账户所有者角色。
AccountAPI.Error.AccountContactRole.CannotRemoveInUseRole = 无法移除角色{0}，因其正在使用。
AccountAPI.Error.AccountContactRole.FoundMultiple = 为账户{0}、联系人{1}和类型{2}找到多个账户联系人角色。
AccountAPI.Error.AccountContactRole.NotFound = 账户{0}、联系人{1}和类型{2}的账户联系人角色未找到。
AccountAPI.Error.AccountContactRoleInfo.Type.Required = 必须设置账户联系人角色信息类型。
AccountAPI.Error.Adding.AccountHolder.Not.Allowed = 不允许添加账户所有者到现有账户。
AccountAPI.Error.InvalidPolicyPublicID = 无法将“{0}”从字符串转换为保单：未找到此类公共ID
AccountAPI.Error.Unknown.AccountContactRole.Type = 未知的账户联系人角色类型： {0}.
AccountAPI.TransferPolicies.Error.SameAccount = 无法从账户传输到自身
AccountContact.Error.ImportIntoExisting = 已尝试导入与此账户中现有联系人冲突的外部联系人
Activity.Action.Assignment = 分配
Activity.Action.Completion = 完成
Activity.Action.Failed = 针对活动{1}的{0}失败。{2}
Activity.Action.ServiceUnavailable = 服务不可用 - 针对活动{0}的操作失败
Activity.Action.Skip = 跳过
Activity.Search.NullAccount = 活动具有空账户
Admin.AdminActivityPattern.CreateDocument = 单证模板
Admin.DataFlowMasks.Filters.All = 所有
Admin.DataFlowMasks.entity.CPBuilding = 企业财产险建筑物
Admin.DataFlowMasks.entity.CPLocation = 企业财产险地点
Admin.FlowMasks = 电子表格导出格式
Admin.SetValueTypeBase.Validate = 值{0}未正确格式化为一组{1}元素。该组必须是逗号分隔的{1}元素列表，可以使用前缀“not”。
Admin.UWAuthorityGrantEnhancement.IssueTypeAsString.CodeAlreadyInUse = 类型为“{0}”的授予已在此配置文件中。
Admin.UWAuthorityGrantEnhancement.IssueTypeAsString.MultipleMatches = 多个问题类型包含字符串“{0}”。请使用搜索屏幕选择适当的一项。
Admin.UWAuthorityGrantEnhancement.IssueTypeAsString.NoMatches = 未找到与字符串“{0}”匹配的问题类型。
AdminData.ActivityPattern.Description.Activate_Fac = 临分再保险协议无法激活，因为发生了校验错误。
AdminData.ActivityPattern.Description.Async_Quote_Completed = 已完成费率/报价请求
AdminData.ActivityPattern.Description.Bind_Failed = 外部系统承保投保单失败
AdminData.ActivityPattern.Description.Complete_Rewrite_New_Account = 需要完成新账户工单的重新填写操作。
AdminData.ActivityPattern.Description.Issue_Failed = 外部系统指出其无法签发保单
AdminData.ActivityPattern.Description.Issue_Policy = 投保单已承保，但尚未签发。
AdminData.ActivityPattern.Description.Legal_Review = 转交给法律顾问
AdminData.ActivityPattern.Description.Maybe_Cancel_Split_Policy = 已分割到两个新投保单的保单应当取消。
AdminData.ActivityPattern.Description.New_Audit_Assigmnent = 新审计已分配给您
AdminData.ActivityPattern.Description.Notification = 保单的工作流步骤已完成。
AdminData.ActivityPattern.Description.Personal_Data_Destruction_Error = 无法执行个人数据销毁请求
AdminData.ActivityPattern.Description.Policy_Hold_Released = 阻止此工单进度的保单搁置已修改，搁置不再阻止工单。您可以继续处理工单。
AdminData.ActivityPattern.Description.Preemption = 另一个交易优先于同一保单正在进行的交易。优先交易引起的任何冲突必须通过更改优先交易来解决，以与此优先交易中进行的更改合并。
AdminData.ActivityPattern.Description.Quote_Failed = 报价续保失败
AdminData.ActivityPattern.Description.Ratio_Out_Of_Range = 报告的保费费率已超出范围
AdminData.ActivityPattern.Description.Restore_From_Archive_Complete = 请求的保单期限已从存档检索。
AdminData.ActivityPattern.Description.Restore_From_Archive_Failed = 从存档检索保单期限的尝试已失败。
AdminData.ActivityPattern.Description.Review_Payment = 此作业已进行了付款，但是承保已因核保项而被阻止。请检查该付款以确定其是否需要冲销，并视需要对该付款进行冲销。
AdminData.ActivityPattern.Description.Send_Docs_Failed = 外部系统指示其未发送必需的文档。
AdminData.ActivityPattern.Description.Send_To_Sor_Failed = 外部系统无法处理保单
AdminData.ActivityPattern.Description.Uw_Review_Contingency = 已添加新事故
AdminData.ActivityPattern.Subject.30_Day_Diary = 30天日记
AdminData.ActivityPattern.Subject.60_Day_Diary = 60天日记
AdminData.ActivityPattern.Subject.90_Day_Diary = 90天日记
AdminData.ActivityPattern.Subject.Activate_Fac = 审查临分再保险协议的校验错误
AdminData.ActivityPattern.Subject.Approve_Cancellation = 审查和批准取消
AdminData.ActivityPattern.Subject.Approve_General = 审查和批准
AdminData.ActivityPattern.Subject.Approve_Policy_Change = 审查并批准保单更改
AdminData.ActivityPattern.Subject.Approve_Reinstatement = 审查并批准复效
AdminData.ActivityPattern.Subject.Approve_Submission = 审查和批准投保单
AdminData.ActivityPattern.Subject.Async_Quote_Completed = 已完成费率/报价请求
AdminData.ActivityPattern.Subject.Audit_Fee_Service = 开始审计 - 外部服务
AdminData.ActivityPattern.Subject.Audit_Internal_Request = 开始审计 - 内部人员
AdminData.ActivityPattern.Subject.Bind_Failed = 承保保单失败
AdminData.ActivityPattern.Subject.Bureaudata = 获得机构数据
AdminData.ActivityPattern.Subject.Complete_Rewrite_New_Account = 重新填写新账户
AdminData.ActivityPattern.Subject.Contact_Insured = 与被保险人会面
AdminData.ActivityPattern.Subject.Contact_Producer = 与经理人/代理会面
AdminData.ActivityPattern.Subject.Coverage = 核对承保范围
AdminData.ActivityPattern.Subject.Create_Producer = 新建经理人
AdminData.ActivityPattern.Subject.Credit_Reports = 获得信用报告
AdminData.ActivityPattern.Subject.Employee_Review = 绩效考核
AdminData.ActivityPattern.Subject.General_Reminder = 友情提醒（日记）
AdminData.ActivityPattern.Subject.Inspection_Fee_Service = 开始检查 - 外部服务
AdminData.ActivityPattern.Subject.Inspection_Loss_Control = 开始检查 - 损失控制
AdminData.ActivityPattern.Subject.Issue_Failed = 签发保单失败
AdminData.ActivityPattern.Subject.Issue_Policy = 签发保单
AdminData.ActivityPattern.Subject.Legal_Review = 法律审查
AdminData.ActivityPattern.Subject.Manual_Quote = 手动设定保单的费率和报价
AdminData.ActivityPattern.Subject.Maybe_Cancel_Split_Policy = 取消分割的保单
AdminData.ActivityPattern.Subject.Midterm_Review = 中期保单复核
AdminData.ActivityPattern.Subject.Mvr = 获得机动车报告
AdminData.ActivityPattern.Subject.New_Audit_Assigmnent = 新审计分配
AdminData.ActivityPattern.Subject.New_Mail = 审查新邮件
AdminData.ActivityPattern.Subject.Notification = 保单通知
AdminData.ActivityPattern.Subject.Open_Eval_Issue = 审查未完成的核保项
AdminData.ActivityPattern.Subject.Personal_Data_Destruction_Error = 个人数据销毁错误
AdminData.ActivityPattern.Subject.Policy_Hold_Released = 保单搁置已解除
AdminData.ActivityPattern.Subject.Preemption = 解决优先保单交易的冲突
AdminData.ActivityPattern.Subject.Premium_Report_Overdue = 保费报告逾期
AdminData.ActivityPattern.Subject.Quote_Due = 必须提供报价
AdminData.ActivityPattern.Subject.Quote_Failed = 报价失败
AdminData.ActivityPattern.Subject.Ratio_Out_Of_Range = 超过范围的比率
AdminData.ActivityPattern.Subject.Reinsurance = 获得再保险报价
AdminData.ActivityPattern.Subject.Renewal_Review = 保单复核续保
AdminData.ActivityPattern.Subject.Renewal_Started = 对含有未决的取消的保单开始续保
AdminData.ActivityPattern.Subject.Restore_From_Archive_Complete = 从存档检索的请求已完成
AdminData.ActivityPattern.Subject.Restore_From_Archive_Failed = 从存档检索的请求已失败
AdminData.ActivityPattern.Subject.Review_Payment = 审查付款
AdminData.ActivityPattern.Subject.Review_Producer = 审查经理人
AdminData.ActivityPattern.Subject.Review_Renewal = 审查和批准续保
AdminData.ActivityPattern.Subject.Risk_Info_Producer = 获得风险信息 - 经理人
AdminData.ActivityPattern.Subject.Send_Docs_Failed = 发送文档失败
AdminData.ActivityPattern.Subject.Send_To_Sor_Failed = 发送到记录系统失败
AdminData.ActivityPattern.Subject.Uw_Period_30 = 审查30天核保期间
AdminData.ActivityPattern.Subject.Uw_Period_45 = 审查45天核保期间
AdminData.ActivityPattern.Subject.Uw_Period_60 = 审查60天核保期间
AdminData.ActivityPattern.Subject.Uw_Review_Approved = 核保人已审查此作业
AdminData.ActivityPattern.Subject.Uw_Review_Changes_Required = 核保人已审查此作业，需要对保单进行更改
AdminData.ActivityPattern.Subject.Uw_Review_Contingency = 新事故
AdminData.ActivityPattern.Subject.Uw_Review_Declined = 核保人已审查此作业并拒绝保单
AdminData.NonRenewalExplanationPattern.Body.HighLoss = <%\= PolicyPeriod.PolicyNumber %>损失太大
AdminData.NonRenewalExplanationPattern.Body.InsuredRequest = 主被保险人<%\= Policy.Account.AccountHolderContact.DisplayName %%>已请求非续保。
AdminData.NonRenewalExplanationPattern.Body.NotOffered = 不再提供此保单类型<%\= Policy.Product.Name %>。
AdminData.NonRenewalExplanationPattern.Code.HighLoss = 高损失
AdminData.NonRenewalExplanationPattern.Code.InsuredRequest = 被保险人请求
AdminData.NonRenewalExplanationPattern.Code.NotOffered = 不提供
AdminData.Role.Description.All_Permissions = 具有完全权限的角色，但现在已不建议使用。请创建具有特定用户所需权限的角色，包括要执行Web服务调用的用户或非超级用户管理使用。
AdminData.Role.Description.Audit_Examiner = 审计检查员的权限
AdminData.Role.Description.Audit_Supervisor = 审计主管的权限
AdminData.Role.Description.Claims_Adjuster = 赔案理赔人的基本权限
AdminData.Role.Description.Community_Admin = 社区管理员的权限
AdminData.Role.Description.Data_Protection_Officer = 数据保护人员的权限
AdminData.Role.Description.Forms_Admin = 用户权限允许修改向保单添加表格的方式
AdminData.Role.Description.Integration_Admin = 集成管理员的权限
AdminData.Role.Description.Loss_Control = 损失控制用户的权限
AdminData.Role.Description.Premium_Auditor = 保费审计员的权限
AdminData.Role.Description.Processor = 处理人的权限
AdminData.Role.Description.Producer = 经理人的权限
AdminData.Role.Description.Producer_Clerical = 业务办事员用户的基本权限
AdminData.Role.Description.Producercode_Basics = 经理人代码权限 - 基本
AdminData.Role.Description.Producercode_Cancellations = 经理人代码权限 - 取消
AdminData.Role.Description.Producercode_Policychanges = 经理人代码保单更改的权限
AdminData.Role.Description.Producercode_Renewals = 经理人代码权限 - 续保
AdminData.Role.Description.Producercode_Submission = 经理人代码权限 - 投保单
AdminData.Role.Description.Rating_Analyst = 保费计算分析员的权限
AdminData.Role.Description.Rating_Supervisor = 保费计算主管的权限
AdminData.Role.Description.Reinsurance_Admin = 再保险管理员的权限
AdminData.Role.Description.Reinsurance_Manager = 再保险负责人的权限
AdminData.Role.Description.Reporting_Admin = 报告管理员的权限
AdminData.Role.Description.Rule_Admin = 规则管理员的权限
AdminData.Role.Description.Toolview = 查看工具页面的权限
AdminData.Role.Description.Underwriter = 核保人的权限
AdminData.Role.Description.Underwriter_Asst = 核保人助理的权限
AdminData.Role.Description.Underwriter_Supervisor = 主管的基本权限
AdminData.Role.Description.User_Admin = 用户管理员的权限
AdminData.Role.Name.All_Permissions = 所有权限（已不建议使用）
AdminData.Role.Name.Audit_Examiner = 审计检查员
AdminData.Role.Name.Audit_Supervisor = 审计主管
AdminData.Role.Name.Claims_Adjuster = 赔案理赔人
AdminData.Role.Name.Community_Admin = 社区管理员
AdminData.Role.Name.Data_Protection_Officer = 数据保护人员
AdminData.Role.Name.Forms_Admin = 表格管理员
AdminData.Role.Name.Integration_Admin = 集成管理员
AdminData.Role.Name.Loss_Control = 损失控制
AdminData.Role.Name.Premium_Auditor = 保费审计员
AdminData.Role.Name.Processor = 处理人
AdminData.Role.Name.Producer = 经理人
AdminData.Role.Name.Producer_Clerical = 业务办事员
AdminData.Role.Name.Producercode_Basics = 经理人代码 - 基本
AdminData.Role.Name.Producercode_Cancellations = 经理人代码 - 取消
AdminData.Role.Name.Producercode_Policychanges = 经理人代码 - 保单更改
AdminData.Role.Name.Producercode_Renewals = 经理人代码 - 续保
AdminData.Role.Name.Producercode_Submission = 经理人代码 - 投保单
AdminData.Role.Name.Rating_Analyst = 保费计算分析员
AdminData.Role.Name.Rating_Supervisor = 保费计算主管
AdminData.Role.Name.Reinsurance_Admin = 再保险管理员
AdminData.Role.Name.Reinsurance_Manager = 再保险负责人
AdminData.Role.Name.Reporting_Admin = 报告管理员
AdminData.Role.Name.Rule_Admin = 规则管理员
AdminData.Role.Name.Toolview = 工具查看
AdminData.Role.Name.Underwriter = 核保人
AdminData.Role.Name.Underwriter_Asst = 核保人助理
AdminData.Role.Name.Underwriter_Supervisor = 核保主管
AdminData.Role.Name.User_Admin = 用户管理员
Approval.AdapterFailure = {Global.AppName}无法确定是否需要审批，因此将需要审批以防万一。
Approval.AdapterNull = 审批适配器返回的结果为空，默认需要审批。
Approval.CancelOthersBatch = 只有提交待审批项的用户才能将其取消。
Approval.NoApprovingUser = 无法提交此项目，因为已超出您的权限且找不到可执行批准操作的用户。
Approval.NoAuthority = 无法提交此项目，因为您无权提交这种类型的项目。
Approval.ResubmitNoAuthority = 无法重新提交此项目，因为您无权提交这种类型的项目。
ArchiveAPI.Error.InvalidPolicyNumber = 保单号{0}无效
ArchiveAPI.Error.InvalidPolicyNumberAndEffectiveDate = 保单号{0}及生效日期{1}无效
ArchiveAPI.RequestRestore.Reason = 外部API检索请求
Assignment.Formatted.Group = \ 到组“{0}”（ID：{1}）
Assignment.Formatted.NullGroup = null
Assignment.Formatted.Queue = \ 队列“{0}”（id：{1}）
Assignment.Formatted.User = \ 用户“{0}”（id：{1}）
Assignment.NoPermissionToReassignMultiple = 您无权进行批量分配。
Assignment.UnknownType = 未知
AsyncQuoting.Job.Status.Error = policyperiod处于{0}状态，保单期间应当处于草案状态才能进行异步报价
AsyncRating.Job.Status.Error = policyperiod处于{0}状态，保单期间应当处于草案状态才能进行异步保费计算
Audit.Activity.JobPreempted.Desc = 分配到您的审计{0}已被取消占先，需要您注意处理优先权。
Audit.Activity.JobPreempted.Subject = 审计占先，需要处理
Audit.DisplayStatus.InProgress = 进行中
Audit.DisplayStatus.Revised = 已修订
Audit.DisplayStatus.Scheduled = 已计列
Audit.DisplayStatus.Waived = 已免除
Audit.NewAuditAssigned = 已分配新审计
Audit.PremiumReportOverdue = 保费报告逾期
Audit.RatioOutOfRange = 报告的保费比率超出范围。
AutoFill.Override = 使用该值自动填充并覆盖其它地址字段
AutoFill.OverrideUsingCityProvince = 使用市和省份自动填充并覆盖其它地址字段
AutoFill.OverrideUsingCityState = 使用省和市自动填充并覆盖其它地址字段
AutoFill.OverrideUsingPostalCode = 使用邮政编码自动填充并覆盖其它地址字段
AutoFill.OverrideUsingZipCode = 使用邮政编码自动填充并覆盖其它地址字段
BeanTransfer.ABLinkableConvertableImportHandler.Error.UnknownEntityType = 发现{0}类型的未知AddressBookLinkable/AddressBookConvertable实体。
BeanTransfer.BeanImportHandler.Error.BeanNotUnique = 导入时需要唯一的Bean，但找到了多个{0}类型的Bean
BeanTransfer.BeanImportHandler.Error.MultipleRoots = 此处理程序不支持转账XML中的多个根
BeanTransfer.BeanImportHandler.MultipleBundlesNotSupported = 账户转账不支持多个捆绑项
BeanTransfer.SoftEntityReferenceHandler.UnhandledReferences = 导出的类型为{0}、PublicID为{1}的实体包含未处理的softentityreference：{2}
BeanTransfer.SoftReference.IdentifierNotFound = 找不到用于实体类型{0}的标识符候选项
BeanTransfer.SoftReference.MissingMappingForReference = 类型为{1}、PublicID为{2}的Bean上没有对{0}属性的软引用映射
BeanTransfer.SoftReference.NullSoftEntityReferenceValue = 类型为{1}、PublicID为{2}的Bean上的softentityreference属性{0}为Null
BeanTransfer.SoftReference.ReferencedBeanNotFound = 无法导出PublicID为{1}的{0}实体。找不到类型为 {2}、ID为{3}的软引用Bean
BeanTransfer.SoftReference.UnableToResolveEncodedKey = 无法解析PublicID为{2}的实体{1}上的引用{0}。
BeanTransfer.SoftReference.UniquePropNotFound = 无法导出实体{0}。找不到编码键{1}的唯一属性。
BeanTransfer.XmlAccountBeanExportHandler.HandlerConflict = 处理程序路径{0}与现有的其他信息文件冲突，已存在与路径匹配的元素。处理程序需使用唯一处理程序路径
BillingSystemPlugin.Error.BillingMethodsNotAvailable = 计费方法对于产品代码{0}和货币{1}不可用
BillingSystemPlugin.Error.MismatchedPaymentMethod = “{0}”不受PolicyCenter支持或已遭PolicyCenter弃用，它已转换为typekey.AccountPaymentMethod.TC_UNSUPPORTED。将{0}添加到PolicyCenter的AccountPaymentMethod类型列表或阻止将此付款方法类型发送到PolicyCenter
BillingSystemPlugin.Error.NoAuditSchedulePatternsFound = 未找到PaymentPlanCode与缴费系统公共ID匹配的AuditSchedulePatterns：{0}
BillingSystemPlugin.Error.UnsupportedPaymentMethod = 新的付款方式不能具有类型为“typekey.AccountPaymentMethod.TC_UNSUPPORTED”的付款方法。
BizRules.Audit.ArrayValue = 数组值
BizRules.Audit.NoContext = 未生成IRuleContext
BizRules.CommandDefinitionLDV.Action = 操作类型
BizRules.CommandDefinitionLDV.AddAction = 添加操作
BizRules.CommandDefinitionLDV.Description = 说明
BizRules.CommandDefinitionLDV.Parameters = 形式参数
BizRules.CommandDefinitionLDV.RemoveAction = 移除操作
BizRules.CommandDefinitionLDV.Sequence = 顺序
BizRules.CommandDefinitionLDV.UnknownAction = 未知
BizRules.CommandParameterInputSet.FormulaLabel = {0}（公式）
BizRules.CommandParameterInputSet.TextTemplateLabel = {0}（文本）
BizRules.ConditionBuilderPanelSet.Add = 添加
BizRules.ConditionBuilderPanelSet.ContextHelp.Button = 上下文帮助(ALT-H)
BizRules.ConditionBuilderPanelSet.ContextHelp.Description.BooleanKeyword = 布尔值{0}
BizRules.ConditionBuilderPanelSet.ContextHelp.Description.NullKeyword = null值通常意味着值未知或未指定
BizRules.ConditionBuilderPanelSet.ContextHelp.Description.Symbol = 名为“{0}”的符号
BizRules.ConditionBuilderPanelSet.ContextHelp.PageTitlePrefix = 上下文帮助
BizRules.ConditionBuilderPanelSet.ContextHelp.Param.IndexName = 参数{0}
BizRules.ConditionBuilderPanelSet.ContextHelp.Param.SingleName = 参数
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Deprecated = 已不建议使用
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Javadoc.Available.Hover = 单击在Oracle Java Platform Standard Edition 应用程序界面规范中查看更多详细信息。
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Javadoc.Unavailable.Hover = 因为未配置config.xml中的{0}，所以不可用。请联系您的系统管理员。
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Parameters = 形式参数
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.ReturnType = 返回类型：
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Returns = 返回：
BizRules.ConditionBuilderPanelSet.ContextHelp.Popup.Type = 类型：
BizRules.ConditionBuilderPanelSet.ContextHelp.PopupTitle = 业务规则上下文帮助
BizRules.ConditionBuilderPanelSet.Insert = 插入
BizRules.ConditionBuilderPanelSet.LV.AndOr = AND/OR
BizRules.ConditionBuilderPanelSet.LV.LeftOperand = 左侧表达式
BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase = 左侧表达式
BizRules.ConditionBuilderPanelSet.LV.NoneSelected = 选择...
BizRules.ConditionBuilderPanelSet.LV.Operator = 运算
BizRules.ConditionBuilderPanelSet.LV.RightOperand = 右侧表达式
BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase = 右侧表达式
BizRules.ConditionBuilderPanelSet.PrettyPrint.ConditionHasErrors = 条件存在校验错误
BizRules.ConditionBuilderPanelSet.PrettyPrint.Hide = 隐藏格式视图
BizRules.ConditionBuilderPanelSet.PrettyPrint.Show = 显示格式视图
BizRules.ConditionBuilderPanelSet.Remove = 移除
BizRules.ConditionBuilderPanelSet.Toolbar.DisableValidation = 隐藏校验错误
BizRules.ConditionBuilderPanelSet.Toolbar.EnableValidation = 显示校验错误
BizRules.ConditionBuilderPanelSet.Toolbar.NoErrors = 无校验错误
BizRules.ContainsExpressionFragment.CommandParameter.Label = If
BizRules.ContainsExpressionFragment.CommandParameter.Label.Empty = 如果...
BizRules.ContainsExpressionFragment.FullDisplay = 符合以下条件的{0}：
BizRules.ContainsExpressionFragment.FullDisplay.Empty = 符合以下条件的{0}...
BizRules.ContainsExpressionFragment.FullDisplay.Empty.Vowel = 符合以下条件的{0}...
BizRules.ContainsExpressionFragment.FullDisplay.UnknownElementType = 符合以下条件的项目：
BizRules.ContainsExpressionFragment.FullDisplay.UnknownElementType.Empty = 符合以下条件的项目...
BizRules.ContainsExpressionFragment.FullDisplay.Vowel = 符合以下条件的{0}：
BizRules.ContainsExpressionFragment.Label = 符合以下条件的{0}
BizRules.ContainsExpressionFragment.Label.Empty = 符合以下条件的{0}...
BizRules.ContainsExpressionFragment.Label.Empty.Vowel = 符合以下条件的{0}...
BizRules.ContainsExpressionFragment.Label.UnknownElementType = 符合以下条件的项目：
BizRules.ContainsExpressionFragment.Label.UnknownElementType.Empty = 符合以下条件的项目...
BizRules.ContainsExpressionFragment.Label.Vowel = 符合以下条件的{0}：
BizRules.ContainsExpressionFragment.PopupLink = 编辑
BizRules.ContainsExpressionFragment.PopupLink.Empty = 添加条件
BizRules.ContainsExpressionPopup.CommandParameter.Description = 计算以下条件，结果为“{0}”的“true”或“false”值
BizRules.ContainsExpressionPopup.CommandParameter.Title = “{0}”的条件
BizRules.ContainsExpressionPopup.Description = 检查{1}列表中是否存在符合以下条件的{0}
BizRules.ContainsExpressionPopup.Description.UnknownElementType = 检查{0}列表中是否存在符合以下条件的项目
BizRules.ContainsExpressionPopup.Description.Vowel = 检查{1}列表中是否存在符合以下条件的{0}
BizRules.ContainsExpressionPopup.RuleCondTitle = 条件
BizRules.ContainsExpressionPopup.Title = “符合以下条件的{2}{1}的{0}...”的条件
BizRules.ContainsExpressionPopup.Title.UnknownElementType = “{0} {1}符合以下条件的项目”的条件
BizRules.ContainsExpressionPopup.Title.Vowel = “{0} {1}符合以下条件的{2}...”的条件
BizRules.ContextHelp.TopLine = 要进行刷新，请先编辑一个表达式，然后再次按Alt-H。
BizRules.ContextInputSet.AvailableSymbols = 可用的符号：{0}
BizRules.CountExpressionFragment.FullDisplay = 符合以下条件的{1}列表中的每个{0}的计数：
BizRules.CountExpressionFragment.FullDisplay.AlwaysTrue = {1}列表中每个{0}的计数
BizRules.CountExpressionFragment.FullDisplay.Empty = 以下内容的计数...
BizRules.CountExpressionFragment.FullDisplay.EmptyCondition = 符合以下条件的{1}列表中每个{0}的计数...
BizRules.CountExpressionFragment.FullDisplay.UnknownElementType = 符合以下条件的{0}列表中的每个项目的计数：
BizRules.CountExpressionFragment.FullDisplay.UnknownElementType.AlwaysTrue = {0}列表中每个项目的计数
BizRules.CountExpressionFragment.FullDisplay.UnknownElementType.EmptyCondition = 符合以下条件的{0}列表中每个项目的计数...
BizRules.CountExpressionFragment.Label = 以下内容的计数：
BizRules.CountExpressionFragment.Label.Empty = 以下内容的计数...
BizRules.CountExpressionFragment.NestedText = 符合以下条件的{1}列表中的每个{0}：{2}
BizRules.CountExpressionFragment.NestedText.AlwaysTrue = {1}列表中的每个{0}
BizRules.CountExpressionFragment.NestedText.EmptyCondition = 符合以下条件的{1}列表中的每个{0}...
BizRules.CountExpressionFragment.NestedText.UnknownElementType = 符合以下条件的{0}列表中的每个项目：{1}
BizRules.CountExpressionFragment.NestedText.UnknownElementType.AlwaysTrue = {0}列表中的每个项目
BizRules.CountExpressionFragment.NestedText.UnknownElementType.EmptyCondition = 符合以下条件的{0}列表中的每个项目...
BizRules.CountExpressionPopup.CommandParameter.Title = “{0}”的计数...
BizRules.CountExpressionPopup.ConditionLabel = 为符合以下条件的每个“{0}”计数：
BizRules.CountExpressionPopup.ConditionLabel.AlwaysTrue = 为每个“{0}”计数
BizRules.CountExpressionPopup.ConditionLabel.AlwaysTrue.UnknownElementType = 为每个项目计数
BizRules.CountExpressionPopup.ConditionLabel.UnknownElementType = 为符合以下条件的每个项目计数：
BizRules.CountExpressionPopup.Title = 计数...
BizRules.DeployConfirmationPopup.AlreadyDeployedVersions = 这些规则版本已部署在此系统上。
BizRules.DeployConfirmationPopup.AlreadyDeployedVersionsSingular = 此规则版本已部署在此系统上。
BizRules.DeployConfirmationPopup.ContinueDeploy = 继续部署...
BizRules.DeployConfirmationPopup.InvalidVersions = 将不会部署这些规则版本，因为它们尚未通过校验。
BizRules.DeployConfirmationPopup.InvalidVersionsSingular = 将不会部署此规则版本，因为它尚未通过校验。
BizRules.DeployConfirmationPopup.OutdatedVersions = 将不会部署这些规则版本，因为有更新的版本可用。
BizRules.DeployConfirmationPopup.OutdatedVersionsSingular = 将不会部署此规则版本，因为有更新的版本可用。
BizRules.DeployConfirmationPopup.RulesBeingDeployed = 要部署的规则
BizRules.DeployConfirmationPopup.RulesNotBeingDeployed = 不部署的规则
BizRules.DeployConfirmationPopup.Title = 部署确认
BizRules.DeployConfirmationPopup.UnapprovedVersions = 将不会部署这些规则版本，因为它们未获得批准。
BizRules.DeployConfirmationPopup.UnapprovedVersionsSingular = 将不会部署此规则版本，因为它未获得批准。
BizRules.Executor.No.Reentry = 处理另一触发器期间无法触发业务规则。原始调用：{0}，嵌套调用：{1}
BizRules.Executor.NullContext = 上下文定义返回了一个具有以下键的null列表：{0}
BizRules.Export = 导出
BizRules.Export.Action.ExportDatamodelChecksum = 正在导出数据模型校验和
BizRules.Export.Action.ExportRuleMetadata = 正在导出规则元数据
BizRules.Export.Action.ExportRules = 正在导出规则
BizRules.Export.Action.ExportRulesChecksumAction = 正在导出规则校验和
BizRules.Export.Action.LoadRuleMetadata = 正在加载规则元数据
BizRules.Export.Action.PublishExport = 正在发布导出的规则
BizRules.Export.NoRuleIsReadyToExport = 没有准备导出的规则。
BizRules.Export.NoRuleIsSelectedToExport = 未选择要导出的规则。
BizRules.Export.RuleCannotBeExported = 规则“{0}”是草案，无法导出。
BizRules.ExportImport.Action.DeleteTmpDirectory = 正在删除临时目录
BizRules.ExportImport.AlreadyRunning = 另一导出或导入运行期间，{0}无法启动。
BizRules.ExportImport.CannotCancel.AlreadyCompleted = 无法取消{0}，因为它已完成。
BizRules.ExportImport.FailedToStart = {0}启动失败。请参阅日志了解详细信息。
BizRules.ExportImport.MultiOperationActionDescription = {0}（{2}个中的{1} 个）
BizRules.ExportImport.Status.Canceled = 已取消
BizRules.ExportImport.Status.Canceling = 正在取消
BizRules.ExportImport.Status.Completed = 已完成
BizRules.ExportImport.Status.Failure = 失败
BizRules.ExportImport.Status.InProgress = 进行中
BizRules.ExportImport.Status.Ready = 已就绪
BizRules.ExpressionMenuItemSet.bool = 是/否
BizRules.ExpressionMenuItemSet.contains = 条件
BizRules.ExpressionMenuItemSet.count = 计数
BizRules.ExpressionMenuItemSet.date = 日期
BizRules.ExpressionMenuItemSet.formula = 公式
BizRules.ExpressionMenuItemSet.lastsavedvalue = 上次保存的值
BizRules.ExpressionMenuItemSet.lookup = 查找
BizRules.ExpressionMenuItemSet.property = 财产
BizRules.ExpressionMenuItemSet.sum = 合计
BizRules.ExpressionMenuItemSet.template = 文本模板
BizRules.ExpressionMenuItemSet.typekey = 类型键值
BizRules.FilteredIterableExpressionFragment.PopupLink = 编辑
BizRules.FilteredIterableExpressionFragment.PopupLink.Empty = 设置字段和条件
BizRules.FilteredIterableExpressionPopup.CommandParameter.Description = 对于“{0}”，评估结果为数字值
BizRules.FilteredIterableExpressionPopup.Iterable.Label = 在此列表中
BizRules.FilteredIterableExpressionPopup.IterableElementTypeDescription = （每个项目称为“{0}”）
BizRules.FormulaPrefix = （公式） {0}
BizRules.Import = 导入
BizRules.Import.Action.ExtractingFromFile = 正在从文件中提取规则
BizRules.Import.Action.ImportRules = 正在导入规则
BizRules.Import.Action.LoadLocalRuleMetadata = 正在加载现有的规则元数据
BizRules.Import.Action.LoadRemoteDatamodelChecksum = 正在加载导入的数据模型校验和
BizRules.Import.Action.LoadRemoteDatamodelChecksum.Fail = 无法导入规则，因为源业务规则数据模型与本地数据模型不匹配。请检查日志了解详细信息。
BizRules.Import.Action.LoadRemoteRuleMetadata = 正在加载导入的规则元数据
BizRules.Import.Action.PublishImport = 正在发布导入的规则
BizRules.Import.CommonAncestorNotFound = 未找到共同上级。本地版本ID：{0}。导入版本ID：{1}
BizRules.Import.Comparison.Edit = 编辑
BizRules.Import.Comparison.Edit.Existing = 现有版本
BizRules.Import.Comparison.Edit.ExistingTooltip = 编辑现有版本以解决导入冲突
BizRules.Import.Comparison.Edit.Importing = 正在导入的版本
BizRules.Import.Comparison.Edit.ImportingTooltip = 编辑导入版本以解决导入冲突
BizRules.Import.Comparison.Edit.Title = 规则：{0}
BizRules.Import.Comparison.Edit.Update = 保存已编辑版本
BizRules.Import.Comparison.Edit.Update.Confirmation = 将已编辑的草案版本另存为已解析的版本以完成导入。您将无法再选择现有的版本或正在导入的版本。是否要更新？
BizRules.Import.Comparison.EditTooltip = 基于现有或导入规则版本创建新的规则草案版本。
BizRules.Import.Comparison.Existing = 现有版本     {0}
BizRules.Import.Comparison.Importing = 正在导入的版本     {0}
BizRules.Import.Comparison.KeepExisting = 保留现有版本
BizRules.Import.Comparison.KeepExistingTooltip = {BizRules.Import.Comparison.KeepExisting}以解决导入冲突
BizRules.Import.Comparison.NoEditOfExistingDraftAlert = 现有的规则版本处于草案状态。已禁止编辑现有版本和已导入的版本。
BizRules.Import.Comparison.ReplaceWithNew = 替换为正在导入的版本
BizRules.Import.Comparison.ReplaceWithNewTooltip = {BizRules.Import.Comparison.ReplaceWithNew}以解决导入冲突
BizRules.Import.Comparison.RuleAction.Sequence = 顺序
BizRules.Import.Comparison.RuleActions = 操作
BizRules.Import.Comparison.RuleCondition = 条款
BizRules.Import.Comparison.RuleCondition.None = 无
BizRules.Import.Comparison.RuleDetails = 详细信息
BizRules.Import.Comparison.RuleVariables = 变量
BizRules.Import.Disposition.Edited = 已应用已编辑的内容
BizRules.Import.Disposition.Imported = 已导入
BizRules.Import.Disposition.Outstanding = 未清
BizRules.Import.DuplicatedDeployedRuleTags = 无法导入规则“{0}”，因为系统中已存在{1}版本号。{BizRules.Import.DuplicatedDeploymentId.ReferToDoc}
BizRules.Import.DuplicatedDeploymentId = 规则“{0}”无法导入，因为它已部署在另一个具有相同部署ID的系统上：“{1}”。{BizRules.Import.DuplicatedDeploymentId.ReferToDoc}
BizRules.Import.DuplicatedDeploymentId.ReferToDoc = 请参阅文档了解修复系统部署ID相同情况的说明。
BizRules.Import.TypeCodeNotFound = 导入无法继续，因为在当前的数据模型中找不到类型列表{1}中的类型代码“{0}”。
BizRules.Import.UiAction.AddNew = 适用于添加新规则
BizRules.Import.UiAction.ConflictApply = 应用：  
BizRules.Import.UiAction.DeployExisting = 适用于部署现有版本
BizRules.Import.UiAction.EditedVersion = 适用于添加已编辑的规则版本
BizRules.Import.UiAction.Import = 导入
BizRules.Import.UiAction.Imported = 已导入
BizRules.Import.UiAction.New = 新建
BizRules.Import.UiAction.NoAction = 无需操作
BizRules.Import.UiAction.None = -
BizRules.Import.UiAction.ReplaceWithNew = 适用于替换为新版本
BizRules.Import.UnexpectedFileNameExt = “{0}”文件扩展名不是“.{1}”。
BizRules.LeafSearch.TypeMatch = 类型：{0}
BizRules.LookupExpressionFragment.Label.Empty = {0}在...中查找{1}
BizRules.LookupExpressionFragment.Label.Full = 在“{0}”中查找
BizRules.LookupExpressionFragment.Label.FullDisplay.Declaration = {0}在
BizRules.LookupExpressionFragment.Label.FullDisplay.InputParams.For = 中查找
BizRules.LookupExpressionFragment.Label.FullDisplay.ReturnParams = 返回
BizRules.LookupExpressionFragment.Label.MissingTable.Display = 未定义查找
BizRules.LookupExpressionFragment.Label.MissingTable.Nested = 未定义查找...
BizRules.LookupExpressionFragment.LookupTable.List = 查找表
BizRules.LookupExpressionFragment.LookupTable.NoneSelected = 选择查找表
BizRules.LookupExpressionFragment.PopupLink = 编辑
BizRules.LookupExpressionFragment.PopupLink.Empty = 设置查找
BizRules.LookupExpressionPopup.CancelButton = 取消
BizRules.LookupExpressionPopup.CardPanelTitle = 查找表详细信息
BizRules.LookupExpressionPopup.CreateNewLookup = 创建新查找
BizRules.LookupExpressionPopup.Description = 说明
BizRules.LookupExpressionPopup.Expression = 表达式（公式）
BizRules.LookupExpressionPopup.Inputs = 输入
BizRules.LookupExpressionPopup.OKButton = 确定
BizRules.LookupExpressionPopup.Output = 输出
BizRules.LookupExpressionPopup.OutputNameNotFound = 查找表{1}中的输出ID {0}有问题。请联系管理员。
BizRules.LookupExpressionPopup.OutputType = 输出类型
BizRules.LookupExpressionPopup.ParameterNameNotFound = 查找表{1}中的查找参数ID {0}有问题。请联系管理员。
BizRules.LookupExpressionPopup.RequiredInputs = 必需的输入
BizRules.LookupExpressionPopup.TableName = 表名称
BizRules.LookupExpressionPopup.TitleBar = 选择数据查找
BizRules.Permission.Error.CannotApprove = 用户没有审批此规则类型的权限。
BizRules.Permission.Error.CannotCreate = 用户没有创建此规则类型的权限。
BizRules.Permission.Error.CannotDeploy = 用户没有部署此规则类型的权限。
BizRules.Permission.Error.CannotEdit = 用户没有编辑此规则类型的权限。
BizRules.Permission.Error.CannotImport = 用户没有导入此规则类型的权限。
BizRules.Permission.Error.CannotView = 用户没有查看此规则类型的权限。
BizRules.Permissions.InsufficientPermission = 权限不足：{0}
BizRules.Permissions.InsufficientPermissionForRuleVersion = 核保人规则“{1}”的权限不足（{0}）
BizRules.Permissions.RuleSubtypeAccessProfileNode.DuplicatePermission = 在实体“{2}”的权限配置“{1}”中找到重复的权限类型代码“{0}”。
BizRules.PropertyReferenceExpressionFragment.PopupLink = 编辑
BizRules.PropertyReferenceExpressionFragment.PopupLink.Empty = 设置属性
BizRules.PropertyReferenceExpressionFragment.lastsavedvalue.FullDisplay = 上次保存的{0}值
BizRules.PropertyReferenceExpressionFragment.lastsavedvalue.FullDisplay.Empty = 上次保存的以下项的值...
BizRules.PropertyReferenceExpressionFragment.lastsavedvalue.Label = 上次保存的以下项的值：
BizRules.PropertyReferenceExpressionFragment.lastsavedvalue.Label.Empty = 上次保存的以下项的值...
BizRules.PropertyReferencePopup.Property.Label = 财产
BizRules.PropertyReferencePopup.Title.lastsavedvalue = 上次保存的以下项的值...
BizRules.PropertyReferencePopup.Title.property = 该属性...
BizRules.RuleCommandParameter = 命令参数
BizRules.RuleDetailsPage.Alert.DeletedByAnotherUser = 您正在查看的规则已被另一用户删除。请返回“规则”。
BizRules.RuleDetailsPage.Alert.DuplicatedName = 另一规则具有相同名称。
BizRules.RuleDetailsPage.Alert.NewerVersionAvailable = 当前视图不是此规则的最新版本。请查看最新版本。
BizRules.RuleDetailsPage.Alert.PendingImport = 无法编辑此规则，因为有一个更新的实例正在等待导入。请查看导入状态。
BizRules.RuleDetailsPage.Alert.UnavailableToRun = 规则未启用。
BizRules.RuleDetailsPage.Alert.UnavailableToRun.WithMakeAvailableAction = {BizRules.RuleDetailsPage.Alert.UnavailableToRun} 启用。
BizRules.RuleDetailsPage.AvailableToRun = 已启用
BizRules.RuleDetailsPage.AvailableToRun.Note.WillNotRun = 无论环境如何，规则都不会运行。
BizRules.RuleDetailsPage.AvailableToRun.Note.WillRun = 规则将在此环境中运行。
BizRules.RuleDetailsPage.ClonedRuleName = {0}的克隆
BizRules.RuleDetailsPage.Context = 上下文
BizRules.RuleDetailsPage.Description = 说明
BizRules.RuleDetailsPage.Name = 全名
BizRules.RuleExportAllConfirmationPopup.ContinueExport = 继续导出
BizRules.RuleExportAllConfirmationPopup.DraftsWithDeploymentUncertaintyTitle = 以下规则的最新版本处于草案模式，并存在多个以前的版本，因此无法确定应导出哪个版本。将不会导出这些规则。
BizRules.RuleExportAllConfirmationPopup.LV.DraftVersion = 草案版本
BizRules.RuleExportAllConfirmationPopup.LV.VersionToBeExported = 要导出的版本
BizRules.RuleExportAllConfirmationPopup.NoDeployedDraftsTitle = 将不会导出以下规则，因为它们处于“草案”模式，并且没有以前部署的版本。
BizRules.RuleExportAllConfirmationPopup.PreviouslyDeployedDraftsTitle = 以下规则的最新版本处于草案模式。将不导出最新的草案版本，而是导出最新的已部署版本。
BizRules.RuleExportAllConfirmationPopup.Title = 全部导出 - 异常
BizRules.RuleExportDetailsPopup.Title = 导出的规则
BizRules.RuleExportImportFailurePopup.Note = 请参阅日志了解详细信息。
BizRules.RuleExportImportFailurePopup.Title = 规则导入/导出失败原因
BizRules.RuleExportImportMenuItemSet.ExportAll = 全部导出
BizRules.RuleExportImportMenuItemSet.ExportAllTooltip = 如果此页面上的所有规则均为“阶段”或更高级别的状态，则将其导出为.gwrules文件
BizRules.RuleExportImportMenuItemSet.ExportSelected = 导出选定项
BizRules.RuleExportImportMenuItemSet.ExportSelectedTooltip = 如果此页面上的选定规则为“阶段”或更高级别的状态，则将其导出为.gwrules文件
BizRules.RuleExportImportMenuItemSet.ImportFromFile = 从文件导入
BizRules.RuleExportImportMenuItemSet.ImportTooltip = 从文件系统中的.gwrules文件导入规则
BizRules.RuleExportImportStatusScreen.CompleteImport = 完成导入
BizRules.RuleExportImportStatusScreen.CompleteImportTooltip = 解决版本冲突，以完成导入
BizRules.RuleExportImportStatusScreen.DownloadTooltip = 将.gwrules文件下载到本地文件系统
BizRules.RuleExportImportStatusScreen.Export.CancelConfirmation = 是否确定要取消导出{0}规则？
BizRules.RuleExportImportStatusScreen.Export.CancelTooltip = 取消当前正在进行的导出过程
BizRules.RuleExportImportStatusScreen.Exports = 导出
BizRules.RuleExportImportStatusScreen.Import.CancelConfirmation = 是否确定要取消导入“{0}”？
BizRules.RuleExportImportStatusScreen.Import.CancelTooltip = 取消当前正在进行的导入过程
BizRules.RuleExportImportStatusScreen.Imports = 导入
BizRules.RuleExportImportStatusScreen.Progress = 进度
BizRules.RuleExportImportStatusScreen.Progress.Status = {0}%
BizRules.RuleExportImportStatusScreen.RefreshTooltip = 刷新页面，以更新正在进行的导入和导出状态
BizRules.RuleExportImportStatusScreen.Review = 审查
BizRules.RuleExportImportStatusScreen.ReviewTooltip = 查看导入结果详情
BizRules.RuleExportImportStatusScreen.RuleType = 规则类型
BizRules.RuleExportImportStatusScreen.Rules = 规则
BizRules.RuleExportImportStatusScreen.SourceName = 源文件
BizRules.RuleExportImportStatusScreen.StartTime = 开始时间
BizRules.RuleExportImportStatusScreen.StartedBy = 启动者
BizRules.RuleExportImportStatusScreen.Status = 状态
BizRules.RuleExportImportStatusScreen.StatusTooltip = 显示有关失败原因的更多详情
BizRules.RuleExportImportStatusScreen.Title = 导入/导出状态
BizRules.RuleHistory.LastEdited = 上次编辑
BizRules.RuleImportAllPopup.Description = 导入所有尚未导入或丢弃的规则。
BizRules.RuleImportAllPopup.Title = 全部导入
BizRules.RuleImportDetailsPopup.Alert.ImportCompleted = 此导入不需要再执行其他操作。
BizRules.RuleImportDetailsPopup.Alert.ImportCompleted.WithReturnToRules = {BizRules.RuleImportDetailsPopup.Alert.ImportCompleted} 返回到规则。
BizRules.RuleImportDetailsPopup.Alert.NewDeploymentTags = 此导入包括已部署在部署ID为{0}的系统上的规则。请确保这是有意为之，因为之前未在此系统上导入过{0}上部署的规则，并且此导入一旦完成将无法撤消。
BizRules.RuleImportDetailsPopup.ApplyAllRemaining = 应用所有剩余内容
BizRules.RuleImportDetailsPopup.ApplyAllTooltip = 已完成此页面上所有未决定规则的导入
BizRules.RuleImportDetailsPopup.ApplySelected = 应用所选内容
BizRules.RuleImportDetailsPopup.ApplySelected.Confirmation = 是否要导入选定的规则？
BizRules.RuleImportDetailsPopup.ApplySelectedTooltip = 已完成此页面上所有选定规则的导入
BizRules.RuleImportDetailsPopup.CompleteImport = 完成导入
BizRules.RuleImportDetailsPopup.DiscardAllRemaining = 丢弃所有剩余项
BizRules.RuleImportDetailsPopup.DiscardAllRemaining.Confirmation = 是否要丢弃余下的{0}规则？
BizRules.RuleImportDetailsPopup.DiscardAllTooltip = 放弃导入此页面上的所有规则
BizRules.RuleImportDetailsPopup.DiscardSelected = 丢弃所选内容
BizRules.RuleImportDetailsPopup.DiscardSelected.Confirmation = 是否要丢弃选定的规则？
BizRules.RuleImportDetailsPopup.DiscardSelectedTooltip = 放弃导入此页面上选定的所有规则
BizRules.RuleImportDetailsPopup.Disposition = 处理（{0}个规则）
BizRules.RuleImportDetailsPopup.DispositionPlural = 处理（{0}个规则）
BizRules.RuleImportDetailsPopup.LV.AvailableActions = 可用操作
BizRules.RuleImportDetailsPopup.LV.Compare = （比较）
BizRules.RuleImportDetailsPopup.LV.Compare.Tooltip = 依次查看现有版本和导入版本的比较
BizRules.RuleImportDetailsPopup.LV.Edited = 已编辑：{0}
BizRules.RuleImportDetailsPopup.LV.ExistingVersion = 现有版本
BizRules.RuleImportDetailsPopup.LV.ImportingVersion = 正在导入版本
BizRules.RuleImportDetailsPopup.LV.RuleName = 规则名称
BizRules.RuleImportDetailsPopup.LV.Status = 状态
BizRules.RuleImportDetailsPopup.ManageSynchronization = 管理同步
BizRules.RuleImportDetailsPopup.ReviewImport = 检查导入
BizRules.RuleImportDetailsPopup.SourceName = 文件
BizRules.RuleImportDetailsPopup.StatusWithCount = {0}（{1}）
BizRules.RuleManagementAuditLink.Summary = 操作：{0}；操作人：{1}：时间：{2}。
BizRules.RuleManagementAuditLink.ViewHistory = 查看历史记录
BizRules.RuleManagementAuditPopup.LV.Activity = 活动
BizRules.RuleManagementAuditPopup.LV.ChangesHeader = 更改
BizRules.RuleManagementAuditPopup.LV.Date = 日期
BizRules.RuleManagementAuditPopup.LV.ImportedHeader = 已导入
BizRules.RuleManagementAuditPopup.LV.System = 系统
BizRules.RuleManagementAuditPopup.LV.User = 用户
BizRules.RuleManagementAuditPopup.LV.Version = 版本
BizRules.RuleManagementAuditPopup.PendingImport = 待定
BizRules.RuleManagementAuditPopup.Title = 历史记录
BizRules.RuleManagementAuditPopup.Version = 版本
BizRules.RuleStatus.Deployed = 已部署
BizRules.RuleVariable.Lookuptable.Notfound = 查找表(TableID \= {0})未定义。请联系您的管理员或选择其他查找表。
BizRules.RuleVariable.MetadataUpdate.Alert.Message = 查找定义已经由提供商更新。请解决所有突出显示的问题并单击“确定”按钮继续。
BizRules.RuleVariableLV.AddAction = 添加
BizRules.RuleVariableLV.Description = 说明
BizRules.RuleVariableLV.Expression = 表达式
BizRules.RuleVariableLV.Name = 名称
BizRules.RuleVariableLV.NoVariables = 未声明任何变量
BizRules.RuleVariableLV.RemoveAction = 移除
BizRules.RuleVariableLV.Type = 类型
BizRules.RuleVariablePanelSet.Expression.Operand = 表达式
BizRules.RuleVariablePanelSet.Name = 名称
BizRules.RulesPage.AddButtonTooltip = 创建新的规则草案
BizRules.RulesPage.Alert.PendingImportExists = 有规则正在等待导入。请查看导入状态。
BizRules.RulesPage.Alert.RollingUpgradeInProgress = 此环境中已禁止部署规则，因为正在进行系统升级。有关更多详细信息，请联系您的系统管理员
BizRules.RulesPage.Alert.RollingUpgradeInProgress.Return = 此环境中已禁止部署规则，因为正在进行系统升级。有关更多详细信息，请联系您的系统管理员。单击可返回{0}列表页面
BizRules.RulesPage.CloneButton = 克隆
BizRules.RulesPage.CloneButtonTooltip = 克隆选定规则以创建新的规则草案
BizRules.RulesPage.DeployButton = 部署
BizRules.RulesPage.DeployMenuItemSet.DeployAll = 全部部署
BizRules.RulesPage.DeployMenuItemSet.DeployAllTooltip = 如果规则处于“已批准”状态，则在此环境中部署所有规则
BizRules.RulesPage.DeployMenuItemSet.DeploySelected = 部署所选内容
BizRules.RulesPage.DeployMenuItemSet.DeploySelectedTooltip = 如果规则处于“已批准”状态，则在此环境中部署选定规则
BizRules.RulesPage.DeployMenuItemSet.DeployTooltip = 在此环境中部署规则
BizRules.RulesPage.DisableConfirmationPopupMessage = 您已选择禁止评估所选规则。这将为当前启用的规则创建新的草案版本。请单击“确定”继续。
BizRules.RulesPage.DisableSelected = 禁用选定项
BizRules.RulesPage.DisableSelectedTooltip = 禁用选定规则；如果启用，将为每个规则创建新的规则草案版本
BizRules.RulesPage.DisabledRulesNotFound = 未选择已禁用的规则。
BizRules.RulesPage.EnableConfirmationPopupMessage = 您已选择允许评估所选规则。这将为当前禁用的规则创建新的草案版本。请单击“确定”继续。
BizRules.RulesPage.EnableDisableImportInProgressError = 一些规则未切换，因为对应的导入活动正在进行中。
BizRules.RulesPage.EnableDisableNoRulesSelected = 未选择任何规则
BizRules.RulesPage.EnableSelected = 启用选定项
BizRules.RulesPage.EnableSelectedTooltip = 启用选定规则；如果禁用，将为每个规则创建新的规则草案版本
BizRules.RulesPage.EnabledRulesNotFound = 未选择已启用的规则。
BizRules.RulesPage.LV.Available = 已启用
BizRules.RulesPage.LV.Name = 全名
BizRules.RulesPage.LV.RunStatus = 运行状态
BizRules.RulesPage.LV.RunStatus.PrevEnabledTooltip = 未部署最新版本，已在此环境中部署并运行此规则的上一个版本(v{0})
BizRules.RulesPage.LV.Status = 状态
BizRules.RulesPage.LV.TriggeringPointKey = 触发器事件
BizRules.RulesPage.LV.ValidationStatus = 有效
BizRules.RulesPage.LV.Version = 版本
BizRules.RulesPage.MoreButton = 更多
BizRules.RulesPage.Query.Active = 已启用或正在处理中
BizRules.RulesPage.Query.All = 全部
BizRules.RulesPage.Query.DeployedAtLeastOnce = 一个或多个已部署的版本
BizRules.RulesPage.Query.Enabled = 已启用
BizRules.RulesPage.Query.NeverDeployed = 没有已部署的版本
BizRules.RulesPage.Query.NoWIP = 没有工作正在进行中
BizRules.RulesPage.Query.WIP = 工作正在进行中
BizRules.Separator = |
BizRules.SeparatorWithSpaces = |
BizRules.StartRuleImportPopup.CancelTooltip = 取消导入并导航回前一个屏幕
BizRules.StartRuleImportPopup.FileDescription = 从*.{0}文件导入规则：
BizRules.StartRuleImportPopup.ImportTooltip = 在选择gwrule文件后开始导入规则
BizRules.Startup.DisabledPlugin = BizRules功能已启用，但是IBizRulesPlugin插件已禁用。
BizRules.StatusTransitionToolbarButtonSet.CancelTooltip = 取消对规则的更改
BizRules.StatusTransitionToolbarButtonSet.DeleteDraft = 删除草案
BizRules.StatusTransitionToolbarButtonSet.DeleteDraftTooltip = 删除此规则草案版本并恢复为之前部署的版本（如果存在）
BizRules.StatusTransitionToolbarButtonSet.DeleteRuleConfirmation = 是否确定要删除此规则？
BizRules.StatusTransitionToolbarButtonSet.DeleteTooltip = 删除此规则版本
BizRules.StatusTransitionToolbarButtonSet.DeleteVersionConfirmation = 是否确定要删除此版本？
BizRules.StatusTransitionToolbarButtonSet.Deploy = 部署
BizRules.StatusTransitionToolbarButtonSet.DeployTooltip = 将此规则版本提升到“已部署”状态
BizRules.StatusTransitionToolbarButtonSet.DeployVersionAvailableConfirmation = 部署后，此规则版本将取代任何以前的版本，并立即可供执行。\n\n单击“确定”继续。
BizRules.StatusTransitionToolbarButtonSet.DeployVersionUnavailableConfirmation = 此规则版本的“Enabled”选项设置为false。部署后，它将取代任何以前的版本，而该规则将不再可供执行。\n\n单击“确定”继续操作。
BizRules.StatusTransitionToolbarButtonSet.Disable = 禁用
BizRules.StatusTransitionToolbarButtonSet.DisableVersionConfirmation = 您已选择禁止评估此规则版本。这将创建新的规则草案版本。请单击“确定”继续。
BizRules.StatusTransitionToolbarButtonSet.EditTooltip = 编辑此规则，并创建新的规则草案版本
BizRules.StatusTransitionToolbarButtonSet.Enable = 启用
BizRules.StatusTransitionToolbarButtonSet.EnableDisableToggleTooltip = 启用或禁用此规则版本，以创建新规则版本。
BizRules.StatusTransitionToolbarButtonSet.EnableDisableVersionConfirmation.InvalidDeployed = 您已选择允许评估此规则版本。这将创建新的规则草案版本，因为该规则无效。请单击“确定”继续。
BizRules.StatusTransitionToolbarButtonSet.EnableVersionConfirmation = 您已选择允许评估此规则版本。这将创建新的规则草案版本。请单击“确定”继续。
BizRules.StatusTransitionToolbarButtonSet.PromoteToApproved = 提升为已批准
BizRules.StatusTransitionToolbarButtonSet.PromoteToApprovedTooltip = 将此规则版本提升到“已批准”状态
BizRules.StatusTransitionToolbarButtonSet.PromoteToStaged = 提升到演示
BizRules.StatusTransitionToolbarButtonSet.PromoteToStagedTooltip = 将此规则版本提升到“阶段”状态
BizRules.StatusTransitionToolbarButtonSet.Revert = 恢复为此版本
BizRules.StatusTransitionToolbarButtonSet.RevertTooltip = 恢复规则到此版本并创建新的规则草案版本
BizRules.StatusTransitionToolbarButtonSet.UpdateTooltip = 保存对规则的更改
BizRules.SumExpressionFragment.FullDisplay = 符合以下条件的{2}列表中每个{0}的{1}的合计：
BizRules.SumExpressionFragment.FullDisplay.AlwaysTrue = {2}列表中每个{0}的{1}的合计
BizRules.SumExpressionFragment.FullDisplay.Empty = 以下内容的合计...
BizRules.SumExpressionFragment.FullDisplay.EmptyCondition = 符合以下条件的{2}列表中每个{0}的{1}的合计...
BizRules.SumExpressionFragment.FullDisplay.UnknownElementType = 符合以下条件的{1}列表中每个项目的{0}的合计：
BizRules.SumExpressionFragment.FullDisplay.UnknownElementType.AlwaysTrue = {1}列表中每个项目的{0}的合计
BizRules.SumExpressionFragment.FullDisplay.UnknownElementType.EmptyCondition = 符合以下条件的{1}列表中每个项目的{0}的合计...
BizRules.SumExpressionFragment.Label = {0}的合计
BizRules.SumExpressionFragment.Label.Empty = 以下内容的合计...
BizRules.SumExpressionFragment.NestedText = 对于符合以下条件的{1}列表中的每个{0}：{2}
BizRules.SumExpressionFragment.NestedText.AlwaysTrue = 对于{1}列表中的每个{0}
BizRules.SumExpressionFragment.NestedText.EmptyCondition = 对于符合以下条件的{1}列表中的每个{0}...
BizRules.SumExpressionFragment.NestedText.UnknownElementType = 对于符合以下条件的{0}列表中的每个项目：{1}
BizRules.SumExpressionFragment.NestedText.UnknownElementType.AlwaysTrue = 对于{0}列表中的每个项目
BizRules.SumExpressionFragment.NestedText.UnknownElementType.EmptyCondition = 对于符合以下条件的{0}列表中的每个项目...
BizRules.SumExpressionPopup.CommandParameter.Title = “{0}”的合计...
BizRules.SumExpressionPopup.ConditionLabel = 对于符合以下条件的每个“{0}”：
BizRules.SumExpressionPopup.ConditionLabel.AlwaysTrue = 对于每个“{0}”
BizRules.SumExpressionPopup.ConditionLabel.AlwaysTrue.UnknownElementType = 对于每个项目
BizRules.SumExpressionPopup.ConditionLabel.UnknownElementType = 对于符合以下条件的每个项目：
BizRules.SumExpressionPopup.NumericTransform.Label = 合计
BizRules.SumExpressionPopup.Title = 合计...
BizRules.UWRulesWorkQueue.RuleExists = UWIssueType代码“{0}”已存在关联的UWRule
BizRules.ValidateAll.Count = {0}个规则，{1}个因错误而无效
BizRules.ValidateAll.Failed = 校验过程失败，因为存在以下问题：{0}。请单击并重试。
BizRules.ValidateAll.InvalidIcon = 此规则的最新版本无效
BizRules.ValidateAll.Pending = 有{0}个规则正在等待校验。请单击进行刷新。
BizRules.ValidateAll.UnknownIcon = 校验正在进行中
BizRules.ValidateAll.ValidIcon = 此规则的最新版本有效
BizRules.Validation.CannotChangeStateDueToValidationError = 由于校验错误，无法提升“{0}”（版本：{1}）。
BizRules.Validation.CannotCompareListTypeWithOperator = 无法使用“{0}”比较列表。请结合使用“包含”运算符和嵌套表达式。
BizRules.Validation.CannotDeployDueToValidationError = 由于校验错误，无法部署“{0}”（版本：{1}）。
BizRules.Validation.CannotDeployDueToValidationPending = 由于存在待处理的校验，无法部署“{0}”（版本：{1}）。
BizRules.Validation.CannotEvaluateDueToParseError = 名称为“{0}”（版本ID：{1}）的规则由于解析错误无法执行。请联系您的系统管理员，了解更多详细信息。
BizRules.Validation.CannotEvaluateDueToValidationError = 名称为“{0}”（版本ID：{1}）的规则由于验证错误无法执行。请联系您的系统管理员，了解更多详细信息。
BizRules.Validation.CommandDefinition = 命令定义
BizRules.Validation.CommandParameterTypeMismatch = 此字段需要{0}，但您输入的是{1}。
BizRules.Validation.ConditionLinesMustSpecifyAnOperator = 条件行必须指定一个{BizRules.ConditionBuilderPanelSet.LV.Operator}。
BizRules.Validation.ConditionLinesMustSpecifyLeftOperand = 此条件行需要{BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase}。
BizRules.Validation.ConditionLinesMustSpecifyRightOperand = 此条件行需要{BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase}。
BizRules.Validation.ConditionParens.UnmatchedLeft = 规则条件的左括号比右括号多。
BizRules.Validation.ConditionParens.UnmatchedRight = 规则条件的右括号比左括号多。
BizRules.Validation.ContainsFragErrors = 嵌套的条件包含错误。
BizRules.Validation.DateExpression.AlmostADate = 此条目不在有效的日期范围内或格式不正确。请按照以下格式输入日期：{0}
BizRules.Validation.DoesNotContainSameTypeError = 仅当{BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase}是与{BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase}中的项目类型相同的项目列表时，“{0}”才起作用。您已在{BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase}中输入了{1}。但是，{BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase}不是{1}列表。
BizRules.Validation.EmptyCondition = 规则条件必须至少有一个非空白行。
BizRules.Validation.EmptyContainsFrag = 需要一个条件。
BizRules.Validation.EmptyFilteredIterableFrag = 需要嵌套的表达式。
BizRules.Validation.EmptyLookupExpressionFrag = 需要查找表达式。
BizRules.Validation.EmptyThing = 此字段是必填字段。
BizRules.Validation.Error.MissingContextDefinitionKey = 规则没有上下文定义。
BizRules.Validation.FieldCannotBeNull = {0}不能为null
BizRules.Validation.FilteredIterableExpression.MustBeList = 此表达式必须解析为列表。您尚未输入列表。列表可以是诸如iceCream.allFlavors的命名元素，诸如iceCream.getAllFlavors()的方法，或者诸如"vanilla", "chocolate", "strawberry"的逗号分隔值集。
BizRules.Validation.FilteredIterableFragErrors = 嵌套表达式包含错误。请编辑嵌套表达式。
BizRules.Validation.GenericMessage = 校验错误
BizRules.Validation.Gosu.NoPropertyFound = 表达式需要一个属性。“{0}”不是“{1}”的属性。
BizRules.Validation.IllegalExpression = 这不是一个有效的表达式。
BizRules.Validation.LeftOperandMustBeBoolean = 您只能使用值为true或false（布尔值）的“{0}”。您已输入一个“{1}”类型的值。
BizRules.Validation.LeftOperandMustNotBePrimitive = {BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase}始终具有值。不能使用“{0}”。
BizRules.Validation.ListExpression.InvalidList = 列表无效。请确保引号成对并且每个项目由逗号分隔。
BizRules.Validation.Lookup.DateExpressions = 日期格式不正确或日期不在有效的日期范围内。请按照以下格式输入日期：{0}。
BizRules.Validation.LookupExpressionFragErrors = 查找表达式包含错误。请编辑查找表达式。
BizRules.Validation.MissingCommandDefinitionParameters = 命令定义缺少操作参数{0}。
BizRules.Validation.MixedElementTypesForList = 列表只能包含相同类型的项目（例如全部数字或全部字符串）。此列表包含不同类型的项目。
BizRules.Validation.NotAListError = 您只能使用具有列表的“{0}”。您已输入一个类型为“{1}”的值。\n列表可以是诸如iceCream.allFlavors的指定元素，诸如iceCream.getAllFlavors()的方法，或者类似如下的逗号分隔值集："vanilla", "chocolate", "strawberry"。
BizRules.Validation.NotComparable = 不能使用“{0}”比较{1}。
BizRules.Validation.PropertyReferenceExpression.NonDBBacked = 表达式需要持久属性（也称为数据库支持的属性）。“{0}”不是持久属性，而是计算得出的。
BizRules.Validation.PropertyReferenceExpression.NonEntityRoot = 表达式“{0}”必须为实体。“{1}”不是实体。
BizRules.Validation.PropertyReferenceExpression.NonProperty = 表达式需要一个属性。“{0}”不是属性。
BizRules.Validation.PropertyReferenceExpression.OnlyRoot = 此输入是一个对象。但是，条件需要的是属性。请以“object.property”的形式输入一个属性。
BizRules.Validation.RightOperandMustBeEmpty = {BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase}必须为空
BizRules.Validation.RuleConditionLineTypeMismatch = {BizRules.ConditionBuilderPanelSet.LV.LeftOperandLowerCase}是一个{0}，但是{BizRules.ConditionBuilderPanelSet.LV.RightOperandLowerCase}是一个{1}，因此无法对它们进行比较。
BizRules.Validation.RuleLookupInputTypeMismatch = 所需的输入类型为{0}，但提供的输入类型为{1}。
BizRules.Validation.SumExpression.MustBeNumber = 此字段需要一个计算结果为数字的表达式，通常利用“{0}”中的字段。
BizRules.Validation.SumExpression.MustBeNumberGeneric = 此字段需要一个计算结果为数字的表达式，通常利用上面列表的元素中的字段。
BizRules.Validation.ThisExpression = 此表达式
BizRules.Validation.TypeKeyExpression.InvalidTypekey = {0}不是类型列表{1}上的类型键值
BizRules.Validation.TypeKeyExpression.InvalidTypelist = {0}不是类型列表
BizRules.Validation.UnknownCommandDefinitionParameters = 命令定义具有未知的操作参数{0}。
BizRules.Validation.UnterminatedStringLiteral = 文本“{0}”需要正确地使用双引号 (") 括起来。例如，"abc"。
BizRules.Validation.Variable.ConflictingNames = “{0}”已用于另一变量。请选择其它变量名称。
BizRules.Validation.Variable.ConflictingSymbolNames = 变量名称与现有内容符号不匹配。请选择其它变量名称。
BizRules.Validation.Variable.ExpressionContainsName = 变量表达式不能包含其它变量。请修改此表达式。
BizRules.Validation.Variable.ExpressionTypeNull = 此表达式将生成空类型（void或null）。请修改此表达式以评估值。
BizRules.Validation.Variable.HasNestedErrors = 嵌套表达式包含错误。
BizRules.Validation.Variable.IllegalCharacters = 变量名称不能包含保留关键字。请修改变量名称。
BizRules.Validation.Variable.MissingField = 此字段为必填。
BizRules.Validation.Variable.SyntacticallyIncorrectName = 变量名称必须以字母开头且只能包含字母或数字。
BizRules.Validation.Visibility.MethodIsHidden = 类型{0}上的{1}是一个隐藏方法。规则不能使用隐藏方法。
BizRules.Validation.Visibility.MethodIsHidden.SuggestedOptions = 可见的方法名称相同但参数不同：{0}
BizRules.Validation.Visibility.MultipleInheritance = 列入黑名单和白名单的方法可能会由于多重继承而在类型{0}上发生冲突。{2}上方法的可见性将覆盖{1}上的方法。
BizRules.Validation.Visibility.OverloadedMethodExists = 类型{0}上的{1}的参数数量错误。
BizRules.Validation.Visibility.PropertyIsHidden = 类型{0}上的{1}是一个隐藏属性。规则不能使用隐藏属性。
BizRules.Validation.Visibility.TypeLiteral = 只能使用类型列表的名称。“{0}”不是类型列表。
BizRules.VersionController.AlreadyDeployed = 规则“{0}”的此版本已部署。
BizRules.VersionController.CannotDelete.MultiplePreviousVersions = 由于有多个以前的版本，因此无法删除此版本。
BizRules.VersionController.MergeVersionCannotBeDeleted = 无法删除规则“{0}”的此版本，因为它用于解决一个导入冲突。
BizRules.VersionController.NewerVersionAvailable = 规则“{0}”有更新的版本可用。
BizRules.VersionController.NoRulesQualifyForDeployment = 选定的规则均不符合部署条件。
BizRules.VersionController.NoRulesSelectedForDeployment = 未选定要部署的规则。
BizRules.VersionController.RuleLockedForUpdate = 无法编辑或导入“{0}”（规则ID：“{1}”），因为此规则已有待处理的导入。
BizRules.VersionController.RuleVersionDeleted = 规则“{0}”的此版本已删除。
BizRules.VersionController.Version.Discarded = -
BizRules.VersionController.Version.Evaluated = 已评估
BizRules.VersionController.Version.NumberAndDeploymentId = {0}.{1}
BizRules.VersionController.Version.WithStatus = {0}（{1}）
BizRules.VersionController.Version.WorkInProgress = {0}+
Builder.BAModifier.Error.InvalidPattern = 找不到模式为{0}的修饰符
Builder.BAModifier.Error.InvalidPatternCode = 无法找到代码为{0}的修饰符模式
Builder.BusinessAuto.Jurisdiction.Error.CouldNotAdd = 无法为{0}添加管辖权
Builder.BusinessAuto.Jurisdiction.Error.NoState = 请为承保的省建筑商提供省/直辖市
Builder.BusinessVehicle.EULocationBuilder.Error.CreateNotCalled = 类型为{0}的建筑商无法用于设置EULocation属性，因其create（）方法未调用。
Builder.BusinessVehicle.Error.DuplicateVin = 找到多辆使用同一车辆识别号码“{0}”的车辆
Builder.CPBuilding.Error.InvalidClassCode = 无法找到有效分类代码“{0}”
Builder.CPModifier.Error.InvalidPattern = 找不到模式为{0}的修饰符
Builder.CPModifier.Error.InvalidPatternCode = 无法找到代码为{0}的修饰符模式
Builder.PersonalVehicle.LocationBuilder.Error.CreateNotCalled = 类型为{0}的建筑商无法用于设置GarageLocation属性，因其create（）方法未被调用。
Builder.RatingPeriodStartDate.Error.CannotCreate = 无法创建日期为{1}、类型为{0}费率期开始日期(RPSD)
Builder.WCCoveredEmployee.Error.InvalidClassCode = 在{2}中找不到省/直辖市“{1}”可用的类代码“{0}”。在示例数据中查找一个现有的类代码，或者使用WCClassCodeBuilder创建一个类代码。
Builder.WCModifier.Error.InvalidPattern = 找不到模式为{0}的修饰符
Builder.WCModifier.Error.InvalidPatternCode = 无法找到代码为{0}的修饰符模式
Bundle.BeanNotFound = 找不到ID为{1}的{0}类型的bean。
Bundle.EntityNotFound = 找不到公共ID为{1}的{0}类型的PolicyCenter实体。
Bundle.RequiredFieldIsNull = 必填字段{0}为空。
BundleState.Error.ChildModification = Bean无法在子线程中修改 - {0}
BundleState.Error.ChildModification.AfterNotBefore = 在子Bundle而非主Bundle中；
BundleState.Error.ChildModification.BeforeNotAfter = 在主Bundle而非子Bundle中；
BundleState.Error.ChildModification.ListHeader = bean，ID：
BundleState.Error.EffDatedBeanNotFound = 主Bundle中带生效日期的bean应当已经复制到与子线程相关联的Bundle中，但是未找到它。
BundleState.InsertedBeans = 已插入的Bean：
BundleState.RemovedBeans = 已移除的Bean：
BundleState.UpdatedBeans = 已更新的Bean：
BusinessAuto.Location.CannotDelete.HasFutureVehicles = 以下车辆会在之后的日期停放在此地点，必须先移除：{1}上的{0}。
BusinessAuto.Location.CannotDelete.HasVehicles = 下列车辆停在此地点，必须先移除： {0}.
BusinessAuto.Vehicle.AdditionalInterest.Error.AdditionalInterestIsWrongType = 商用车其他权益方的类型必须为BAVhcleAddlInterest，但找到类型却是{0}
BusinessAuto.Vehicle.AdditionalInterest.LVLabel = 商务车
BusinessAuto.Vehicle.CloneVehicles.Error.NoVehiclesAreSelected = 未选择任何车辆。请至少选择一个车辆才能克隆
BusinessAuto.Vehicle.CloneVehicles.Error.NoWizardLocationIsFound = 未找到向导位置
BusinessAuto.Vehicle.InvalidClassCode = 车辆类代码无效。请使用选择器选择有效的车辆代码。
BusinessAuto.Vehicle.NoState = 商务车地点或省/直辖市不能为空
BusinessOwners.Building.AdditionalInterest.Error.AdditionalInterestIsWrongType = 中小企业财产责任险（筑物险）其他权益方的类型必须为BOPBldgAddlInterest，但找到类型却是{0}
BusinessOwners.Building.AdditionalInterest.LVLabel = 建筑物
BusinessOwners.Building.CannotDelete.HasBOPBuilding = 无法移除建筑物{0}，因为中小企业财产责任险种正在使用该建筑物。
BusinessOwners.Building.CannotDelete.HasFutureBOPBuilding = 建筑物{0}无法移除，因为{1}上的中小企业财产责任险种正在使用该建筑物。
BusinessOwners.Location.CannotDelete.HasBOPLocation = 无法移除地点{0}，因为中小企业财产责任险种正在使用该地点。
BusinessOwners.Location.CannotDelete.HasBuilding = 地点{0}无法移除，因为它至少有一幢建筑物。
BusinessOwners.Location.CannotDelete.HasFutureBOPLocation = 地点{0}无法移除，因为{1}上的中小企业财产责任险种正在使用该地点。
BusinessWeek.BusinessDayDemarcation = 当事件跨越两天的工作时间时，此值有助于确定事件所属的工作日。此值不可设置在工作时间之内。
Button.Activate = 激活
Button.Add = 添加
Button.AddressAutoFill.Cancel = 手动
Button.AddressAutoFill.Use = 自动填充
Button.AddressBook.Search = 通讯簿搜索
Button.AddressBook.View = 查看通讯簿条目
Button.Assign = 分配
Button.AuditPackage = 创建审计包
Button.Cancel = 取消
Button.Clear = 清除
Button.Close = 关闭
Button.CloseWorksheet = 关闭工作表
Button.Collapse = 全部折叠
Button.Complete = 完成
Button.Complete.Download = 完成下载
Button.Contact.CopyFromAddressBook = 从通讯簿中复制
Button.Contact.ViewAddressBook = 查看通讯簿
Button.Continue = 继续 >
Button.CopyPolicyHold = 复制保单搁置
Button.CreateNew = 创建新联系人
Button.Deactivate = 取消激活
Button.Delete = 删除
Button.DeleteUser = 删除用户
Button.Details = 详细信息
Button.Disable = 禁用
Button.DiscardBrokenLink = 放弃断开的链接
Button.Done = 完成
Button.Download = 下载
Button.Duplicate = 复制
Button.Edit = 编辑
Button.EffectiveDateChange = 下一步>
Button.Enable = 启用
Button.End = 结束
Button.EnterNew = 输入新值
Button.Execute = 执行
Button.Expand = 全部展开
Button.Filter = 应用过滤器
Button.Finish = 完成
Button.Hide = 隐藏
Button.LinkToAddressBook = 链接
Button.Next = 下一步
Button.No = 否
Button.Now = 立即
Button.OK = 确定
Button.OverrideRating = 覆盖费率
Button.PolicyHold = 保单搁置
Button.Previous = 返回
Button.Print = 打印
Button.PrintQuote = 打印报价
Button.Refresh = 刷新
Button.RelinkToAddressBook = 重新链接
Button.Remove = 移除
Button.Reset = 重置
Button.ResetSearchCriteria = 重置
Button.Restart = 重新启动
Button.RestartAll = 全部重启
Button.RestartMessagingEngine = 重新启动消息引擎
Button.Resume = 恢复
Button.ResumeAll = 全部恢复
Button.Resync = 重新同步
Button.Resync.Tooltip = 跳过所有挂起消息并发起重新同步事件
Button.Retry = 重试
Button.Retry.Tooltip = 重试失败的消息
Button.Save = 保存
Button.SaveAll = 全部保存
Button.SaveDraft = 保存草案
Button.Search = 搜索
Button.Search.Contacts = 搜索联系人
Button.Search.Users = 搜索用户
Button.Select = 选择
Button.SelectPolicy = 选择保单
Button.ShowDocument = 显示单证
Button.Shuttle.Add = 添加 ->
Button.Shuttle.Remove = <- 移除
Button.Skip = 跳过
Button.Skip.Tooltip = 跳过消息
Button.SkipBlocking = 跳过第一条
Button.SkipBlocking.Tooltip = 跳过主要对象的第一条拦截消息
Button.Split = 拆分
Button.StartCancellation = 开始取消
Button.StartPolicyChange = 下一步>
Button.Suspend = 暂停
Button.Today = 今天
Button.UnHide = 取消隐藏
Button.Unselect = 取消选择
Button.Update = 更新
Button.Upload = 上传
Button.View = 查看
Button.ViewInBillingCenter = 在BillingCenter中查看
Button.ViewOverrides = 查看覆盖
Button.Wizard.Add = 添加 >
Button.Worksheet = 显示费率厘定工作表
Button.Worksheet.Download = 下载
Button.Worksheet.Download.Tooltip = 以 CSV 或 HTML 格式下载工作表
Button.Worksheet.DownloadCSV = CSV
Button.Worksheet.DownloadCSV.Tooltip = 以 CSV 格式下载工作表
Button.Worksheet.DownloadHTML = HTML
Button.Worksheet.DownloadHTML.Tooltip = 以 HTML 格式下载工作表
Button.Worksheet.HideConditionals = 隐藏条件
Button.Worksheet.ShowConditionals = 显示条件
Button.Worksheet.ShowConditonals.Tooltip = 显示 IF 语句的所有路径，而不仅仅是基于条件获得的路径
Button.Yes = 是
CCPolicySearchIntegration.Endorsement.Comment = 批单号{0}
Cancellation.FuturePeriod.Cancel.Description = 此保单已取消，导致对保单{1}的续保启动了取消{0}
Cancellation.FuturePeriod.Cancel.Subject = 对保单{0}的续保启动了取消
Cancellation.FuturePeriod.Error.UWIssueTypeNotFound = 错误：未找到{0}类型的核保项。保单{1}的续保需要核保人审查。
Cancellation.FuturePeriod.UWIssue.Description = 保单{1}已取消。阻止对续保{0}进行核保人审核
Cancellation.FuturePeriod.UWIssue.Subject = 保单{0}的续保无法承保
Cancellation.FuturePeriod.Withdraw.Description = 保单{1}已取消，这导致了续保{0}撤消
Cancellation.FuturePeriod.Withdraw.Subject = 保单{0}的续保已撤消
CancellationAPI.Error.CannotCancel = 保单{0}无法取消：{1}
CancellationAPI.Error.InvalidJobNumber = 作业号{0}无效
CancellationAPI.Error.PolicyAndDateNotFound = 未找到起始日期为{1}的保单{0}的期间。
CancellationAPI.Error.ReasonCodeMismatch = 原因代码“{1}”对源“{0}”无效
CancellationAPI.Rescind.Error.AlreadyCompleted = 此取消操作无法再进行撤销，因为取消已完成
CancellationAPI.Rescind.Error.AlreadyRescinded = 取消已撤销或正在撤销
CancellationAPI.Rescind.Error.NotCancellation = 预期找到取消，但找到{0}
CancellationAPI.Rescind.Error.NumberOfMatchingJobs = 预计找到一个保单交易，但找到{0}个
ChargeBreakdown.Type.Unknown = 未知
ChargeInfo.Breakdown.Description.Other = 其它
CommercialProperty.Building.AdditionalInterest = 其他权益方
CommercialProperty.Building.AdditionalInterest.Error.AdditionalInterestIsWrongType = 商业地产建筑其他权益方的类型必须为CPBldgAddlInterest，但找到类型却是{0}
CommercialProperty.Building.AdditionalInterest.LVLabel = 建筑物
CommercialProperty.Building.CannotDelete.HasCPBuilding = 无法移除建筑物{0}，因为企业财产保单险类正在使用该地点。
CommercialProperty.Building.CannotDelete.HasFutureCPBuilding = 建筑物{0}无法删除，因为其正由{1}上的企业财产保单险类使用。
CommercialProperty.Building.NewBuilding = 新建建筑物
CommercialProperty.Location.CannotDelete.HasCPLocation = 无法移除地点{0}，因为企业财产保单险类正在使用该地点。
CommercialProperty.Location.CannotDelete.HasFutureCPLocation = 无法移除地点{0}，因为{1}上的企业财产保单险类正在使用该地点。
Companies = 公司
ConfigFileHandlerValidator.HandlerClass.InstantiationError = 不可实例化的处理程序类。请检查完全限定类名是否正确。
ConfigFileHandlerValidator.HandlerClass.InvalidParentError = 提供的处理程序的父类无效。应为{0}
Contact.MergeAddresses.Error.MergedAddressCannotBePrimary = 无法合并地址，因为合并的地址{0}是主要地址
Contact.MergeAddresses.Error.MergedAddressNotOnContact = 无法合并地址{0}，因其与联系人{1}无关
Contact.MergeAddresses.Error.NullContactArgument = 无法合并地址，因为未找到地址为{0}： {1}的联系人
Contact.MergeAddresses.Error.NullMergedAddress = 无法合并空地址
Contact.MergeAddresses.Error.NullSurvivorAddress = 无法合并到空联系人地址
Contact.MergeAddresses.Error.SurvivorAddressNotOnContact = 无法合并到地址{0}，因其不在联系人{1}上
Contact.MergeAddresses.Error.SurvivorAddressSameAsMergedAddress = 无法将地址{0}与自身合并
Contact.MergeContacts.Error.DifferentContactSubTypeArgument = 无法将{0}联系人与{1}联系人合并。
Contact.MergeContacts.Error.NullContactArgument = 无法合并空联系人
Contact.MergeContacts.Error.SameContactArgument = 无法合并联系人自己
Contact.Search.Warning.NoExternalResults = 警告：本地PolicyCenter已显示结果，但外部联系人系统回复一条错误消息：\n“{0}”
Contact.Subtypes.Company = 机构
Contact.Subtypes.Person = 个人
ContactAPI.CantFindContact = 找不到ID为{0}的联系人。
ContactAPI.Error.DeleteContact.ContactUsedByAccount = 无法移除联系人{0}，因其正被账户{1}使用
ContactConfigPlugin.Error.AbstractAccountContactRole = ContactConfig插件配置错误：{0}是抽象账户联系人角色
ContactConfigPlugin.Error.AbstractPolicyContactRole = ContactConfig插件配置错误：{0}是抽象保单联系人角色
ContactConfigPlugin.Error.MultipleAccountContactRoles = ContactConfigPlugin配置错误：AccountContactRole {0}无法映射多次。
ContactConfigPlugin.Error.MultiplePolicyContactRoles = ContactConfig插件配置错误： 保单联系人角色{0}无法多次映射。
ContactConfigPlugin.Error.RetiredAccountContactRole = ContactConfigPlugin配置错误：{0}是注销的AccountContactRole
ContactConfigPlugin.Error.RetiredPolicyContactRole = ContactConfig插件配置错误：{0}是注销的保单联系人角色
ContactConfigPlugin.Error.UnconfiguredAccountContactRole = ContactConfigPlugin配置错误：{0}未注销，仍然存在，但没有配置。
ContactConfigPlugin.Error.UnconfiguredPolicyContactRole = ContactConfigPlugin配置错误：{0}未注销，仍然存在，但没有配置文件。
ContactQueryBuilder.Error.PersonAndCompanyNameCriteria = 无法同时使用个人姓名和公司名称条件搜索联系人。
CoverableAdapter.Error.ConditionsNotImplemented = 此承保项未实施条款
CoverableAdapter.Error.CoveragesNotImplemented = 此承保项未实施承保范围
CoverableAdapter.Error.ExclusionsNotImplemented = 此承保项未实施免责项
CoverableTemplateGenerator.Error.Duplicates = 无法为“{0}”创建唯一值：{1}
DisplayName.EmptyAddress = <空>
Document.Create = 创建单证
Document.Create.Message = 单击{1}时将附加{0}
Document.Download.Error.WidgetFile = 下载控件“{0}”的文件时发生意外错误。
Document.Download.Failure.Content = 无法验证下载内容。服务器可能已关闭。
Document.Download.Failure.Popup = 下载内容的弹出窗口被阻止。
Document.Download.Failure.Reason = ：<p/><span style\='font-size\:smaller'>{0}</span>
Document.Download.Failure.ReasonFailure = <p/>无法提取下载失败原因
Document.Download.Failure.ReasonFailure.IENote = <p/>尝试在“Internet选项”中禁用“显示友好HTTP错误消息”
Document.Location.Label = 单证位置
Document.Restore.Error.Filename = ##加载PublicID {0}时出错##
Document.Upload.Failure.MimeType = 您的管理员不允许上传{1}。
Document.Upload.Failure.Size = {0}个文件超过了{1} MB的单个文件最大大小并被拒绝：
Document.Upload.Failure.TotalCount = 选定了{0}个文件，超出了允许的剩余数量{1}。\n请少选择一些文件并重试。
Document.Upload.Failure.TotalSize = {0}个文件被拒绝，因为这些文件要求{1} MB，这超出了剩余可用空间({2} MB)。请选择少一些文件或者其它文件，然后重试。
Document.Upload.Progress.Banner = 正在上传文件...
Document.Upload.Progress.Percent = {0}%
Document.UploadFailure = 无法更新选定的单证。请重试，如果问题持续存在，请联系您的管理员。
Document.ViewEdit.BrowseAndUpload = 浏览并上传
Document.ViewEdit.EditedLabel = 是（需要上传已编辑的版本）
Document.ViewEdit.Link = 查看/编辑
Document.ViewEdit.PromptEdit = 是否编辑过单证？
Document.ViewEdit.PromptUse = 是否使用此单证？
Document.ViewEdit.UploadedLabel = 是
Document.ViewEdit.ViewedLabel = 否
Document.ViewFailure = 无法查看选定的单证。可能是它尚未提交到数据库中，或者是存在其它错误。请重试；如果问题持续存在，请联系您的管理员。
DocumentProduction.Debug.SelectedTemplate = 对于保单期限：{0}文件类型\={1}模板\={2}
DocumentProduction.Error.BindingNotSupported = 不支持投保类型{0}
DocumentProduction.Error.PluginDisabled = 无法打印单证，因为单证生成已禁用或者不可用。请联系您的管理员。
DocumentProduction.Error.ResponseNotDocumentContents = IDocumentProduction实施必须返回要从规则调用的单证内容
DocumentProduction.Error.TemplateNotFound = 找不到用于{0}的任何模板
DocumentProduction.Error.ValueToMatchType = {0}要匹配的值必须是字符或字符串[];为： {1}
DocumentProduction.Warning.NoTemplateForPeriod = 对于保单期限：{0}为在{2}有效的{1}找不到适当的模板
DocumentTemplate.AddedASymbol = 已向符号表中添加一个名为“{0}”且类型为“{1}”的符号
DocumentTemplate.CouldntFindType = 在“requiredsymbols”属性“{2}”中找不到符号“{1}”的类型“{0}”({3})
DocumentTemplate.CouldntLoadDescriptor = 无法加载单证模板描述符；请确认您已输入有效的单证模板名称（名称区分大小写）。另请检查服务器控制台上是否有错误。
DocumentTemplate.CouldntLoadDocumentTemplate = 无法加载单证模板{0}；请检查模板描述符中的模板名称是否正确。请注意，模板名称区分大小写。
DocumentTemplate.DocTypeValidationFailed = {0}({1})的值无效；请确保指定了有效的单证类型代码
DocumentTemplate.ErrorSummary = 错误摘要：\n
DocumentTemplate.ErrorsFor = 错误针对：
DocumentTemplate.ExpressionTypeValidation = 表达式类型验证\n
DocumentTemplate.FieldHasNoValue = 没有为FormField定义值：
DocumentTemplate.FileImport = 文件导入\n
DocumentTemplate.FormFieldDuplicate = 表格字段定义了多次（未定义行为）：
DocumentTemplate.FormFieldValidationFailed = 表格字段验证失败：{0}，值：{1}；错误详细信息：{2}
DocumentTemplate.FoundNTemplates = 找到了{0}个要验证的模板。正在开始验证...
DocumentTemplate.InvalidSymbol = “requiredsymbols”属性“{1}”中的符号名称“{0}”无效
DocumentTemplate.LookingForDescriptor = 查找具有以下名称的单证模板描述符：{0}
DocumentTemplate.MultipleContextObjectDefs = 上下文对象定义了多次（使用最后一个定义）：
DocumentTemplate.OperationFailed = 操作失败！\n\n
DocumentTemplate.OperationSuccessful = 操作成功！\n
DocumentTemplate.OperationSuccessfulWithWarnings = 操作成功，但出现警告！\n\n
DocumentTemplate.ReqSymbolsInvalidSyntax = “requiredsymbols”属性“{0}”中的语法无效
DocumentTemplate.RequiredSymbols = “requiredsymbols”属性“{0}”具有符号“{1}”的多个定义；使用最后一个定义
DocumentTemplate.SectionTypeValidationFailed = {0}({1})的值无效；请确保指定了有效的部分代码
DocumentTemplate.SecurityTypeInvalidTemplate = {0}({1})的值无效；请确保指定了有效的单证安全类型代码
DocumentTemplate.SourceRetrievalException = 尝试检索单证模板源(IDocumentTemplateSource)时出现异常：
DocumentTemplate.SystemPermissionInvalidTemplate = {0}({1})的值无效；请确保指定了有效的系统权限代码
DocumentTemplate.TypeMismatch = 发现上下文对象{0}的类型不一致；应当为{1}，实际为{2}
DocumentTemplate.UnusedCtxObj = 找到一个已定义但从未使用的上下文对象：
DocumentTemplate.ValidatingContextObjectExpressions = 正在验证ContextObject表达式...
DocumentTemplate.ValidatingDescriptor = 验证单证模板描述符：{0}
DocumentTemplate.ValidatingFormFieldExpressions = 正在验证FormField表达式...
DocumentTemplate.ValidatingMisc = 正在验证其它单证类型列表设置...
DocumentTemplate.ValidatingPermissionsSettings = 正在验证权限设置...
DocumentTemplate.ValidationFailed = 上下文对象验证失败：{0}，值：{1}；错误详细信息：{2}
DocumentTemplate.ValidationFailedException = 上下文对象验证失败：{0}，值：{1}；错误详细信息：{2}
DocumentTemplate.ValidationFailedWrongType = 上下文对象{0}的验证失败，可能的值表达式({1})必须为集合、映射或数组，但实际为：{2}
DocumentTemplate.WarningSummary = 警告摘要：\n\n
EMailAPI.ExceptionCaught = 在{0}上捕获。
EffDated.Merge.Error.DifferentBranch = {0}：“{1}”在分支“{2}”上，不能与不同分支“{4}”上的{0}“{3}”合并。两个{0}行仅在位于相同分支上时才可合并。
Entity.NewlyCreated = （新建）
EntityName.Account.Validation = 账户“{0}”
EntityName.AccountLocation.ByAddress = {0}\: {1}
EntityName.AccountLocation.ByName = {0}\: {1}
EntityName.AssignableQueue = {0} - {1}
EntityName.BAHiredAutoBasis = 租用汽车基础
EntityName.BAJurisdictionCost = {0} {1}
EntityName.BANonOwnedBasis = 非自有基本信息
EntityName.BAStateCovVehiclePIPCost = {0}的人身伤害险承保范围
EntityName.BOPClassCode = {0} - {1}
EntityName.Building.byDescription = {0}\: {1}
EntityName.Building.byNumber = {0}：建筑物编号{0}
EntityName.BusinessVehicle.InState = 在{0}中
EntityName.BusinessVehicle.NewlyCreated = （新建）
EntityName.CPClassCode = {0} - {1}
EntityName.ContactContact = 源\={0}关系\={1}相关联系人\={2}
EntityName.ContrEquipCovCost = {1}中的{0}
EntityName.ContractorsEquipment.NoDescription = （无说明）
EntityName.CoverageSymbol.Ten = 10 - {0}
EntityName.CoverageSymbolGroup.Validation = 承保范围符号组“{0}”
EntityName.EffectiveDatedFields = 保单号{0}
EntityName.Form.Validation = 表格“{0}”
EntityName.FormPattern = {0} - {1} [{2}]
EntityName.FormPatternLookup = FormPatternLookup
EntityName.GLExposure = 地点{1}的{0}
EntityName.GLStateCost = {0} {1}
EntityName.GroupRegion = {0}--{1}
EntityName.HOPSwimmingPool = 游泳池({0})
EntityName.InclusionPerson = {0} {1} ({2})
EntityName.LocationRisk = 地点{0}
EntityName.Modifier.InState = \ ({0})
EntityName.Modifier.Validation = 调整系数“{0}”
EntityName.OfficialID = {0}, {1}, {2}
EntityName.PMLockedField = {0}\: {1}
EntityName.PersonalVehicle.InState = 在{0}
EntityName.PersonalVehicle.NewlyCreated = （新建）
EntityName.PolicyLine.Validation = 保单险类“{0}”
EntityName.PolicyLine.Validation.AddlInterestDetailUnique = 有多个其他权益方益条目 - {0}个具有相同的权益方类型和合同编号。
EntityName.PolicyLocation.ByAddress = {0}\: {1}\t
EntityName.PolicyLocation.ByName = {0}\: {1}
EntityName.PolicyLocation.Validation.ByAddress = 保单地点“{0}： {1}”
EntityName.PolicyLocation.Validation.ByName = 保单地点“{0}：{1}”
EntityName.PolicyPeriod = {0}, {1}, {2}, {3}
EntityName.PolicyPeriod.PolicyNumber.Unassigned = 未分配
EntityName.PolicyPeriod.Validation = 保单期限“{0}”
EntityName.PolicyPeriodSummary.BranchNumber = #{0}
EntityName.PolicyPeriodSummary.Header = 保单期限摘要：{0}
EntityName.PolicyPeriodSummary.PolicyChange = 更改：
EntityName.PolicyPeriodSummary.Reinstatement = 复效：
EntityName.PolicyPeriodSummary.Submission = 投保单：
EntityName.PolicyPeriodSummary.Unassigned = 未分配
EntityName.PolicyPeriodSummary.Version = 版本
EntityName.PolicyRisk = 保单级别
EntityName.ProductModifier.Validation = 调整系数“{0}”
EntityName.RIAgreement = {0} - {1}
EntityName.RIRisk = 再保险风险{0} ({1} - {2})
EntityName.RateFactor.Validation = 计划贷方“{1}”的费率因子“{0}”
EntityName.RatingPeriodStartDate = 费率期开始日期(RPSD)：{0}, {1}
EntityName.UpdateBatch = \\nCreateUpdateOps\:\\n{0}\\nDeleteUpdateOps\:\\n{1}\\nFieldChangeUpdateOps\:\\n{2}
EntityName.UserRegion = {0}--{1}
EntityName.UserRoleAssignment = {0} - {1}
EntityName.WCAircraftSeat = {0} ({1})
EntityName.WCClassCode = {0} - {1}
EntityName.WCCovEmpCost = {1}的{0}承保范围
EntityName.WCCoveredEmployee.ByLocationAndClass = 地点{0}类{1}
EntityName.WCCoveredEmployee.ByLocationOnly = 地点{0}
EntityName.WCFedCoveredEmployee.ByLocationAndClass = 地点{0}类{1}
EntityName.WCFedCoveredEmployee.ByLocationOnly = 地点{0}
EntityName.WCRetrospectiveRatingPlan = 计算日期{0} - {1}
EntityName.WCWaiverOfSubro.Blanket = 统括： {0} （{1}）
EntityName.WCWaiverOfSubro.Specific = 具体： {0} （{1}）
EntityName.Workflow = {0}.{1}-{2}
Error.Annotation.Exception = 捕获异常： {0}
Error.Annotation.Invalid.Parameter.Type = 方法{0}形式参数{1}具有无效类型
Error.Annotation.Invalid.Return.OneWay = 单向方法{0}具有非void返回类型
Error.Annotation.Invalid.Return.Type = 方法{0}具有无效返回类型
Error.Annotation.Invalid.XML.Anonymous.Type = 方法{0} {1}正在尝试使用匿名xml类型或元素
Error.Annotation.Operation.Duplicate = 方法{1}使用重复操作名称{0}
Error.Annotation.Operation.Invalid = 方法{1}具有无效操作名称“{0}”
Error.Annotation.Type.Parent = 此批注的父类无效。应该为{0}
Error.ByteArray.BufferSizeExceeded = 已超过缓冲区大小。尝试向缓冲区写入{0}字节，但限制为{1}字节。
Error.ByteArray.InitialSizeBiggerThanLimit = 初始缓冲区大小（{0}字节）超过了缓冲区限制（{1}字节）。
Error.ByteArray.InvalidBufferLimit = 缓冲区限制{0}无效。
Error.Document.FailedToDownload = 无法下载单证 - {0}
Error.Document.FailedToUpload = 无法上传单证 - {0}： {1}
Error.Email.InvalidDocument = 无法附加选定单证，因为无物理文件与其相关联。
Error.GeneralNoPermission.Text = 您无权查看此页面。请使用上方的菜单导航到其它位置。如果您确信应该具有查看此页面的权限，请联系系统管理员。
Error.GeneralNoPermissionPopup.Text = 您无权查看此页面。如果您确信应该具有查看此页面的权限，请联系系统管理员。
Export.Action = 操作
Export.Action.Add = 添加
Export.Action.Delete = 删除
Export.CPBuilding.Address = 地址
Export.CPBuilding.BuildingCoverageLimit = 建筑物险限额
Export.CPBuilding.BuildingID = 建筑物ID
Export.CPBuilding.BusIncomeMfgLimit = 营业制造收益限额
Export.CPBuilding.BusIncomeOtherLimit = 其它营业收益限额
Export.CPBuilding.BusIncomeRentalLimit = 营业租赁收益限额
Export.CPBuilding.BusinessPersonalPropertyCoverageLimit = 商业个人财产险限额
Export.CPBuilding.City = 市
Export.CPBuilding.ClassCode = 分类代码
Export.CPBuilding.Country = 国家/地区
Export.CPBuilding.CoverageForm = 险别形式
Export.CPBuilding.ExtraExpenseCoverageLimit = 额外赔付明细险别限额
Export.CPBuilding.LocationID = 地点ID
Export.CPBuilding.LocationName = 地点名称
Export.CPBuilding.PostalCode = 邮政编码
Export.CPBuilding.PreferredCoverageCurrency = 首选险别货币
Export.CPBuilding.RateType = 费率类型
Export.CPBuilding.State = 省/直辖市
Export.CPBuilding.TerritoryCode = 地区代码
Export.CPLocation.Address = 地址
Export.CPLocation.City = 市
Export.CPLocation.Country = 国家/地区
Export.CPLocation.County = 区/县
Export.CPLocation.FireProtection = 消防
Export.CPLocation.LocationCode = 代码
Export.CPLocation.LocationID = 地点ID
Export.CPLocation.LocationName = 地点名称
Export.CPLocation.Phone = 电话
Export.CPLocation.PostalCode = 邮政编码
Export.CPLocation.PrincipalOpsDesc = 主要操作
Export.CPLocation.State = 省/直辖市
Export.CPLocation.TaxLocation = 纳税地点
Export.CPLocation.TerritoryCode = 地区代码
Export.DataValidation = DataValidation
Export.ScratchPad = 空{0}
Export.ValidationList = ValidationList
ExportImport.Entity.AbstractType = [ {0}]“{0}”是抽象的。无法导入抽象实体；只能导入具体的子类型实例。正在跳过实体。
ExportImport.Entity.ConfigServiceAdminDataType = 不允许导入实体类型{0}，因为它由配置服务管理。导入已回滚。请从导入数据中移除此实体类型后重试。
ExportImport.Entity.Duplicated = 具有公共ID“{1}”的{0}已经在同一个导入文件中定义。已跳过重复的实体。
ExportImport.Entity.GeneralError = [ {0}]意外错误：{2}。正在跳过实体。
ExportImport.Entity.MissingPublicId = [ {0}]必须定义“public-id”属性以标识该实体。正在跳过实体。
ExportImport.Entity.TypeHasNoKey = [ {0}]“{0}”是非键值实体。无法导入非键值实体。正在跳过实体。
ExportImport.Entity.UnknownType = “{0}”不是有效的实体名称。正在跳过实体。
ExportImport.Error.RollingUpgradeInProgress = 正在进行滚动升级。
ExportImport.Export.EntityTypeForbidden = 不允许导出实体类型“{0}”。仅允许导出配置服务支持的实体类型。
ExportImport.Export.EntityTypeIsNotEditable = 实体类型“{0}”必须可编辑才能按修改日期进行过滤
ExportImport.Export.EntityTypeIsNotKeyable = 实体类型“{0}”必须为可定义键才能导出
ExportImport.Export.EntityTypeIsNotProvided = 实体类型是必填字段
ExportImport.Export.EntityTypeUnknown = 未知实体类型“{0}”
ExportImport.Field.Array.InvalidOwner = [ {3}({4}).{2} ]外键引用的容器有误。请将字段设置为{3}({4})
ExportImport.Field.GeneralError = [ {0}({1}).{2} ] 意外错误：{3}。正在跳过字段
ExportImport.Field.InvalidReference = [ {3}.{2} ]不存在类型为“{3}”且“public-id \= {4}”的实体。正在将该字段设置为null。
ExportImport.Field.InvalidValue.Other = [ {0}({1}).{2} ] - 正在跳过字段
ExportImport.Field.InvalidValue.TooLong = [ {0}({1}).{2} ] - 已截断为最大长度
ExportImport.Field.L10N.DisplayKeyAndLanguage = [ {0}({1}).{2} ] - 无法同时指定"displayKey"和“语言”
ExportImport.Field.L10N.DisplayKeyNonLocalized = [ {0}({1}).{2} ] - “displayKey”在非本地化字段上设置
ExportImport.Field.L10N.LanguageNonLocalized = [ {0}({1}).{2} ] -“语言”在非本地化字段上设置
ExportImport.Field.Required.InvalidValue = 在反序列化导入数据中必需字段{2}的节点值（针对实体{1}）时出现异常：{3}
ExportImport.Field.Required.MissingField = [ {0}]在实体节点{1}的导入数据中找不到必填字段{2}
ExportImport.Field.Required.MissingForeignKey = 在实体节点{1}的导入数据中无法为必填链接字段{2}加载PublicID为{4}的bean
ExportImport.Field.Required.NoValue = 必填字段{2}在实体{1}的导入数据中没有值
ExportImport.Field.UnknownField = [ {0}({1}).{2} ]字段“{2}”在“{0}”上不存在。忽略该字段。
ExportImport.General.CommitFailed = 提交数据时出错：{0}{1}
ExportImport.General.ImportElementNotFound = 找不到导入元素。
ExportImport.General.NegativeOrZeroValueForMaximumXmlExportLimit = 配置参数MaximumXmlExportSize被设置为负值或0。
ExportImport.Version.CurrentVersionMismatchForAdminData = 当前部署的版本{0}与预期部署版本{1}不匹配。
ExportImport.Version.MissingNewVersionForAdminData = 导入实际参数new-version不能为null或为空。
Forms.Generic.AllIssuanceAndChangeJobs = 所有出单和更改交易类型
Forms.Generic.GenericAdditionalInsuredForm = 已使用选定的额外被保险人类型
Forms.Generic.GenericAdditionalInterestForm = 已使用选定的额外权益方类型
Forms.Generic.GenericAlwaysAddedEveryJobForm = 没有为所有的保单交易类型添加额外的条件
Forms.Generic.GenericAlwaysAddedForm = 无附加条件
Forms.Generic.GenericClauseNonExistenceForm = 未使用选定的承保范围、条款或免责项
Forms.Generic.GenericClauseSelectionForm = 选定承保范围、条款或免责项已使用
Forms.Generic.GenericCovTermSelectionForm = 选定承保范围条款值已使用
Forms.Generic.GenericCoverableTypeKeyForm = 已选择选定类型列表值
Forms.Generic.Invalidated = 关联的表格失效
Forms.Generic.InvalidatedOrUpdated = 关联的表格无效或已更新
Global.AppName = PolicyCenter
GroupModel.PopulateGroup.Error.CannotFindForeignKeyBeanWithPublicID = 无法将外键设置为{0}，因为未找到具有publicID{1}的{0}。
GroupModel.PopulateGroup.Error.CannotMoveGroupFromOneOrganizationToAnother = 无法将组{0}移动到另一机构{1}，因为该组已经存在于机构{2}中
GroupModel.PopulateGroup.Error.ForeignKeyCannotBeNull = 在{1}上不能将外键{0}设置为空。
GroupModel.PopulateGroup.Error.ParentCannotBeNullForNonRootGroup = 除非该组是根组，否则其父项的外键不能为空
Gx.Model.Validator.Include.DeprecatedProperty = ({0})：已不建议使用“{1}”属性
Gx.Model.Validator.Include.EmptyPath = ({0})：Include path {1}为空
Gx.Model.Validator.Include.IncludePathAlreadyDefined = ({0})：已经定义Include {1}。
Gx.Model.Validator.Include.InvalidIncludeType = ({0})：在包含path\="{1}"的include语句中，type\="{2}"无效
Gx.Model.Validator.Include.NonLowerCaseModelReference = ({0})：{1}引用了非小写的模型{2}。可能会导致出现问题。
Gx.Model.Validator.Include.PropertyUndefinedOnModelType = ({0})：在{2}上未找到{1}
Gx.Model.Validator.Include.RedundantXmlType = ({0})：在包含path\="{1}"的include语句中，xmlType是冗余的
Gx.Model.Validator.IncludeType.InvalidTypecast = ({0})：类型转换{1}对模型类型{2}无效，无法执行
Gx.Model.Validator.IncludeType.LeafLevelProperty = ({0})：模型指定了{2}类型的{1}，这应是叶级别属性。
Gx.Model.Validator.IncludeType.NonExistingTypecast = ({0})：无法将{2}转换为非现有类型{1}
Gx.Model.Validator.IncludeType.PathNameDoesNotIndicateArrayButFeatureTypeDoes = ({0})：Include path指定了{1}，但该属性的功能类型是{2}。请在propertyName的两侧分别添加“[”和“]”
Gx.Model.Validator.IncludeType.PathNameIndicatesArrayButFeatureTypeDoesNot = ({0})：Include path将{1}指定为数组，但该属性的功能类型是{2}，不是数组
Gx.Model.Validator.IncludeType.PropertyTypeCannotBeCastToModelType = ({0}) 在包含include path\="{1}"的include语句中，属性类型({2})不能转换为所引用模型{3}的类型({4})
Gx.Model.Validator.IncludeType.PropertyTypeMismatchWithIncludeType = ({0})：在包含path\="{1}"的include语句中，无法从属性{3} ({4})的类型分配type\="{2}"
Gx.Model.Validator.IncludeType.TypeMismatchWithXmlType = ({0})：在包含path\="{1}"的include语句中，类型不匹配：type\="{2}"，xmlType\="{3}\:{4}"
Gx.Model.Validator.IncludeType.TypeWithoutXmlTypeMapping = ({0})：在包含path\="{1}"的include语句中，type\="{2}"没有受支持的xmlType映射
Gx.Model.Validator.Label.DuplicateLabels = ({0})：包含path\={1}的include语句具有重复的标签：{2}、{3}
Gx.Model.Validator.Label.DuplicateWithCaseMismatchAndInDifferentIncludes = ({0})：包含path\={1}和path\={2}的include语句具有重复的标签：{3}和{4}
Gx.Model.Validator.Label.InvalidLabel = ({0})：标签无效：{1}
Gx.Model.Validator.Label.NullOrEmptyLabel = ({0})：包含path\={1}的include语句的标签为null或空
Gx.Model.Validator.Model.EmptyModel = ({0})：模型为空
Gx.Model.Validator.Model.FailedToParse = ({0})：模型无法解析：{1}
Gx.Model.Validator.Model.IdenticalDuplicate = ({0})：模型具有完全相同的重复项。
Gx.Model.Validator.Model.IdenticalDuplicateWithCaseMismatch = ({0})：模型具有完全相同的重复项。有一个重复的模型名称使用了不同的大小写。
Gx.Model.Validator.Model.InvalidType = ({0})：Gx模型文件的类型无效：“{1}”
Gx.Model.Validator.Model.ModeTypeIsDeprecated = ({0})：已不建议使用模型类型“{1}”
Gx.Model.Validator.Model.ModelReferenceNotFound = ({0})：未找到对模型{1}的引用
Gx.Model.Validator.Model.NonIdenticalDuplicate = ({0})：模型具有不完全相同的重复项。
Gx.Model.Validator.Model.RecursiveGxModelDependencies = ({0})：递归Gx模型依赖性：{1}
Homeowners.Dwelling.AdditionalInterest.Error.AdditionalInterestIsWrongType = 住宅家庭财产险的其他权益方的类型必须为HOPDwellAddlInterest，但找到的类型是{0}
Homeowners.Dwelling.AdditionalInterest.LVLabel = 住宅
ImpactTestingPlugin.AlternateRatebooks.NotCommitted = 不支持未提交到数据库的影响测试费率手册
Import.Alerts.Errors = 导入时出现错误。请查看下方了解详细信息。
Import.Alerts.Fatal = 导入时出现严重错误。请查看下方了解详细信息。
Import.Alerts.Warnings = 导入时出现警告。请查看下方了解详细信息。
Import.BeanAction.Added = 已添加
Import.BeanAction.Edited = 已编辑
Import.BeanAction.Read = 读取
Import.BeanAction.Removed = 已移除
Import.Configuration.Errors.MissingColumnMetadata = 缺少{0}的导入/导出列元数据。
Import.Configuration.Errors.MissingParentColumnInfo = 无法在EntityInfo中找到按实体<{0}>的ParentEntityColumnPath“{1}”标识的列。
Import.Configuration.Errors.MissingParentEntityType = {0}必须在EntityInfo中指定ParentEntityTypeName属性值
Import.Configuration.Errors.NonUnaryAction = 只有单一列才能指定实体上的操作。
Import.Configuration.Errors.NonUnaryId = 只有单一列可以标识实体。
Import.Configuration.Errors.RequiresParentEntityIdColumn = EntityInfo：实体<{0}>缺少ParentEntityType为<{1}>的FlagsParentEntityId ColumnInfo
Import.Configuration.Errors.UnknownColumnType = 实体<{0}>列的未知类型：{1}
Import.Configuration.Errors.UnknownDependentColumn = 源中缺少DependentOn ColumnInfo<{0}>。
Import.Configuration.Errors.UnknownEntityType = 未知实体类型：{0}
Import.Configuration.Errors.UnknownHeaderDisplayKey = 未知页眉显示键值：{0}
Import.Configuration.Errors.UnspecifiedParentColumnInfo = 已为实体{0}指定ParentEntityTypeName，但必须同时指定ParentEntityColumnPath。
Import.SummaryLog.ReportBeanAction = {0}实体数量{1}：{2}{3}
Import.SummaryLog.Summary = 导入摘要：{0}
Import.Validation.Errors = {0}错误：{1}
Import.Validation.Errors.BadCovTermPattern = 不存在针对承保范围模式“{0}”的代码“{1}”。
Import.Validation.Errors.BadCovTermValue = 无法解析CovTerm值{0}。
Import.Validation.Errors.CannotModifyParentEntityField = 如果想要修改{0}的父实体，请使用用户界面或导出实体并编辑该电子表格。已尝试更改字段{1}。
Import.Validation.Errors.DuplicatePublicIds = 不允许行{0}具有重复id。
Import.Validation.Errors.FieldMustBeBlankForAction = {1}操作的{0}必须为空
Import.Validation.Errors.InvalidAction = {0}列值<{1}>无效
Import.Validation.Errors.InvalidNumber = 无法将“{0}”解析为数字（“{1}”）
Import.Validation.Errors.InvalidPublicID = 未找到类型为<{1}>且具有PublicID<{0}>的Bean。
Import.Validation.Errors.InvalidTypeKey = “{0}”在“{1}”中不是有效的代码
Import.Validation.Errors.MissingCovTerm = Import.Validation.Errors.MissingCovTerm \= 需要同时指定承保范围和 CovTerm\\\:   <Coverage>  .  <CovTerm>
Import.Validation.Errors.MissingDependentDataState = 无法解析受养人数据“省/直辖市”。
Import.Validation.Errors.NoClassCodeFound = 未找到含有代码“{0}”和省/直辖市“{1}”的类代码
Import.Validation.Errors.NoParentEntity = 未找到用于创建新<{1}>的父实体<{0}>
Import.Validation.Errors.NoTaxLocationsFound = 未找到含有代码“{0}”和省/直辖市“{1}”的纳税地点
Import.Validation.Errors.NoTerritoryCodesFound = 未找到含有代码“{0}”和省/直辖市“{1}”的地区代码
Import.Validation.Errors.NonExistingTerritoryCodes = 未找到地区代码
Import.Validation.Errors.RequiredField = {0}是必填字段：无法导入行。
Import.Validation.FatalErrors = {0}严重错误：{1}
Import.Validation.FatalErrors.BadEntityValue = 实体不存在 - {0}
Import.Validation.FatalErrors.DuplicateColumn = 多次指定列{1}的列头“{0}”！
Import.Validation.FatalErrors.IllegalFileFormat = 无法识别文件格式
Import.Validation.FatalErrors.InvalidPath = 未定义路径元素：<{0}>；列{2}的路径<{1}>包含未定义的元素。
Import.Validation.FatalErrors.InvalidPeriod = 不允许从其它保单导入数据。请从该保单导出数据，然后进行修改再重新导入。
Import.Validation.FatalErrors.MissingRequiredVariable = 缺少必填变量 - {0}
Import.Validation.FatalErrors.ModifyNotAllowed = 如果要修改现有{0}，请从该保单交易导出该电子表格并进行编辑
Import.Validation.FatalErrors.NoLanguageType = 语言类型不存在 - {0}
Import.Validation.FatalErrors.NoPeriodID = 未在电子表格文件中找到PeriodID
Import.Validation.FatalErrors.RequiredColumn = 缺少必填列 - {0}
Import.Validation.Warnings = {0}警告：{1}
Import.Validation.Warnings.IgnoreColumn = 列{0}的列头为空。
Import.Validation.Warnings.UnknownColumn = 未注册列{1}的列头“{0}”。
Import.ValidationMapper.BadValue = 无效值：{0}
Import.ValidationMapper.Column = 列：{0}
Import.ValidationMapper.IssueReason = 签发原因：{0}
Import.ValidationMapper.IssueType = 签发类型：{0}
InboundFile.Checksum = 校验和
InboundFile.Config = 配置
InboundFile.Config.ArchiveBucket = 存储存储桶
InboundFile.Config.ArchiveDir = 存档目录
InboundFile.Config.ArchivePrefix = 存档前缀（目录路径）
InboundFile.Config.ChunkSize = 区块大小
InboundFile.Config.DaysTillPurge = 清除前的剩余天数
InboundFile.Config.HandlerClass = 文件处理程序类
InboundFile.Config.HandlerClass.Full = 类的完全限定名称
InboundFile.Config.InboundFileConfigs = 入站文件配置
InboundFile.Config.InputBucket = 输入存储桶
InboundFile.Config.InputDir = 输入目录
InboundFile.Config.InputPrefix = 输入前缀（目录路径）
InboundFile.Config.LocalConfig = 本地存储配置
InboundFile.Config.Name = 名称
InboundFile.Config.New = 新入站文件配置
InboundFile.Config.S3Config = Amazon S3存储配置
InboundFile.Config.Title = 入站文件配置
InboundFile.Config.UserProfile = Amazon用户配置文件名称
InboundFile.Content = 内容物
InboundFile.DateRangeEnd = 到
InboundFile.DateRangeStart = 加载日期 - 从
InboundFile.Edit.Record.Title = 编辑记录
InboundFile.Edit.Subrecord.Title = 编辑子记录
InboundFile.ErrorMessage = 错误消息
InboundFile.FileStatus = 文件状态
InboundFile.LastModifiedDate = 上次修改日期
InboundFile.LastModifiedUser = 上次修改者
InboundFile.LineNumber = 行编号
InboundFile.LineNumberEnd = 到
InboundFile.LineNumberStart = 行编号 - 从
InboundFile.LoadDate = 加载日期
InboundFile.Message = 消息
InboundFile.Page.Title = 入站文件
InboundFile.PathArchive = 存档位置
InboundFile.PathInput = 入站位置
InboundFile.PurgeDate = 清除日期
InboundFile.RecordDetails = 记录详细信息
InboundFile.RecordStatus = 记录状态
InboundFile.Search.Title = 文件{0}
InboundFile.Skip = 跳过
InboundFile.Skip.ConfirmationMessage = 是否确定要跳过而不处理此记录？
InboundFile.Status = 状态
InboundFile.SubRecordDetails = 子记录详细信息
InlandMarine.Building.CannotDelete.HasFutureIMBuilding = 无法移除建筑物{0}，因为{1}上的其它财产险类正在使用该建筑物。
InlandMarine.Building.CannotDelete.HasIMBuilding = 无法移除建筑物{0}，因为其它财产险类正在使用该建筑物。
InlandMarine.Location.CannotDelete.HasFutureIMLocation = 地点{0}无法移除，因为{1}上的其它财产险保单险类正在使用该地点。
InlandMarine.Location.CannotDelete.HasIMLocation = 无法移除地点{0}，因为其它财产险类正在使用该地点。
Integration.CCIntegration.BlanketCovTermDescription = 统括承保范围适用
Integration.DataMapping.UnmappedSourceField = 映射文件中未映射的源字段{0}。
Integration.Document.Production.SmartComms.AsyncDocument.Entity.NotFound = 单证实体在参数映射中找不到。请参阅API文档了解正确用法。
Integration.Document.Production.SmartComms.Bulk.Error.URLNotConfigured = 请将BulkServiceURL配置为使用批量单证生成
Integration.Document.Production.SmartComms.Bulk.Error.WrongTransactionType = 交易类型有误，仅支持{0}
Integration.Document.Production.SmartComms.CreateDraft.Error.GeneratedPayloadIsNull = 生成的负载为null
Integration.Document.Production.SmartComms.CreateDraft.Error.InputDocumentIsNull = 输入单证实体为null
Integration.Document.Production.SmartComms.CreateDraft.Error.TemplateIDIsNull = 模板ID为null
Integration.Document.Production.SmartComms.DocumentTemplateSource.Error.GetTemplateAsStreamUnsupported = SmartComms集成不支持getTemplateAsStream()方法
Integration.Document.Production.SmartComms.DraftDocument.Store.Error.DocumentIsNull = 草案单证的单证为null
Integration.Document.Production.SmartComms.DraftDocument.Store.Error.DraftDocumentContentIsNull = 草案单证内容为null或为空
Integration.Document.Production.SmartComms.RetrieveDocument.Error = SmartComms存在配置问题（目前仅支持每个生成的单证一个信封）
Integration.FieldMapper.CannotMapField = 无法将字段“{0}”从“{1}”映射到“{2}”
Integration.ObjectConverter.CannotConvert = 无法转换“{0}”类型的对象
IntegrationAPI.mapping = 无法访问EntityType属性。
IntegrityCheck.LoadError.EdgeForeignKey.NonNullable = edgeForeignKey字段{0}的值在临时表{1}中不可为null，而在临时表{2}中无效
IntegrityCheck.LoadError.OneToOne.NonNullable = 临时表{1}中不可为null的一对一字段{0}的值必须与临时表{2}中的某一行完全匹配
InvalidDelegateMapException.AbstractImplementation = 实现类型{0}是抽象的
InvalidDelegateMapException.AmbiguousImplementationConfig = 无法确定要替换{0}的正确实现。发现多个似乎合理的候选项：{1}和{2}
InvalidDelegateMapException.ImplementationDoesNotImplementInterface = 实现类型{0}不实现接口{1}
InvalidDelegateMapException.MultipleImplementationsOfBeanProxy = 发现配置的实现中有多个BeanProxy的子类：{0}和{1}
InvalidDelegateMapException.NoValidConstructor = 对于实现类{0}，找不到接受{1}或{1}的超类型的公共构造函数
Issuance.IssuePolicy.Failed.Description = 外部系统指示保单签发失败。
Issuance.IssuePolicy.Failed.Subject = 出单失败
JSP.AdminPageLinks.Admin.ScriptParameters = 脚本参数
JSP.CacheInfo.ClearGlobalCacheButton = 清除全局缓存
JSP.CacheInfo.GlobalCache = 全局缓存
JSP.CacheInfo.ObjectStore = 对象存储
JSP.CacheInfo.ResetGlobalCacheButton = 重置统计数据
JSP.CacheInfo.Title = 缓存信息
JSP.CompileAll.BePatient = （此过程将需要一段时间；请耐心等待）
JSP.CompileAll.Title = 全部编译
JSP.DesktopActivities.Activities.Title = 活动
JSP.DesktopActivities.Toolbar.Approve = 批准
JSP.DesktopActivities.Toolbar.Assign = 分配
JSP.DesktopActivities.Toolbar.Complete = 完成
JSP.DesktopActivities.Toolbar.Refresh = 刷新
JSP.DesktopActivities.Toolbar.Reject = 拒绝
JSP.DesktopActivities.Toolbar.Skip = 跳过
JSP.DesktopActivityQueues.Activities.Title = 排队活动
JSP.HolidayList.Holidays.Title = 假期
JSP.InternalTools.BeanShell = BeanShell
JSP.InternalTools.CacheInfo = 缓存信息（必须登录）
JSP.InternalTools.ClearTemplateCache = 清除模板缓存
JSP.InternalTools.CompareCacheDumpFiles = 比较缓存转储文件
JSP.InternalTools.CompareCacheDumpFiles.CacheDumpFile1Name = 缓存转储文件 1
JSP.InternalTools.CompareCacheDumpFiles.CacheDumpFile2Name = 缓存转储文件 2
JSP.InternalTools.CompileAll = 全部编译
JSP.InternalTools.DumpCacheDataToFile = 将缓存数据转储到文件
JSP.InternalTools.DumpCacheDataToFile.FileName = 文件名
JSP.InternalTools.LoggerConfig = 记录器配置
JSP.InternalTools.Memory = 内存信息
JSP.InternalTools.Profiler = Profiler（必须登录）
JSP.InternalTools.Reload = 重新加载视图配置
JSP.InternalTools.RuleExecutionReport = 规则执行报告
JSP.InternalTools.RuleRepositoryReport = 规则库报告
JSP.InternalTools.RunTests = 运行测试
JSP.InternalTools.SmokeTest = 初步测试
JSP.InternalTools.Title = 内部调试工具
JSP.InternalTools.ViewLogs = 查看日志
JSP.LoggerConfig.Level = 级别：
JSP.LoggerConfig.Logger = 记录器：
JSP.LoggerConfig.Title = 记录器配置
JSP.Login.Login.Password = 密码：
JSP.Login.Login.Submit = 登录
JSP.Login.Login.Title = Guidewire {Global.AppName}
JSP.Login.Login.Username = 用户名：
JSP.MainLayout.GuidewireLogo = Guidewire
JSP.Memory.FreeMemory = 可用内存：
JSP.Memory.FreeMemoryDesc = （Java虚拟机中的可用内存空间。）
JSP.Memory.Heading = 内存统计数据：
JSP.Memory.RefreshButton = 刷新（无GC）
JSP.Memory.Title = Web服务器内存
JSP.Memory.TotalMemory = 总内存：
JSP.Memory.TotalMemoryDesc = （Java虚拟机中的总内存空间。）
JSP.NewHoliday.Admin.NewHolidayName = 添加假期
JSP.NewRegion.Admin.NewRegionName = 添加区域
JSP.Profile.AppserverId = 应用服务器ID：
JSP.Profile.ArchiveFrom = 存档从：
JSP.Profile.ArchiveTo = 存档到：
JSP.Profile.EnableTags = 启用标记：
JSP.Profile.Format = 显示格式：
JSP.Profile.Output = Profiler输出：
JSP.Profile.ProfileSource = 配置文件来源：
JSP.Profile.ViewType = 视图类型：
JSP.RegionList.Regions.Title = 地区
JSP.ReloadConfiguration.Success = 配置已成功重新加载。
JSP.ReloadConfiguration.Title = 重新加载配置
JSP.RunTests.Test = 测试
JSP.RunTests.Title = 运行测试
JSP.ScriptParametersList.Title = 脚本参数
JSP.SmokeTest.AskToContinue = 提议停止：
JSP.SmokeTest.ClickToStart = 单击测试名称开始。
JSP.SmokeTest.Delay = 推迟：
JSP.SmokeTest.DisableLVPaging = 禁用分页：
JSP.SmokeTest.LoopRepeat = 重复：
JSP.SmokeTest.LoopTimes = 次数
JSP.SmokeTest.ShowVarsButton = 显示存储变量
JSP.SmokeTest.Test = 测试：
JSP.SmokeTest.Title = 初步测试
JSP.TabBar.Help = 帮助
JSP.Title = {Global.AppName} ({0})
JSP.Title.Login = {Global.AppName}登录
JSP.Title.OnVacation = {0} - 正在休假
JSP.ViewLogs.Filter = 过滤器(grep)：
JSP.ViewLogs.LogDisplay = 日志输出
JSP.ViewLogs.LogFile = 日志文件：
JSP.ViewLogs.MaxLines = 要显示的最大行数（尾）：
JSP.ViewLogs.Title = 查看日志
Java.ABContactContact.Exception.RetiredTargetContactNotAllowed = {0}已删除，无法添加为相关联系人。
Java.AboutDialog.AdminDataImportDate = 管理数据导入日期：
Java.AboutDialog.AdminDataVersion = 管理数据版本：
Java.AboutDialog.AppVersion = 应用程序版本：
Java.AboutDialog.ConfigEnv = 配置环境：
Java.AboutDialog.CustomerVersion = 客户版本：
Java.AboutDialog.Off = 关
Java.AboutDialog.On = 开
Java.AboutDialog.PlatformVersion = 平台版本：
Java.AboutDialog.PreviewWarning = 预览版本： 不用于生产目的
Java.AboutDialog.SchemaVersion = 架构版本：
Java.AboutDialog.ServerInstance = 服务器实例：
Java.AboutDialog.Title = 关于Guidewire {Global.AppName}
Java.AboutDialog.TrademarkInfo = 有关Guidewire商标的信息，请访问https\://guidewire.com/legal-notices
Java.Account.Error.Combine.FromAccountNotFrozen = 无法合并账户：“从”账户：{0}未冻结。
Java.Account.Error.Combine.FromAccountStillHasPolicies = 无法合并账户：“从”账户：{0}在其中仍有本地保单。
Java.Account.Error.Combine.ToAccountFrozen = 无法合并账户：“收款方”账户：{0}已冻结。
Java.Account.Error.MergeAccounts.AccountHolderTypesMismatch = 无法将账户所有者类型为{0}的账户与账户所有者类型为{1}的账户进行合并
Java.Account.Error.MergeAccounts.FromAccountIsWithdrawn = 无法合并账户{0}，因其已撤消
Java.Account.Error.MergeAccounts.Message = 在受影响账户和保单上的未处理消息得到处理前，无法合并账户或转移保单。
Java.Account.Error.MergeAccounts.MessagesOnAccount = 在受影响账户和保单上的未处理消息得到处理前，无法合并账户或转移保单。至少账户{0}上存在未处理消息。请稍后重试；如果持续存在这种情况，请联系您的系统管理员。
Java.Account.Error.MergeAccounts.MessagesOnPolicy = 在受影响账户和保单上的未处理消息得到处理前，无法合并账户或转移保单。至少保单{0}上存在未处理消息。请稍后重试；如果持续存在这种情况，请联系您的系统管理员。
Java.Account.Error.MergeAccounts.MessagesOnUnboundSubmission = 在受影响账户和保单上的未处理消息得到处理前，无法合并账户或转移保单。至少投保单{0}上存在未处理消息。请稍后重试；如果持续存在这种情况，请联系您的系统管理员。
Java.Account.Error.MergeAccounts.ToAccountIsWithdrawn = 无法合并到账户{0}，因为该账户已撤消
Java.Account.RunCommandSuffix = <账户ID>
Java.Account.UnsupportedContactSubtype = 不支持的联系人子类型
Java.AccountAccount.AccountIsNotRelated = 账户实际参数{0}不是参与此关系的两个账户之一。
Java.AccountContact.Error.MergedAccountContactNotSameContactType = 联系人{0}属于类型{1}，无法与{3}类型的联系人{2}合并
Java.AccountContact.InvalidContactType = 无法处理联系人{1}的联系人类型{0}。
Java.AccountContact.NoContactDefined = 未定义联系人
Java.AccountFile.WorkOrders.Filter.AllProducts = 所有
Java.AccountSyncable.UnsyncedCopyContractDataError = 可同步账户不再同步到账户之后无法复制保单合同数据。
Java.AccountTab.AccountItemLabel = {0} {1}
Java.Activities.Error.CannotPerformAction = 您无权对以下活动执行操作： {0}。
Java.Activity.AssignedByUser.SystemUser = {Global.AppName}
Java.Activity.CannotSkipMandatory = 无法跳过活动“{0}”，因为它是强制性活动
Java.Activity.ClosedStatus = {0} ({1}\: {2})
Java.Activity.ClosedStatusNoUser = {0} ({1})
Java.Address.Error.CannotRemoveAddress = 无法移除地址{0}，因其在使用中。
Java.AddressBook.Directions.Closest = 个最近的
Java.AddressBook.Directions.Feet = 英尺
Java.AddressBook.Directions.Ft = ft.
Java.AddressBook.Directions.Kilometers = 千米
Java.AddressBook.Directions.Km = km.
Java.AddressBook.Directions.M = M
Java.AddressBook.Directions.Meters = 米
Java.AddressBook.Directions.Mi = mi.
Java.AddressBook.Directions.Miles = 英里
Java.AddressBook.Directions.Min = min.
Java.AddressBook.Directions.Minute = 分钟
Java.AddressBook.Directions.Minutes = 分钟
Java.AddressBook.Error.Adapter.NullResult = 通讯簿插件返回的结果为null。
Java.AddressBook.Error.ConcurrentDataChange = 您正尝试更新的通讯簿条目已被其他用户更改。请取消并重新尝试更改。
Java.AddressBook.Error.Context.AdapterUnavailable = 无法连接通讯簿插件。原因： {0}
Java.AddressBook.Error.Context.ExecuteQuery = 执行远程查询
Java.AddressBook.Error.Context.General = 通讯簿出错；上下文： {0}；原因： {1}
Java.AddressBook.Error.Context.RelatedContacts = 加载相关联系人
Java.AddressBook.Error.Context.SOAPException = 通讯簿插件报告错误： {0}
Java.AddressBook.Error.Context.Sync = 从通讯簿中复制联系人数据
Java.AddressBook.Error.Delete = 无法删除联系人“{0}”
Java.AddressBook.Error.Geocode.ABDemoAdapterNotAllowed = 通讯簿演示适配器不支持邻近搜索。
Java.AddressBook.Error.Geocode.BadCenter = 无法依据您输入的地址执行邻近搜索。请检查此地址确保其正确无误。
Java.AddressBook.Error.Geocode.BadDirections = 无法检索一项或多项请求的驾车指示。
Java.AddressBook.Error.Geocode.FewerNearest = 您执行的邻近搜索请求返回最接近的{0}个结果，但在此搜索{2}允许的最大范围内仅找到{1}个结果。
Java.AddressBook.Error.Geocode.Generic = 邻近搜索失败。请检查您输入的地址以确保其为正确地址。如果地址正确，请联系您的管理员。
Java.AddressBook.Error.Geocode.InsufficientInformation = 您输入的地址信息不足，无法进行地理编码。您至少必须提供：邮政编码、省和市或者市和国家/地区。
Java.AddressBook.Error.Geocode.NoNearest = 您要搜索{0}个最接近的结果，但在允许的最大搜索范围内没有找到任何结果，{1}。
Java.AddressBook.Error.NotInSync = 无法对通讯簿执行更改，因为其他用户已更新相同联系人。
Java.AddressBook.Info.AddressBookUpdatedSuccessfully = 联系人已成功更新到通讯簿中
Java.AddressBook.Info.Geocode.RealCenter = 此邻近搜索所使用的实际中心地址为： {0}。
Java.AddressBook.Search.Company = 机构
Java.AddressBook.Search.Person = 个人
Java.AddressBookException.AdapterError = 通讯簿遇到错误： {0}
Java.AddressBookException.AdapterUnavailable = 通讯簿无效。
Java.AddressBookLibrary.lookup.ContactNotFound = 未在通讯簿中查找到联系人。
Java.Admin.AddZipCode = 添加
Java.Admin.AddZone = 添加
Java.Admin.Attributes.DuplicateAttribute = 无法保存与现有属性的名称和类型均相同的属性
Java.Admin.AuthorityLimitProfile.DuplicateName = 名为“{0}”的财务审批权限配置文件已经存在
Java.Admin.AuthorityLimitProfile.InvalidName = 无法使用名称"自定义"保存财务审批权限配置文件
Java.Admin.AuthorityLimits.Custom = 自定义
Java.Admin.BusinessWeek.DuplicateName = 名为“{0}”的工作周已经存在
Java.Admin.BusinessWeeks.SelectProvince = 省
Java.Admin.BusinessWeeks.SelectState = 省/直辖市
Java.Admin.Cancel = 取消
Java.Admin.DataChanged = 您尝试更新的对象已被其他用户更改。
Java.Admin.Group.CIRCULAREX = 该组的父组也是该组的一个子组。\n请更正此问题，然后重试。
Java.Admin.Group.DuplicateGroup = 无法保存与现有组同名的组
Java.Admin.Group.DuplicateRegions = 组内包含重复的地区
Java.Admin.Group.DuplicateUsers = 组内包含重复的用户
Java.Admin.Group.InvalidBackupUser = 用户{0}不能以自身作为备份。
Java.Admin.Group.OrphanedUsers = 无法从该组移除以下用户，因为\n他们仅属于这一个组：\n{0}\n移除这些用户前，必须先将他们添加至其它组，或者删除他们。
Java.Admin.Group.ROOTGROUPEX = 仅需要一个根组。
Java.Admin.GroupDetail.Basic.InvalidParentGroup = 不能将某个组或其子组设置为其自身的父组。
Java.Admin.Holidays.SelectProvince = 省
Java.Admin.Holidays.SelectState = 省/直辖市
Java.Admin.ImportData.ArrayDifferences = 单击查看详细信息
Java.Admin.ImportData.Error = 导入数据出错： {0}
Java.Admin.ImportData.NoDataFound = 未在指定文件中找到任何导入数据。
Java.Admin.ImportResults.ParserError = 指定的输入文件不是XML文件。
Java.Admin.Integration.ErrorTitle = 错误
Java.Admin.LeftToRight = ->
Java.Admin.Regions.DuplicateRegion = 无法保存与现有地区同名的地区
Java.Admin.Regions.InvalidPostalCodeFormat = 无效邮政编码格式
Java.Admin.Regions.InvalidZones = 无效区域：{0}
Java.Admin.Regions.Search.SpecifyZoneCodeAndType = 要进行地区搜索，必须同时指定区域代码和类型
Java.Admin.Regions.SelectProvince = 省
Java.Admin.Regions.SelectState = 省/直辖市
Java.Admin.Regions.TooManySelected = 选定地区过多
Java.Admin.RemoveZipCode = 移除选定邮政编码
Java.Admin.RemoveZone = 移除选定区域
Java.Admin.RightToLeft = <-
Java.Admin.Role.DuplicateName = 名为“{0}”的角色已经存在
Java.Admin.Role.DuplicateUserError = 用户“{0}”已经具有此角色
Java.Admin.Rules.EditScriptParameters.Title = 脚本参数
Java.Admin.Rules.NewRulesetDialog.CreateRulesetButton = 创建
Java.Admin.Rules.NewRulesetDialog.RulesetEntity = 规则集针对
Java.Admin.Rules.NewRulesetDialog.RulesetName = 规则集名称
Java.Admin.Rules.NewRulesetDialog.Title = 新建共享分配规则集
Java.Admin.Rules.ScriptParameter.InvalidDecimal = 无效十进制值： {0}
Java.Admin.User.AuthorityLimitError = 无法使用相同的限制类型、承保范围和成本类型创建两个财务审批权限
Java.Admin.User.BASPASSWORDEX = 身份验证失败。旧密码不正确。
Java.Admin.User.CurrentPasswordIncorrect = 您输入的当前密码不正确。请重新输入当前密码。
Java.Admin.User.DuplicateAttributeError = 用户具有重复的属性
Java.Admin.User.DuplicateRoleError = 用户具有重复的角色
Java.Admin.User.DuplicateUsername = 无法保存与现有用户同名的用户
Java.Admin.User.ERRORTITLE = 错误
Java.Admin.User.InvalidGroupAdd = 无法为用户{1}添加组{0}，因为他们不属于同一机构。
Java.Admin.User.PASSWORDMMEX = 密码不匹配。
Java.Admin.User.PasswordEmpty = 密码不能包含空格。
Java.Admin.User.PasswordTooLong = 新密码过长。密码长度必须至少为{0}个字符，但不多于{1}个字符。
Java.Admin.User.PasswordTooShort = 新密码过短。密码长度必须至少为{0}个字符，但不多于{1}个字符。
Java.Admin.Workflow.Manage.Active = 工作流当前为{0}，请使用等待暂停，直到它完成当前步骤为止。
Java.Admin.Workflow.Manage.AllCompleted = 这些工作流已全部完成，无法再进行管理。
Java.Admin.Workflow.Manage.AllError = 这些工作流全部出错，只能进行恢复。
Java.Admin.Workflow.Manage.AllSuspended = 这些工作流已全部暂停，只能进行恢复。
Java.Admin.Workflow.Manage.Executed = 已执行{0}个适用的工作流，共{1}个
Java.Admin.Workflow.Manage.Log.Completed = 由{0}完成
Java.Admin.Workflow.Manage.Log.Resume = 由{0}恢复
Java.Admin.Workflow.Manage.Log.Suspended = 由{0}暂停
Java.Admin.Workflow.Manage.Log.Timeout = {0}强制分支
Java.Admin.Workflow.Manage.Log.Trigger = {0}手动调用了触发器
Java.Admin.Workflow.Manage.MultipleSteps = 减少了执行选项，因为搜索的选择条件过于宽泛
Java.Admin.Workflow.Manage.NoAction = 必须指定要执行的操作
Java.Admin.Workflow.Manage.NoTimeout = 必须指定使用此选项的超时时间
Java.Admin.Workflow.Manage.NoTrigger = 必须指定使用此选项的触发器
Java.Admin.Workflow.Manage.WaitOnlyIfSingle = 仅当管理单个工作流时，等待才有效
Java.Archive.ArchiveWorkQueue.DeferredUpgradeInProgress = 某些索引尚未创建。必须首先完成 DeferredUpgradeTasks 批处理，然后才能运行存档。
Java.Archive.ArchiveWorkQueue.Eligible = 可存档
Java.Archive.ArchiveWorkQueue.ExceptionOccurred = 处理{0}时出现异常
Java.Archive.ArchiveWorkQueue.ExcludedBecauseOfDataSharedWithRefererenceGraph = 拒绝存档，因为某些数据与参考图共享：{0}
Java.Archive.ArchiveWorkQueue.ItemInfo = 目标项目
Java.Archive.ArchiveWorkQueue.NotEligible.ArchiveState = 不可存档，因为其存档状态为{0}
Java.Archive.ArchiveWorkQueue.NotEligible.Excluded = 不可存档，因为已拒绝存档
Java.Archive.ArchiveWorkQueue.SkipBecauseOfWorkItem = 至少有一个工作项需要图中的实体，因此跳过。请清除所有失败的工作项。
Java.Archive.ArchiveWorkQueue.Success = 项目{0}已成功存档。
Java.Archive.Config.Error.UpgradeTransitionBypass = 更新数据库后，请更新ArchiveTransactionRecord表。
Java.Archive.Config.Error.UpgradeTransitionDocumentation = 存档图已发生重大更改，必须手动升级。有关如何继续操作，请参阅有关存档的文档。
Java.Archive.Config.Error.UpgradeTransitionNotSupported = 以下实体正在从“{0}”转换为“{1}”：
Java.Archive.ContextMap.DoesNotExist = 存档上下文映射不存在。存档上下文映射仅在存档过程中或存档单证恢复过程中可用。
Java.Archive.CrossGraphReferenceFound = ID为{1}的{0}类型的实体显示在{2}.{3}引用的不同域图中。如果此交叉图关系设计如此，请根据文档相应配置交叉图关系。
Java.Archive.EntityCannotBeInDomainGraph = 以下实体不能位于域图中：
Java.Archive.Graph.Admin = 管理
Java.Archive.Graph.Domain = 域
Java.Archive.Graph.Overlap = 重叠
Java.Archive.Graph.Rest = 不在任何图中或已删除
Java.Archive.Graph.Validation.Error = 存档图校验错误：{0}
Java.Archive.Graph.Validation.Errors.Found.Fatal = 图校验存档失败。错误详细信息：\n{0}\n{1}图：\n{2}
Java.Archive.Graph.Validation.Errors.Found.Warning = 警告：存档图验证失败。请参阅日志了解详细信息。Guidewire强烈建议修复这些问题，以保持存档图有效。
Java.Archive.Graph.Validation.Errors.Purge.Disabled = 清除功能不可用，因为存档图无效。
Java.Archive.GraphConstruction.EdgeTableInGraphNotExtractable = 图构造算法在以下链接中发现图中存在边缘外键实体“{0}”：{1}。请参阅文档解决此图校验错误。
Java.Archive.GraphConstruction.InGraphNotExtractable = 图构造算法在以下链接中发现图中存在“{0}”：{1}。请参阅文档解决此图校验错误。
Java.Archive.GraphConstruction.NonEffdatedOwnsEffdatedInGraph = 图{0}中的以下外键导致非修订实体拥有修订实体。要更正此情况，请使用ExcludeFromNonRevisionedOwner标记外键，以将其从图中排除。
Java.Archive.GraphConstruction.NonEffdatedOwnsEffdatedLinks = 图形构造算法发现修订实体{0}由非修订实体通过链接{1}拥有。
Java.Archive.GraphConstruction.OverlapTableIssueInGraphToOverlap = 图构造算法在以下链接中发现图中的“{0}”引用了被标识为重叠表的实体：{1}。请参阅文档解决此图校验错误。
Java.Archive.GraphConstruction.OverlapTableIssueOutGraphToInGraph = 图构造算法发现图中的“{0}”由图外的实体中的链接引用：{1}。请参阅文档解决此图校验错误。
Java.Archive.GraphConstruction.OverlapTableIssueOverlapToInGraph = 图构造算法发现图中的“{0}”由标记为重叠表的实体中的链接引用：{1}。请参阅文档解决此图校验错误。
Java.Archive.GraphConstruction.OverlapTablesMustImplementOverlapDelegate = 图构造算法判断出以下项是{1}图的重叠表。要更正此问题：1.请更改这些项以实现{0}。\n或者\n2.反转外键所有权并配置交叉图关系。有关详细信息，请参阅文档。
Java.Archive.GraphConstruction.TableInGraphMustImplementDelegate = 图构造算法判断出下列项在{1}图中。更正此结果：1.要将实体包括在{1}图中，请更改这些项以实现{0}。或者，2.要避免将实体包括在{1}图中，外键必须指向{1}图外并配置交叉图关系。有关详细信息，请参阅文档。
Java.Archive.GraphConstruction.TableOutOfGraphMustNotImplementExtractableDelegate = 图构造算法判断出下列项不在{1}图中。为确认此判断结果，请更改这些项使它们不实现{0}。
Java.Archive.LinksPointingOutsideOfGraph = 域图外部的域实体{0}具有到域图内部的域实体{2}的外键{1}
Java.Archive.LinksPointingToGraph = 域图外部实体{0}具有到域图内部实体{1}的外键{2}
Java.Archive.OverlapTableShouldNotBeParentForAdminTable = 重叠表实体“{0}”不应为管理表“{1}”的父表
Java.Archive.PurgeUnavailable.ArchiveReferenceTrackingDisabled = 无法清除非存档实体{0}，因为没有设置配置参数{1}。
Java.Archive.PurgeUnavailable.ArchiveReferenceTrackingOutOfSync = 无法清除非存档实体{0}，因为存档引用表不同步。请运行{1}批处理，以便将存档引用表与存档单证存储同步。
Java.Archive.PurgeUnavailable.BeansReferencedByOneOrMoreArchiveDocuments = 无法清除{0}，因为清除图形中的一个或多个Bean至少由一个存档单证引用。
Java.Archive.ReachabilityFailureDueToNullLong = 可能会出现这种情况：当以下可为null的链接为null ({1})时无法链接到这些节点({0})，并且存档期间会违反以下外键约束({2})
Java.Archive.ReferenceTracking.DocumentProcessingIssues.Preamble = 在处理“{0}”以实现存档引用跟踪时发现问题
Java.Archive.ReferenceTracking.NotEnabled = 未设置{0}配置参数。无法执行{1}批处理。
Java.Archive.RequiresDomainGraphSupport = 需要域图支持。
Java.Archive.Restore = 恢复
Java.Archive.State.ExcludedBecauseOfFailure = 由于存档失败已排除项目“{0}”：{1}
Java.Archive.State.ExcludedBecauseOfRules = 按规则已排除项目“{0}”： {1}
Java.Archive.State.MarkedArchive = 项目“{0}”已标记为已存档
Java.Archive.State.ResetExclusionFlag = 项目“{0}”的根信息重置为存档前状态
Java.Archive.State.SkipThisTime = 此存档运行期间已跳过项目“{0}”： {1}
Java.Archive.Status.Disabled = 存档无效： {0}
Java.Archive.Status.NoLongerEnabled = 存档已不再处于启用状态。请重新启用。
Java.Archive.Status.NotEnabled = 未启用存档
Java.Archive.Status.NotImplemented = 此应用程序未实施存档
Java.Archive.Upgrade.Entity.Failure.Conversion = 属性是{0}属性，无法使用类型为{1}的值进行更新。应该为{2}。
Java.Archive.Upgrade.Entity.Failure.ConversionString = 属性是{0}属性，无法使用字符串值进行更新。应该为{1}。
Java.Archive.Upgrade.Entity.Failure.CrossGraphRelated = 交叉图关系所涉及属性：{0}。
Java.Archive.Upgrade.Entity.Failure.DoesNotExist = 属性不存在： {0}
Java.Archive.Upgrade.Entity.Failure.Immutable = 引用的实体不可变。无法更新实体{1}上的属性{0}。
Java.Archive.Upgrade.Entity.Failure.NotMutable = 属性{0}不可变。
Java.Archive.Upgrade.Entity.Failure.Referenced = 无法从引用的实体中移除属性。已尝试从{1}中移除{0}。
Java.Archive.Upgrade.Entity.Failure.ReferencedRenamed = 无法在引用的实体中对属性进行重命名。已尝试在{2}上将{0}重命名为{1}。
Java.Archive.Upgrade.Entity.Failure.UnknowPropertyType = 未知属性类型： {0}
Java.Archive.Upgrade.Failure.BadEntityMapping = 类型为{0}的实体具有ID {1}，但映射到ID {2}。
Java.Archive.Upgrade.Failure.BadTypekeyMapping = 类型键值（{0}, {1}）具有ID {2}，但映射到ID {3}。
Java.Archive.Upgrade.Failure.CrossGraphNewWithExistingLinkField = 实体“{0}”的新交叉图关系关联到现有链接字段“{1}”。
Java.Archive.Upgrade.Failure.CrossGraphNewWithExistingPublicIDField = 实体“{0}”的新交叉图关系关联到现有publicID字段“{1}”。
Java.Archive.Upgrade.Failure.CrossGraphRemovedWithExistingLinkAndPublicIDField = 实体“{0}”的交叉图关系已删除，但链接字段“{1}”和publicID字段“{2}”仍然存在。
Java.Archive.Upgrade.Failure.CrossGraphRemovedWithExistingLinkField = 实体“{0}”的交叉图关系已删除，但链接字段“{1}”仍然存在。
Java.Archive.Upgrade.Failure.CrossGraphRemovedWithExistingPublicIDField = 实体“{0}”的交叉图关系已删除，但publicID字段“{1}”仍然存在。
Java.Archive.Upgrade.Failure.CrossGraphUpdated = 实体“{0}”的上一交叉图关系的链接字段“{1}”/publicID字段“{2}”已修改为链接字段“{3}”/publicID字段“{4}”。
Java.Archive.Upgrade.Failure.CrossGraphUpdatedPublicIDFieldForLinkField = 实体“{0}”的上一交叉图关系的链接字段“{1}”已修改。
Java.Archive.Upgrade.Failure.DomainEntityDoesNotExistInTarget = 类型为{0}的域实体在目标数据模型中不存在。可能已不在域图中。
Java.Archive.Upgrade.Failure.DomainEntityDoesNotExistInTarget.EntityPropertiesAndValues = * ID为{0}的实体具有以下属性和值：
Java.Archive.Upgrade.Failure.DomainEntityDoesNotExistInTarget.EntityPropertiesAndValues.EntityPropertyValueData = ** 属性{0}具有值{1}。
Java.Archive.Upgrade.Failure.DomainEntityDoesNotExistInTarget.NoInstances = * 没有{0}的实例。
Java.Archive.Upgrade.Failure.DuplicateTypecode = 找到类型列表{0}的重复类型代码：{1}。
Java.Archive.Upgrade.Failure.EntityDoesNotHaveNonNullableProperty = ID为{1}、类型为{0}的实体没有属性{2}，因此不可为null： 必须定义一个值。
Java.Archive.Upgrade.Failure.EntityDoesNotHaveProperty = ID为{1}、类型为{0}的实体没有属性{2}。
Java.Archive.Upgrade.Failure.EntityDoesNotHavePropertyUsingDefault = ID为{1}、类型为{0}的实体没有属性{2}： 使用默认值{3}。
Java.Archive.Upgrade.Failure.EntityReferenceNotFound = ID为{1}、类型为{0}的实体的引用属性{2}引用了ID为{3}的不存在实体。
Java.Archive.Upgrade.Failure.EntityTypeDoesNotExistInSource = 源中缺少类型为{0}的实体。
Java.Archive.Upgrade.Failure.EntityTypeNotFound = 未找到ID为{0}的实体类型： {1}。
Java.Archive.Upgrade.Failure.NewNonNullablePropertyDoesNotHaveDefaultValue = 实体{1}的新属性{0}不可为null，但没有默认值，且文档中有该实体的实例。
Java.Archive.Upgrade.Failure.NonNullablePropertyHasNull = ID为{1}、类型为{0}的实体的不可为null属性{2}具有Null值。
Java.Archive.Upgrade.Failure.NullValuesOnNonNullableProperty = {1}的属性{0}具有null值，但该属性变为不可为null。
Java.Archive.Upgrade.Failure.PropertyDoesNotExistInTarget = 属性{0}（位于实体{1}上）在目标数据模型中不存在。
Java.Archive.Upgrade.Failure.PropertyDoesNotExistInTarget.EntityHasValue = * ID为{0}的实体具有属性值{1}。
Java.Archive.Upgrade.Failure.PropertyMissingOnType = 实体{1}缺少属性{0}。
Java.Archive.Upgrade.Failure.PropertyNotFound = ID为{1}、类型为{0}的实体具有值为{3}的未知属性{2}。
Java.Archive.Upgrade.Failure.SubtypeNotFound = 未找到实体{0}的子类型： {1}。
Java.Archive.Upgrade.Failure.SupertypeNotFound = 未找到实体{0}的超类型： {1}。
Java.Archive.Upgrade.Failure.TypekeyReferenceNotFound = ID为{1}、类型为{0}的实体的类型键值属性{2}引用了ID为{3}的不存在类型键值。
Java.Archive.Upload.DatamodelVersionOnlyInSourceServer = 这些数据模型版本在此服务器上不存在，但它们在源服务器上存在：{0}。因此，这两个服务器没有相同的升级路径。请重新创建数据库，然后再试。
Java.Archive.Upload.DatamodelVersionOnlyInThisServer = 这些数据模型版本在此服务器上存在，但它们在源服务器上不存在：{0}。因此，这两个服务器没有相同的升级路径。请重新创建数据库，然后再试。
Java.Archive.Upload.DuplicateInput = 输入数据包含重复项： {0}
Java.Archive.Upload.EmptyInput = 输入数据为空
Java.Archive.Upload.InputNotOrdered = 输入数据错误，因为未进行排序：{0}应紧跟{1}
Java.Archive.Upload.TargetTooOld = 此服务器的版本({0})低于源服务器的版本({1})。请更新服务器，然后再试。
Java.Archive.Upload.TargetUpgradeNotConsistent = 此服务器的升级路径与源服务器的升级路径不一致\: 请重新创建数据库，然后再试。
Java.Archiving.ArchivedPolicyInAccount = 无法将保单{0}从账户{1}传输到账户{2}，因为保单已存档附加责任。
Java.Archiving.InvalidTermException = 无法存档，因为保单期限{0}尚未做好存档准备。
Java.Archiving.PolicyTermInArchive = 操作无法完成。保单期限{0}已存档。
Java.Archiving.RestoredPeriodReferencesNullFK = 已检索存档期：{0}在bean {1}上有外键{2}，目前指向空bean
Java.Archiving.RetrieveInitiatedReason = {0}从存档中检索，存档发起原因为：{1}。
Java.Archiving.Schedule.Failed = 操作失败： {0}
Java.Archiving.WarningAllowStartupInDevelopmentModeWithDomainGraphErrorsEnabledPart1 = ***** 警告：“AllowStartupInDevelopmentModeWithDomainGraphErrors”参数设为true。 *****
Java.Archiving.WarningAllowStartupInDevelopmentModeWithDomainGraphErrorsEnabledPart2 = ***** 所有域图验证错误必须先解决，然后服务器才能以生产模式启动。 *****
Java.Argument.Invalid.Null = 实际参数{0}不能为null
Java.Assign.AdapterError.NoQueueOrUser = 分配“{0}”时，适配器返回了非法标识符\:未指定队列或用户
Java.Assign.AdapterError.NonExistentGroup = 分配“{0}”时，适配器返回了非法标识符\:指定的组不存在
Java.Assign.AdapterError.NonExistentGroupType = 分配“{0}”时，适配器返回了非法标识符\:指定的组类型不存在
Java.Assign.AdapterError.NonExistentQueue = 分配“{0}”时，适配器返回了非法标识符\:指定的队列不存在
Java.Assign.AdapterError.NonExistentUser = 分配“{0}”时，适配器返回了非法标识符\:指定的用户不存在
Java.Assign.Assign = 分配
Java.Assign.AssignByRules = 使用自动分配
Java.Assign.AssignToSuggested = 接受提议受理人
Java.Assign.AssignedToInactiveUser = 尝试将{0}分配给不活动用户{1}
Java.Assign.AssignedToQueueNotInGroup = 尝试将{0}分配给不在组中的队列{1}
Java.Assign.AssignedToRetiredGroup = 尝试将{0}分配给已注销的组{1}
Java.Assign.AssignedToRetiredQueue = 尝试将{0}分配给已注销的队列{1}
Java.Assign.AssignedToRetiredUser = 尝试将{0}分配给已注销的用户{1}
Java.Assign.GroupDisplay = {0}[组]
Java.Assign.InsufficientPermission = 用户{1}无权接受分配的项目{0}（拥有此项目需要具有“{2}”权限）
Java.Assign.NoAssociatedEntity = 无相关实体可用于按角色分配{0}
Java.Assign.QueueDisplay = {0}[队列]
Java.Assign.SuggestedUserInGroupDisplay = {0}({1})[建议]
Java.Assign.UnableToFindAssignment = 无法找到{0}的分配
Java.Assign.UserDisplay = {0}
Java.Assign.UserInGroupDisplay = {0} ({1})
Java.AssignableQueue.QueueName = {0}
Java.Assignment.Popup.AssignmentFailed = 部分分配失败，请查看下方了解详细信息。请将项目分配给其他用户或其它组
Java.Assignment.Popup.FindUserGroup = 查找用户或组：
Java.Assignment.Popup.FindUserGroupQueue = 查找用户、组或队列：
Java.Assignment.RoleAssignee.DefaultAssignmentFailed = 无法分配“{0}”到“{1}”，进而无法分配到默认用户“{2}”。请将项目分配到另一个用户或组。
Java.Assignment.RoleAssignee.NoRole = （无角色）
Java.AssignmentPickedActionListener.InvalidSearchSelection = 要通过搜索查找新所有者，请先搜索，再在结果中单击“选择”，然后单击“分配”。
Java.AutoNumberSequence.CannotChangeBoundIndex = Bean的索引{0}已绑定，因此无法更改。
Java.AvailabilityLevel.DAEMONS = 后台程序
Java.AvailabilityLevel.MAINTENANCE = 维护
Java.AvailabilityLevel.MULTIUSER = 多用户
Java.AvailabilityLevel.NONE = 无
Java.AvailabilityLevel.STARTING = 启动
Java.BFOMergeHandler.FieldErrors = 字段{0}存在错误。有关详细信息，请参阅日志。
Java.BatchProcess.AlreadyRunning = 批处理流程“{0}”已在运行
Java.BatchProcess.CheckInitConditions = 无法启动批处理类型为{1}的处理ID {0}，因为未满足其初始条件： {2}
Java.BatchProcess.LoadBeanFromStandardItem.Failed = 加载StandardWorkItem{0}失败
Java.BatchProcess.ServerNotInMaintenance = 无法运行{0}批处理。此处理需要所有服务器均处于维护模式或更低级的模式下。
Java.BatchProcess.XOutOfY = {0}/{1}
Java.BatchProcessException = 一般批处理流程异常
Java.BatchProcessManager.NotificationError = 执行用户定义的IBatchCompletedNotification插件时捕获异常...
Java.BatchProcessManager.ProcessHistoryError = 更新处理历史记录时遇到异常。正在跳到下一个记录...
Java.BatchProcessManager.Started = BatchProcessManager已启动
Java.BatchProcessManager.Starting = 正在启动BatchProcessManager...
Java.BatchProcessManager.Stopped = BatchProcessManager已停止
Java.BatchProcessManager.Stopping = 正在停止BatchProcessManager...
Java.Bean.CannotSetDenormProperty = 无法设置非标准化属性({0})的值。它在提交时自动更新。
Java.Bean.MultipleOneToOneTargets = 为对象{1}的属性{0}找到多个目标： {2}。这可能是因为并发数据更改或编程错误。
Java.Bean.ValueNotOfType = 值{0}(类型为{1})不属于所需类型{2}
Java.Billing.Transactions.Filter.All = 所有交易
Java.Billing.Transactions.Filter.PolicyPeriod = 此保险期间
Java.Breadcrumbs.BackWarning = 如果返回至上一页，则将放弃所有子页面上未保存的数据。是否确定要返回至上一页？
Java.BusinessWeek.DayDemarcationDuringBusinessHours = “工作日划分”用于在事件处于工作时间之外时判断事件所属的具体工作日。
Java.BusinessWeek.DayDemarcationDuringFridayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周五的工作时间。
Java.BusinessWeek.DayDemarcationDuringMondayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周一的工作时间。
Java.BusinessWeek.DayDemarcationDuringSaturdayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周六的工作时间。
Java.BusinessWeek.DayDemarcationDuringSundayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周日的工作时间。
Java.BusinessWeek.DayDemarcationDuringThursdayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周四的工作时间。
Java.BusinessWeek.DayDemarcationDuringTuesdayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周二的工作时间。
Java.BusinessWeek.DayDemarcationDuringWednesdayBusinessHours = {Java.BusinessWeek.DayDemarcationDuringBusinessHours}此值不能处于工作时间之内，但目前此值违反了周三的工作时间。
Java.BusinessWeek.OnlyOneApplyToAll = 只有一个工作周可适用于所有区域。
Java.BusinessWeek.ValidateFridayStartAndEndTimes = 周五工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateMondayStartAndEndTimes = 周一工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateSaturdayStartAndEndTimes = 周六工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateSundayStartAndEndTimes = 周日工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateThursdayStartAndEndTimes = 周四工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateTuesdayStartAndEndTimes = 周二工作日的结束时间不能早于工作日开始时间
Java.BusinessWeek.ValidateWednesdayStartAndEndTimes = 周三工作日的结束时间不能早于工作日开始时间
Java.Cache.GlobalCache.FullButCouldNotRemoveAny = 全局缓存已满，但无法移除任何元素，因为没有任何元素满足逐出条件
Java.CacheOutOfSyncException = 未刷新ID为{1}的{0}中的缓存，数据库编号{2}/缓存编号{3}
Java.Calendar.Gregorian = 公历
Java.Calendar.JapaneseImperial = 日本皇历
Java.ClassCodePickerWidget.InvalidCode = {0}必须是适用于此保单险类类型的类代码。
Java.ClassCodePickerWidget.WCInvalidCode = {0}不是适用于{1}和此保单险类类型的类代码。
Java.ClearValueMenuItemWidget.ClearValue = 清除
Java.ClientAction.Active = 活动
Java.ClientAction.Inactive = 不活动
Java.Cluster.Component.BatchProcessManager = 批处理管理器
Java.Cluster.Component.DistributedScheduler = 分布式计划程序
Java.Cluster.Component.MessageDestinationManager = 消息目标管理器
Java.Cluster.Component.MessagePreprocessorManager = 消息请求处理器管理器
Java.Cluster.Component.StartablePluginManager = 可启动服务管理器
Java.Cluster.Component.WorkItemSetManager = 工作项集合管理器
Java.Cluster.Component.WorkQueueManager = 工作队列管理器
Java.Cluster.JdbcPing.ErrorLoadingMembers = 加载可能的群集成员时出错
Java.Cluster.JdbcPing.ErrorUpdatingRecord = 为{0}节点插入/更新群集表记录时出错
Java.Cluster.JdbcPing.NodeRecordInserted = 已将{0}节点的新记录插入到群集表中
Java.Cluster.MemberNotFound = 在群集中找不到服务器{0}。
Java.CommitContact.DuplicateContacts = 已删除可能的重复项。如果您确定想要保存此联系人，请再次单击“更新”，否则请选择其中一个可能的重复项。
Java.Config.EvictTime.Error.GreaterThanMax = {0}的逐出时间不能超过 120 分钟
Java.Config.EvictTime.Error.GreaterThanStaleTime = {0}的逐出时间不能超过停滞时间
Java.Config.EvictTime.Error.LessThan1 = {0}的逐出时间不能少于1分钟
Java.Config.Modified = {0}（已修改）
Java.Contact.CreateDefinitiveMatch = {Java.NewABContactMatchesAction.DefinitiveMatch}
Java.Contact.CreatePotentialMatches = {Java.NewABContactMatchesAction.PotentialMatches}
Java.Contact.DefinitiveMatch.Implausible = {Java.LinkResultMatchesAction.ImplausibleMatch}
Java.Contact.DefinitiveMatch.IncompatibleType = {Java.LinkResultMatchesAction.IncompatibleTypeMatch}
Java.Contact.Error.CanNotSetSecondaryNamedInsuredToPrimary = 无法将“{0}”作为次要列名被保险人的姓名，因为该被保险人已经是主要列名被保险人。
Java.Contact.Error.DuplicateRoles = 为{2}找到{0} {1}个角色; 最多只能是 1。
Java.Contact.Error.NotEnoughCriteriaForCompany = 请至少指定公司名称的前五个字符。也可以按雇主税号(FEIN)或电话号码搜索。
Java.Contact.Error.NotEnoughCriteriaForPerson = 请输入足够的名称信息、公务员ID或电话号码。如果按姓氏搜索而不使用精确匹配，则需要输入省/市或邮政编码。不使用精确匹配时，至少需要输入名称的两个汉字。
Java.Contact.PotentialMatches = {Java.LinkResultMatchesAction.PotentialMatches}
Java.Contact.PotentialMatches.NoCreatePermission = {Java.LinkResultMatchesAction.PotentialMatches.NoCreatePermission}
Java.Contact.SelectDuplicateContact = 联系人管理器包含与新联系人匹配的条目。如果要忽略，请按“取消”。按“选择”可使用现有 CM 联系人。
Java.Contact.SelectDuplicateContactWarning = 警告\:选择现有联系人将使用 CM 中的值替换所有输入的值。
Java.Contact.SubtypeChange.Notes = 联系人子类型更改已移除字段\:
Java.ContactDetails.AddLocation = 添加地点
Java.ContactLinkIndicatorItemHandler.LinkStatus.DifferentRelationships = 此联系人的以下关系与通讯簿中的不匹配： {0}。
Java.ContactLinkIndicatorItemHandler.LinkStatus.Unknown = 无法连接到通讯簿。此联系人的通讯簿链接状态未知。请联系系统管理员。
Java.ContactLinkStatus.DifferentRelationships = {Java.ContactLinkIndicatorItemHandler.LinkStatus.DifferentRelationships}
Java.ContactLinkStatus.LinkBroken = 此联系人已从ContactManager删除
Java.ContactLinkStatus.LinkedInSync = 此联系人已链接到通讯簿且处于同步状态
Java.ContactLinkStatus.LinkedOutOfSync = 此联系人已链接到通讯簿，但不同步
Java.ContactLinkStatus.Unknown = {Java.ContactLinkIndicatorItemHandler.LinkStatus.Unknown}
Java.ContactLinkStatus.Unlinked = 此联系人未链接到通讯簿
Java.ContactPicker.NoneSelected = <未选定>
Java.ContactPicker.Search = 搜索
Java.ContactPicker.ViewDetails = 查看联系人详细信息
Java.ContactRelationshipConstraintsDBCheckBuilder.SourceType = 检查关系{0}中每个源联系人的类型均为{1}
Java.ContactRelationshipConstraintsDBCheckBuilder.TargetType = 检查关系{0}中每个目标联系人的类型均为{1}
Java.ContactRelationshipConstraintsDBCheckBuilder.ZeroOrOneSources = 检查每个联系人最多只由一个{0}引用
Java.ContactRelationshipConstraintsDBCheckBuilder.ZeroOrOneTargets = 检查每个联系人最多只有一个{0}
Java.ContactRelationships.ValidationError.Duplicated = 联系人“{1}”与联系人“{2}”间最多只能有一个{0}类型的关系。
Java.ContactRelationships.ValidationError.Exclusive = 联系人最多只能有一个{0}类型的关系。
Java.ContactRelationships.ValidationError.InvalidSourceType = 只有{1}类型的联系人才能有{0}类型的关系。
Java.ContactRelationships.ValidationError.InvalidTargetType = 联系人的{0}必须属于{1}类型。
Java.Coverable.CheckConditionsAgainstProductModel.Error.PatternHasWrongOwningEntity = “待检查模式列表只能包含此承保项的条件模式。错误的条件模式为： {0}”
Java.Coverable.CheckCoveragesAgainstProductModel.Error.PatternHasWrongOwningEntity = “待检查模式列表只能包含此承保项的承保范围模式。错误的承保范围模式为：{0}”
Java.Coverable.CheckExclusionsAgainstProductModel.Error.PatternHasWrongOwningEntity = “patternsToCheck列表只能包含此承保项的排除模式。错误的排除模式为：{0}”
Java.CrossGraph.Restore.Link.NotFound = 无法基于实体“{1}”的交叉图publicid字段值“{2}”恢复实体中的链接“{0}”
Java.CrossGraph.Restore.Link.PublicID.NotOneOccurrence = 无法基于实体“{1}”的交叉图publicid字段值“{2}”恢复实体中的链接“{0}”：不只一次发生
Java.CrossGraph.Validation.Failure = 交叉图关系校验错误包括：
Java.CrossGraph.Validation.InvalidCrossDomainLinkEffdated = 标记“{0}”（位于链接“{1}”中，实体{2}上）：不允许带生效日期的链接。
Java.CrossGraph.Validation.InvalidCrossDomainLinkFieldNullOK = 实体{2}中链接“{1}”上的标记“{0}”具有无效的可为null值：必须允许
Java.CrossGraph.Validation.InvalidCrossDomainLinkFieldOwnerFeatureTypeSame = 实体{2}中链接“{1}”上的标记“{0}”：链接指向根类型与链接根类型相同的类型
Java.CrossGraph.Validation.InvalidCrossDomainLinkMissingArchivingOwner = 实体{1}中的链接“{0}”：缺少archivingOwner属性，但存在CrossDomainPublicID标记
Java.CrossGraph.Validation.InvalidCrossDomainLinkMissingPublicIDTag = 实体{1}中的链接“{0}”：缺少CrossDomainPublicID标记，但archivingOwner为crossGraph
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDColumnNullOK = 实体{2}中链接“{1}”上的标记“{0}”具有无效值“{3}”：字段不允许用于存档和恢复的值为空
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDColumnType = 实体{2}中链接“{1}”上的标记“{0}”具有无效值“{3}”：无效的字段类型，必须为“publicid”
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDColumnUse = 实体{2}中链接“{1}”上的“{0}”标记值无效“{3}”：已用于另一交叉图关系
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDField = 实体{2}中链接“{1}”上的标记“{0}”具有无效值“{3}”：链接字段必须允许用于存档和恢复的值为空
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDFieldOwnerTypeNotMatch = 实体{2}中的链接“{1}”上的标记“{0}”具有无效值“{3}”\:链接字段和公共 ID 字段不存在于相同的所有者类型中。
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDFieldType = 实体{2}中链接“{1}”上的标记“{0}”具有无效值“{3}”：无效字段
Java.CrossGraph.Validation.InvalidCrossDomainPublicIDValue = 实体{2}中的链接“{1}”上的标记“{0}”具有无效值“{3}”
Java.CrossGraph.Validation.Warning.UnusedLinkRelationship.BothRefData = 实体{2}中链接“{1}”上的标记“{0}”：未作为外键使用且数据均为引用数据
Java.CrossGraph.Validation.Warning.UnusedLinkRelationship.GraphDataPointToRefData = 实体{2}中链接“{1}”上的标记“{0}”：因为它是域图实体中指向参考数据的外键，所以未使用
Java.Currency.NoExchangeRateSet = 不设置汇率将无法使用不同的货币： {0} 至 {1}
Java.Currency.ParseException = {0}中的分组分隔符位置无效。
Java.Currency.StorageScaleExceedsMoneyScale = 为货币“{1}”配置的存储小数位数{0}超出了为金额({2})配置的最大小数位数
Java.CustomOptions.NoOptionsSelected = 请为自定义打印选项至少选择一个子选项
Java.DBCheck.ADTs = 临时表{1}的列{0}中存在一个或多个值与抽象数据类型的规则不相符。 ({2})
Java.DBCheck.Account.AccountHasMoreThanOneMainAccountContact = 账户具有多个主要账户联系人。
Java.DBCheck.ActiveProgramWithDraftTreaty = 存在与活动程序相关的草案合约
Java.DBCheck.BoundPeriodNullFields = 有一个已承保保单期间包含一个或多个意外的null字段：ModelNumber、ModelDate和/或ModelNumberIndex
Java.DBCheck.BranchHasDuplicateRatingPeriodStartDates = 分支具有重复的费率期开始日期
Java.DBCheck.BuildingImprovementDuplicates = 有一个或多个建筑物具有重复的建筑物修缮。
Java.DBCheck.BuildingSideDuplicates = 有一个或多个建筑物具有重复的建设方。
Java.DBCheck.CancellationDateIsNull = CancellationDate不应为null，因为InitialNotificationDate不为null
Java.DBCheck.CauseFromDBException = 数据库异常原因\:  {0}
Java.DBCheck.ChecksForType = 验证同一数组中是否存在两个具有相同模式且生效时间重叠的调整系数
Java.DBCheck.ConsistentChildrenProperty = {0}中有一行或多行引用了{1}中的行，其中左表中行在{2}中引用的行与右表中不同
Java.DBCheck.ContactAddressesAreNotLinkedMoreThanOnceToTheSameAddress = 联系人不应多次链接到同一地址
Java.DBCheck.ContactWithMoreThanOneSsnOrFein = 存在具有一个以上SSN或雇主税号（FEIN）的联系人
Java.DBCheck.CovTermColumnCheck = 模式为{0}的承保范围不应在列中具有与该模式中所定义承保范围条款不相关的数据
Java.DBCheck.CovTermPatternChecks = 承保范围{1}的承保范围条款{0}必须具有合法值
Java.DBCheck.CoverableTable = 验证同一数组中是否存在两个具有相同模式且生效时间重叠的子句
Java.DBCheck.CoveragePatternCode = 类型为{0}的承保范围必须设置一个模式代码，该代码用于指向可将{1}声明为其子类型的CoveragePattern
Java.DBCheck.DateTimeOrderings = 临时表{0}中的一个或多个值与日期时间排序不相符。（比较(>, >\=)左侧的列应是(<\=, <)右侧的列。）
Java.DBCheck.DocumentWInconsistentAccountAndPolicy = 存在具有相关账户和保单的单证，但该保单不属于该账户
Java.DBCheck.DocumentWInconsistentPolicyAndJob = 存在具有相关保单和交易的单证，但此交易不属于该保单
Java.DBCheck.DocumentWInconsistentPolicyAndPeriod = 存在具有相关保单和保单期间的单证，但该期间不属于该保单
Java.DBCheck.DocumentWPolicyPeriodButNoPolicy = 存在具有相关保单期间的单证，但不存在相关保单
Java.DBCheck.EffDateOrderingCheck = 带生效日期的bean的生效日期和到期日期必须位于分支开始日期和结束日期的范围内
Java.DBCheck.EffDatedLinkCheck = {1}的{0}属性必须指向同一分支中{2}的有效行
Java.DBCheck.EntityDefineCheck = 临时表{0}中有一个或多个值与受制约支票（来自实体元数据定义文件 - {1}的说明）不相符
Java.DBCheck.ExistingReferencesAllowed = 临时表中的一行或多行中的外键引用了源表中的行，但由于外键引用已存在于其它源行中，因此不允许此等引用
Java.DBCheck.ExternalUserDoesNotHaveExternalUserType = 社区中存在不具有外部用户类型的外部用户
Java.DBCheck.ExternalUserHasRelatedAgency = 社区中存在具有相关代理的外部用户
Java.DBCheck.ForeignKey = 临时表{0}中的一个或多个外键值。{1}{2}
Java.DBCheck.HandCoded = 应返回零行的查询返回了一行或多行。特定说明 - {0}
Java.DBCheck.InitialNotificationDateIsNull = LastNotifiedCancellationDate应为null，因为InitialNotificationDate为null
Java.DBCheck.InternalUserDoesNotHaveInternalUserType = 社区中存在不具有内部用户类型的内部用户
Java.DBCheck.InvalidIndexes = 无效的索引
Java.DBCheck.JobAssignmentOpenForClosedJob = 已结束作业的所有分配也必须结束
Java.DBCheck.LastNotifiedCancellationDateIsNull = LastNotifiedCancellationDate不应为null，因为InitialNotificationDate不为null
Java.DBCheck.LastNotifiedCancellationDateNotEqualsCancellationDate = LastNotifiedCancellationDate应与CancellationDate相同
Java.DBCheck.LicensedStateHasOverlapping = 获得驾照的省/直辖市发生重叠。
Java.DBCheck.LineMustMatchProductOnAssociatedPolicy = 确认具有模式<{0}>的所有保单险类都是与其保单相关联的产品的一部分
Java.DBCheck.LinkedAddressHasAtLeastTwoLinkedAddresses = LinkedAddress所含的地址不应少于两个
Java.DBCheck.LocalizedColumnCheck = 同一分支中具有相同所有者及语言的带生效日期的本地化bean必须具有相同的FixedId
Java.DBCheck.ModifierDataType = 验证是否所有调整系数均未在列中设置不适合其数据类型的值
Java.DBCheck.ModifierPattern = 验证是否所有调整系数均指向适合于其子类型的ModifierPattern
Java.DBCheck.ModifierValues = 验证类型键值调整系数值是否为null或有效的类型键值代码
Java.DBCheck.MostRecentModel = 标记为最新模型的PolicyPeriod必须具有同一期间ID中最大的型号
Java.DBCheck.MultipleContactsSameAbuid = 确认没有多个未注销的{0}行包含相同的“AddressBookUID”
Java.DBCheck.NoZeroLengthStrings = 临时表{0}中的一个或多个varchar列的值含有长度为零的字符串
Java.DBCheck.NonNullableColumns = 源表{0}中不可为空的一列或多列的值在临时表{1}中为null
Java.DBCheck.NonNullableColumnsSubtype = 源表{1}中针对子类型“{0}”不可为null的一列或多列的值在临时表{2}中为空
Java.DBCheck.NoteContainmentHierarchy = 附加到保单期间的备注必须也附加到作业，且附加到作业的备注必须也附加到保单
Java.DBCheck.NoteWInconsistentPolicyAndPeriod = 存在具有保单和保单期间的备注，但该保单期间不属于该保单
Java.DBCheck.NoteWithInconsistentPolicyAndAccount = 存在具有账户和保单的备注，但该保单不属于该账户
Java.DBCheck.OracleLocatorNotInstalled = 未安装Oracle定位器
Java.DBCheck.OverlapCheck = FixedId相同且位于同一分支中的带生效日期的bean不得具有重叠的生效时间
Java.DBCheck.OverlappingPeriods = 一个保单中两个保单期间的未取消部分不能重叠
Java.DBCheck.PcNotAvailableToParentGroup = ProducerCode可用于组G，但不可用于G的父项
Java.DBCheck.PeriodBoundariesCheck = 带生效日期的bean的生效日期和到期日期必须位于分支开始日期和结束日期的范围内
Java.DBCheck.PolicyHasAMostRecentTermIfTermsAreBound = 如果保单包含已承保位设置为真的PolicyTerm，则还必须包含MostRecentTerm位设置为真的PolicyTerm
Java.DBCheck.PolicyHasOnlyOneMostRecentTermWhenIssued = 如果保单具有非空IssueDate，则其必须包含一个且只能包含一个MostRecentTerm位设置为真的PolicyTerm
Java.DBCheck.PolicyHasOnlyOneTermWhenNotIssued = 如果保单具有空IssueDate，则其必须包含一个且只能包含一个PolicyTerm（除非它是遗留转换保单）
Java.DBCheck.PolicyLineMustBeAValidCodeForItsSubtype = 验证是否所有保单险类均指向适合于其子类型的保单险类模式
Java.DBCheck.PolicyLineOverlap = PolicyPeriod中不能同时存在两个具有相同模式且生效时间重叠的PolicyLine元素
Java.DBCheck.PolicyPeriodsPolicyTermMustEqualPolicyPeriodJobsPolicyTerm = 保单期间的保单期限必须与保单期间作业的保单期限相同
Java.DBCheck.PolicyTermContainsOnlyOnePromotedMostRecentModelPeriod = 如果PolicyTerm包含升级的PolicyPeriod（具有非空ModelNumber的期间），则此PolicyTerm中必须有且只有一个MostRecentModel位设置为真的PolicyPeriod
Java.DBCheck.PolicyTermStateFullyArchivedInvalid = 某些具有该PolicyTerm的外键的PolicyPeriod存档状态为空，PolicyTermArchiveState.TC_FULLYARCHIVED无效
Java.DBCheck.PolicyTermStateNotArchivedInvalid = 已存档的PolicyPeriod具有指向此PolicyTerm的外键，PolicyTermArchiveState.TC_NOTARCHIVED无效
Java.DBCheck.PolicyTermStatePartiallyArchivedShouldBeFullyArchived = 没有任何具有该PolicyTerm的外键的PolicyPeriod存档状态为空，PolicyTermArchiveState.TC_PARTIALLYARCHIVED无效
Java.DBCheck.PolicyTermStatePartiallyArchivedShouldBeNotArchived = 所有具有该PolicyTerm的外键的PolicyPeriod的存档状态都为空，PolicyTermArchiveState.TC_PARTIALLYARCHIVED无效
Java.DBCheck.PolicyTermWithMoreThanOneBoundRiriskVl = 存在与再保险风险的多个已承保ririsk版本列表相关联的保单期限
Java.DBCheck.PossibleRowChaining = 查找具有超过255列的表。这些表中的行可能进行链接，导致操作缓慢
Java.DBCheck.ProducerStatusConstraintFailed = 存在具有经理人类型但未设置ProducerStatus的机构，或存在不属于经理人类型但设置了ProducerStatus的机构
Java.DBCheck.RIRiskVersionListBadContainerReference = 存在没有相应RIRiskVLContainer的RIRiskVersionList
Java.DBCheck.RateTableLookupWithInvalidArgSourceSetCode = 有一个费率表查找引用不存在的费率表实际参数源集。
Java.DBCheck.RateTableLookupWithInvalidTableCode = 有一个费率表查找引用不存在的费率表代码。
Java.DBCheck.ReferenceToExistingNonAdminObjectWhenNotAllowed = 唯一可引用的现有行存在于管理表中时，临时表{0}.{1}中的一个或多个外键值会引用非管理表{2}中的现有行
Java.DBCheck.ReinsurablesExistWhenGenerateFlagIsFalse = 当GenerateReinsurables设置为假时，存在具有再保险风险的保单期限
Java.DBCheck.RelatedAgencyOfInternalUserIsCarrierOrg = 社区中存在具有与承保人机构相关联的相关代理的内部用户
Java.DBCheck.RequiredMatches = {0}中不存在针对临时表{2}中一个或多个{1}行的引用行
Java.DBCheck.RiriskAndNoReinsurable = 存在不具有相应再保险风险的RIRisk
Java.DBCheck.RiriskSlicedAtLeastAsMuchAsReinsurable = 存在分割程度小于其相应再保险风险的再保险风险
Java.DBCheck.RiskNumberOnInSync = 存在风险编号与相应版本列表中风险编号不匹配的RIAttachmentInclusion
Java.DBCheck.RootGroupHasParentOrGroupIsNeitherRootNorHasParentMsg = 存在具有父项的根组，或存在既不是根组又不具有父项的组
Java.DBCheck.SelectedVersion = 作业的SelectedVersion必须属于该作业
Java.DBCheck.SpatialResourcesAreNotEnabled = 未启用空间资源
Java.DBCheck.StagingReferencingSource = 临时表中的一行或多行含有针对源表中行的外键引用，而源表中不允许此类引用
Java.DBCheck.SubTypeSpecificColumnsPart1 = 为临时表{2}中的其它子类型指定了特定于源表{1}中子类型“{0}”的一列或多列的值
Java.DBCheck.SubTypeSpecificColumnsPart2 = 为临时表{2}中的其它子类型指定了特定于源表{1}中子类型“{0}”的一列或多列的值
Java.DBCheck.TaxIdNotInSyncWithOfficialid = 存在TaxID与类型为SSN或雇主税号(FEIN)的officialID不匹配的联系人
Java.DBCheck.TransactionsNullBasedOnID = 验证交易的BasedOnID字段是否始终为null
Java.DBCheck.TransactionsNullEffDate = 验证交易的EffectiveDate字段是否始终为null
Java.DBCheck.TransactionsNullExpirationDate = 验证交易的ExpirationDate字段是否始终为null
Java.DBCheck.TypeKeyColumns = 临时表{0}中的一个或多个类型键值对于源表{1}无效
Java.DBCheck.TypeKeyInSet = 临时表中的一行或多行包含从临时表中进行加载时无效的类型键值。{0}类型代码为{{1}}
Java.DBCheck.UnenforcedConstraints = 未强制执行的约束
Java.DBCheck.UniquenessBetweenStagingAndSourceTables = 临时表{0}包含一个或多个索引{2}中键值列{1}的值与源表中行相同的行
Java.DBCheck.UniquenessWithinStagingTable = 临时表{0}包含与索引{2}中键值列{1}内的值相同的行
Java.DBCheck.ValuesInSubTypeColumn = 临时表{0}中SubType列的一个或多个值对于源表{1}无效
Java.DBCheck.WorkflowPolicyperiodPointsToWrongJob = 工作流保单期间引用的作业与工作流活动引用的作业不同。
Java.DBDuplicateKeyException.ColumnValue = 列“{0}”具有值“{1}”。
Java.DBDuplicateKeyException.DuplicateKeys = {1}“{0}”中的键值重复。
Java.DBDuplicateKeyException.DuplicateKeysInLanguage = {1}“{0}”中找到{2}的重复键值。
Java.DBDuplicateKeyException.Entity = 实体“{0}”。
Java.DCECM.Warning = 服务器正在使用Dynamic Code Evolution JVM。不建议将此JVM用于生产服务器。
Java.DataChange.ExecutedOkay = {0}已顺利完成
Java.DataChange.Failed = {0}失败：
Java.DataChange.NotExecuted = {0} 尚未执行，状态为：{1}
Java.DataChange.NotFound = 未找到{0}
Java.DataChange.WrongState = {0}错误状态，需要{2}但为{1}
Java.DataExtraction.Error.DataExtractionError = 数据提取错误：{0}
Java.DataExtraction.Error.InvalidParameters = 无效形式参数：{0}
Java.DataExtraction.Error.NullBean = 无法找到bean
Java.DataExtraction.Error.PermissionDenied = 权限被拒绝：{0}
Java.Database.Bootstrap.DefaultDataFileSkippedByConfigService = 将不会加载“{0}”，因为类型{1}由配置服务提供
Java.Database.CannotConnectConditionIgnored = 这是唯一允许的，因为正在使用非生产数据库类型H2。
Java.Database.CannotConnectToDevelopmentDatabase = 无法将生产服务器连接到非生产数据库
Java.Database.CannotConnectToProductionDatabase = 无法将非生产服务器连接到生产数据库
Java.Database.CannotGetConnectionFromConnectionPool = 无法从连接池获取连接
Java.Database.CannotGetStateFromConnection = 无法从连接获取状态
Java.Database.Configuration.CollationAttributeValidForSQLServerAndH2Only = 只能为SQL Server或H2指定排序规则属性。
Java.Database.Configuration.DDL.DegreeOfParallelism.Invalid = 有效值为 0 或小于或等于 1000 的正整数。已找到\: {0}
Java.Database.Configuration.DDL.NoMatchingIndex = 针对DDL配置，未找到与表{1}中列{0}匹配的用户索引
Java.Database.Configuration.DDL.ParallelDMLorQueryInvalidIfNotOracle = 位于非Oracle数据库上时，指定版本触发器元素属性parallel-dml或parallel-query无效
Java.Database.Configuration.DDL.ParallelLoaderInvalidIfNotOracle = 如果不在Oracle数据库上，则为任何加载程序并行度指定属性无效
Java.Database.Configuration.DDL.PrimaryKeyBackingIndexDisallowed = 表{1}上{0}的主键备份索引不允许DDL配置。
Java.Database.Configuration.DDL.SameIndexSpecifiedTwice = 表{1}中具有键值{0}的索引仅可指定一次。
Java.Database.Configuration.DDL.TableConfiguredMoreThanOnce = 已多次配置表{0}。
Java.Database.Configuration.DDL.TableDoesNotExist = 表{0}不存在于数据模型中。
Java.Database.Configuration.DegreeOfParallelism.Invalid = 有效值为 0 或大于 1 但小于等于 1000 的正整数。已找到：{0}
Java.Database.Configuration.IndexColumns.InvalidColumnSpecification = 仅通过列名称指定列或列名后接"ASC"或"DESC"。已找到：{0}
Java.Database.Configuration.IndexPartition.HashAndRangePartitioningExclusive = 散列和范围索引分区互相排斥
Java.Database.Configuration.IndexPartition.InvalidNumPartitions = 表{0}和索引{1}中的分区数量必须介于 1 到 256（包括 256）之间，但实际为：{2}
Java.Database.Configuration.IndexPartition.LocalityLocalInvalidIfNumPartitionsSpecified = 如果已在表{0}和索引{1}中指定分区数，则无法配置本地分区索引
Java.Database.Configuration.IndexPartition.LocalityLocalInvalidIfTableNotPartitioned = 如果未在表{0}和索引{1}中对表进行分区，则无法配置本地已分区索引。
Java.Database.Configuration.IndexPartition.LocalityLocalInvalidIfUniqueIndexDoesNotContainTablePartitioningColumn = 如果索引键值不包含表分区列{0}，将无法配置本地已分区的唯一索引。表{1}索引{2}。
Java.Database.Configuration.IndexPartition.RangePartitionValueNotSameNumberAsCols = 值列表中指定的值数量必须等于表{0}和索引{1}指定的范围分区列列表中的列数
Java.Database.Configuration.IndexPartition.RangePartitioningBasedOnDate = 表：{0}，{1}。范围索引分区要求列不基于日期。
Java.Database.Configuration.IndexPartition.RangePartitioningRequiresColListAndRange = 范围索引分区需要一个或多个列以及一个或多个范围
Java.Database.Configuration.NumThreads.Invalid = num-threads-integrity-checks的值“{0}”无效。有效值为>\= 1。
Java.Database.Configuration.NumThreads.InvalidForH2 = num-threads-integrity-checks的值“{0}”无效。有效值只能为1（代表H2）。
Java.Database.Configuration.PartitionScheme.DoesNotExist = 数据库DDL配置中指定的分区方案{0}不存在
Java.Database.Configuration.PartitionScheme.InputParameterTypeDoesNotMatchIndexColumnType = 分区方案{0}的分区函数（在表{1}中指定）与列{2}的数据类型不匹配。列类型：{3}。分区函数类型：{4}。
Java.Database.Configuration.PartitionScheme.NotAllowedOnTableWithSpatialColumn = 分区方案{0}（在表{1}中指定）在表有空间列{2}时不被允许。
Java.Database.Configuration.SystemUserNameAndPasswordNotValidForDBType = 重置工具形式参数元素中的系统用户名和系统密码属性仅对Oracle和PostgreSQL有效。
Java.Database.Configuration.TablePartition.HashColumnNotSpecified = 必须为非可定义键表{0}指定散列
Java.Database.Configuration.TablePartition.InvalidColumn = 表{0}中不存在列{1}
Java.Database.Configuration.TablePartition.InvalidDateColumnDataType = 日期范围分区的列必须属于类型“datetime”或“dateonly”\: {0}
Java.Database.Configuration.TablePartition.InvalidDateColumnNonNullable = 日期范围分区的列必须非空\: {0}
Java.Database.Configuration.TablePartition.InvalidNumPartitions = 表{0}上的分区数量必须介于1与256（包括256）之间，但原来为： {1}
Java.Database.Configuration.TablePartition.OnlyOneOfHashOrDateInterval = 仅可以使用散列或日期间隔对表进行分区，但不可同时使用二者。
Java.Database.Connection.ErrorSettingClientInfo = 设置连接的客户端信息时出错
Java.Database.ConnectionFromPoolFailedInitializationCheckOfQuery = 池连接未能成功对查询进行初始化检查：
Java.Database.ConnectionFromPoolInAutocommitState = 池连接的自动提交状态为真
Java.Database.ConnectionFromPoolIsINWrongTransactionIsolationLevel = 池连接处于不正确的事务隔离级别：
Java.Database.ConnectionFromPoolIsSetToReadOnly = 池连接已设置为只读
Java.Database.ConnectionInitializationNotVerified = 已设置数据库参数CONNECTIONS_INITIALIZED_FOR_APPLICATION，但未设置所有连接属性。请参阅日志。
Java.Database.ConnectionInitializationStatementFailed = 连接初始化设置不正确，检查者：{0}。请使用{1}进行设置。
Java.Database.ConnectionInitializationStatementPassed = 连接初始化设置正确，检查者：{0}。
Java.Database.ConsistencyCheck.CannotFindCorrespondingItem = 找不到表{0}、类型{1}和指纹{2}的一致性检查。
Java.Database.ConsistencyCheck.Exception = 工作队列{0}运行时出现异常，一致性检查工作项针对表{1}，类型{2}。
Java.Database.DBException.ActionNotAscii = 发现非ASCII操作“{0}”
Java.Database.DBException.BeanDeleted = {0}\:{1}已从数据库中删除
Java.Database.DBException.ChunkingNonKeyable = 为非可定义键实体执行区块查询时，请确保按唯一列排序，否则会丢失一些结果。
Java.Database.DBException.Clustered.Unique = 表{0}中只有一个索引可以标记为分簇索引
Java.Database.DBException.Dbmsperfinfothreshold.Captured = 针对超出阈值的版本操作收集了附加仪器：{0}
Java.Database.DBException.DbmsperfinfothresholdCannotBeNegative = “dbmsperfinfothreshold”属性不能为负；它是：{0}
Java.Database.DBException.ElementMustBeSet = 元素“{0}”必须在config.xml的元素<{1}>中进行设置
Java.Database.DBException.ErrorGettingConnection = 从数据源获取连接时出错
Java.Database.DBException.FailedToFindDatasource = 查找JNDI数据源“{0}”失败
Java.Database.DBException.FoundDuplicateBeanInArray = 发现重复的{0}
Java.Database.DBException.InvalidSelectMethod = SelectMethod的值{0}无效。唯一支持的值为“direct”
Java.Database.DBException.InvalidSendParametersAsUnicode = sendStringParametersAsUnicode的值“{0}”无效。针对Unicode列配置时必须为真，否则为假。
Java.Database.DBException.InvalidUseCursors = useCursors的值{0}无效。唯一支持的值为“false”
Java.Database.DBException.MethodCallOnlyValidForSQLServer = 方法调用仅对SQL Server有效
Java.Database.DBException.NoJndiDatasourceNameConfigured = 配置中未指定JNDI数据源
Java.Database.DBException.NoLOBForPostgreSQL = PostgreSQL不支持LOB表空间
Java.Database.DBException.NullConstraintViolation = 检测到{0}存在一个或多个null约束违规，字段\={1}
Java.Database.DBException.OnlyOneConnectionPoolElement = 数据库必须仅指定一个连接池元素
Java.Database.DBException.OracleDDLOptionsCanOnlyBeUsedForOracle = ora-db-ddl仅对Oracle数据库有效
Java.Database.DBException.OracleSettingsCanOnlyBeUsedForOracle = oracle设置仅对Oracle数据库有效
Java.Database.DBException.OracleSettingsCanOnlyBeUsedForOracle.UseOracleStatsPreferences = 属性useoraclestatspreference仅对Oracle数据库有效
Java.Database.DBException.PostgreSQLDDLOptionsCanOnlyBeUsedForPostgreSQL = postgresql-db-ddl仅对PostgreSQL数据库有效
Java.Database.DBException.QueryDidNoteturnTheCount = 查询未返回计数
Java.Database.DBException.QueryThresholdLimitNotGreaterThanZero = 查询阈值限值不大于零
Java.Database.DBException.ShadowTableCopyError = 将源表的内容复制到测试用影子表时出错 - {0}
Java.Database.DBException.SqlserverDDL.IndexFilegroupPartitioningSchemeMutuallyExclusive = 索引可以指定索引文件组或者验证分区方案，但不能同时指定索引文件组且验证分区方案。
Java.Database.DBException.SqlserverDDL.IndexPartitioningInvalidForSpatial = 空间索引无法分区。表和索引：(0)，{1}
Java.Database.DBException.SqlserverDDL.IndexPartitioningSchemeOnlyOne = 一个索引可以有一个包含定义好的分区方案的索引
Java.Database.DBException.SqlserverDDLOptionsCanOnlyBeUsedForSQLServer = mssql-db-ddl仅对SQL Server数据库有效
Java.Database.DBException.SqlserverSettingsCanOnlyBeUsedForSQLServer = sqlserver设置仅对SQL Server数据库有效
Java.Database.DBException.SqlserverSettingsJdbcTrace = 必须同时设置针对级别和文件的JDBC跟踪设置
Java.Database.DBException.Tablespaces.DoNotSaveJustATest = 仅为测试，不要保存
Java.Database.DBException.Tablespaces.InvalidTablespace = 提供了无效的表空间：{0}
Java.Database.DBException.Tablespaces.RequiredForOracleUpgrade = Oracle升级需要表空间配置
Java.Database.DBException.Tablespaces.SameIndexConfiguredMoreThanOnce = 表{1}中具有键值{0}的索引表空间配置仅可指定一次。
Java.Database.DBException.TablespacesCanOnlyBeUsedForOracleorSQLServer = 表空间设置仅对Oracle或SQL Server数据库有效
Java.Database.DBException.UnableToDetermineSendStringParameterAsUnicode = 无法为数据源{0}确定SendStringParameterAsUnicode的设置
Java.Database.DBException.UnableToGetConnectionURL = 无法为数据源{0}获取数据库连接URL
Java.Database.DBException.UnableToSetIsolationLevel = 无法设置连接的隔离级别
Java.Database.DBStats.UseOracleStatsPreferences = 针对“databasestatistics”元素设置“useoraclestatspreferences”属性会允许使用Oracle的统计数据首选项。
Java.Database.DBStatsSubmitDV.PreviousStatsTimeEarlierThanEarliest = 为先前统计输入的日期和时间早于可用的最早时间
Java.Database.DBStatsSubmitDV.PreviousStatsTimeRequired = 用来收集先前统计的日期和时间是必需的
Java.Database.DataspaceNotFound = 不存在数据空间[{0}]，或者未授予权限。必须创建配置表空间或文件组。
Java.Database.ErrorDisablingTracingOnConnection = 禁用连接跟踪时出错
Java.Database.ErrorEnablingTracingOnConnection = 启用连接跟踪时出错
Java.Database.ExtendedQueryTracing.EnablingWithFilenamePrefix = 启动文件前缀为{0}的扩展查询跟踪
Java.Database.ExtendedQueryTracing.FailedWithError = 以下错误导致创建扩展查询跟踪失败： {0}
Java.Database.ExtendedQueryTracing.StartedWithTraceID = 以此跟踪ID开头的扩展查询跟踪： {0}
Java.Database.InvalidTablespaceConfiguration = 预计找到逻辑名称的物理表空间名称 - {0}
Java.Database.LobTablespaceNotASSM = Oracle SecureFile LOB只能在由自动段空间管理进行管理的表空间中创建。\n已配置Oracle SecureFile LOB，但名为{0}的LOB表空间不通过ASSM进行管理。
Java.Database.LookingUpJndiDatasource = 正在查找JNDI数据源“{0}”...
Java.Database.MappingException = 无法将类{0}映射到类{1}
Java.Database.Nested = 已嵌套： {0}
Java.Database.NoCollationDefined = 对于区域设置{0}，在collations.xml中未找到排序规则名称
Java.Database.NoSortCollationDefinedForOracle = 对于默认应用程序区域设置{0}，在collations.xml中未配置用于进行数据库排序的特定Oracle排序规则。
Java.Database.NoSortCollationDefinedForOracleDefaultUsed = 将改用排序规则BINARY_CI。
Java.Database.OracleCancelSql = 查询运行时间超过分配的时间。请提供更多的搜索条件
Java.Database.OracleCursorSharingShouldBeExact = Oracle游标共享应设置为“exact”
Java.Database.OracleIndexQueryHint.IndexNotFound = 尝试向表{0}中添加提示时，未找到带有以下前缀的索引：{1}
Java.Database.OracleLongModuleActionIncorrect = Oracle long_module_action必须设置为“TRUE”
Java.Database.OracleNLSLCompIncorrect = Oracle nls_comp必须设置为“binary”
Java.Database.OracleNLSLengthSemanticsIncorrect = 对于UTF8或AL32UTF8字符集，NLSLengthSemantics必须设置为“char”，否则必须设置为“byte”
Java.Database.OracleStatisticLevelShouldBeAll = Oracle统计级别应配置为“All”，但未如此配置
Java.Database.PostGISExtensionMustBeLoaded = PostGIS扩展必须加载而且其版本必须为{0}.x
Java.Database.PostgreSQL.DateIntervalOutOfRange = 日期间隔超出范围：{0}
Java.Database.PostgreSQL.EnglishOnly = PostgreSQL服务器必须使用英语（美国）显示消息。请参见PostgreSQL文档中的lc_messages。
Java.Database.PostgreSQLIdleInTransactionSessionTimeoutMustBeOff = PostgreSQL的交易会话超时中的空闲必须设置为0（关闭）
Java.Database.PostgreSQLLockTimeoutMustBeOff = PostgreSQL的锁定超时必须设置为0（关闭）
Java.Database.PostgreSQLStatementTimeoutMustBeOff = PostgreSQL的声明超时必须设置为0（关闭）
Java.Database.Query.CannotJoinOrs = 连接不能使用OR运算符连接。请使用UNION。
Java.Database.Query.Chunking.OrderByRequiredOnSqlServer = 在结果集中间启动需要 SQL Server 上的 ORDER BY 子句
Java.Database.Query.ErrorPreparingStatement = 准备语句时出错：“{0}”
Java.Database.Query.ExplicitValueSpecifiedForIdentityColumn = 已为标识列{0}.{1}指定显式值
Java.Database.Query.MultipleMatchesException = 查询最多应有一个结果
Java.Database.Query.MultipleMatchesExeceptionWithDetails = 查询最多应有一个结果。导致错误的选择语句： {0}
Java.Database.Rolling.Upgrade.AcceptBtnLabel = 接受滚动升级
Java.Database.Rolling.Upgrade.AcceptBtnTooltip = 只能在具有目标配置的节点上进行滚动升级
Java.Database.Rolling.Upgrade.AcceptConfirmMsg = 是否确定要接受升级？具有较旧配置的节点不应再运行，也将无法启动/重新启动。此操作无法撤消。
Java.Database.Rolling.Upgrade.Archiving.Disabled = 正在进行滚动升级，禁止存档和恢复对象图。
Java.Database.Rolling.Upgrade.BackoutBtnLabel = 回退滚动升级
Java.Database.Rolling.Upgrade.BackoutBtnTooltip = 只能在具有源配置的节点上回退滚动升级
Java.Database.Rolling.Upgrade.BackoutConfirmMsg = 是否确定要回退升级？请确保所有具有目标配置的节点均已关闭。此操作无法撤消。
Java.Database.Rolling.Upgrade.BackoutStartShortly = 回退即将开始。请刷新屏幕以更新状态。
Java.Database.Rolling.Upgrade.CancelBackout = 取消回退
Java.Database.Rolling.Upgrade.CancelFull = 取消完整升级
Java.Database.Rolling.Upgrade.CompleteBackout = 完成回退
Java.Database.Rolling.Upgrade.InitiateBackout = 启动回退
Java.Database.Rolling.Upgrade.OrphanedTypekey.Upgrade = 发现从{1}到{2}中孤立类型代码的{0}引用。您需要在升级前将值恢复到类型列表或更新{1}中的值。用于查找这些引用的查询如下：{3}
Java.Database.Rolling.Upgrade.OrphanedTypekey.VerifyTypekeys = 发现从{1}到{2}中孤立类型代码的{0}引用。您需要在回退前更新{1}中的值。用于查找这些引用的查询如下：{3}
Java.Database.Rolling.Upgrade.RestartBackout = 重新启动回退
Java.Database.Rolling.Upgrade.RollingComplete = 滚动升级完成
Java.Database.Rolling.Upgrade.RollingComplete.HasActiveSourceServers = 检测到具有旧配置的活动服务器。请确保它们正常关闭。
Java.Database.Rolling.Upgrade.StartFull = 开始完整升级
Java.Database.Rolling.Upgrade.StartRolling = 开始滚动升级
Java.Database.Rolling.Upgrade.StartRollingTitle = 开始滚动升级
Java.Database.Rolling.Upgrade.Status.BackOutCompleted = 回退已完成。
Java.Database.Rolling.Upgrade.Status.BackOutInProgress = 回退正在进行中
Java.Database.Rolling.Upgrade.Status.BackOutStarted = 回退已开始
Java.Database.Rolling.Upgrade.Status.BackedOut = 已尝试升级（已回退）
Java.Database.Rolling.Upgrade.Status.Canceled = 升级已在做出任何更改前取消。
Java.Database.Rolling.Upgrade.Status.CannotBackOutInProgress = 无法进行回退，因为另一回退正在进行中
Java.Database.Rolling.Upgrade.Status.CannotBackOutInvalidState = 意外的回退状态：{0}
Java.Database.Rolling.Upgrade.Status.CannotCancelBackOut = 无法取消回退。
Java.Database.Rolling.Upgrade.Status.CannotCancelDBWorkInProgress = 无法取消操作，因为数据库工作已启动。请执行回退。
Java.Database.Rolling.Upgrade.Status.CannotCompleteNotDBDone = 无法完成操作，因为尚未完成任何数据库工作。
Java.Database.Rolling.Upgrade.Status.CannotEndDBNotDBStarted = 无法结束数据库工作，因为数据库工作尚未开始。
Java.Database.Rolling.Upgrade.Status.CannotNoUpgradeInProgress = 无法执行操作，因为当前未进行升级
Java.Database.Rolling.Upgrade.Status.CannotProceedIllegalState = 升级类型应为“完整”且状态应为“已启动”才能继续。
Java.Database.Rolling.Upgrade.Status.CannotRestartFailedUpgradeNoDBWork = 无法重新启动升级失败的应用，因为尚未完成任何数据库工作
Java.Database.Rolling.Upgrade.Status.CannotRestartFailedUpgradeNotFullUpgrade = 除非升级是完整升级，否则无法重新启动升级失败的应用
Java.Database.Rolling.Upgrade.Status.CannotStartDBNotStarted = 无法启动数据库工作，因为升级尚未开始。
Java.Database.Rolling.Upgrade.Status.CannotStartDifferent = 无法启动“{1}”类型的升级，因为已启动了另一“{0}”类型的升级
Java.Database.Rolling.Upgrade.Status.New = 新建架构
Java.Database.Rolling.Upgrade.Status.UpgradeInProgress = 升级正在进行中
Java.Database.Rolling.Upgrade.Status.UpgradeStarted = 升级已启动
Java.Database.Rolling.Upgrade.Status.Upgraded = 已升级
Java.Database.Rolling.Upgrade.Type.BackOut = 回退
Java.Database.Rolling.Upgrade.Type.Full = 全部
Java.Database.Rolling.Upgrade.Type.Install = 安装
Java.Database.Rolling.Upgrade.Type.Rolling = 滚动
Java.Database.Rolling.Upgrade.VerificationResultLabel = 类型键值验证结果
Java.Database.Rolling.Upgrade.VerifyBtnLabel = 验证升级的类型键值的使用
Java.Database.Rolling.Upgrade.VerifyBtnTooltip = 只能在具有源配置的节点上回退滚动升级
Java.Database.Rolling.Upgrade.VerifyInProgressTooltip = 验证流程已在运行
Java.Database.Rolling.Upgrade.VerifyTypekeys = 验证类型键值
Java.Database.Rolling.Upgrade.Version.Canceled = <升级已取消>
Java.Database.Rolling.Upgrade.Version.NotAvailable = <等待升级>
Java.Database.SQLCompatibilityLevelMismatch = 数据库的SQL Server兼容级别必须与服务器版本的兼容级别相同。
Java.Database.SQLServerAutoCreateStatisticsMustBeTrue = SQL Server自动创建统计设置必须为真
Java.Database.SQLServerAutoUpdateStatisticsMustBeTrue = SQL Server自动更新统计必须设置为真
Java.Database.SQLServerCannotBeSystemDatabase = SQL Server数据库可能不是系统数据库之一
Java.Database.SQLServerCollationMustBeCaseInsensitive = SQL Server排序规则必须不区分大小写
Java.Database.SQLServerHint.IndexNotFound = 实体{0}（列{1}和升序{2}）上未找到索引
Java.Database.SQLServerHint.QueryHintMustBeOnOuterQuery = 在SQL Server上，查询提示必须位于外部查询而非表对象上。
Java.Database.SQLServerJDBCUrlLockTimeoutOverridden = JDBC 驱动程序连接属性 LockTimeout 必须为默认值 -1。
Java.Database.SQLServerReadCommittedSnapshotMustBeOn = 对于此数据库，必须将SQL Server读提交快照隔离设置为打开状态
Java.Database.SchemaVerifier.BasicFileLobMismatch = {0}被配置为Oracle BasicFile LOB，但被定义为Oracle SecureFile LOB
Java.Database.SchemaVerifier.ClusteredInDataModel = 已在数据模型中分簇，但是
Java.Database.SchemaVerifier.ClusteredInTheDatabase = 已在数据库中分簇
Java.Database.SchemaVerifier.ClusteredMismatch = {0}.{1}：分簇的索引不匹配，数据模型 - {2}，系统表 - {3}
Java.Database.SchemaVerifier.CollationMismatch = {0}.{1}：排序规则不正确，配置的语言搜索排序规则 - {2}，物理数据库 - {3}
Java.Database.SchemaVerifier.ColumnNotInDataModel = {0}\: 列“{1}”存在于物理数据库中，但不存在于数据模型中。
Java.Database.SchemaVerifier.ColumnNotInDatabase = {0}\: 列“{1}”存在于数据模型中，但不存在于物理数据库中。
Java.Database.SchemaVerifier.ColumnNumberMismatch = {0}：列数不匹配 - 数据模型中为{1}，物理数据库中为{2}。
Java.Database.SchemaVerifier.CompressionMismatch = 表{0}的压缩不匹配
Java.Database.SchemaVerifier.DataModelNoLength = {0}.{1}：长度不匹配，数据模型不具有长度，但系统表具有长度 - {2}
Java.Database.SchemaVerifier.DataModelNoPrecision = {0}.{1}：精度不匹配，数据模型不具有精度，但系统表具有精度 - {2}
Java.Database.SchemaVerifier.DataModelNoScale = {0}.{1}：比例不匹配，数据模型不具有比例，系统表具有 - {2}
Java.Database.SchemaVerifier.DatatypeMismatch = {0}.{1}：数据类型不匹配：数据模型 - {2}；物理数据库 - {3}
Java.Database.SchemaVerifier.ForeignKeyMismatch = {0}：外键约束{1}的外键列不匹配 - 数据模型中为{2}，物理数据库中为{3}。
Java.Database.SchemaVerifier.ForeignKeyNumberMismatch = {0}：外键数不匹配 - 数据模型中为{1}，物理数据库中为{2}。
Java.Database.SchemaVerifier.ForeignKeyTableMismatch = {0}：外键约束的外键列中存在不匹配{1} - 在数据模型中指向{2}，在物理数据库中指向{3}。
Java.Database.SchemaVerifier.IdentityMismatch = {0}.{1}：标识不匹配，数据模型 - {2}，物理数据库 - {3}
Java.Database.SchemaVerifier.InDataModel = “在数据模型中，”
Java.Database.SchemaVerifier.InPhysicalDatabase = “在物理数据库中
Java.Database.SchemaVerifier.IndexClusteredMismatch = {0}.{1}：分簇的索引不匹配，数据模型 - {2}，系统表 - {3}
Java.Database.SchemaVerifier.IndexColumnMismatch = {0}：基于列的索引不匹配。数据模型 - {1}，系统表 - {2}
Java.Database.SchemaVerifier.IndexCompressionMismatch = {0}：具有键值列{2}（数据模型中的“{3}”、物理数据库中的“{4}”）的名为“{1}”的索引压缩不匹配
Java.Database.SchemaVerifier.IndexDataspaceMismatch = 表{2}具有键值列{1}的名为{0}的索引存在于数据空间{3}中，不在配置的数据空间{4}中
Java.Database.SchemaVerifier.IndexExpressionMismatch = {0}：名为“{1}”的表达式索引不匹配 - 配置中为“{2}”；物理数据库中为“{3}”
Java.Database.SchemaVerifier.IndexFilterMismatch = {0}：具有键值列{2}（配置中的“{3}”、物理数据库中的“{4}”）的名为“{1}”的索引过滤器不匹配
Java.Database.SchemaVerifier.IndexNotInDataModel = {0}：基于列的索引{1}{2}{3}存在于物理数据库中，但不在数据模型中
Java.Database.SchemaVerifier.IndexNotInDatabase = {0}：基于列的索引{1}{2}{3}存在于数据模型中，但不在物理数据库中
Java.Database.SchemaVerifier.IndexSpatialMismatch = {0}.{1}：空间索引不匹配，数据模型 - {2}；系统表 - {3}
Java.Database.SchemaVerifier.IndexUniquenessMismatch = {0}.{1}：唯一性不匹配，数据模型 - {2}，系统表 - {3}
Java.Database.SchemaVerifier.KeyColumnCountMismatch = {0}.{1}：键值列计数不匹配，数据模型 - {2} {3}，系统表 - {4} {5}
Java.Database.SchemaVerifier.KeyColumnNamesDontMatch = {0}.{1}（数据模型键值列 - {2}，物理数据库键值列 - {3}）：键值列名称不匹配，数据模型 - {4}，系统表 - {5}
Java.Database.SchemaVerifier.KeyColumnsSortDirectionsDontMatch = {0}.{1}（数据模型键值列 - {2}，物理数据库键值列 - {3}）：键值列排序方向与“{4}”不匹配，数据模型 - {5}，系统表 - {6}
Java.Database.SchemaVerifier.LengthMismatch = {0}.{1}：长度不匹配，数据模型 - {2}，物理数据库 - {3}
Java.Database.SchemaVerifier.LobCachingMismatch = Oracle LOB列{0}的配置具有caching\="{1}""，但使用缓存“{2}”定义
Java.Database.SchemaVerifier.MissingForeignKeyConstraint = {0}：在列{1}的数据模型中没有外键约束
Java.Database.SchemaVerifier.MultipleForeignKeyConstraintInDatabase = {0}：物理数据库中{1}列上的多个外键。
Java.Database.SchemaVerifier.NoForeignKeyConstraintInDatabase = {0}：在列{1}的数据库中没有外键约束
Java.Database.SchemaVerifier.NonRetiredContentMismatch = {0}：不能弃用的内容物不匹配，数据模型 - {1}，typelist表 - {2}
Java.Database.SchemaVerifier.NonRetiredTypeKeyMismatch = {0}：{1}中的不能弃用typekey不匹配，数据模型 - {2}，typelist表 - {3}
Java.Database.SchemaVerifier.NotSpace = 不是
Java.Database.SchemaVerifier.NullTableMetaData = {0}：NULL TableMetaData
Java.Database.SchemaVerifier.NullabilityMismatch = {0}.{1}：可空性不匹配，数据模型 - {2}，物理数据库 - {3}
Java.Database.SchemaVerifier.NumTLDontMatchNumTLTables = typeList的数量{0}与DBTypeListTable的数量{1}不匹配
Java.Database.SchemaVerifier.Partitioning.Index.DataModelHashIndexNot = ：数据模型是散列分区，但索引不是散列分区
Java.Database.SchemaVerifier.Partitioning.Index.DataModelNotHashIndexIs = ：数据模型不是散列分区，但索引是散列分区
Java.Database.SchemaVerifier.Partitioning.Index.DataModelNotRangeIndexIs = ：数据模型不是范围分区，但索引是范围分区
Java.Database.SchemaVerifier.Partitioning.Index.DataModelRangeIndexNot = ：数据模型是范围分区，但索引不是范围分区
Java.Database.SchemaVerifier.Partitioning.Index.PartitionSchemeMismatch = 在名为{0}的表中，对于键值列为{1}的索引，其配置的分区方案是{2}，但实际分区方案是{3}
Java.Database.SchemaVerifier.Partitioning.IndexLocalityMismatch = {0}：索引{1}被配置为分为{2}区，但在数据库中分成了{3}区。
Java.Database.SchemaVerifier.Partitioning.IndexMismatch = {0}：具有{1}的索引分区不匹配
Java.Database.SchemaVerifier.Partitioning.IndexNumPartitionsMismatch = {0}：{1}的索引分区数不匹配。预期为{2}，但在物理数据库中为{3}
Java.Database.SchemaVerifier.Partitioning.IndexPartitioningColumnMismatch = {0}：具有{1}的索引分区列不匹配。预期为{2}，但在物理数据库中为{3}
Java.Database.SchemaVerifier.Partitioning.TableMismatch.DoesNotHavePartitioning = 没有分区
Java.Database.SchemaVerifier.Partitioning.TableMismatch.HasPartitioning = 具有{0}分区
Java.Database.SchemaVerifier.PostgreSQL.MissingConstraintsForIndexes = 缺少以下唯一索引的可延期唯一约束：{0}
Java.Database.SchemaVerifier.PrecisionMismatch = {0}.{1}：精度不匹配，数据模型 - {2}，系统表 - {3}
Java.Database.SchemaVerifier.PrimaryKeyIs = \: 主键是
Java.Database.SchemaVerifier.PrimaryKeyNotInDataModel = {0}：主键存在于数据库中，但不在数据模型中
Java.Database.SchemaVerifier.PrimaryKeyNotInDatabase = {0}：主键存在于数据模型中，但不在数据库中
Java.Database.SchemaVerifier.RowCompressionConfiguredButTableIsNot = \:  已配置行压缩，但数据库表并非行压缩的。
Java.Database.SchemaVerifier.RowCompressionNotConfiguredButTableIs = \:  未配置行压缩，但数据库表是行压缩的。
Java.Database.SchemaVerifier.ScaleMismatch = {0}.{1}：比例不匹配，数据模型 - {2}，系统表 - {3}
Java.Database.SchemaVerifier.SecureFileLobCompressionLevelMismatch = {0}被配置成含默认中级压缩的Oracle SecureFile LOB，但被定义为含{1}级压缩的Oracle SecureFile LOB
Java.Database.SchemaVerifier.SecureFileLobCompressionMismatch = {0}被配置成不含压缩的Oracle SecureFile LOB，但被定义为含{1}级压缩的Oracle SecureFile LOB
Java.Database.SchemaVerifier.SecureFileLobCompressionMismatch2 = {0}被配置成含压缩的Oracle SecureFile LOB，但被定义为不含压缩级别的Oracle SecureFile LOB
Java.Database.SchemaVerifier.SecureFileLobMismatch = {0}被配置为Oracle SecureFile LOB，但被定义为Oracle BasicFile LOB
Java.Database.SchemaVerifier.SequenceNotInDataModel = 顺序{0}存在于数据库中，但不存在于数据模型中。
Java.Database.SchemaVerifier.SequenceNotInDatabase = 顺序{0}存在于数据模型中，但不存在于数据库中。
Java.Database.SchemaVerifier.SequencesNumberMismatch = 数据库中的序列数量{0}与DBSequences的数量{1}不匹配
Java.Database.SchemaVerifier.StagingTableDoesNotExist = {0}：数据库中不存在表
Java.Database.SchemaVerifier.StoredProcedureDefinitionMismatch = 数据库中的{0} {1}定义与相同名称数据模型{2}的定义不匹配。
Java.Database.SchemaVerifier.StoredProcedureNotInDatabase = StoredProcedure{0}存在于数据模型中，但不存在于数据库中。
Java.Database.SchemaVerifier.StoredProcedureTypeMismatch = 存储程序{0}（位于类型{1}的数据库中）与相同名称的数据模型存储程序的类型{2}不匹配。
Java.Database.SchemaVerifier.TableDataspaceMismatch = 表{0}存在于数据空间{1}中，不在配置的数据空间{2}中
Java.Database.SchemaVerifier.TableDoesNotExistInDatabase = {0}：数据库中不存在表
Java.Database.SchemaVerifier.TableHasUnusedColumns = {0}：具有未使用的列。要从表中物理删除，请执行{1}
Java.Database.SchemaVerifier.TableLobDataspaceMismatch = 表{0}的LOB（包括空间列）位于数据空间{1}中，而不在配置的数据空间{2}中
Java.Database.SchemaVerifier.TableNotInDataModel = {0}：表存在于数据库中，但不在数据模型中。
Java.Database.SchemaVerifier.TablePartitionColumnMismatch = 表“{0}”的分区列不匹配 - 数据模型中为{1}分区列，但物理数据库中为{2}
Java.Database.SchemaVerifier.TablePartitionIntervalFunctionMismatch = 表“{0}”的分区间隔函数不匹配 - 预期为{1}，但物理数据库中为{2}
Java.Database.SchemaVerifier.TablePartitionNumberMismatch = 表“{0}”的分区数量不匹配 - 预期为{1}，但物理数据库中为{2}
Java.Database.SchemaVerifier.TablePartitioningMismatch = 表“{0}”的分区不匹配 - 数据模型中为{1}散列分区，但物理数据库中为{2}
Java.Database.SchemaVerifier.TypeListMismatch = 类型列表不匹配，DBTypeListTable typelist - {0}，TypeList - {1}
Java.Database.SchemaVerifier.ValueCompressionConfiguredButTableIsNot = \:  已配置值压缩，但数据库表并非值压缩的。
Java.Database.SchemaVerifier.ValueCompressionNotConfiguredButTableIs = \:  未配置值压缩，但数据库表是值压缩的。
Java.Database.SecureFileLobsConfiguredAndTablespaceNotASSM = Oracle SecureFile LOB只能在通过自动段空间管理进行管理的表空间中创建。\n已配置Oracle SecureFile LOB，但可能存储SecureFile LOB、名为{0}的表空间不通过ASSM进行管理。
Java.Database.Spatial.BufferDistanceMustBePositive = 缓冲距离必须大于或等于 0，但\: {0}
Java.Database.Spatial.CannotComputeDistanceWithoutProximitySearch = 不执行邻近搜索无法计算距离(withinDistance)。
Java.Database.Spatial.FailedToCreateRectangleBecausePointsFormLine = 创建矩形失败，因为点“{0}”和“{1}”形成一条线。
Java.Database.Spatial.FailedToParseWellKnownText = 解析Well-Known Text“{0}”失败
Java.Database.Spatial.FailedToParseWellKnownTextFromStream = 根据流“{0}”解析Well-Known Text失败
Java.Database.Spatial.H2.DoesNotWork = 空间数据类型和查询未在H2中正常工作。
Java.Database.Spatial.H2.InvalidPolygon = 多边形“{0}”无效。
Java.Database.Spatial.IndexInfo.Definition = 索引定义：“{0}”
Java.Database.Spatial.IndexInfo.Dimension = 维度信息：“{0}”
Java.Database.Spatial.IndexInfo.Microsoft.BboxXMax = 界限框x最大值：{0}
Java.Database.Spatial.IndexInfo.Microsoft.BboxXMin = 界限框x最小值：{0}
Java.Database.Spatial.IndexInfo.Microsoft.BboxYMax = 界限框y最大值：{0}
Java.Database.Spatial.IndexInfo.Microsoft.BboxYMin = 界限框y最小值：{0}
Java.Database.Spatial.IndexInfo.Microsoft.CellsPerObject = 每个对象的单元：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level1Grid = 级别 1 网格：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level1GridDensity = 级别 1 网格密度：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level2Grid = 级别 2 网格：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level2GridDensity = 级别 2 网格密度：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level3Grid = 级别 3 网格：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level3GridDensity = 级别 3 网格密度：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level4Grid = 级别 4 网格：{0}
Java.Database.Spatial.IndexInfo.Microsoft.Level4GridDensity = 级别 4 网格密度：{0}
Java.Database.Spatial.IndexInfo.Microsoft.TessellationScheme = 分割方案：{0}
Java.Database.Spatial.IndexInfo.Oracle.DimensionName = 维度名称：{0}
Java.Database.Spatial.IndexInfo.Oracle.LowerBound = 下限：{0}
Java.Database.Spatial.IndexInfo.Oracle.Tolerance = 容差：{0}
Java.Database.Spatial.IndexInfo.Oracle.UpperBound = 上限：{0}
Java.Database.Spatial.LatitudeRange = 纬度必须位于 -90 到 +90 范围内，但为{0}
Java.Database.Spatial.LongitudeRange = 经度必须位于 -180 到 +180 范围内，但为{0}
Java.Database.Spatial.Microsoft.GeographyLargerThanHemisphere = 多边形比半球体大；可能给出多边形圆环的顺序有错误。必须逆时针插入多边形的外部圆环，顺时针插入内部圆环。
Java.Database.Spatial.Microsoft.InvalidPolygon = 多边形“{0}”无效。
Java.Database.Spatial.Microsoft.UnexpectedFigureAttribute = 二进制格式出错：意外的数据属性：{0}。
Java.Database.Spatial.Microsoft.UnexpectedOpenGISType = 二进制格式出错：意外的OpenGIS类型：{0}。
Java.Database.Spatial.Microsoft.UnexpectedSerializationProperties = 二进制格式出错：意外的序列化属性：{0}。
Java.Database.Spatial.Microsoft.UnknownVersion = 二进制格式出错：未知版本：{0}。
Java.Database.Spatial.Microsoft.WrongSRID = 二进制格式出错：参考框架与配置框架不同：{0}与{1}。
Java.Database.Spatial.MustBeSpatialPointColumn = 列必须是一个空间点：{0}
Java.Database.Spatial.MustBeSpatialPolygonColumn = 列必须是一个空间多边形：{0}
Java.Database.Spatial.NotAPolygonButALine = 点不能形成多边形，但可形成线。
Java.Database.Spatial.Oracle.Expected2D = 预期几何是二维的，但获得维度：{0}。
Java.Database.Spatial.Oracle.ExpectedMultiPolygon = 预期几何为MultiPolygon，但获得类型：{0}。
Java.Database.Spatial.Oracle.ExpectedPoint = 预期几何为点，但获得类型：{0}。
Java.Database.Spatial.Oracle.InvalidPolygon = 多边形“{0}”无效。有关详细信息，请参考Oracle文档：{1}。
Java.Database.Spatial.Oracle.UnexpectedSDOEType = 几何错误：意外的SDO_ETYPE：{0}
Java.Database.Spatial.Oracle.UnexpectedSDOETypeAtRingPosition = 几何错误：圆环位置{1}处的意外SDO_ETYPE：{0}
Java.Database.Spatial.Oracle.UnexpectedSDOInterpretation = 几何错误：意外的SDO_INTERPRETATION：{0}
Java.Database.Spatial.Oracle.WrongSRID = 参考框架与配置框架不同：{0}与{1}。
Java.Database.Spatial.PolygonRingMustHaveAtLeast4Points = 一个多边形圆环必须至少具有 4 个点；实际为：{0}。
Java.Database.Spatial.PostgreSQL.InvalidPolygon = 多边形“{0}”无效：{1}
Java.Database.Spatial.PostgreSQL.NoSRIDDefined = 二进制格式出错：类型编号中未定义SRID：{0}。
Java.Database.Spatial.PostgreSQL.UnexpectedEndianness = 意外的字节序标志值{0}与标头{1}不匹配
Java.Database.Spatial.PostgreSQL.UnexpectedTrailingData = 空间多边形中意外的结尾数据
Java.Database.Spatial.PostgreSQL.UnknownGeometry = 二进制格式出错：未知或意外的几何类型：{0}。
Java.Database.Spatial.PostgreSQL.WrongSRID = 二进制格式出错：参考框架与配置框架不同：{0}与{1}。
Java.Database.Spatial.RingMustStartAndEndWithSamePoint = 因为最后一个点与第一个点不同，所以这些点未能形成圆环。
Java.Database.Spatial.UpToOneSpatialSearchAllowedPerQuery = 每个查询仅允许一次空间搜索
Java.Database.Spatial.Upgrade.NotASpatialColumn = 表“{0}”中的列“{1}”不是空间列；数据类型为“{2}”
Java.Database.Statistics.Completed = 已完成更新统计数据流程
Java.Database.Statistics.DoesNotSupportStatistics = 该数据库类型不支持统计数据的更新：{0}
Java.Database.Statistics.DuplicateKeyPosition = 列“{1}”和列“{2}”在表“{3}”列“{4}”中的键位置“{0}”重复。有效值为 1 - {5}（闭区间）。
Java.Database.Statistics.InvalidDatabaseDegree = 数据库中的数据库度的值“{0}”无效。有效值>\=1。
Java.Database.Statistics.InvalidNumBuckets = 表“{2}”中直方图“{1}”中的存储桶数的值“{0}”无效。有效值>\=1。
Java.Database.Statistics.InvalidNumThreads = 数据库中应用服务器线程数的值“{0}”无效。有效值>\=1。
Java.Database.Statistics.InvalidSamplingPercentage = 数据库中采样百分比的值“{0}”无效。有效值为 0 - 100（闭区间）。
Java.Database.Statistics.InvalidTableDegree = 表“{1}”中的数据库度值“{0}”无效。有效值>\=1。
Java.Database.Statistics.InvalidTableSamplingPercentage = 表“{1}”中的采样百分比值“{0}”无效。有效值为 1 - 100（闭区间）。
Java.Database.Statistics.InvalidThresholdPercentage = 数据库中的阈值递增百分比值“{0}”无效。有效值为 1 - 100 （闭区间）。
Java.Database.Statistics.InvalidValueSB0to100 = {0}形式参数的值无效。有效值为 0 - 100（闭区间）。
Java.Database.Statistics.NoMatchingIndex = 未找到与表{1}中{0}列匹配的索引
Java.Database.Statistics.TableNotInDataModel = 表“{0}”在数据模型中不存在。只能为数据模型中的表指定数据库统计覆盖。
Java.Database.SupportedDatabaseVersion = 支持此数据库版本。受支持的数据库版本为({0})。实际数据库版本为({1})。
Java.Database.TableGroup = 表组
Java.Database.TableGroupTableNames = 表名
Java.Database.TableGroups = 表组
Java.Database.UnableToCreateDir = 无法创建目录： {0}
Java.Database.UnableToWriteToFile = 无法写入{0}： {1}
Java.Database.UnaccentExtensionMustBeLoaded = 必须加载unaccent扩展而且其版本必须为{0}
Java.Database.UnsupportedDatabaseParametersAllowedInDevMode = 由于服务器在开发模式下运行，因此允许不支持的数据库设置。
Java.Database.UnsupportedDatabaseVersion = 找到的数据库版本不受支持：({0})。支持的版本为({1})。
Java.Database.UnsupportedDatabaseVersionAllowed = 通过特殊形式参数覆盖可允许不受支持的数据库版本
Java.Database.UnsupportedDatabaseVersionAllowedInDevMode = 由于服务器当前在开发模式下运行，因此允许使用不支持的数据库版本
Java.Database.UnsupportedFieldType = 不支持将类{0}用作字段类型
Java.Database.UnsupportedJDBCDriver = 发现不受支持的JDBC驱动程序名称或版本： {0} {1}。支持的名称和版本为{2} {3}。
Java.Database.UnsupportedJDBCDriverAllowed = 通过特殊形式参数覆盖可允许不受支持的JDBC驱动程序
Java.Database.UnsupportedJDBCDriverAllowedInDevMode = 由于服务器当前在开发模式下运行，因此允许使用不受支持的JDBC驱动程序
Java.Database.UnsupportedNullType = 类{0}不能为null
Java.Database.Upgrade.Deferred.Complete = 已完成
Java.Database.Upgrade.Deferred.IncompleteUIStatus = 未完成（{0}个，共{1}个）
Java.Database.Upgrade.Deferred.NotApplicable = 不适用
Java.Database.Upgrade.Deferred.NotRunning = 未完成（未在运行）
Java.Database.Upgrade.ErrorDuringGuidewireVersionChecks = 因Guidewire版本检查过程中出现错误，数据库升级将结束，但是客户版本触发器已运行。
Java.Database.Upgrade.InstrumentationTablesDropWarning = 升级检测表包含有关先前升级的信息，但此升级要求丢弃这些表。
Java.Database.Upgrade.RestartWithRecovery = \!\!\! 之前的升级失败({0}),但由于服务器处于开发模式，我们将跳过之前执行的所有操作并恢复失败的操作。
Java.Database.Upgrade.Version.NoMajorVersionRecorded = <未记录主要版本>
Java.DatabaseParameters = 数据库形式参数
Java.DatabaseParameters.Attribute = 属性
Java.DatabaseParameters.AttributeId = 属性ID
Java.DatabaseParameters.AttributeName = 属性名称
Java.DatabaseParameters.AttributeValue = 属性值
Java.DatabaseParameters.AutocommitOn = 自动提交打开
Java.DatabaseParameters.Compression.OracleUniqueSingleColumnIndex = 单列唯一索引无法在Oracle中压缩。表名称是{0}，键值列是{1}。
Java.DatabaseParameters.Compression.SpatialIndexNotCompressible = 不能压缩空间索引。表名称是{0}和{1}。
Java.DatabaseParameters.ConnectionValidationSQL = 连接校验SQL
Java.DatabaseParameters.DBAAutostats = Oracle DBA自动统计目标
Java.DatabaseParameters.DBAAutotasks = Oracle DBA 自动任务
Java.DatabaseParameters.DBASchedulerJobs = Oracle DBA计划程序作业
Java.DatabaseParameters.DBOptionsAndFeatures = Oracle 数据库选项和功能
Java.DatabaseParameters.DatabaseAndDriver = 数据库和驱动程序
Java.DatabaseParameters.DatabaseAndDriver.DatabaseProductName = JDBC驱动程序的数据库产品名称
Java.DatabaseParameters.DatabaseAndDriver.DatabaseType = 数据库类型
Java.DatabaseParameters.DatabaseAndDriver.DatabaseVersion = JDBC驱动程序的数据库版本
Java.DatabaseParameters.DatabaseAndDriver.JDBCDriverName = JDBC驱动程序名称
Java.DatabaseParameters.DatabaseAndDriver.JDBCDriverVersion = JDBC驱动程序版本
Java.DatabaseParameters.DatabaseConfigAttribute = 数据库配置属性
Java.DatabaseParameters.DatabaseConfigAttributes = Guidewire数据库配置属性
Java.DatabaseParameters.DatabaseConfigParams = 数据库配置参数
Java.DatabaseParameters.DatabaseConfigurationParams = 数据库配置形式参数
Java.DatabaseParameters.DatabaseConnectionPoolSettings = 数据库连接池设置
Java.DatabaseParameters.DatabaseConnectionPoolSnapshot = 数据库连接池快照
Java.DatabaseParameters.DatabaseConnectionProperties = 数据库连接属性
Java.DatabaseParameters.DatabaseDDLSettings = 数据库 DDL 设置
Java.DatabaseParameters.DatabaseManagerConfigParams = 数据库管理器配置参数
Java.DatabaseParameters.DatabaseOptions = SQL Server数据库选项
Java.DatabaseParameters.DatabaseServerInfo = 数据库服务器信息
Java.DatabaseParameters.DatabaseTablespaceMappings = 数据库配置表空间映射
Java.DatabaseParameters.DatabaseUpgradeSettings = 数据库配置升级设置
Java.DatabaseParameters.DefaultAttributeValue = 默认值
Java.DatabaseParameters.DefaultDegree = 默认度
Java.DatabaseParameters.DefaultDegreeOfParallelismForInsertSelects = 插入选择的默认并行度
Java.DatabaseParameters.DefaultNumHistogramBuckets = 默认直方图存储桶数
Java.DatabaseParameters.DefaultSamplingPercentage = 默认采样百分比
Java.DatabaseParameters.Degree = 度
Java.DatabaseParameters.Element = 元素
Java.DatabaseParameters.ExternallyManaged = 外部管理
Java.DatabaseParameters.GlobalConfigurationServerSettings = SQL Server服务器全局服务器设置
Java.DatabaseParameters.GuidewireDatabaseConfig = Guidewire数据库配置
Java.DatabaseParameters.GuidewireDatabaseConfigStatisticsSettings = Guidewire数据库配置统计设置
Java.DatabaseParameters.GuidewireDatabaseUpgradeConfiguration = Guidewire数据库升级配置
Java.DatabaseParameters.H2DatabaseSettings = H2数据库设置
Java.DatabaseParameters.LinguisticSearchOptions = 语言搜索选项
Java.DatabaseParameters.LinguisticSearchOracleFunctions = 语言搜索Oracle函数和Java源
Java.DatabaseParameters.LogicalName = 逻辑名称
Java.DatabaseParameters.NlsInstanceParams = Oracle NLS实例形式参数
Java.DatabaseParameters.NlsSessionParams = Oracle NLS会话形式参数
Java.DatabaseParameters.None = 无
Java.DatabaseParameters.NullConnection = 来自连接池的连接为null
Java.DatabaseParameters.NumAppServerThreads = 应用服务器线程数
Java.DatabaseParameters.NumHistogramBuckets = 直方图存储桶数
Java.DatabaseParameters.OracleDataPatchHistory = Oracle DataPatch历史记录
Java.DatabaseParameters.OraclePatchHistory = Oracle修补历史记录
Java.DatabaseParameters.OracleRegistry = Oracle注册表
Java.DatabaseParameters.ParamName = 形式参数名
Java.DatabaseParameters.ParamValue = 参数值
Java.DatabaseParameters.Parameter = 形式参数
Java.DatabaseParameters.PermanentNlsDbParams = Oracle永久性NLS数据库参数
Java.DatabaseParameters.PhysicalName = 物理名称
Java.DatabaseParameters.ProcedureText = 过程、函数或Java源文本
Java.DatabaseParameters.ProcedureType = 类型
Java.DatabaseParameters.QueriesExecutedToBuildDownload = 为构建下载而执行的查询
Java.DatabaseParameters.ReadCommitted = 读取已提交
Java.DatabaseParameters.ReadOnly = 只读
Java.DatabaseParameters.ReadUncommitted = 读取未提交
Java.DatabaseParameters.RepeatableRead = 可重复读取
Java.DatabaseParameters.SGASummaryInfo = Oracle SGA摘要信息
Java.DatabaseParameters.SQLExceptionCaught = 从池引用连接时捕获SQLException
Java.DatabaseParameters.SQLServerDatabaseOptions = SQL Server数据库选项
Java.DatabaseParameters.SQLServerEstimatedPageLevelCompressionSavings = 预计页面级别压缩能节省的数据库压缩空间
Java.DatabaseParameters.SQLServerEstimatedRowLevelCompressionSavings = 预计行级别压缩能节省的数据库压缩空间
Java.DatabaseParameters.SQLServerServerDatabaseScopedConfigurationSettings = SQL Server服务器数据库作用域配置设置
Java.DatabaseParameters.SQLServerServerGlobalServerSettings = SQL Server服务器全局服务器设置
Java.DatabaseParameters.SQLServerServerInstanceAttributesandValues = SQL Server服务器实例属性和值
Java.DatabaseParameters.SQLServerSessionProperties = SQL Server会话属性
Java.DatabaseParameters.SamplingPercentage = 采样百分比
Java.DatabaseParameters.ScreenMessage = 请单击“加载/重新加载数据库形式参数信息”进行加载。某些列出的形式参数仅供参考，可能不适用于您的数据库类型。
Java.DatabaseParameters.Serializable = 可序列化
Java.DatabaseParameters.ServerAttributesAndValues = SQL Server服务器实例属性和值
Java.DatabaseParameters.SessionInitParams = Oracle会话初始化形式参数
Java.DatabaseParameters.SessionProperties = SQL Server会话属性
Java.DatabaseParameters.SessionProperty = 会话属性
Java.DatabaseParameters.SettableDatabaseOptionsFor = 针对以下内容的可设置数据库选项
Java.DatabaseParameters.Setting = 设置
Java.DatabaseParameters.StateOfCurrentInstance = 当前实例的Oracle状态
Java.DatabaseParameters.StatisticsSettings = Guidewire数据库配置统计设置
Java.DatabaseParameters.SummaryOfQueriesExecutedToBuildDownload = 为构建下载而执行的查询的摘要
Java.DatabaseParameters.SystemStatistics = Oracle系统统计
Java.DatabaseParameters.TransactionIsolationLevel = 事务隔离级别
Java.DatabaseParameters.Undefined = 未定义
Java.DatabaseParameters.UpgradeConfiguration = Guidewire数据库升级配置
Java.DatabaseParameters.Value = 值
Java.DatabaseParameters.VersionTriggerConfiguration = 版本触发器配置
Java.DatabaseParameters.VersionTriggerDBMSDumpThreshold = 版本触发器DBMS转储阈值
Java.DatabaseParameters.View = 查看
Java.DatabaseStorage.AllocUnitTypeDesc = 分配单位类型说明
Java.DatabaseStorage.AllocatedPages = 分配的页
Java.DatabaseStorage.AllocationType = 分配类型
Java.DatabaseStorage.AvgFragmentSizeInPages = 平均碎片大小（页）
Java.DatabaseStorage.AvgFragmentationInPercent = 平均碎片百分比
Java.DatabaseStorage.AvgPageSpaceUsedInPercent = 平均页面空间使用百分比
Java.DatabaseStorage.AvgRecordSizeInBytes = 平均记录大小（字节）
Java.DatabaseStorage.ColumnName = 列名
Java.DatabaseStorage.CompressedPageCount = 压缩页计数
Java.DatabaseStorage.Compression = 压缩
Java.DatabaseStorage.CompressionType = 压缩类型
Java.DatabaseStorage.Contents = 内容
Java.DatabaseStorage.CurrentSizeMB = 当前大小(MB)
Java.DatabaseStorage.DataCompression = 数据压缩
Java.DatabaseStorage.DataSpaceName = 数据空间名称
Java.DatabaseStorage.DataSpaces = 数据空间
Java.DatabaseStorage.DatabaseName = 数据库名称
Java.DatabaseStorage.DatabaseSizeMB = 数据库大小(MB)
Java.DatabaseStorage.DatabaseSpace = 数据库空间
Java.DatabaseStorage.DatabaseUsageStats = 数据库使用情况统计
Java.DatabaseStorage.Degree = 度
Java.DatabaseStorage.Dependencies = 依赖性
Java.DatabaseStorage.Dropped = 已丢弃
Java.DatabaseStorage.Duration = 持续时间
Java.DatabaseStorage.EstimatedCompressionRatio = 预计压缩比
Java.DatabaseStorage.FileType = 文件类型
Java.DatabaseStorage.ForwardedRecordCount = 转发记录计数
Java.DatabaseStorage.FragmentCount = 碎片计数
Java.DatabaseStorage.FreeMb = 可用mb
Java.DatabaseStorage.FreePages = 可用页
Java.DatabaseStorage.FreeSpaceInMB = 可用空间(MB)
Java.DatabaseStorage.Freelists = 空闲列表
Java.DatabaseStorage.Freepools = 可用池
Java.DatabaseStorage.Generated = 已生成
Java.DatabaseStorage.GhostRecordCount = 虚影记录计数
Java.DatabaseStorage.Growth = 增长
Java.DatabaseStorage.IndexCompressionInfo = 索引压缩信息
Java.DatabaseStorage.IndexDepth = 索引深度
Java.DatabaseStorage.IndexId = 索引ID
Java.DatabaseStorage.IndexLevel = 索引级别
Java.DatabaseStorage.IndexName = 索引名称
Java.DatabaseStorage.IndexPhysicalStats = 索引物理统计
Java.DatabaseStorage.IndexSizeMb = 索引大小(mb)
Java.DatabaseStorage.IndexTypeDesc = 索引类型说明
Java.DatabaseStorage.IndexUsageStats = 索引使用情况统计
Java.DatabaseStorage.Indexes = 索引
Java.DatabaseStorage.IndexesSpaceSummary = 索引分配空间
Java.DatabaseStorage.IndexesWithHighFragmentation = 具有大量碎片的索引
Java.DatabaseStorage.Instances = 实例
Java.DatabaseStorage.InternalObjectPagesUsed = 已用的内部对象页数
Java.DatabaseStorage.InternalObjectSpaceInMB = 内部对象空间(MB)
Java.DatabaseStorage.KeyColumns = 键值列
Java.DatabaseStorage.LOBIndexName = Oracle LOB索引名称
Java.DatabaseStorage.LOBIndexSizeMb = Oracle LOB索引大小 (MB)
Java.DatabaseStorage.LOBName = Oracle LOB名称
Java.DatabaseStorage.LOBSizeMb = Oracle LOB大小 (MB)
Java.DatabaseStorage.LOBsSpaceSummary = Oracle LOB分配空间
Java.DatabaseStorage.Logging = 登录
Java.DatabaseStorage.LogicalName = 逻辑名称
Java.DatabaseStorage.MaxRecordSizeInBytes = 最大记录大小（字节）
Java.DatabaseStorage.MaxSizeMB = 最大占据空间(MB)
Java.DatabaseStorage.MinRecordSizeInBytes = 最小记录大小（字节）
Java.DatabaseStorage.Monitoring = 监视
Java.DatabaseStorage.Nested = 嵌套
Java.DatabaseStorage.NoCompressionLevelSelectedErrorMessage = 未指定压缩级别： 请选择一个。
Java.DatabaseStorage.NoTablesSelectedErrorMessage = 未指定任何表：请至少选择一个表。
Java.DatabaseStorage.OracleDBMSCompressionPackageNotInstalledErrorMessage = 包DBMS_COMPRESSION （11.2g或之后）或DBMS_COMP_ADVISOR （11.2之前）均未安装。
Java.DatabaseStorage.OracleEstimatedOLTPCompressionSavings = 预计高级压缩节省量
Java.DatabaseStorage.PageCount = 页计数
Java.DatabaseStorage.Parameters = 形式参数
Java.DatabaseStorage.PartitionNumber = 分区编号
Java.DatabaseStorage.Partitioned = 已分区
Java.DatabaseStorage.Pctversion = pctversion
Java.DatabaseStorage.PercentSavings = 节省百分比%
Java.DatabaseStorage.PostgreSQL.TotalToastKB = TOAST占用大小总计(KB)
Java.DatabaseStorage.ProblemFetchingDBMSOutputErrorMessage = 获取dbms_output时出现问题 -
Java.DatabaseStorage.RecordCount = 记录计数
Java.DatabaseStorage.Retention = 保留
Java.DatabaseStorage.SampleSizeWithCurrentCompressionSettingKB = 当前压缩设置的样本大小(KB)
Java.DatabaseStorage.SampleSizeWithRequestedCompressionSettingKB = 要求的压缩设置的样本大小(KB)
Java.DatabaseStorage.SamplingPercentage = 采样百分比
Java.DatabaseStorage.SamplingTable = 采样表
Java.DatabaseStorage.SchemaName = 架构名称
Java.DatabaseStorage.Secondary = 次要
Java.DatabaseStorage.SizeMb = 大小(MB)
Java.DatabaseStorage.SizeOfTableIndexWithCurrentCompressionSettingKB = 当前压缩设置的表/索引大小(KB)
Java.DatabaseStorage.SizeOfTableIndexWithRequestedCompressionSettingKB = 要求的压缩设置的表/索引大小(KB)
Java.DatabaseStorage.Status = 状态
Java.DatabaseStorage.TableAndIndex = 表和索引
Java.DatabaseStorage.TableCompressionInfo = 表压缩信息
Java.DatabaseStorage.TableSizeMb = 表大小(MB)
Java.DatabaseStorage.TableUsageStats = 表使用情况统计
Java.DatabaseStorage.TablesAndIndexes = 表和索引
Java.DatabaseStorage.TablesSpaceSummary = 表分配空间
Java.DatabaseStorage.Tablespace = 表空间
Java.DatabaseStorage.TablespaceName = 表空间名称
Java.DatabaseStorage.TablespaceSpaceSummary = 表空间空间
Java.DatabaseStorage.TablespaceUsageStats = 表空间使用情况统计
Java.DatabaseStorage.Tablespace_Name = tablespace_name
Java.DatabaseStorage.Tablespaces = 表空间
Java.DatabaseStorage.TempDBSummary = TempDB摘要
Java.DatabaseStorage.Temporary = 临时
Java.DatabaseStorage.TooManyTablesSelectedError = 指定的表过多{0}。最大数量为{1}。
Java.DatabaseStorage.TotalAllocatedKB = 已分配大小总计(KB)
Java.DatabaseStorage.TotalUsedByDataKB = 数据占用大小总计(KB)
Java.DatabaseStorage.TotalUsedByIndexesKB = 索引占用大小总计(KB)
Java.DatabaseStorage.Type = 类型
Java.DatabaseStorage.UnallocatedSpaceMB = 未分配空间(MB)
Java.DatabaseStorage.UnexpectedNumberOfDBMSOutputResultsErrorMessage = 获取dbms_output时返回了异常的行数
Java.DatabaseStorage.Uniqueness = 唯一性
Java.DatabaseStorage.UsedMb = 已用大小(MB)
Java.DatabaseStorage.UsedPages = 已用页数
Java.DatabaseStorage.UserIndex = 用户索引
Java.DatabaseStorage.UserIndexes = 用户索引
Java.DatabaseStorage.UserLOB = Oracle用户LOB
Java.DatabaseStorage.UserLOBs = Oracle用户LOB
Java.DatabaseStorage.UserObjectPagesUsed = 已用的用户对象页数
Java.DatabaseStorage.UserObjectSpaceInMB = 用户对象空间(MB)
Java.DatabaseStorage.UserTable = 用户表
Java.DatabaseStorage.UserTables = 用户表
Java.DatabaseStorage.VersionGhostRecordCount = 版本虚影记录计数
Java.DatabaseStorage.VersionStorePagesUsed = 已用的版本存储页数
Java.DatabaseStorage.VersionStoreSpaceInMB = 版本存储空间(MB)
Java.DatabaseStorage.physicalName = 物理名称
Java.DatabaseStorage.tableName = 表名称
Java.DatabaseStorage.totalUnusedKB = 未用大小总计(KB)
Java.DeleteAttributesListener.CannotDeleteAttribute = 已有用户正在使用此属性。
Java.Desktop.Activities.NoFNOLActivitiesInQueue = 没有有效的接报案活动。
Java.Desktop.Search.Error.BadDateFormat = {0}必须为日期
Java.Desktop.Search.Error.BadIntFormat = {0}必须为整数
Java.Desktop.Search.Error.BadNumberFormat = {0}必须为数字
Java.Desktop.Search.Error.InvalidDateRange = {0}的“自”必须早于“至”
Java.Desktop.Search.Error.InvalidIntRange = {0}的“自”必须小于“至”
Java.Desktop.Search.Error.MissingFromValue = {0}不能只有“至”而没有“自”
Java.Desktop.Search.Error.MissingToValue = {0}不能只有“自”而没有“至”
Java.Desktop.ToolbarFilter.Accounts.All = 所有
Java.Desktop.ToolbarFilter.Accounts.AllPending = 所有待定
Java.Desktop.ToolbarFilter.Accounts.CreatedInPast7Days = 在过去7天创建
Java.Desktop.ToolbarFilter.Activities.Created7Days = 为我分配了7天内到期活动的未决项
Java.Desktop.ToolbarFilter.Activities.Open = 为我分配了活动的未决项
Java.Desktop.ToolbarFilter.Jobs.Completed30Days = 在过去30天完成
Java.Desktop.ToolbarFilter.Jobs.Created7Days = 在过去7天创建
Java.Desktop.ToolbarFilter.Jobs.Open = 所有未决项
Java.Desktop.ToolbarFilter.Jobs.OpenIssuance = 未完成承保
Java.Destination.Empty = 未提供目标
Java.Dictionary.Security.OutputFormat.HTML = HTML
Java.Dictionary.Security.OutputFormat.XML = XML
Java.Dictionary.Security.Permission.Element.Attribute = {0}属性
Java.Dictionary.Security.Permission.ElementReferences = 元素引用
Java.Dictionary.Security.Permission.ObjectBased.False = （静态）
Java.Dictionary.Security.Permission.ObjectBased.True = （基于对象）
Java.Dictionary.Security.Permission.Page.Attribute = {0}属性
Java.Dictionary.Security.Permission.PageReferences = 页面引用
Java.Dictionary.Security.Permission.RelatedPermission = 相关权限
Java.Dictionary.Security.PermissionMap.Error.NoHandler = 错误： 没有为{0}定义任何权限处理程序
Java.Dictionary.Security.PermissionMap.Summary.Desc = 说明
Java.Dictionary.Security.PermissionMap.Summary.Name = 名称
Java.Dictionary.Security.PermissionMap.Summary.ObjectBased = 基于对象
Java.Dictionary.Security.PermissionMap.SummaryTitle = 应用程序权限密钥摘要
Java.Dictionary.Security.PermissionMap.Title = 应用程序权限密钥
Java.Diff.AbstractEntityElement.TypeMustBeEntity = 属性“type”应为实体类型。
Java.Diff.AbstractEntityElement.TypeMustBeValid = 属性“type”应为有效的类型。
Java.Diff.AbstractPropertiesElement.TypeMustBeEntity = 属性“includefromtype”应为实体类型。
Java.Diff.AbstractPropertiesElement.TypeMustBeValid = 属性“includefromtype”应为有效类型。
Java.Diff.AbstractSortOrderElement.SortOrderMustBeInteger = 属性“sortorder”必须为有效的整数。
Java.Diff.Added = √
Java.Diff.CovTermAvl = {0}可用性
Java.Diff.DiffEffectiveAsOf = {0} [生效{1}]
Java.Diff.Error.InvalidDefaultDiffDateFormat = 用于配置参数“DefaultDiffDateFormat”的值无效。请将该形式参数更改为有效的日期格式。
Java.Diff.Existed = √
Java.Diff.OriginalMessage = {0}
Java.Diff.PairTraversal.NotAnEntityTypeError = 类型{0}不是I实体类型。
Java.Diff.PairTraversal.NullPairError = 不应访问一对空bean。
Java.Diff.PairTraversal.TypeMismatchError = 无法跨越不同类型的bean。
Java.Diff.PairTraversal.UntypedError = 如果没有类型，则无法跨越bean。
Java.Diff.PairTraversal.VisitArrayBackingFKFailureWarning = 无法访问阵列支持外键：{1}上的{0}
Java.Diff.PairTraversal.VisitArrayFailureWarning = 无法访问{1}上的阵列{0}
Java.Diff.PairTraversal.VisitFKFailureWarning = 无法访问{1}上的外键{0}
Java.Diff.PairTraversal.VisitFailureWarning = 无法访问的bean的类型：{0}首先是：{1}然后是：{2}
Java.Diff.PairTraversal.VisitOtherFailureWarning = 无法访问{1}上的其它属性{0}
Java.Diff.PairTraversal.VisitScalarFailureWarning = 无法访问{1}上的标量属性{0}
Java.Diff.Removed = x
Java.Diff.Window.DateRange = {0} - {1}
Java.Diff.Window.EffectiveDateRanges = {0}
Java.Diff.Window.Label = 生效日期
Java.Diff.Window.RangeDelimeter = ,
Java.DiffAPI.NullGetEntityLabel = 不能将空实体传递到getEntityLabel。
Java.DiffRow.ArrayElementAdded = {0} {1}已添加到{2}。
Java.DiffRow.ArrayElementAdded.Type = 数组元素已添加
Java.DiffRow.ArrayElementRemoved = {0} {1}已从{2}移除。
Java.DiffRow.ArrayElementRemoved.Type = 数组元素已移除
Java.DiffRow.EntityChanged = {0} {1}已更改：
Java.DiffRow.EntityChanged.Type = 实体已更改
Java.DiffRow.EntityPropertyChanged = {0}已从{1}更改为{2}。
Java.DiffRow.EntityPropertyChanged.Type = 字段已更改
Java.Difference.AddedDifference = {0} {1}已添加。
Java.Difference.ArrayElementDifference = {0} {1}已更改：
Java.Difference.BeanDifference = {0}已更改：
Java.Difference.FieldDifference = {0}已从{1}更改为{2}。
Java.Difference.NullValue = -
Java.Difference.RemovedDifference = {0} {1}已移除。
Java.DisplayName.Attribute.BeanPath = 实体路径
Java.DisplayName.Attribute.DisplayName = 是否使用实体名称？
Java.DisplayName.Attribute.Name = 名称
Java.DisplayName.Attribute.SortBeanPath = 排序路径
Java.DisplayName.Attribute.SortOrder = 排序顺序
Java.Document.Creation.CreateDocument = 创建单证
Java.Document.Creation.Exception = 创建单证时遇到问题。如果问题持续存在，请联系您的管理员。
Java.Document.Creation.FileLocation = 文件位置
Java.Document.Creation.NoFile = 必须创建单证。
Java.Document.Creation.Template = 单证模板
Java.Document.Creation.Template.Step1 = 1 - 选择模板
Java.Document.Creation.Template.Step2 = 2 - 指定对象值
Java.Document.Creation.Template.Step3 = 3 - 生成单证
Java.Document.Creation.Template.Step4 = 4 - 指定文件位置
Java.Document.CreationFailure = 无法保存单证： {0}
Java.Document.CreationFailure.DocumentExists = 该单证无法保存，因为已存在另一个同名单证。
Java.Document.DefaultAuthor = 自动生成
Java.Document.DocumentDuplicateNameAdjustment = {0} ({1})
Java.Document.Download.Error.ServerDownload = 直接服务器下载（“download\=true”）与包含客户端所启动下载的操作不兼容
Java.Document.Download.Error.WidgetFileNotFound = 已尝试下载控件“{0}”，该控件没有文件。
Java.Document.Download.Error.WidgetInvalidSpec = 要下载的控件规格无效：{0}
Java.Document.Download.Error.WidgetWithoutDownload = 控件“{0}”操作需要设置其“download”属性
Java.Document.Download.Error.WidgetsNotFound = 已尝试为以下找不到的控件下载文件：{0}
Java.Document.Download.Error.WidgetsNotFoundForClientDownload = 控件操作包含客户端为以下未找到的控件启动的下载：{0}
Java.Document.Merge.Exception = 未找到模板资源： {0}
Java.Document.NotFound = 无法找到具有DocLinkId“{0}”的单证：{1}
Java.Document.Search.Failed = 单证搜索失败。请稍后重试。如果搜索仍然失败，请查看日志消息中的警告消息。
Java.Document.Search.SearchNotSupported = 此应用程序中不支持performSearch()
Java.Document.Source.Plugin.Exception = 访问单证管理系统时遇到问题。如果问题持续存在，请联系您的管理员。
Java.Document.Source.Plugin.Exception.Parameterized = 访问单证管理系统时出现问题： {0}
Java.Document.Template.Plugin.Exception = 访问单证模板时遇到问题。如果问题持续存在，请联系您的管理员。
Java.Document.Template.Source.Template.Not.Found = 不存在具有以下指定单证模板ID的单证模板：{0}。
Java.Document.Template.Source.Template.Retrieval.Exception = 尝试检索单证模板ID“{0}”时遇到错误：{1}。
Java.DuplicateContactSupport.CappedResult = 重复的联系人搜索结果已被限制在最大允许值内。
Java.Duration.Days = 天
Java.Duration.Hours = 小时
Java.Duration.Minutes = 分钟
Java.Duration.Running = （正在运行）
Java.Duration.ShortFormat.Days = {0}{1}D
Java.Duration.ShortFormat.Hours = {0}{1}h
Java.Duration.ShortFormat.Millisecs = {0}{1}n
Java.Duration.ShortFormat.Minutes = {0}{1}m
Java.Duration.ShortFormat.Seconds = {0}{1}s
Java.EditableList.NoEntries = 无
Java.EffDatedBean.Error.EffectiveDateMustBeBetweenStartAndEnd = 生效日期必须介于期限开始日期与期限结束日期之间
Java.EffDatedBean.Error.ExpirationDateMustBeBeforeEffectiveDate = 到期日期不能早于生效日期
Java.EffDatedBean.Error.ExpirationDateMustBeBetweenStartAndEnd = 到期日期不能早于生效日期
Java.Email.NoBody = 正文为空 - 无法发送电子邮件消息
Java.Email.NoEmail = 收件人电子邮件地址为空 - 无法发送电子邮件消息
Java.Email.NoRecipients = 收件人为空 - 无法发送电子邮件消息
Java.Email.NoSubject = 主题为空 - 无法发送电子邮件消息
Java.Email.No_BCC_Email = 密件抄送收件人编号{0}电子邮件地址为空
Java.Email.No_CC_Email = 抄送收件人编号{0}电子邮件地址为空
Java.Email.No_To_Email = 收件人编号{0}电子邮件地址为空
Java.Encryption.ConfigError.CurrentEncryptionPluginDoesNotImplementIEncryption = 名为“{0}”的插件被配置为当前加密插件，但不会实现IEncryption。
Java.Encryption.ConfigError.CurrentEncryptionPluginNotFound = 名为“{0}”的插件被配置为当前加密插件，但未被找到。
Java.Encryption.ConfigError.DuplicateEncryptionId = 为多个IEncryption插件配置了加密ID“{0}”：{1}和{2}。
Java.Encryption.DifferentEncryption = 加密ID已更改。
Java.Encryption.FoundExistingColumnsToDecrypt = 找到表{1}中要解密的现有列{0}
Java.Encryption.FoundNewColumnsToEncrypt = 找到表{1}中要加密的新列{0}
Java.Encryption.NewlyDisabledEncryption = 加密已被禁用；加载原来的加密插件进行解密。
Java.Encryption.NewlyEnabledEncryption = 加密已重新启用。
Java.Encryption.SameEncryption = 加密算法未更改；对某些列的加密可能已更改。
Java.Encryption.UpgradeError.OldEncryptionNotDefined = 加密已移除或更改，但未定义OldEncryption插件。有关加密升级的详细信息，请参阅您的文档。
Java.Entity.Error.IdentifierWithDisplayName = “{0}\:{1} - {2}”
Java.Entity.Error.IdentifierWithoutDisplayName = “{0}\:{1}”
Java.Entity.RoleConstraint.AlreadyExists = 实体类型{0}在config文件中已存在。
Java.Entity.RoleConstraint.DuplicateContactRoleCode = 已定义联系人角色代码“{0}”。
Java.Entity.RoleConstraint.DuplicatePropertyName = 为实体“{4}”中角色引用“{3}”的“{2}”角色约束定义的属性名“{0}”值“{1}”重复
Java.Entity.RoleConstraint.InvalidConstraintType = “{0}”不是有效的实体角色约束typeJava.Entity.RoleRef.Duplicate \= RoleRef与contactRoleCode重复：“{0}”已为实体定义：“{1}”。
Java.Entity.RoleRef.Duplicate = 为实体“{1}”的联系人角色代码“{0}”定义的角色引用重复。
Java.Entity.RoleRef.DuplicateConstraintType = 为实体“{2}”的角色引用“{1}”定义的约束类型“{0}”重复
Java.Entity.RoleRef.IllegalAdditionalInfo = 属性名“{0}”值“{1}”的附加信息已定义为禁止角色“{2}”
Java.Error = <错误>
Java.Error.Account.AccountContact.CannotCreateRoleForType = 无法创建联系人类型为{1}的{0}。
Java.Error.Account.AccountContact.ContactAlreadyHasRole = 无法在{1}上创建{0}，因其已经具有该角色。
Java.Error.Account.AccountContact.RoleNotAvailable = 无法创建{0}，因为角色类型无效。
Java.Error.Account.CannotRemoveAccountHolder = 无法删除账户的主要联系人。
Java.Error.Account.CannotRemoveContact = 无法从{1}移除角色{0}，因为有正在使用该角色的保单或待处理保单交易。
Java.Error.Account.NoAccountHolder = 此账户无效，因为它没有主要联系人。
Java.Error.Arguments.RequiredFieldMissing = 必填字段“{0}”不能为空。
Java.Error.AssignableQueue.AssignFirstFailed = 第一个活动无法分配给您。检查是否另一个用户已修改队列。
Java.Error.AssignableQueue.PickFailed = 在您选取的活动中有{0}个活动无法分配给您。检查是否另一个用户已修改队列。
Java.Error.Assignment.OtherAssignmentSuccessful = 其它所有分配已成功完成。
Java.Error.AvailabilityReload.NonexistentDirectory = 不存在外部保险产品模型目录。
Java.Error.AvailabilityReload.RollingUpgradeIsInProgress = 当前正在进行滚动升级。
Java.Error.AvailabilityReload.Verification = 在保险产品模型可用性数据中检测到错误。请更正错误，然后重试重新加载。
Java.Error.CalculateSum.Failure = 无法计算数值总和。请联系您的系统管理员获取其他帮助。
Java.Error.CannotContinue = 很抱歉，必须解决以下问题才能继续：
Java.Error.ConcurrentDataChangeException.DefaultMessage = 您尝试更新的对象已由另一个用户更改。请重试更改。
Java.Error.ConcurrentDataChangeException.SingleKey = 您尝试更新的{0}已被另一个用户更改。请取消并重新尝试更改。
Java.Error.Contact.CannotRemoveAddress = 无法移除地址{0}，因为有正在使用该地址的保单或待处理保单交易。
Java.Error.DataAlreadySaved = 您已保存或取消此表单。如果要更改它，请再次编辑。
Java.Error.DataDistDVHelper = “数据分布”批处理已在执行中
Java.Error.EffDatedBeanProxy.EffectiveDate = 生效日期必须介于期段开始时间与期段结束时间之间
Java.Error.EffDatedBeanProxy.ExpirationDate = 到期日期必须介于期段开始时间与期段结束时间之间
Java.Error.EffDatedBeanProxy.ExpirationDateBeforeEffectiveDate = 到期日期不能早于生效日期
Java.Error.FatalServerException.InvalidSession = 很抱歉，由于您的{Global.AppName}会话已超时或已被取消，操作无法继续。
Java.Error.FatalServerException.ServerInMaintenanceMode = 服务器处于维护模式；请稍后重试或与系统管理员联系。
Java.Error.FatalServerException.ServerTransport = 服务器未响应。
Java.Error.FatalServerException.Version = 客户端和服务器版本不匹配；现在将退出应用程序。\n请与系统管理员联系。
Java.Error.Invalid.Field = 此字段与此子类型不相关。
Java.Error.Job.NoBasedOnPeriod = {0}作业没有BasedOn期间。
Java.Error.JobWizardHelper.NoSuchStep = 未找到ID为“{0}”的向导步骤
Java.Error.JobWizardHelper.NotAJobWizard = 地点中传递的不是JobWizard。
Java.Error.JobWizardHelper.StepNotAvailableForSlice = 当前向导步骤自{0}起无效。请选择其它步骤更改日期。
Java.Error.JobWizardHelper.StepNotVisitable = 向导步骤“{0}”不可访问。
Java.Error.Navigator.Command.AccountNotFound = 未找到账户{0}。
Java.Error.Navigator.Command.PolicyNotFound = 未找到保单{0}。
Java.Error.NoSuchFieldError = 引用不存在的字段。
Java.Error.Note.NoText = “您已开始输入不含文本的备注。只有填写文本字段后才能保存备注。请对备注填写文本或清除整个备注，然后重试。”
Java.Error.Permission.Activity.Own = 用户无权拥有此活动。
Java.Error.Permission.Activity.View = 用户无权查看此活动。
Java.Error.Permission.ApproveActivity = 用户无权批准此活动
Java.Error.Permission.Assignment = 用户无权分配此{0}
Java.Error.Permission.ChangeSubtype = 用户无权更改联系人子类型
Java.Error.Permission.CreateABContact = 用户无权创建此联系人
Java.Error.Permission.DeleteABContact = 用户无权删除此联系人
Java.Error.Permission.DevAllAccces.NotEnabled = 没有为开发模式启用内部工具
Java.Error.Permission.DevAllAccces.Production = 由于服务器正在生产环境中，所以不支持
Java.Error.Permission.EditABContact = 用户无权编辑此联系人
Java.Error.Permission.EditActivity = 用户无权编辑此活动
Java.Error.Permission.EditContact = 用户无权编辑此联系人
Java.Error.Permission.EditNote = 用户无权编辑此备注
Java.Error.Permission.EditNoteBody = 用户无权编辑此备注正文
Java.Error.Permission.EditVacation = 用户无权编辑与休假相关的字段
Java.Error.Permission.Generic = 用户没有权限：{0}
Java.Error.Permission.Insufficient = 用户权限不足，无法执行此任务。
Java.Error.Permission.InsufficientPermissionException.General = 您不具备执行此操作所需的权限： {0}
Java.Error.Permission.ManageLoadFactors = 用户无权管理此组的工作量系数
Java.Error.Permission.Note.SecurityLevel = 用户没有设置备注安全级别的权限。
Java.Error.Permission.Organization.Delete = 用户无权删除此机构。
Java.Error.Permission.Organization.Edit = 用户无权编辑此机构。
Java.Error.Permission.Organization.Edit.Agency = 用户无权编辑此机构的代理信息。
Java.Error.Permission.Organization.Edit.Basic = 用户无权编辑此机构的基本信息。
Java.Error.Permission.ProducerCode.Edit = 用户无权编辑此经理人代码。
Java.Error.Permission.ProducerCode.Edit.Addr = 用户没有权限编辑此经理人代码的地址。
Java.Error.Permission.ProducerCode.Edit.Basic = 用户没有权限编辑此经理人代码的基本信息。
Java.Error.Permission.ProducerCode.Edit.PrefUW = 用户没有权限编辑此经理人代码的首选核保人。
Java.Error.Permission.View = 用户无权查看此{0}。
Java.Error.Permission.ViewABContact = 用户无权查看此联系人
Java.Error.Permission.ViewAnyAdmin = 用户无权查看任何管理屏幕
Java.Error.Permission.ViewAnyDashboard = 用户无权查看执行面板屏幕
Java.Error.Permission.ViewLoadFactors = 用户无权查看工作量系数
Java.Error.Permission.ViewQueue = 用户无权查看活动队列
Java.Error.PolicyRenewalPlugin.ErrorCalculatingNextRenewalStartDate = 计算下一个续保开始日期时遇到错误，将设置为空。错误为：{0}
Java.Error.ProductModelReload.Lock.CreateFailure = 无法创建产品模型数据库表共享更新锁
Java.Error.ProductModelReload.Lock.NotOwner = 试图在不拥有产品模型数据库表共享更新锁的情况下解除该锁。当前锁的所有者为{0}
Java.Error.ProductModelReload.Lock.Timeout = 获取产品模型数据库表共享更新锁时超时。产品模型已被服务器ID为{0}的节点锁定编辑。请检查活动性/重新启动锁定节点，如果节点无法重新启动，请从pc_systemparameter表中通过删除Name \= {1}的行来清除锁定。
Java.Error.ProductModelReload.Lock.UnlockFailure = 无法解除产品模型数据库表共享更新锁
Java.Error.QuickJumpConfig = 未理解命令： {0}
Java.Error.RunCommand.AppropriateConstructor = 无法找到此项的相应构造函数： {0}
Java.Error.RunCommand.TypeSystem = TypeSystem已刷新
Java.Error.SessionTimedOut = 很抱歉，您的{Global.AppName}会话已超时或{Global.AppName}服务器已重启。
Java.Error.Stateset.Unknown = "未知的省/直辖市或省/直辖市集：“{0}”
Java.Error.SubtypeChange.ClientTagPersonCompanyChange = 无法针对具有客户标记的联系人在个人与公司/地点之间进行更改
Java.Error.SubtypeChange.ClientTagSubtypeChange = 无法针对具有客户标记的联系人将个人更改为公司/地点或将公司更改为个人/地点
Java.Error.SubtypeChange.ContactNotFound = 找不到公共 ID 为 {1}的联系人
Java.Error.SubtypeChange.InsufficientRunLevel = 子类型更改运行级别不足。必需\:{0}，实际\: {1}
Java.Error.SubtypeChange.InvalidEntityType = {1}不是有效的实体类型
Java.Error.SubtypeChange.InvalidSubtype = {1}不是联系人的有效子类型
Java.Error.Tools.TestingClock.FailedToSet = 时钟设置失败： {0}
Java.Error.Tools.TestingClock.NotEnabled = 无法设置当前时间：ITestingClock插件未启用。
Java.Error.Tools.TestingClock.RequestCompleted = 系统时钟已成功更改。
Java.Error.Unexpected = 服务器遇到意外错误。如果问题仍然存在，请与系统管理员联系。
Java.Error.UpdateStatsDVHelper = “更新统计数据”批处理已在执行中
Java.Error.UserPreference.InvalidValue = 找到的用户首选项“{0}”的值无效：{1}
Java.Error.UserPreference.MaxRecentAccountsInvalid = 设置的最大最近账户数不能大于{0}或小于1
Java.Error.UserPreference.MaxRecentContactsInvalid = 设置的最大最近联系人数不能大于{0}或小于1
Java.Error.UserPreference.MaxRecentPoliciesAndJobsInvalid = 设置的最大最近保单和交易数不能大于{0}或小于1
Java.Error.ViewClaim.PermissionsError = 为用户{0}授予理赔{1}的权限时出错
Java.Error.Web.Description = 出现程序错误。要返回{Global.AppName}，请尝试按下浏览器的“刷新”按钮。如果不起作用，您可能需要关闭所有{Global.AppName}窗口，然后重新打开应用程序。\n\n如果问题仍然存在，请与系统管理员联系。
Java.Error.Web.EntryPointParameter = 无法找到{0}的值：“{1}”不存在。
Java.Error.Web.ErrorOccurred = 出现错误
Java.Error.Web.HideDetails = （单击可隐藏错误详细信息）
Java.Error.Web.Message = 消息：
Java.Error.Web.NoBrowserHistory = 无法返回： 内存中没有浏览器历史记录项。
Java.Error.Web.ShowDetails = （单击可显示错误详细信息）
Java.Error.Web.StackTraceInLog = {0}发生异常。服务器日志文件中包含堆栈跟踪。
Java.Error.WorkflowInfiniteLoopException.DefaultMessage = 执行工作流时出现问题。检测到工作流中可能存在无限循环。\n请与管理员联系以获取更多详细信息。
Java.Exception = 异常
Java.ExchangeRate.CustomSingleRateSet.Name = 自定义单一费率集{0}
Java.Export.AdminDataSet = 管理
Java.Export.CombinedExportDataSet = 组合导出数据
Java.Export.LookupTableDefinitionDataSet = 查找表定义
Java.Export.PolicyFormsDataSet = 保单表格模式
Java.Export.PolicyHoldsDataSet = 保单搁置
Java.Export.RolePrivilegesDataSet = 角色权限
Java.Export.RolesDataSet = 角色
Java.Export.SpecialistServiceTreeDataSet = 经销商服务树
Java.Export.UWIssueTypes = 核保项类型
Java.Externalized.Temporary = 无法创建对临时Bean的引用
Java.FXRate.FXRateService.RateNotFound = 在市场{2}中未找到从货币{0}转换到货币{1}的费率。
Java.Form.DataChanged = 您尝试更新的对象已{2}，它已由{1}在{0}更改。请取消并重新尝试更改。
Java.Form.DataChanged.Unknown.User = 您尝试更新的对象已由另一个用户更改。请取消并重新尝试更改。
Java.Geocode.AccountLocation.Error = 对账户“{1}”上的账户地点“{0}”进行地理编码时发生错误
Java.Geocode.AccountLocation.Skipping = 正在跳过账户“{1}”上账户地点“{0}”的地理编码
Java.Geocode.Plugin.Not.Enabled = 未启用GeocodePlugin。
Java.Geocode.Plugin.Not.Started = 未启动GeocodePlugin。
Java.Gosu.CustomLibFuncDoesNotExist = 自定义库功能“{0}”不存在。
Java.Gosu.ErrorCallingLibrary = 调用库功能“{0}”时出错。
Java.Group.DuplicateGroupNameWithinOrganization = 机构“{0}”已包含名为“{1}”的组。
Java.Group.GroupMovedBetweenOrganizations = 无法将组“{0}”从一个机构（“{1}”）移到另一个机构（“{2}”）。
Java.GroupDetail.Delete.ChildGroup = 无法删除组{0}，因为它具有下级组。
Java.GroupDetail.Delete.Error = 无法删除组{0}，因为它正被占用。
Java.GroupValueWidget.Error.MultiGroups = 找到一个以上名为“{1}”的组。请使用组弹出窗口选择组。
Java.GroupValueWidget.Error.NoGroup = 没有名为“{1}”的组。请使用组弹出窗口选择组。
Java.GroupValueWidget.SearchGroup = 搜索组...
Java.GroupValueWidget.SelectGroup = 选择组...
Java.IllegalArgument.BadValue = {0}实际参数的值“{1}”无效
Java.IllegalArgument.Default = 实际参数{0}无效
Java.IllegalArgument.NotFound = 未找到{0}“{1}”
Java.IllegalArgument.Null = 形式参数“{0}”不能为null
Java.IllegalArgument.PossibleValues = {0}实际参数的值“{1}”无效，可接受的值：{2}
Java.Import.CouldNotFindType = 针对{0}（xml id\={1}，公共id\={2}）：无法找到实体类型。
Java.Import.DeletedEntityNotFound = 针对{0}（XML ID\={1}，公共ID\={2}）：未找到已删除实体。
Java.Import.Duplicate = 针对{0}（xml id\={1}，公共id\={2}）：已存在。
Java.Import.EffDatedNoBranch = 针对{0}（xml id\={1}，公共id\={2}）：无法恢复不含EffDatedBranch上下文的EffDated实体。
Java.Import.ExceptionOn = 针对{0}（xml id\={1}，公共id\={2}）：在字段{3}上捕获异常：
Java.Import.LookupTableDefinition.ValidatedRules = 此导入已更新现有查找表定义，因此系统已验证所有相关业务规则，请参考“业务规则”屏幕，检查这些规则的当前状态。
Java.Import.ProductModel.Error = 导入公共ID为“{1}”的{0}时出错： {2}
Java.Import.ProductModel.Error.LookupTarget = 导入公共ID为“{1}”的{0}时出错：查找目标“{2}”不是{3}
Java.Import.ProductModel.Error.NullLookupTable = 导入公共ID为“{1}”的{0}时出错：查找目标“{2}”未指定查找表
Java.Import.ProductModel.Exception = 在导入保险产品模型时检测到错误
Java.Import.ProductModel.Warning.IncompatibleLookupTable = 公共ID为“{1}”的{0}与“{2}”的查找表不兼容，将被忽略
Java.Import.ReferencedEntityNotFound = 针对{0}(xml id\={1}，公共 id\={2})\:未找到参考实体。
Java.Import.SystemTable.Exception = 导入系统表格时检测到错误
Java.Import.TypeCodeNotFound = TypeCode“{0}”不再存在于typelist{1}中。需要执行升级步骤来转换该代码。
Java.ImportDataInfo.ResolutionOptions.Discard = 放弃对现有记录的更新
Java.ImportDataInfo.ResolutionOptions.Manual = 逐个解决
Java.ImportDataInfo.ResolutionOptions.Overwrite = 覆盖所有现有记录
Java.ImportExternalContact.DuplicateContacts = 已删除可能的重复项。如果您确定想要导入此联系人，请再次单击“选择”，否则请选择某一可能的重复项。
Java.IndustryCodeInputWidget.Label = 行业代码
Java.IndustryCodePickerWidget.InvalidCode = 此行业代码无效。
Java.IndustryCodePickerWidget.UnavailableCode = 此行业代码在当前环境下不可用。
Java.Integration.NameTranslator.CannotTranslate = 无法转换类{0}
Java.IntentionalLogging.ILConfiguration.ConcurrentDataChange = 您正尝试更新的“有意日志记录”配置已同时被更改。请取消并重新尝试更改。
Java.InternalTools.InfoPages.CacheInfo.Other = 其它
Java.InternalTools.InfoPages.Cluster.Reconnected = 断开连接和重新连接成功
Java.InternalTools.InfoPages.Cluster.Reconnection.Exception = 与群集断开连接和重新连接到群集时ChannelException出错：{0}
Java.InternalTools.InfoPages.DBPerfReport.CancelRequested = <已取消>
Java.InternalTools.InfoPages.DBPerfReport.DownloadError = 创建性能报告下载文件时出错
Java.InternalTools.InfoPages.DBPerfReport.ErrorWritingReport = 写入DBPerfReport bean时出错并发出错误消息。
Java.InternalTools.InfoPages.DBPerfReportStatus.Failed = 失败
Java.InternalTools.InfoPages.DBPerfReportStatus.Finished = 已完成
Java.InternalTools.InfoPages.DBPerfReportStatus.Started = 已启动
Java.InternalTools.InfoPages.DMV.ClearExplainTables = 清除解释表
Java.InternalTools.InfoPages.DMV.ClearPkgCacheEventMonitor = 清除包缓存事件监控器
Java.InternalTools.InfoPages.DMV.ExplainTableSchema = 解释表架构
Java.InternalTools.InfoPages.DMV.FetchQueryStoreRows = 包括查询库分析
Java.InternalTools.InfoPages.DMV.IncludeDatabaseStatistics = 包含数据库统计
Java.InternalTools.InfoPages.DMV.NumberHotObjects = 要报告的热对象
Java.InternalTools.InfoPages.DMV.NumberTopQueries = 要报告的主要查询
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.None.WithStats = 不带查询库的报告，包括数据库统计
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.None.WithoutStats = 不带查询库的报告，不包括数据库统计
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.Range.WithStats = 从{0}到{1}（含）间隔的报告，包括数据库统计
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.Range.WithoutStats = 从{0}到{1}（含）间隔的报告，不包括数据库统计
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.Single.WithStats = 间隔{0}的报告，包括数据库统计
Java.InternalTools.InfoPages.DMV.PerfDownloadDescription.Single.WithoutStats = 间隔{0}的报告，不包括数据库统计
Java.InternalTools.InfoPages.DMV.StatsEventName = 统计事件监控器名称
Java.InternalTools.InfoPages.DataDistribution.CombiningRequiresTwoOrMore = 要下载组合数据分布，必须选择两个或多个数据分布。
Java.InternalTools.InfoPages.DataDistribution.ComparisonRequiresTwoOrMore = 要下载数据分布的比较，必须选择两个或多个数据分布。
Java.InternalTools.InfoPages.DisplayNameReloadSuccess = 成功
Java.InternalTools.InfoPages.Editing = 在生产模式中不允许编辑该页面
Java.InternalTools.InfoPages.GosuCacheCleared = 清除GOSU模板缓存
Java.InternalTools.InfoPages.MicrosoftDriverLogging.LevelSet = MS JDBC日志记录级别设置为{0}
Java.InternalTools.InfoPages.MicrosoftDriverLogging.LoggingStarted = 已为文件模式{0}添加了MS JDBC日志记录文件处理程序，格式为{1}
Java.InternalTools.InfoPages.MicrosoftDriverLogging.LoggingStopped = 格式为{1}的日志记录文件处理程序已刷新并移除
Java.InternalTools.InfoPages.MicrosoftDriverLogging.UnableToSet = 无法设置MS JDBC跟踪级别
Java.InternalTools.InfoPages.OracleAWR.AWRNotSetUp = 此数据库中未安装AWR
Java.InternalTools.InfoPages.OracleAWR.NotSupported = 基础数据库中不支持AWR
Java.InternalTools.InfoPages.OracleAWR.ReportDescription = Oracle AWR报告
Java.InternalTools.InfoPages.OracleAWR.ReportOptions = 选项： {0}
Java.InternalTools.InfoPages.OracleAWR.Succeeded = 成功
Java.InternalTools.InfoPages.OracleStatspack.NotEnoughSnapshots.NoSnapshots = {0}报告需要至少2个快照。没有{0}快照。
Java.InternalTools.InfoPages.OracleStatspack.NotEnoughSnapshots.OneSnapshot = {0}报告需要至少2个快照。只有1个{0}快照({1})。
Java.InternalTools.InfoPages.OracleStatspack.NotSameStartupTime = 基于同一Oracle启动时间选择两个快照
Java.InternalTools.InfoPages.OracleStatspack.NotSupported = 基础数据库中不支持statspack
Java.InternalTools.InfoPages.OracleStatspack.StatspackNotSetUp = 此数据库中未安装Statspack
Java.InternalTools.InfoPages.PcfExternalReload = 请重置当前位置，因为外部重新加载了PCF
Java.InternalTools.InfoPages.PcfReloadingDisabled = 尝试重新加载PCF时被忽略；PCF重新加载被禁用
Java.InternalTools.InfoPages.PcfReloadingNoDCEVM = 无法重新加载PCF文件，因为您没有运行重新加载类所需的Java DCEVM
Java.InternalTools.InfoPages.PcfReloadingNoToolsJar = 无法重新加载PCF文件，因为没有JDK tools.jar。请将其添加到您在项目结构中的SDK类路径
Java.InternalTools.InfoPages.PcfReloadingNotAttempted = PCF重新加载成功，但未重新加载Gosu类，因为当前禁用了字节码重新定义。
Java.InternalTools.InfoPages.PcfReloadingOtherError = PCF重新加载成功，但由于意外错误，无法重新加载Gosu类。{0}因此，未重新定义任何类。系统已尝试重新定义以下已标记为可能进行更改的类：\n{1}
Java.InternalTools.InfoPages.PcfReloadingParseFailure = PCF重新加载成功，但重新加载Gosu类过程中发生解析错误。\n{0}
Java.InternalTools.InfoPages.PcfReloadingRedefineError = PCF重新加载成功，但由于类重新定义期间出错，无法重新加载Gosu类。{0}因此，未重新定义任何类。系统已尝试重新定义以下已标记为可能进行更改的类：\n{1}
Java.InternalTools.InfoPages.PcfReloadingRedefineRejected = PCF重新加载成功，但由于VM限制，无法重新加载Gosu类。{0}因此，未重新定义任何类。系统已尝试重新定义以下已标记为可能进行更改的类：\n{1}
Java.InternalTools.InfoPages.PcfReloadingStatus = 重新加载用户界面失败：{0} - {1}
Java.InternalTools.InfoPages.PcfReloadingSuccess = 已成功重新加载PCF文件
Java.InternalTools.InfoPages.PcfReloadingUnexpected = 意外的重新加载状态{0}
Java.InternalTools.InfoPages.ReloadUIFailure = 重新加载Web模板失败：{0} - {1}
Java.InternalTools.InfoPages.ReloadUISuccess = 重新加载Web模板
Java.InternalTools.InfoPages.Reloading = 不允许在生产模式中重新加载用户界面
Java.InternalTools.InfoPages.ReloadingPcfs = 不允许在生产模式中重新加载PCF
Java.InternalTools.InfoPages.SafePersistingOrder.AllFilter = 所有
Java.InternalTools.InfoPages.SafePersistingOrder.OnlyWithPerUpdateRules = 仅使用规则
Java.InternalTools.JProfiler.AllocationProfilingReStarted = 分配剖析已（重新）启动
Java.InternalTools.JProfiler.CPUProfilingReStarted = CPU剖析已（重新）启动
Java.InternalTools.JProfiler.JProfilerNotLoadedClassNotFound = 未加载JProfiler代理jar\:com.jprofiler.agent.Controller ClassNotFoundException： {0}
Java.InternalTools.JProfiler.JProfilerNotLoadedNull = 未加载JProfiler代理jar： 名称com.jprofiler.agent.Controller的类为null。
Java.InternalTools.JProfiler.ProfilerSnapshotDumpedTo = Profiler快照已转储到{0}
Java.InternalTools.JProfiler.ProfilerStopped = Profiler已停止
Java.InternalTools.JProfiler.StoppedAndRestartedThreadAndCPUProfiling = 已停止并重新启动线程和CPU剖析
Java.InternalTools.JProfiler.ThreadProfilingReStarted = 线程剖析已（重新）启动
Java.InternalTools.JProfiler.UnknownCommand = 未知命令
Java.InternalTools.JProfiler.UnknownError = 未知错误剖析： {0}
Java.InternalTools.UpdateAllDates.CantFindLastDataGenInfo = 找不到最新的Datagen信息，正在跳过...
Java.InternalTools.UpdateAllDates.DatesUpdatedDiffGtThreshold = 差额大于阈值时更新日期，差额\:{0}，阈值\: {1}
Java.InternalTools.UpdateAllDates.DatesUpdatedThresholdLtDiff = 阈值 < 差额({0} < {1})，已跳过。
Java.InternalTools.UpdateAllDates.DatesUpdatedWithDaysDelta = 日期更新的天数增量为 {0}。
Java.InternalTools.UpdateAllDates.IDActionStatusDate = ID\t操作\t\t状态\t日期
Java.InternalTools.UpdateAllDates.NoDataAvailable = 没有可用的数据
Java.Invariant.Account.AccountContact.AcctContactHasMoreThanOneRoleOfType = 账户联系人{0}有多个{1}账户联系人角色。最多只能有一个。
Java.Invariant.Account.AccountContact.ContactHasMoreThanOneAcctContact = 联系人{0}有多个账户联系人，最多只能有一个。
Java.Invariant.Array.EmptyArray = 预期为非空阵列，但却获得零长度阵列。
Java.Invariant.CovTerm.MissingRequired = 需要承保范围条款值“{0}”。
Java.Invariant.CovTerm.ValueAboveMax = 承保范围条款值“{0}”不能超过允许的最大值“{1}”。
Java.Invariant.CovTerm.ValueBelowMinimum = 承保范围条款值“{0}”不能小于允许的最小值“{1}”。
Java.Invariant.CoveragePattern.CoverageSymbolGroupPattern.PolicyLinePatternMismatch = 预期CoverageSymbolGroupPattern {0}具有PolicyLinePattern {1}，却获得{2}。
Java.Invariant.CoverageSymbolGroupPattern.CoverageSymbolPatterns.DuplicateTypes = 类型{0}的多个承保范围符号模式。
Java.Invariant.ErrorMessage = {0}\: {1}
Java.Invariant.Group.InvalidGroupType = 组类型“{0}”对“{1}”无效
Java.Invariant.Group.InvalidParentGroupChild = 组“{0}”的上级组“{1}”也是下级组
Java.Invariant.Group.InvalidParentGroupOrg = 组“{0}”的父项“{1}”不在机构“{2}”中
Java.Invariant.Group.MissingOrganization = 组“{0}”为缺少机构
Java.Invariant.Group.MissingParent = 组“{0}”缺少父组
Java.Invariant.Group.RootNeedsNoParent = 根组“{0}”具有父组“{1}”，但根组不应有父组
Java.Invariant.Interval.EmptyInterval = 间隔（{0}, {1}）为空。
Java.Invariant.Modifier.RateAboveUpperBound = 费率调整系数值“{0}”不能超过允许的最大值“{1}”。
Java.Invariant.Modifier.RateBelowLowerBound = 费率调整系数值“{0}”不能小于允许的最小值“{1}”
Java.Invariant.Modifier.ScheduleCredit.RateFactor.RateAboveUpperBound = 费率因子值“{0}”不能超过允许的最大值“{1}”
Java.Invariant.Modifier.ScheduleCredit.RateFactor.RateBelowLowerBound = 费率因子值“{0}”不能小于允许的最小值“{1}”
Java.Invariant.Modifier.ScheduleCredit.RateFactor.WrongPattern = 费率因子模式“{0}”与计划贷方模式“{1}”不兼容
Java.Invariant.ModifierPattern.ModifierMinMaxLookups.DuplicateStates = 状态为{0}的多个修饰符最小 - 最大值查找
Java.Invariant.Organization.ProducerNeedsProducerStatus = 机构{0}是经理人，因此需要业务员状态
Java.Invariant.PolicyLine.CoverageSymbolGroup.CoverageSymbol.DuplicateCoverageSymbol = 承保范围符号模式“{0}”有多个实例
Java.Invariant.PolicyLine.CoverageSymbolGroup.CoverageSymbol.WrongPattern = 承保范围符号“{0}”与承保范围符号组模式“{1}”不兼容
Java.Invariant.PolicyLine.CoverageSymbolGroup.WrongPattern = 承保范围符号组“{0}”与保单险种模式“{1}”不兼容
Java.Invariant.PolicyLine.DoesNotMatchPattern = 子类型“{0}”与模式“{1}”不匹配
Java.Invariant.PolicyLine.MissingPattern = 缺少模式
Java.Invariant.PolicyLine.MissingSubType = 缺少子类型
Java.Invariant.PolicyLinePattern.ModifierPatterns.DuplicateRefCodes = 多个修饰符模式具有参考代码{0}
Java.Invariant.PolicyLinePattern.ShouldBeLegalForProduct = 行模式“{0}”与保险产品“{1}”不兼容
Java.Invariant.PolicyPeriod.AccountLocationReferencedByOnePolicyLocation = 账户地点“{0}”必须只被一个保单地点引用
Java.Invariant.RateFactorPattern.RateFactorMinMaxLookups.DuplicateStates = 状态为{0}的多个费率因子最小 - 最大值查找
Java.Invariant.ScheduleCreditPattern.RateFactorPatterns.DuplicateTypes = 类型{0}的多个费率因子模式
Java.Invariant.User.Groups.ExternalUserCanNotAccessGroupInInternalOrganization = 外部用户无法访问属于内部机构“{1}”的组“{0}”
Java.Invariant.User.Groups.ExternalUserCanNotBeAddedToGroupFromInternalOrganization = 外部用户不能添加到内部机构的组中
Java.Invariant.User.Groups.NotInSameOrganization = 组“{0}”不在机构“{1}”中
Java.Invariant.User.MissingUserType = 未分配用户类型
Java.Invariant.User.UserTypeInvalid = 用户类型“{0}”不适用于“{1}”
Java.JMX.MBeans.Cluster.ClusterChannelClosed = 群集渠道当前已关闭
Java.JMX.MBeans.Cluster.NoMembers = 群集中当前没有任何成员
Java.JMX.Notifications.ClusterMemberDisconnected = 群集成员{0}与群集断开连接
Java.JMX.Notifications.ClusterMemberSuspected = 群集成员{0}疑似已离开该群集
Java.JMX.Notifications.ClusterMembershipChanged = 群集成员身份已更改
Java.JMX.Operation.Error = 无法在{1}上调用{0}，原因： {2}
Java.JMX.Operation.NotFound = 在{1}上找不到{0}。
Java.JMX.Operation.UnsupportedType = MBean客户端不支持带有参数的操作。
Java.Job.Error.CannotStartJob = 无法对保单{2}启动生效日期为{1}的{0}： {3}
Java.Job.Error.CannotStartJob2 = 无法对保单{1}启动{0}： {2}
Java.Job.Filters.Viewable = 可见
Java.Job.Finder.Error.JobTablePrimaryObjectMustBeJobType = 作业表主要对象必须属于“作业”类型
Java.Job.WC.AnniversaryNotNull = 周年日期不能为空。
Java.Job.WC.RPSDOutsidePeriod = 费率期开始日期(RPSD){0}不在保单期限{1} \=> {2}内
Java.JobNumberGen.NoPlugin = 未配置IJobNumberGen插件。
Java.JobSessionItem.AuditLabel = {0}审计： {1}
Java.JobSessionItem.CancellationLabel = {0}取消：{1}
Java.JobSessionItem.Error.MissingJob = 无法找到保单交易{0}，可能已清除？
Java.JobSessionItem.IssuanceLabel = {0}问题：{1}
Java.JobSessionItem.PolicyChangeLabel = {0}保单更改： {1}
Java.JobSessionItem.ReinstatementLabel = {0}复效： {1}
Java.JobSessionItem.RenewalLabel = {0}续保：{1}
Java.JobSessionItem.RewriteLabel = {0}重新填写： {1}
Java.JobSessionItem.RewriteNewAccountLabel = {0}重新填写新账户：{1}
Java.JobSessionItem.SubmissionLabel = \n\t\t\t\t\t{0}投保单：{1}\n\t\t\t\t
Java.Json.DataConverter.InvalidConversion = 没有为“{0}”定义任何转换
Java.Json.DataConverter.InvalidGwType = x-gw-type“{0}”不是有效的类型列表类型
Java.Json.DataConverter.NoDefaultConversion = 类型“{0}”没有默认的JSON类型转换
Java.Json.File.BadBaseName = 完全限定名称“{0}”采用了<package>.<basename>-<version>格式：<basename>“{1}”不能包含下列任何字符：{2}
Java.Json.File.BadFile = 不是集成视图或REST文件
Java.Json.File.BadName = 完全限定的名称“{0}”未采用<package>.<basename>-<version>格式
Java.Json.File.BadVersion = 完全限定名称“{0}”采用了<package>.<basename>-<version>格式，但其中<version>的格式不正确：{1}
Java.Json.Filter.Cache.BadKey = 键的格式不是<schema>-<version>#<rootType>
Java.Json.Filter.Query.BadKey = 键的格式不是<query>#<schema>-<version>#<rootType>
Java.Json.Filter.Query.FileNotFound = 针对查询未找到文件“{0}”
Java.Json.Filter.Query.NoData = 查询中不包含数据：“{0}”
Java.Json.Filter.Query.NoSuchType = “{0}”不包含类型“{1}”
Java.Json.Filter.Query.Parse.BlankName = 名称不能为空
Java.Json.Filter.Query.Parse.Error = 过滤器解析错误：{0}
Java.Json.Filter.Validation.MappingRequired = 过滤器映射不能为空
Java.Json.Filter.Validation.NotFound = 找不到过滤器“{0}”
Java.Json.Filter.Validation.QueryRequired = 过滤器查询不能为空
Java.Json.Filter.Validation.SchemaRequired = 过滤器目标架构不能为空
Java.Json.Filter.Validation.SpecRequired = 过滤器规格不能为空
Java.Json.Filter.Validation.TypeRequired = 过滤器目标类型不能为空
Java.Json.Mapping.Builder.CombineError = 映射未组合
Java.Json.Mapping.Builder.ParseError = 映射未解析
Java.Json.Mapping.Comparison.CombinationHeader = 映射“{0}”相对于组合映射“{1}”具有不向后兼容的更改 - {2}
Java.Json.Mapping.Comparison.IncompatiblePropertyPath = 属性“{0}”的类型为“{2}”的路径“{1}”必须可分配给类型为“{4}”的路径“{3}”
Java.Json.Mapping.Comparison.IncompatibleRoot = 映射器“{0}”的根“{1}”必须可从根“{2}”分配
Java.Json.Mapping.Comparison.IncompatibleSchemaDefinition = 映射器“{0}”的schemaDefinition“{1}”结构必须与schemaDefinition“{2}”兼容：{3}
Java.Json.Mapping.Comparison.MajorVersionPolicyViolation = 结构不兼容的映射的主要版本应不同
Java.Json.Mapping.Comparison.MissingMapper = 缺少映射器“{0}”
Java.Json.Mapping.Comparison.MissingProperty = 映射器“{0}”缺少属性“{1}”
Java.Json.Mapping.Parsing.Exception = 映射解析异常：{0}
Java.Json.Mapping.Parsing.NameNotFound = 未找到映射“{0}”文件：“{1}”
Java.Json.Mapping.SchemaCreation.BadCombineReference = 无法加载映射“{0}”。将在创建的架构中忽略相应的组合。
Java.Json.Mapping.SchemaCreation.BadCombineReferenceWithReason = 无法加载映射“{0}”。将在创建的架构中忽略相应的组合：{1}
Java.Json.Mapping.SchemaCreation.BadImportReference = 无法加载映射“{0}”。将在创建的架构中忽略相应的导入。
Java.Json.Mapping.SchemaCreation.BadImportReferenceWithReason = 无法加载映射“{0}”。将在创建的架构中忽略相应的导入：{1}
Java.Json.Mapping.SchemaCreation.BadMapperReference = 属性“{0}”引用了无法解析的映射器“{1}”。将在创建的架构中忽略该属性。
Java.Json.Mapping.SchemaCreation.NoJsonTypeMapping = 属性“{0}”具有无法映射到JSON类型的表达式类型“{1}”。将在创建的架构中忽略该属性。
Java.Json.Mapping.SchemaCreation.PropertyTypeCouldNotBeDetermined = 无法确定属性“{0}”的路径表达式类型。将在创建的架构中忽略该属性。
Java.Json.Mapping.SchemaCreation.UnknownComponentType = 无法确定属性“{0}”(表达式类型为“{1}”)的组件类型。将在创建的架构中忽略该属性。
Java.Json.Mapping.Transform.BadMapperReferenceWithReason = 无法转换映射器属性“{0}”，因为无法加载关联的映射器“{1}”：{2}
Java.Json.Mapping.Transform.BadSchemaReferenceWithReason = 无法转换映射器属性“{0}”，因为无法加载关联的定义属性“{1}”：{2}
Java.Json.Mapping.Transform.DuplicatePropertyKey = 映射器属性“{0}”导致多个元素的键求值结果为“{1}”
Java.Json.Mapping.Transform.ExceptionInExpression = 对映射器属性“{1}”的{0}求值时引发了异常：“{2}”
Java.Json.Mapping.Transform.GenericException = 转换映射时出现异常
Java.Json.Mapping.Transform.InfiniteRecursion = 映射导致了无限递归。错误的属性链为“{0}”
Java.Json.Mapping.Transform.InvalidArrayType = 映射器属性“{0}”的评估结果为类型“{1}”的元素，而不是数组或“可迭代”
Java.Json.Mapping.Transform.NoSchemaAdditionalProperties = 无法转换映射器属性“{0}”，因为关联的架构定义“{1}”未定义“{2}”属性
Java.Json.Mapping.Transform.TransformFailedExceptionHeader = 映射转换失败，并出现以下错误：
Java.Json.Mapping.Transform.TransformFailedExceptionNested = 嵌套异常：
Java.Json.Mapping.Validation.AdditionalPropertiesPathIsNotAnArray = {0}- 映射器属性指定了additionalProperties，但其路径“{1}”的类型为“{2}”而非数组或“可迭代”
Java.Json.Mapping.Validation.BadCombineWithReason = 无法加载由“{1}”组合的映射“{0}”：{2}
Java.Json.Mapping.Validation.BadExpression = {0} - 映射器属性指定了一个“{1}”表达式“{2}”，但它无法编译：{3}
Java.Json.Mapping.Validation.BadImport = 无法加载由“{1}”导入的别名为“{2}”的映射“{0}”
Java.Json.Mapping.Validation.BadImportWithReason = 无法加载由“{1}”导入的别名为“{2}”的映射“{0}”：{3}
Java.Json.Mapping.Validation.BadMapperReference = {0}- 映射器属性指定了无法解析的映射器“{1}”：{2}
Java.Json.Mapping.Validation.BadPathExpression = {0}- 映射器属性指定了无法编译的路径“{1}”：{2}
Java.Json.Mapping.Validation.BadPredicateExpression = {0}- 映射器属性指定了无法编译的谓词“{1}”：{2}
Java.Json.Mapping.Validation.BadSchemaDefinitionReference = {0}- 映射器引用了无法加载的架构“{1}”中的定义：{2}
Java.Json.Mapping.Validation.BadSchemaPropertyReference = {0}- 映射器属性在“{1}”上没有相应的定义属性
Java.Json.Mapping.Validation.BadSchemaReference = 映射“{0}”引用了一个无法加载的架构“{1}”
Java.Json.Mapping.Validation.BadSchemaReferenceWithReason = 映射“{0}”引用了一个无法加载的架构“{1}”：{2}
Java.Json.Mapping.Validation.ConflictingTypeMapperRoots = 映射“{0}”将“{1}”的映射器与“{3}”中的冲突根类型“{2}”组合在一起
Java.Json.Mapping.Validation.ConflictingTypeMapperSchemaDefinitions = 映射“{0}”将“{1}”的映射器与“{3}”中的冲突架构定义“{2}”组合在一起
Java.Json.Mapping.Validation.DuplicateWarningCategory = {0}-“{1}”属性包含重复的警告类别：“{2}”
Java.Json.Mapping.Validation.ImportUnused = 映射“{0}”导入别名“{1}”未被任何映射器属性（直接或组合）引用
Java.Json.Mapping.Validation.InvalidPropertyType = {0}- 映射属性的类型无效：{1}
Java.Json.Mapping.Validation.InvalidRootType = {0}- 映射器指定的根类型“{1}”无效
Java.Json.Mapping.Validation.JsonTypeMismatch = {0}- 映射器属性的表达式类型为“{1}”，与类型为“{3}”的定义属性“{2}”不兼容
Java.Json.Mapping.Validation.MapperMissingProperties = {0}- 映射器缺少架构定义属性：“{1}”
Java.Json.Mapping.Validation.MapperOnScalarProperty = {0}- 映射器属性指定了映射器，但关联的定义属性是标量属性。
Java.Json.Mapping.Validation.MapperRefMismatch = {0}- 映射器属性有一个映射器“{1}”指向架构定义“{2}”，但关联的定义属性是指向定义“{3}”的引用
Java.Json.Mapping.Validation.MapperRefPossibleMismatch = {0}- 映射器属性有一个映射器“{1}”指向架构定义“{2}”，但关联的定义属性是指向名称相似的定义“{3}”的引用，这可能不兼容
Java.Json.Mapping.Validation.MapperRootMismatch = {0} - 映射器属性有一个{1}“{2}”，其求值结果为“{3}”类型，但指定的映射器“{4}”要求根类型“{5}”
Java.Json.Mapping.Validation.MissingMappers = 映射“{0}”缺少架构定义的映射器：“{1}”
Java.Json.Mapping.Validation.MissingRequiredMapper = {0}- 映射器属性必须指定一个映射器
Java.Json.Mapping.Validation.NoAdditionalPropertiesInSchema = {0} - 映射器指定了“additionalProperties”，但关联的架构定义“{1}”未定义“additionalProperties”
Java.Json.Mapping.Validation.NonBooleanPredicateExpression = {0}- 映射器属性指定了一个类型为“{2}”而非布尔值的谓词“{1}”
Java.Json.Mapping.Validation.NonStringPropertyKeyExpression = {0} - 映射器属性指定了一个“{1}”表达式“{2}”，它为“{3}”类型而非字符串
Java.Json.Mapping.Validation.NotAScalarProperty = {0} - 映射器属性映射到一个标量定义属性，但它包含的{1}“{2}”为“{3}”类型而非标量值
Java.Json.Mapping.Validation.NotAnArrayProperty = {0} - 映射器属性映射到一个数组定义属性，但它包含的{1}“{2}”为“{3}”类型而非数组或“可迭代”
Java.Json.Mapping.Validation.NotAnObjectProperty = {0} - 映射器属性映射到一个对象定义属性，但它包含的{1}“{2}”为“{3}”类型而非对象值
Java.Json.Mapping.Validation.RedundantAllWarningCategory = {0}-“{1}”属性不得包含除“all”之外的任何警告类别
Java.Json.Mapping.Validation.RequiredProperty = {0}-“{1}”属性为必需项
Java.Json.Mapping.Validation.ResolveMapperReference = 在映射“{1}”中未找到映射器“{0}”
Java.Json.Mapping.Validation.ResolveMapperReference.Alias = 在映射“{1}”中未找到导入别名“{0}”
Java.Json.Mapping.Validation.ResolveMapperReference.Missing = 缺少映射器引用
Java.Json.Mapping.Validation.ResolveMapperReference.Syntax = 映射器引用“{0}”的格式不为“{1}<name>”或“<alias>{1}<name>”
Java.Json.Runtime.Error.ArrayConverterError = 值不是数组，元素不一致，或者只适用于一个元素{0}
Java.Json.Runtime.Error.ArrayJsonDataConverterError = 值不是有效的数组
Java.Json.Runtime.Error.BigDecimalJsonDataConverterError = 值不是有效的十进制数
Java.Json.Runtime.Error.BigIntegerJsonDataConverterError = 值不是有效的整数
Java.Json.Runtime.Error.BinaryJsonDataConverterError = 值不是有效的Base64编码字符串
Java.Json.Runtime.Error.BooleanJsonDataConverterError = 值不是有效的布尔值（true或false）
Java.Json.Runtime.Error.CurrencyAmountJsonDataConverterError = 值不是有效的金额；金额格式应为<decimal><currency>，例如“100.00 CNY”
Java.Json.Runtime.Error.CustomValidatorException.Fatal = 自定义校验程序类{0}在输入校验期间抛出了{1}类型的异常。由于在输入中未发现校验错误，因此将再次抛出异常。
Java.Json.Runtime.Error.CustomValidatorException.NonFatal = 自定义校验程序类{0}在输入校验期间抛出了{1}类型的异常。由于在输入中发现了其他校验错误，因此不会再次抛出异常，对输入的反序列化将继续。
Java.Json.Runtime.Error.DateOnlyJsonDataConverterError = 值不是有效的日期；值应是格式为YYYY-MM-DD的ISO-8601日期，例如“1995-02-04”
Java.Json.Runtime.Error.DateTimeJsonDataConverterError = 值不是有效的日期时间；值应为ISO-8601日期时间，例如“2017-07-24T16\:37\:16.123Z”
Java.Json.Runtime.Error.DecimalJsonDataConverterError = 值不是有效的十进制数
Java.Json.Runtime.Error.DoubleJsonDataConverterError = 值不是有效的十进制数
Java.Json.Runtime.Error.FloatJsonDataConverterError = 值不是有效的十进制数
Java.Json.Runtime.Error.IntegerJsonDataConverterError = 值不是有效的32位整数
Java.Json.Runtime.Error.IntegralJsonDataConverterError = 值不是有效的整数
Java.Json.Runtime.Error.LongJsonDataConverterError = 值不是有效的64位整数
Java.Json.Runtime.Error.MonetaryAmountJsonDataConverterError = 值不是有效的金额；金额格式应为<decimal> <currency>，例如“100.00 CNY”
Java.Json.Runtime.Error.NumberJsonDataConverterError = 值不是有效的整数或十进制数
Java.Json.Runtime.Error.ObjectJsonDataConverterError = 值不是有效的对象
Java.Json.Runtime.Error.ObjectOrScalarJsonDataConverterError = 值不是有效的标量或对象
Java.Json.Runtime.Error.ScalarJsonDataConverterError = 值不是有效的标量
Java.Json.Runtime.Error.StringJsonDataConverterError = 值不是有效的字符串
Java.Json.Runtime.Error.TimeOnlyJsonDataConverterError = 值不是有效的时间；值应为ISO-8601时间，例如“10\:05\:06.123”
Java.Json.Runtime.Error.TypekeyJsonDataConverterError = 值不是有效的{0}类型列表元素
Java.Json.Runtime.Error.TypekeyUnspecifiedJsonDataConverterError = 值不是有效的类型列表元素
Java.Json.Runtime.Error.TypekeyWithValuesJsonDataConverterError = 值不是有效的{0}类型列表元素；值必须为{1}之一
Java.Json.Runtime.Error.UnknownParseTypeError = “未知的解析类型：‘{0}’”
Java.Json.Schema.Builder.CombineError = 架构未组合
Java.Json.Schema.Builder.ParseError = 架构未解析
Java.Json.Schema.Builder.ParseException = 架构未解析：{0}
Java.Json.Schema.Comparison.CombinationHeader = 架构“{0}”相对于组合架构“{1}”具有不向后兼容的更改 - {2}
Java.Json.Schema.Comparison.DifferentlyNamedCompatibleTypeReferences = 属性“{0}”引用了结构兼容但名称不同的定义“{1}”和“{2}”
Java.Json.Schema.Comparison.IllegalInputAndOutputConstraintChange = {0}- “{1}”属性已从“{2}”更改为“{3}”。不应更改输入和输出约束。
Java.Json.Schema.Comparison.IllegalInputConstraintChange = {0}-“{1}”属性已从“{2}”更改为“{3}”。可以移除或放宽输入约束，但不应添加或收紧输入约束。
Java.Json.Schema.Comparison.IllegalInputConstraintChangeStrict = {0}- “{1}”属性已从“{2}”更改为“{3}”。不应更改输入约束。
Java.Json.Schema.Comparison.IllegalInputInverseConstraintChange = {0}-“{1}”属性已从“{2}”更改为“{3}”。可以添加或收紧输入约束，但不应移除或放宽输入约束。
Java.Json.Schema.Comparison.IllegalOutputConstraintChange = {0}-“{1}”属性已从“{2}”更改为“{3}”。可以添加或收紧输出约束，但不应移除或放宽输出约束。
Java.Json.Schema.Comparison.IllegalOutputConstraintChangeStrict = {0}- “{1}”属性已从“{2}”更改为“{3}”。不应更改输出约束。
Java.Json.Schema.Comparison.IllegalOutputInverseConstraintChange = {0}-“{1}”属性已从“{2}”更改为“{3}”。可以移除或放宽输出约束，但不应添加或收紧输出约束。
Java.Json.Schema.Comparison.IncompatibleScalarTypes = 属性“{0}”的标量类型“{1}”和“{2}”不兼容
Java.Json.Schema.Comparison.IncompatibleTypeReferences = 属性“{0}”引用了结构不兼容的定义“{1}”和“{2}”
Java.Json.Schema.Comparison.MajorVersionPolicyViolation = 结构不兼容的架构的主要版本应不同
Java.Json.Schema.Comparison.MissingDefinition = 缺少定义“{0}”
Java.Json.Schema.Comparison.MissingProperty = 定义“{0}”缺少属性“{1}”
Java.Json.Schema.Comparison.NotBothObjectArrayProperties = 属性“{0}”不是对象数组
Java.Json.Schema.Comparison.NotBothObjectProperties = 属性“{0}”不是对象
Java.Json.Schema.Comparison.NotBothScalarArrayProperties = 属性“{0}”不是标量数组
Java.Json.Schema.Comparison.NotBothScalarProperties = 属性“{0}”不是标量
Java.Json.Schema.Creation.Error = 无法为映射“{0}”创建架构：{1}
Java.Json.Schema.Parsing.Exception = 架构解析异常：{0}
Java.Json.Schema.Parsing.NameNotFound = 未找到架构“{0}”文件：“{1}”
Java.Json.Schema.Validation.ArrayItemsRequired = {0}- 类型为“array”的属性必须指定项目
Java.Json.Schema.Validation.BadCombineWithReason = 无法加载由“{1}”组合的架构“{0}”：{2}
Java.Json.Schema.Validation.BadImport = 无法加载由“{1}”导入的别名为“{2}”的架构“{0}”
Java.Json.Schema.Validation.BadImportWithReason = 无法加载由“{1}”导入的别名为“{2}”的架构“{0}”：{3}
Java.Json.Schema.Validation.BadSchema = 无法加载架构“{0}”
Java.Json.Schema.Validation.ConstraintOnlyAllowedOnArray = {0}- “{1}”属性只能用于“array”类型的属性
Java.Json.Schema.Validation.ConstraintOnlyAllowedOnScalar = {0}- 类型为“array”或“object”的属性不允许使用“{1}”属性
Java.Json.Schema.Validation.ConstraintOnlyAllowedOnScalarArray = {0}- 类型为“object”的项目不允许使用“{1}”属性
Java.Json.Schema.Validation.ContainsAdditionalPropertyPropertyAndAdditionalProperties = {0}- 定义指定了一个名称为“{1}”的属性，还包含架构指定的additionalProperties。必须使用以下表达式来筛选此属性：'$additionalProperties'
Java.Json.Schema.Validation.CustomValidatorFactoryException = {0}- {1}插件抛出了异常：{2}
Java.Json.Schema.Validation.DefinitionNameContainsWhitespace = {0}- 定义名称“{1}”包含空格
Java.Json.Schema.Validation.DefinitionNameIsEmpty = {0}- 定义名称不能为空
Java.Json.Schema.Validation.DefinitionNameIsInvalidIdentifier = {0}- 定义名称“{1}”不是有效的Java标识符
Java.Json.Schema.Validation.DuplicateGraphQLDefinitionNames = {0}- 定义名称“{1}”和“{2}”映射到同一个GraphQL名称“{3}”。通过GraphQL查询来过滤此架构的功能将无法正常工作。
Java.Json.Schema.Validation.DuplicateGraphQLPropertyNames = {0}- 属性名称“{1}”和“{2}”映射到同一个GraphQL名称“{3}”。通过GraphQL查询来过滤此架构的功能将无法正常工作。
Java.Json.Schema.Validation.DuplicateWarningCategory = {0}-“{1}”属性包含重复的警告类别：“{2}”
Java.Json.Schema.Validation.ExportEnumerationNotAllowed = {0}- 仅当“x-gw-type”已指定且为类型列表时，“x-gw-export-enumeration”属性才有效
Java.Json.Schema.Validation.ExtendedSchemaCycle = {0} -“x-gw-extend”属性导致了一整套架构扩展：{1}
Java.Json.Schema.Validation.ExtendedSchemaHasIllegalProperty = {0} -“x-gw-extend”中列出的架构“{1}”指定了“{2}”属性。指定了“{2}”的架构无法由另一个架构扩展。
Java.Json.Schema.Validation.ExtendedSchemasHaveDuplicateProperties = {0} - 架构“{1}”包含属性“{2}”，该属性已在“x-gw-extend”中列出的另一个架构中定义
Java.Json.Schema.Validation.ImportUnused = 架构“{0}”导入别名“{1}”未被任何定义属性（直接或组合）引用
Java.Json.Schema.Validation.InvalidAdditionalPropertiesType = {0}- additionalProperties声明的类型无效：{1}
Java.Json.Schema.Validation.InvalidAdditionalPropertyReference = {0}- additionalProperties声明的定义引用无效：{1}
Java.Json.Schema.Validation.InvalidDefaultValue = {0}- 定义属性具有的默认值“{1}”不是类型“{2}”的有效值
Java.Json.Schema.Validation.InvalidExtendedSchema = {0} -“x-gw-extend”属性引用了一个无效的架构定义：{1}
Java.Json.Schema.Validation.InvalidPropertyReference = {0}- 定义属性的定义引用无效：{1}
Java.Json.Schema.Validation.InvalidPropertyType = {0}- 定义属性的类型无效：{1}
Java.Json.Schema.Validation.InvalidRequiredProperty = {0}- 定义指定的必需属性“{1}”不是有效的属性名称
Java.Json.Schema.Validation.ItemsOnlyAllowedOnArray = {0}- 项目只能用于“array”类型的属性
Java.Json.Schema.Validation.PropertyDuplicatesInheritedProperty = {0} - 属性“{1}”已在“x-gw-extend”中列出的一个架构中定义
Java.Json.Schema.Validation.PropertyNameContainsWhitespace = {0}- 属性名称“{1}”包含空格
Java.Json.Schema.Validation.PropertyNameIsEmpty = {0}- 属性名称不能为空
Java.Json.Schema.Validation.PropertyNameIsInvalidIdentifier = {0}- 属性名称“{1}”不是有效的JavaScript标识符。这可能会使该属性在JavaScript中难以获取或设置。
Java.Json.Schema.Validation.PropertyNameIsReservedWord = {0}- 属性名称“{1}”是JavaScript中的保留字。这可能会使该属性在JavaScript中难以获取或设置。
Java.Json.Schema.Validation.PropertyNameStartsWithGW = {0}- 属性名称不能以前缀“$GW-”开头；该前缀已预留给框架使用
Java.Json.Schema.Validation.RedundantAllWarningCategory = {0}-“{1}”属性不得包含除“all”之外的任何警告类别
Java.Json.Schema.Validation.RefOnlyAllowedOnObjectItems = {0}- 只有未指定项目类型时，才允许使用“$ref”属性
Java.Json.Schema.Validation.RefOnlyAllowedOnObjectProperties = {0}- 只有未指定属性类型时，才允许使用“$ref”属性
Java.Json.Schema.Validation.RefOrTypeRequiredOnItems = {0}- 项目需要“type”和“$ref”中的一个
Java.Json.Schema.Validation.RefOrTypeRequiredOnProperties = {0}- 属性需要“type”和“$ref”中的一个
Java.Json.Schema.Validation.RequiredPropertiesShouldNotHaveDefaults = {0}- 定义属性为必需项，因此不应指定默认值
Java.Json.Schema.Validation.ResolveDefinitionReference = 在架构“{1}”中未找到定义“{0}”
Java.Json.Schema.Validation.ResolveDefinitionReference.Alias = 在架构“{1}”中未找到导入别名“{0}”
Java.Json.Schema.Validation.ResolveDefinitionReference.Missing = 缺少定义引用
Java.Json.Schema.Validation.ResolveDefinitionReference.Syntax = 定义引用“{0}”格式不为“{1}<name>”或“<alias>{1}<name>”
Java.Json.Schema.Validation.TypeListExportAndEnum = {0}- 显式的“enum”属性会将设置“x-gw-export-enumeration”覆盖为“true”
Java.Json.Schema.Validation.XmlAttributeNotNullable = {0}- 定义属性不能既外化为XML，同时又可为null
Java.Json.Spec.Validation.ConditionallyDisallowedProperty = 不允许使用属性“{0}”{1}
Java.Json.Spec.Validation.DuplicatePath = Json 路径“{0}”重复
Java.Json.Spec.Validation.FormatError = 属性“{0}”有一个值“{1}”采用的格式不正确：{2}
Java.Json.Spec.Validation.FormatErrorForArrayElement = 属性“{0}”有一个元素“{1}”采用的格式不正确：{2}
Java.Json.Spec.Validation.InvalidEnum = 属性“{0}”必须为{1}之一
Java.Json.Spec.Validation.InvalidEnumInArray = 属性“{0}”必须为单个值或值数组，每个值都必须为{1}之一
Java.Json.Spec.Validation.MissingConditionallyRequiredProperty = 属性“{0}”是必需的{1}
Java.Json.Spec.Validation.MissingRequiredProperty = 属性“{0}”是必需的
Java.Json.Spec.Validation.UnknownProperty = 此对象上不允许使用属性“{0}”
Java.Json.Spec.Validation.WrongArrayPropertyType = 属性“{0}”应当为JSON{1}或{2}数组
Java.Json.Spec.Validation.WrongPropertyType = 属性“{0}”应当为JSON{1}
Java.Json.Spec.Validation.Xml.InvalidElementName = 值必须为有效的XML名称（请参阅https\://www.w3.org/TR/xml/#NT-Name）：{0}
Java.Json.Version.Validation.BadFormat = 版本“{0}”的格式必须为<major-number>.<minor-number>[.<other-number>]*[-<string>]
Java.Json.Version.Validation.InvalidPortableFilename = 版本“{0}”在可移动文件名中必须有效，且不得包含以下任意字符：{1}
Java.Json.Versions.Validation.ContentProviderEmpty = 内容提供方为空
Java.Json.Versions.Validation.FileNotExists = 版本文件不存在：{0}正在创建
Java.Json.Versions.Validation.ParseError.BadHashPath = 以下位置的版本对象需要“hash”属性：{0}
Java.Json.Versions.Validation.ParseError.BadNamePath = 以下位置的版本对象需要“name”属性：{0}
Java.Json.Versions.Validation.ParseError.ExpectedArrayPath = 以下位置应存在数组类型：{0}
Java.Json.Versions.Validation.ParseError.ExpectedObjectPath = 以下位置应存在对象类型：{0}
Java.Json.Versions.Validation.ParseError.UnexpectedKind = 意外的版本类型：{0}
Java.Json.Versions.Validation.TargetModule = 无法解析目标模块路径
Java.Json.Versions.Validation.VersionMismatch = “{0}”类型“{1}”的检查失败
Java.Json.Versions.Validation.VersionMismatchError = 检查失败。正在中止服务器启动。
Java.Json.Versions.Validation.VersionNameNotSpecified = 未指定版本名称
Java.Json.Versions.Validation.VersionTypeNotSpecified = 未指定版本类型
Java.LayoutUtil.ChildLinkAltText = 子项
Java.LayoutUtil.NextLinkAltText = 下一个
Java.LayoutUtil.ParentLinkAltText = 上级组
Java.LayoutUtil.PrevLinkAltText = 上一个
Java.LayoutUtil.UpLinkAltText = 向上
Java.LinkResultMatchesAction.ImplausibleMatch = 联系人与以下联系人匹配，但似乎不是同一联系人。如果确定联系人正确，请确认到该联系人的链接。
Java.LinkResultMatchesAction.IncompatibleTypeMatch = 联系人与以下联系人完全匹配，但其类型不匹配。无法建立该链接。
Java.LinkResultMatchesAction.PotentialMatches = 该联系人可能与以下联系人匹配。请选择一个要链接的联系人；如果没有任何匹配的联系人，请按“创建新联系人”。
Java.LinkResultMatchesAction.PotentialMatches.NoCreatePermission = 该联系人可能与以下联系人匹配。请选择一个要链接的联系人。
Java.ListView.ColumnFilter = <过滤器>
Java.ListView.ColumnsMenu = 列
Java.ListView.DefaultEmptyTableLabel = 无数据可显示
Java.ListView.DefaultTableClass = 基础表
Java.ListView.DefaultWidth = 100%
Java.ListView.Empty = 无结果
Java.ListView.Filter.All = 所有
Java.ListView.GetSum = 求和
Java.ListView.PageDisabled = 编辑期间禁用分页
Java.ListView.PageFirst = 首页
Java.ListView.PageLast = 末页
Java.ListView.PageMOfN = 第{0}页，共{1}页
Java.ListView.PageNext = 下一页
Java.ListView.PagePrev = 上一页
Java.ListView.Print = 打印/导出
Java.ListView.Print.Title = {0} ({1})
Java.ListView.RowPermissionFailed = 由于权限原因，此列表中的一行无法显示。
Java.ListView.RowPermissionsFailed = 由于权限原因，此列表中的{0}行无法显示。
Java.ListView.SelectHeader = 选择
Java.ListView.Separator = |
Java.ListView.Sum = 合计：
Java.ListView.Title = （{0}- {2}，共{1}）
Java.ListView.ViewDetail = 显示详细信息
Java.LoadError.Already.Running = 完整性检查和加载已在运行
Java.LoadError.NotMaintenanceLevel = 无法运行完整性检查和加载，因为系统未处于维护模式
Java.LoaderIntegrityCheck.ClassInstantiationError = 无法实例化{0}实例，可能因为该实例不会扩展DBCheckBuilder
Java.LoaderIntegrityCheck.CustomBuildError = 无法构建类{0}的自定义加载程序完整性检查
Java.LoaderIntegrityCheck.NonNullableEdgeForeignKeyError = edgeForeignKey字段{0}的值在临时表{1}中不可为null，而在临时表{2}中无效
Java.LoaderIntegrityCheck.NonNullableOneToOneError = 在临时表{1}中不可为null的一对一字段{0}的值必须与临时表{2}中的某一行完全匹配
Java.LoaderIntegrityCheck.NullableOneToOneError = 在临时表{1}中可为null的一对一字段{0}的值必须与临时表{2}中的某一行完全匹配
Java.LoaderIntegrityCheck.NullableOneToOneErrorStgOp = 在临时表{1}中可为null的一对一字段{0}的值不为null，必须与源表{2}中的一行完全匹配
Java.LoaderIntegrityCheck.PreparedStatementError = 准备语句{0}时出错
Java.Location.CommitFailedMessage = 由于出错，无法提交。
Java.Logging.SensitiveDataString = ********
Java.Login.CommonMessage = 您的用户名和/或密码可能不正确。请重试。\n如果问题仍然存在，请与管理员联系。
Java.Login.OK = 确定
Java.Login.TerminatedAgency = 此用户的机构已经终止。请联系系统管理员。
Java.Logout = 退出
Java.Logout.LoginTitle = 您已退出Guidewire {Global.AppName}
Java.Logout.Warning = 是否确实要退出？\n有些工作未保存，如果退出这些工作将丢失。\n单击“确定”退出或单击“取消”返回{Global.AppName}。
Java.LossHistory.NoPlugin = 未定义ILossHistoryPlugin。
Java.MaintenanceTools.BatchProcess = 不存在名称为{1}的批处理流程。有效的批处理流程名称为{2}
Java.MenuAction.NewLinkToOther = 其它
Java.MenuActions.Actions = 操作
Java.Message.ConcurrentDataChange.Link = 放弃未保存的更改
Java.Message.Severity.Error = 错误
Java.Message.Severity.Fatal = 严重
Java.Message.Severity.Info = 信息
Java.Message.Severity.Warning = 警告
Java.Message.Status._1 = 待发送
Java.Message.Status._10 = 已确认
Java.Message.Status._11 = 已清除错误
Java.Message.Status._12 = 重试错误
Java.Message.Status._13 = 已跳过
Java.Message.Status._2 = 待确认
Java.Message.Status._3 = 错误
Java.Message.Status._4 = 可重试错误
Java.Message.Status._null = 未找到
Java.MessageAdmin.GetDestinationStatisticsFailed = 无法获取目标的全部统计。请参阅日志了解进一步的详细信息。
Java.MessageAdmin.MessagesInFlight = 事件{0}的消息不能失败。它具有正在传输的消息。
Java.MessageAdmin.RemoveMessageHistory = 移除消息历史记录失败。
Java.MessageAdmin.RestartDestinationFailed = 重新启动目标失败。
Java.MessageAdmin.RestartEngineFailed = 重新启动消息引擎失败。
Java.MessageAdmin.ResumeDestinationFailed = 恢复目标失败。
Java.MessageAdmin.ResumeDestinationListFailed = 恢复目标失败： {0}。请参阅日志以获取更多详细信息。
Java.MessageAdmin.SuspendDestinationFailed = 暂停目标失败。
Java.MessageDestination.BillingSystem = 计费系统
Java.MessageDestination.ConsoleMessageLogger = 控制台消息记录器
Java.MessageDestination.ContactAutoSyncFailure.Name = 联系人自动同步失败
Java.MessageDestination.ContactMessageTransport = 联系人消息传输
Java.MessageDestination.ContactMessageTransport.Name = 联系人消息传输
Java.MessageDestination.DocumentStore = 单证存储
Java.MessageDestination.DocumentStore.Name = 单证存储
Java.MessageDestination.Email.Name = 电子邮件
Java.MessageDestination.FederatedDataServiceForContacts = 适用于联系人的FederatedDataService
Java.MessageDestination.ResolverService = 解析程序服务
Java.MessageDestination.SolrMessageTransport.Policy.Name = Solr保单消息传输
Java.Messaging.Destination.Invalid = {0}不是有效的目标
Java.Messaging.Destination.LeaseExpired = LeaseExpired：{0}
Java.Messaging.DestinationSOO.Multiple = 具有多个使用相同账号“{0}”的账户。
Java.Messaging.DestinationSOOFilters.SOOFailed = 具有失败消息的账户
Java.Messaging.DestinationSOOFilters.SOORetry = 具有需要重试的消息的账户
Java.Messaging.DestinationSOOFilters.SOOUnfinished = 具有未完成消息的账户
Java.Messaging.EmptyAck = acknowledgeMessage()：无效的形式参数。传递的Acknowledgement为null。
Java.Messaging.MessageAbortFailed = 无法中止消息。
Java.Messaging.MessageRetryFailed = 无法重试消息。
Java.Messaging.MessageSkipFailed = 无法跳过消息。
Java.Messaging.Multiple.SenderRef = 找到多行与组合senderRefId,destinationID ({1}, {0})对应
Java.Messaging.PrimaryObjectResyncFailed = 无法重新同步。
Java.Messaging.SOOMessageSearch.Error = 未找到账号{0}的账户事件消息。
Java.MessagingTools.AccountLookupFailure = 找不到账号为{0}的账户。
Java.Metadata.Validation.Array.CannotReferToMissingEntity = 实体“{1}”中的数组“{0}”引用不存在的数组表“{2}”。
Java.Metadata.Validation.Array.CannotReferToNonPersistentEntity = 永久性实体“{1}”中的数组“{0}”引用非永久性实体“{2}”。不支持此操作。
Java.Metadata.Validation.Array.CannotReferToNotExportableEntity = 实体“{1}”中的数组“{0}”可导出。该数组引用的实体“{2}”不可导出。
Java.Metadata.Validation.Array.CannotReferToNotVersionableEntity = 版本可控实体“{1}”中的数组“{0}”引用版本不可控实体“{2}”。
Java.Metadata.Validation.Array.InvalidArrayField = 无法在实体“{2}”中创建数组“{0}”(arrayField \= {1})，因为“{3}”中的外键未引用该键值。
Java.Metadata.Validation.Array.MissingArrayField = 实体“{1}”中的数组“{0}”未指定arrayField，并具有多个从{2}\:{3}指回数组表的链接。
Java.Metadata.Validation.ArrayOverride.CannotReferToFieldNotArray = 数组覆盖引用非数组字段。字段：{0}.{1}
Java.Metadata.Validation.CannotDeleteInternalEntity = 无法删除内部实体“{0}”。
Java.Metadata.Validation.CannotOverrideFieldDoesNotExist = 不允许覆盖实体中不存在的字段或客户扩展的内部扩展：{0}.{1}存在于“{2}”中。
Java.Metadata.Validation.CannotOverrideSameFiledMoreThanOnce = 如已在“{3}”中覆盖字段，则不允许在“{2}”中覆盖相同字段{0}.{1}。
Java.Metadata.Validation.CheckConstraint.MissingPredicate = 实体“{1}”中具有描述“{0}”的受制约支票中设置的谓词和stagingtablepredicate属性均为空。必须至少指定其中一个。
Java.Metadata.Validation.Column.AtMostOneAutoincrementColumnPerTable = 允许表具有最多1个自增列。“{0}”具有{1}个自增列。{2}
Java.Metadata.Validation.Column.CannotBeLoadableHavingSpatialData = 实体“{1}”中的列“{0}”包含空间数据，但不可加载。请向列定义中添加loadable\="false"。
Java.Metadata.Validation.Column.DataTypeDoesNotExist = 实体“{1}”中的列“{0}”声明不存在的数据类型“{2}”。
Java.Metadata.Validation.Column.EncryptedButEntityNotKeyable = 实体“{1}”中的列“{0}”已加密，但其自有实体并非可定义键实体。
Java.Metadata.Validation.Column.EncryptedCannotSupportsLinguisticSearch = 实体“{1}”中列“{0}”的supportsLinguisticSearch为真且列已加密。
Java.Metadata.Validation.Column.InvalidAutoincrementColumn = 实体“{1}”中的列“{0}”声明一个自增列，但未将其声明为整数列。
Java.Metadata.Validation.Column.InvalidColumnParameter = 实体“{1}”中的列“{0}”不具有数据类型“{3}”所需的列参数“{2}”。
Java.Metadata.Validation.Column.InvalidDataType = 实体“{1}”中的列“{0}”声明无效的数据类型“{2}”。{3}；
Java.Metadata.Validation.Column.InvalidParameter = 实体“{1}”中的列“{0}”具有一个不存在的列参数“{2}”。
Java.Metadata.Validation.Column.InvalidScalableColumn = 实体“{1}”中的列“{0}”可调整，但不是数字列，如整数或金额等。
Java.Metadata.Validation.Column.InvalidScalableNotOnEffectiveDatedType = 实体“{1}”中的列“{0}”可调整，其实体类型“{2}”未确定生效日期。
Java.Metadata.Validation.Column.InvalidScalableValueRange = 实体“{1}”上的列“{0}”可调整，其值范围不包括零。
Java.Metadata.Validation.Column.InvalidValue = 实体“{1}”中的列“{0}”声明具有无效值“{3}”的数据类型“{2}”。
Java.Metadata.Validation.Column.MissingDataType = 实体“{1}”中的列“{0}”缺少一个数据类型。
Java.Metadata.Validation.Column.NameCanContainOnlyLetterNumberUnderscore = 实体“{1}”中列“{0}”的名称包含除a到z、数字或下划线以外的字符。
Java.Metadata.Validation.Column.NameCannotBeReservedWord = “{0}”为保留文字。
Java.Metadata.Validation.Column.NameExceedsMaxLength = 实体“{1}”中列“{0}”的名称超出最大允许长度({2})。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.CannotHaveDifferentColumnNameForSameFieldName = 字段名称为“{0}”的列无法与子类型“{2}”中不同列名称“{1}”以及子类型“{4}”中不同列名称“{3}”进行关联。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.CannotRedeclareInheritedField = 名为“{0}”的列已在实体“{1}”中定义，可映射到与“{2}”相同的数据库表，且其中一个实体会扩展另一个实体。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.DifferentDefaultValue = 名为“{0}”的列已在实体“{1}”中定义，可映射到与“{2}”相同的数据库表，但默认值不同（{3}、{4}）。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.DifferentNullableValue = 名为“{0}”的列已在实体“{1}”中定义，可映射到与“{2}”相同的数据库表，但不允许二字段同时为空。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.DifferentType = 名为“{0}”的列已在实体“{1}”中定义，可映射到与“{2}”相同的数据库表，但类型不同。
Java.Metadata.Validation.Column.NameMustBeUniquePerTable.NotColumnDataOrTypeKey = 名为“{0}”的列已在实体“{1}”中进行定义，可映射到与“{2}”相同的数据库表，但字段不是ColumnData或TypeKey。
Java.Metadata.Validation.Column.NameMustStartWithALetter = 实体“{1}”中的列名称“{0}”必须以字母开头。
Java.Metadata.Validation.Column.NoSupportForCaseInsensitiveSearch = 实体“{1}”中的列“{0}”已将supportsCaseInsensitveSearch设置为真，且类型并不是有效的varchar类型“{2}”。
Java.Metadata.Validation.Column.ParameterCannotHaveMultipleValues = 实体“{1}”中的列“{0}”拥有一个具有多个值[“{3}”和“{4}”]的列参数“{2}”。
Java.Metadata.Validation.ColumnOverride.CannotAllowDataTypeNotCompatibleWithBase = {0}.{1}不允许数据类型“{2}”与基本模型数据类型“{3}”不兼容。
Java.Metadata.Validation.ColumnOverride.CannotAllowNullWhenBaseDoesNotAllowNull = {0}.{1}不允许为空，这是因为基本模型不允许为空。
Java.Metadata.Validation.ColumnOverride.CannotDeclareDataTypeDoesNotExist = {0}.{1}声明不存在的数据类型“{2}”。
Java.Metadata.Validation.ColumnOverride.CannotHaveProhibitedAttribute = {0}：非可扩展实体违反：列覆盖“{1}”已禁止属性：{2}
Java.Metadata.Validation.ColumnOverride.CannotHaveProhibitedChildElement = {0}：非可扩展实体违反：列覆盖“{1}”已禁止子元素：{2}
Java.Metadata.Validation.ColumnOverride.CannotHaveProhibitedChildParameter = {0}：非可扩展实体违反：列覆盖“{1}”已禁止子形式参数：{2}
Java.Metadata.Validation.ColumnOverride.CannotRedefineLocalization = 列覆盖无法重新定义本地化。列已本地化！
Java.Metadata.Validation.ColumnOverride.CannotReferToDataTypeDoesNotExist = 列覆盖引用不存在的数据类型。字段：{0}.{1}，数据类型：“{2}”。
Java.Metadata.Validation.ColumnOverride.CannotReferToFieldNotColumn = 列覆盖引用非列的字段。字段：{0}.{1}
Java.Metadata.Validation.ColumnOverride.CannotRemoveLinguisticSearchSupportFromBase = {0}.{1}无法从基本模型中移除语言搜索支持。
Java.Metadata.Validation.ColumnOverride.CannotSetUniqueOnLocalizationForEffDated = 列覆盖无法为列{0}（在带生效日期的实体{1}上）创建唯一的本地化内容
Java.Metadata.Validation.Delegate.DoesNotExist = 尝试包括名为“{0}”但实际不存在的委派。
Java.Metadata.Validation.Delegate.DuplicateInclusion = 包括多次命名为“{0}”的委派。
Java.Metadata.Validation.Delegate.IncludeDelegateThatRequiresType = 尝试包含委派“{0}”，它在{2}实体上需要类型{1}。
Java.Metadata.Validation.Delegate.InvalidDelegate = 尝试将名为“{0}”实际不是委派的委派包括进来。
Java.Metadata.Validation.Delegate.NoAdapterForRequires = 未针对委派“{0}”声明适配器。
Java.Metadata.Validation.DuplicateEntity = 实体“{0}”的声明重复。该重复实体在“{1}”中定义。
Java.Metadata.Validation.DuplicateEntityTableName = 实体“{0}”和“{1}”声明相同的表名称：{2}。
Java.Metadata.Validation.DuplicateLink = 从{0}#{1}“{2}”到{3}#{4}“{5}”的链接重复。
Java.Metadata.Validation.DuplicateTypelist = 类型列表“{0}”的声明重复。该重复类型列表在“{1}”中定义。
Java.Metadata.Validation.EdgeForeignKeyOverride.CannotReferToFieldNotEdgeForeignkey = EdgeForeignKey覆盖引用非edgeForeignKey字段。字段：{0}.{1}
Java.Metadata.Validation.EdgeForeignKeyOverride.CannotRemoveExtractability = {0}.{1}无法移除可提取性。
Java.Metadata.Validation.EdgeForeignKeyOverride.CannotRemoveOverlapTable = {0}.{1} 无法移除重叠表设置。
Java.Metadata.Validation.EffDated.ColumnLocalizationUnique = 实体“{0}”（带生效日期）声明了有唯一本地化内容的列“{1}”。
Java.Metadata.Validation.EffDated.EffDatedBranchTypeEntityDoesNotExist = effDatedBranchType 中的实体“{0}”(effDated) 引用不存在的实体“{1}”。
Java.Metadata.Validation.EffDated.InvalidEffDatedBranchType = 实体“{0}”(effDated)声明了并非EffDatedBranch的effDatedBranchType。
Java.Metadata.Validation.EffDated.NoEffDatedBranchType = 实体“{0}”(effDated)没有声明effDatedBranchType。
Java.Metadata.Validation.EffDatedBranch.EffDatedContainerFieldDoesNotReferToAnEffDatedContainer = 实体“{0}”定义了未引用EffDatedContainer的effDatedContainerField“{1}”。
Java.Metadata.Validation.EffDatedBranch.EffDatedContainerFieldNoFireignkeyFieldDefined = 实体“{0}”定义了尚未命名外键字段的effDatedContainerField“{1}”。
Java.Metadata.Validation.EffDatedBranch.EffDatedContainerFieldNotAField = 实体“{0}”定义了并非字段的effDatedContainerField“{1}”。
Java.Metadata.Validation.EffDatedBranch.EffDatedContainerFieldNotDefined = 实体“{0}”是effDatedBranch，但不定义effDatedContainerField。
Java.Metadata.Validation.EffDatedBranchesFieldDefinedOnEntityNotAnEffDatedContainer = 实体“{0}”不是effdatedcontainer，但是定义了一个effDatedBranchesField。
Java.Metadata.Validation.EffDatedContainer.EffDatedBranchesFieldDoesNotReferToAnEffDatedBranch = 实体“{0}”定义了未引用effdatedbranch的effDatedBranchesField“{1}”。
Java.Metadata.Validation.EffDatedContainer.EffDatedBranchesFieldNotAField = 实体“{0}”定义了并非字段的effDatedBranchesField“{1}”。
Java.Metadata.Validation.EffDatedContainer.EffDatedBranchesFieldNotAnArray = 实体“{0}”定义了并非数组的effDatedBranchesField“{1}”。
Java.Metadata.Validation.EffDatedContainer.EffDatedBranchesFieldNotDefined = 实体“{0}”是effdatedcontainer，但不定义effDatedBranchesField。
Java.Metadata.Validation.EffDatedContainer.EffDatedRegistryTableNameNotDefined = 实体“{0}”是effdatedcontainer，但不定义effDatedRegistryTableName。
Java.Metadata.Validation.EffDatedContainerFieldDefinedOnEntityNotAnEffDatedBranch = 实体“{0}”不是effdatedbranch，但可定义effDatedContainerField。
Java.Metadata.Validation.EffDatedRegistryTableNameDefinedOnEntityNotAnEffDatedContainer = 实体“{0}”不是effdatedcontainer，但是定义了一个effDatedRegistryTableName。
Java.Metadata.Validation.Entity.CannotBeMarkedFinalAndAbstractAtSameTime = 已将实体“{0}”标记为最终和抽象。
Java.Metadata.Validation.Entity.CannotExtendFinalEntity = 实体“{0}”正在扩展成最终实体。
Java.Metadata.Validation.Entity.DuplicateProperty = 已为实体“{1}”、({2})、({3})找到重复属性“{0}”。
Java.Metadata.Validation.Entity.FinalCannotSpecifyTypelistTableName = 实体是最终的但指定一个typelistTableName({0})。
Java.Metadata.Validation.Entity.InvalidFileLocation = 实体文件位置{0}无效。
Java.Metadata.Validation.Entity.InvalidFileName = 文件“{0}”和实体“{1}”之间的名称不匹配。
Java.Metadata.Validation.Entity.InvalidTableName = 实体“{1}”的表名称({0})包含除a到z、数字或下划线以外的字符。
Java.Metadata.Validation.Entity.TableNameExceedsMaximumLength = 实体“{1}”的表名称({0})超过了允许的最大长度({2})。
Java.Metadata.Validation.EntityExtension.CannotExtendFromEntity = 扩展类型不匹配。不能使用扩展类型“{1}”扩展实体类型“{0}”。
Java.Metadata.Validation.EntityExtension.CannotHaveProhibitedElement = {0}：非可扩展实体违反：已禁止元素：{1}
Java.Metadata.Validation.EntityExtension.InvalidExtensionFileName = 实体“{1}”的实体扩展文件名称“{0}”不是“{2}”或者不以“{3}”开头。
Java.Metadata.Validation.Field.LoadedByCallbackInternalOnly = 字段“{0}”（位于实体“{1}”上）使用的属性“loadedByCallback”不能用于客户扩展。
Java.Metadata.Validation.ForeignKeyOverride.CannotAllowNullWhenBaseDoesNotAllowNull = {0}.{1}不允许为空，这是因为基本模型不允许为空。
Java.Metadata.Validation.ForeignKeyOverride.CannotBeImportableAgainstExistingObjectWhenBaseDoesNotAllow = {0}.{1}无法针对现有对象进行导入，因为基本模型不允许。
Java.Metadata.Validation.ForeignKeyOverride.CannotReferToFieldNotForeignkey = 外键覆盖引用非外键的字段。字段：{0}.{1}
Java.Metadata.Validation.GraphError.CyclicGraphExists = 实体“{0}”包含references \= [{1}]的循环图
Java.Metadata.Validation.GraphError.InvalidForeignKey = 外键“{0}”无效
Java.Metadata.Validation.ImplementsEntity.CannotHaveDifferentAdapter = 委派“{0}”在“{1}”和“{2}”中具有不同的适配器。
Java.Metadata.Validation.ImplementsInterface.CannotHaveDifferentAccessibility = 接口“{0}”在“{1}”和“{2}”中的可访问性不同。
Java.Metadata.Validation.ImplementsInterface.CannotHaveDifferentImplementation = 接口“{0}”在“{1}”和“{2}”中的实施方式不同。
Java.Metadata.Validation.Index.CannotBeRemovedAsDoesNotExist = 无法移除索引“{0}”，因为不存在这样的索引。
Java.Metadata.Validation.Index.CannotBeRemovedAsPerfOnlyIndex = 不能移除索引“{0}”，因为该索引并非仅性能索引。只可能移除不唯一的索引或包含ID列的索引。
Java.Metadata.Validation.Index.CannotContainDenormColumnWithIDColumn = 唯一索引“{0}”包含不规范列“{1}”，但不包含ID列。除非唯一索引同时包含ID列，否则不能包含不规范列。
Java.Metadata.Validation.Index.DuplicateIndex = 使用相同键值和表“{4}”中声明的名为“{0}”（在“{1}”中）和“{2}”（在“{3}”中）的排序顺序的相同列具有重复索引。
Java.Metadata.Validation.Index.DuplicateIndexName = 表“{1}”中声明了多个名为“{0}”的索引。具有该名称的索引在“{2}”和“{3}”上都进行了声明。
Java.Metadata.Validation.Index.DuplicateKeyColumn = 列“{0}”多次作为键值列出现在实体“{2}”的索引“{1}”中。
Java.Metadata.Validation.Index.KeyColumnNotUnique = 包含ID列作为键值列的所有索引都必须声明为唯一。实体“{1}”中的索引“{0}”包含ID列，但未声明为唯一。
Java.Metadata.Validation.Index.KeyColumnPositionsNotContiguous = 实体“{1}”中的索引“{0}”引用的列不具有从 1 到{2}的连续键值列位置。
Java.Metadata.Validation.Index.MissingNameAttribute = 实体{1}中的索引{0}包含的元素{2}不具备所需的名称属性。
Java.Metadata.Validation.Index.NameExceedsMaximumLength = 实体“{1}”中定义的索引“{0}”的名称超出最大允许长度({2})。
Java.Metadata.Validation.Index.ReferToAFieldCannotBeIndexed = 实体“{1}”中的索引“{0}”引用字段“{2}”，该字段因为是{3}而不能成为索引的一部分。
Java.Metadata.Validation.Index.ReferToAFieldDoesNotExistOrNotAColumnInDB = 实体“{1}”中的索引“{0}”引用不存在或与数据库中列不对应的字段“{2}”。
Java.Metadata.Validation.Index.ReferToAFieldWithInvalidDataType = 实体“{1}”中的索引“{0}”引用不具有有效数据类型的字段“{2}”。
Java.Metadata.Validation.Interface.DoesNotExist = 不存在接口“{0}”。
Java.Metadata.Validation.Interface.ImplementationDoesNotExist = 实施“{0}”不存在。
Java.Metadata.Validation.InvalidXML = 无法处理源“{0}”的 xml\: {1}
Java.Metadata.Validation.Link.ForeignKeyFromNonRevisionedToRevisonedNotAllowed = 外键“{0}”（位于不带生效日期或生效日期分支的实体{1}上）指向带生效日期的实体“{2}”。这是不允许的。
Java.Metadata.Validation.Link.ForeignKeyOnPersistentEntityReferToNonPersistentEntity = 永久性实体“{1}”中的外键“{0}”引用非永久性实体（“{2}”）。不支持此操作。
Java.Metadata.Validation.Link.ForeignKeyReferToEntityDoesNotExist = 实体“{1}”中的外键“{0}”引用不存在的实体“{2}”。
Java.Metadata.Validation.Link.LoadableOneToOnePairWithForeignKeyLinkNotLoadable = 可加载实体“{1}”中的可加载一对一“{0}”(nullok\=false)引用可加载实体“{2}”，该实体包含返回到不可加载所有者的外键链接。
Java.Metadata.Validation.Link.LoadableOneToOneReferToEntityNotLoadable = 可加载实体“{1}”中的可加载一对一“{0}”(nullok\=false)引用不可加载实体“{2}”。
Java.Metadata.Validation.Link.TemporaryEntityCannotHaveForeignkey = “{0}”包含外键“{1}”。临时实体不能具有外键。
Java.Metadata.Validation.NotValidArrayEntity = “{1}”中的数组“{0}”不具有有效数组实体。
Java.Metadata.Validation.OneToOneOverride.CannotReferToFieldNotOneToOne = 一对一覆盖引用非一对一的字段。字段：{0}.{1}
Java.Metadata.Validation.SearchColumn.CannotExistOnNonVersionableEntity = 搜索列不能存在于版本不可控实体中。
Java.Metadata.Validation.SearchColumn.LocalizedSourceColumnCannotBeDenormalized = 搜索列“{0}”声明已本地化的sourceColumn“{1}”。无法非标准化已本地化的列。
Java.Metadata.Validation.SearchColumn.OnLoadableEntityWithSourceForeignkeyImportableAgainstExistingObject = 搜索列“{0}”存在于可加载实体上，但声明了针对现有对象可导入的sourceForeignKey“{1}”。
Java.Metadata.Validation.SearchColumn.SourceColumnDoesNotExist = 搜索列“{0}”声明源实体“{3}”中不存在的{1} {2}。
Java.Metadata.Validation.SearchColumn.SourceColumnNotColumn = 搜索列“{0}”声明一个非列的{1}{2}。
Java.Metadata.Validation.SearchColumn.SourceEntityNotVersionable = 搜索列“{0}”引用版本不可控的源实体“{1}”。源实体必须是版本可控实体。
Java.Metadata.Validation.SearchColumn.SourceForeignKeyDoesNotExist = 搜索列“{0}”声明实体“{2}”中不存在的sourceForeignKey“{1}”。
Java.Metadata.Validation.SearchColumn.SourceForeignKeyNotForeignkey = 搜索列“{0}”声明非外键sourceForeignKey“{1}”。
Java.Metadata.Validation.SearchColumn.SourceSubtypeDoesNotExist = 搜索列“{0}”声明了一个不存在的sourceSubtype“{1}”。
Java.Metadata.Validation.SearchColumn.SourceSubtypeNotSubtypeOfSourceEntity = 搜索列“{0}”声明了一个sourceSubtype“{1}”，其并非sourceForeignKey“{3}”所引用的源实体“{2}”的子类型。
Java.Metadata.Validation.SearchTypekey.SourceTypekeyNotATypekey = 搜索typekey“{0}”声明一个非typekey的sourceTypekey“{1}”。
Java.Metadata.Validation.Subtype.SuperEntityDoesNotExist = 子类型“{0}”引用不存在的超级实体“{1}”。
Java.Metadata.Validation.Tag.CannotDefineOnFieldMoreThanOnce = 已在实体“{2}”的字段“{1}”中定义名为“{0}”的标记。
Java.Metadata.Validation.Tag.CannotDefineOnFieldWithTagNameDoesNotExist = 在实体“{2}”的字段“{1}”中定义了名为“{0}”的标记，但未在 tags.lst 中定义。
Java.Metadata.Validation.Tag.CannotDefineOnOverrideFieldMoreThanOnce = 已在实体“{2}”的覆盖字段“{1}”中定义名为“{0}”的标记。
Java.Metadata.Validation.Tag.CannotDefineOnOverrideFieldWhenDefinedOnField = 已在实体“{2}”的字段“{1}”中定义覆盖字段上名为“{0}”的标记。
Java.Metadata.Validation.Tag.CannotDefineOnOverrideFieldWithTagNameDoesNotExist = 在实体“{2}”的覆盖字段“{1}”中定义了名为“{0}”的标记，但未在 tags.lst 中定义。
Java.Metadata.Validation.Typecode.CannotBeEmptyCode = Typelist“{0}”包含具有空代码的typecode。
Java.Metadata.Validation.Typecode.CannotDeclareNewInExtensionToFinalTypelist = 最终类型列表“{0}”的扩展声明新类型代码：“{1}”。
Java.Metadata.Validation.Typecode.CannotHaveMultipleDefinitions = Typelist“{0}”包含对“{2}”和“{2}”中的代码“{1}”的多个定义。
Java.Metadata.Validation.Typecode.CategoryCannotReferToCategoryDoesNotExist = Typecode{0}.{1}的类别引用不存在的类别节点，“{3}”上的“{2}”。
Java.Metadata.Validation.Typecode.ContainsCategoryReferToTypelistDoesNotExist = Typecode{0}.{1}包含引用了不存在的typelist“{2}”的类别。
Java.Metadata.Validation.Typecode.ContainsCategoryWithNullCode = Typecode{0}.{1}包含具有空代码的类别。
Java.Metadata.Validation.Typecode.ContainsCategorylistReferToTypelistDoesNotExist = Typecode{0}.{1}包含引用了不存在的typelist“{2}”的categorylist。
Java.Metadata.Validation.Typecode.ContainsCategorylistWithNullTypelist = Typecode{0}.{1}包含具有空typelist的categorylist。
Java.Metadata.Validation.Typecode.ExceedsMaxLength = Typelist“{0}”包含代码“{1}”，其长度大于{2}个字符。
Java.Metadata.Validation.Typecode.NameCannotBeEmpty = Typelist“{0}”包含名称为空的typecode。
Java.Metadata.Validation.Typecode.ReferToCategoryDoesNotExist = Typecode{0}.{1}引用不存在的类别{2}.{3}。
Java.Metadata.Validation.Typefilter.CannotBeNullName = Typelist“{0}”包含名称为空的类型过滤器。
Java.Metadata.Validation.Typefilter.CannotHaveMultipleDefinitions = Typelist“{0}”包含对“{2}”和“{3}”中过滤器“{1}”的多个定义。
Java.Metadata.Validation.Typefilter.CategoryCannotReferToCategoryDoesNotExist = 类型过滤器{0}.{1}的类别引用不存在的类别节点，“{3}”上的“{2}”。
Java.Metadata.Validation.Typefilter.ContainsCategoryReferToTypelistDoesNotExist = {0}.{1}包含引用了不存在的typelist“{2}”的类别。
Java.Metadata.Validation.Typefilter.ContainsCategoryWithNullCode = {0}.{1}包含具有空代码的类别。
Java.Metadata.Validation.Typefilter.ContainsExcludeWithNullCode = {0}.{1}包含具有空代码的exclude语句。
Java.Metadata.Validation.Typefilter.ContainsIncludeWithNullCode = {0}.{1}包含具有空代码的include语句。
Java.Metadata.Validation.Typefilter.ExcludeCannotReferToCategoryDoesNotExist = 类型过滤器{0}.{1}的exclude语句引用不存在的类别节点，“{3}”上的“{2}”。
Java.Metadata.Validation.Typefilter.ExcludeCodeDoesNotExist = {0}.{1}不包含不存在的代码“{2}”。
Java.Metadata.Validation.Typefilter.IncludeCannotReferToCategoryDoesNotExist = 类型过滤器{0}.{1}的include语句引用不存在的类别节点，“{3}”上的“{2}”。
Java.Metadata.Validation.Typefilter.IncludeCodeDoesNotExist = {0}.{1}包含不存在的代码“{2}”。
Java.Metadata.Validation.Typefilter.ReferToCategoryDoesNotExist = {0}.{1}引用不存在的类别{2}.{3}，
Java.Metadata.Validation.Typekey.DefaultValueNotValidTypecode = 实体“{1}”中的typekey“{0}”具有默认值“{2}”，但该值对于typelist“{3}”并非有效typecode。
Java.Metadata.Validation.Typekey.ReferToFilterDoesNotExist = 实体“{1}”中的类型键值“{0}”引用类型列表“{3}”中不存在的静态过滤“{2}”。
Java.Metadata.Validation.Typekey.ReferToFilterNotResolveToTypekey = 实体“{1}”中的typekey“{0}”引用不能分解成typekey的过滤器“{2}”。
Java.Metadata.Validation.Typekey.ReferToInvalidFilter = 实体“{1}”中的typekey“{0}”引用非有效路径的过滤器“{2}”。
Java.Metadata.Validation.Typekey.ReferToTypekeyDoesNotExist = 实体“{1}”中的“{0}”引用不存在或实际并非typekey的typekey“{2}”。
Java.Metadata.Validation.Typekey.ReferToTypelistDoesNotExist = 实体“{1}”中的typekey“{0}”引用不存在的typelist“{2}”。
Java.Metadata.Validation.TypekeyOverride.CannotAllowNullWhenBaseDoesNotAllowNull = {0}.{1}不允许为空，这是因为基本模型不允许为空。
Java.Metadata.Validation.TypekeyOverride.CannotReferToFieldNotTypekey = Typekey覆盖引用非typekey的字段。字段：{0}.{1}
Java.Metadata.Validation.Typelist.CannotHaveMultipleDescriptions = Typelist“{0}”包含“{1}”和“{2}”中的多个描述。
Java.Metadata.Validation.Typelist.DuplicateCode = Typelist“{0}”包含对代码“{1}”的多个定义。
Java.Metadata.Validation.Typelist.DuplicateTableName = 类型列表“{0}”和“{1}”声明相同的表名称：{2}。
Java.Metadata.Validation.Typelist.IllegalInternalExtension = {0}使用“internaltypelistextension”，但它不是一个内部类型列表扩展文件
Java.Metadata.Validation.Typelist.InvalidFileLocation = typelist文件位置{0}无效。
Java.Metadata.Validation.Typelist.InvalidFileName = 文件“{0}”和typelist“{1}”之间的名称不匹配。
Java.Metadata.Validation.Typelist.TableNameContainsInvalidCharacter = typelist“{1}”的表名称({0})包含除a到z、数字或下划线以外的字符。
Java.Metadata.Validation.Typelist.TableNameExceedsMaximumLength = typelist“{1}”的表名称({0})过长。限制为{2}个字符。
Java.Metadata.Validation.TypelistExtension.InvalidExtensionFileName = 类型列表“{1}”的类型列表扩展文件名“{0}”不是“{2}”或者不以“{3}”开头，
Java.Metadata.Validation.ViewEntity.DifferingPrimaryEntities = “{1}”上指定的 primaryEntity“{0}”与其超类型“{3}”上指定的 primaryEntity“{2}”不同。
Java.Metadata.Validation.ViewEntity.FieldInvalidPath = 列“{0}.{1}”中指定的路径不具有“{2}.{3}”的有效路径。
Java.Metadata.Validation.ViewEntity.InvalidPrimaryEntity = 视图实体“{0}”指定无效的主要实体“{1}”。
Java.Metadata.Validation.ViewEntity.PrimaryPathHasEffDatedArray = 视图实体“{0}”指定的主要路径“{1}”包含带生效日期的数组({2})。视图实体路径中不允许出现带生效日期的数组。
Java.Metadata.Validation.ViewEntity.PrimaryPathHasEffDatedLink = 视图实体“{0}”指定的主要路径“{1}”包含带生效日期的链接({2})。视图实体路径中不允许出现带生效日期的链接。
Java.Metadata.Validation.ViewEntity.ViewEntityColumnDoesNotReferToColumnOrLink = viewEntityColumn“{0}.{1}”引用非列或链接的“{2}.{3}”。
Java.Metadata.Validation.ViewEntity.ViewEntityLinkDoesNotReferToForeignkey = viewEntityLink“{0}.{1}”引用非外键“{2}.{3}”。
Java.Metadata.Validation.ViewEntity.ViewEntityNameDoesNotReferToForeignkey = “viewEntityName“{0}.{1}”引用非外键“{2}.{3}”。
Java.Metadata.Validation.ViewEntity.ViewEntityTypekeyDoesNotReferToTypekey = viewEntityTypekey“{0}.{1}”引用非typekey“{2}.{3}”。
Java.NameValueView.Boolean.False = 否
Java.NameValueView.Boolean.True = 是
Java.NameValueView.New = 新建...
Java.NameValueView.NewCompany = 新建机构...
Java.NameValueView.NewPerson = 新建个人...
Java.NameValueView.NoneSelected = <无>
Java.NameValueView.Search = 搜索...
Java.NameValueView.SelectABContact = 选择联系人...
Java.NameValueView.SelectGroup = 选择组...
Java.NameValueView.SelectOrganization = 选择机构...
Java.NameValueView.SelectUser = 选择用户...
Java.NameValueView.ViewDetail = 查看详细信息...
Java.NewABContactMatchesAction.DefinitiveMatch = 无法创建联系人，因为确定它与以下联系人匹配。
Java.NewABContactMatchesAction.PotentialMatches = 通讯簿条目可能与以下某一现有条目匹配。请选择一个联系人进行编辑；如果没有匹配项，请按“创建新联系人”。
Java.NewActivity.NoCategory = （无类别）
Java.NewActivity.NoSubject = （无主题）
Java.NewSubmission.MaxSubmissionsToCreateError = 一次不能创建超过{0}个投保单。
Java.NoPeriodInForce.Message = 保单{0}在日期{1}没有生效附加责任。
Java.None = 无
Java.NotAvailable = 无效
Java.Note.Account = 账户
Java.Note.AccountLevelNote = 账户： {0}
Java.Note.Author = 作者：
Java.Note.Confidential = 机密
Java.Note.Contingency = 事故
Java.Note.CurrentActivity = 当前活动
Java.Note.Delete = 删除
Java.Note.Details = 详细信息
Java.Note.Edit = 编辑
Java.Note.Info = 信息
Java.Note.JobLevelNote = ---- {0} \: {1} ({2})
Java.Note.Policy = 保单
Java.Note.PolicyLevelNote = -- 保单：{0}
Java.Note.PolicyNumber.Unassigned = 未分配
Java.Note.PolicyPeriodLevelNote = {0} ({1})
Java.Note.Print = 打印
Java.Note.Print.Document.Tag = 附加单证“{0}{1}”
Java.Note.RelatedTo = 关联到：
Java.Note.SecurityLevel = 安全级别：
Java.Note.SortByAuthor = 作者
Java.Note.SortByDate = 日期
Java.Note.SortByExposure = 赔付明细
Java.Note.SortBySubject = 主题
Java.Note.SortByTopic = 题目
Java.Note.Template.Plugin.Exception = 访问备注模板时出现问题。如果问题仍然存在，请与管理员联系。
Java.Note.Topic = 题目：
Java.Note.UnknownAccountLevel = “未知的备注级别值类型。”
Java.NoteView.EntireClaim = 整个理赔
Java.Null = （空）
Java.OOSMerge.Array.Added = {0}已添加： {1}
Java.OOSMerge.Array.Changed = {0}已更改：{1}
Java.OOSMerge.Array.Removed = {0}已移除\: {1}
Java.OOSMerge.Field.Changed = {0}已更改
Java.OOSMerge.Field.Conflict.NewMergedForward = {0}合并冲突（覆盖先前更改）
Java.OOSMerge.Field.Conflict.OldRetained = {0}合并冲突（保留先前更改）
Java.OOSMerge.Field.Conflict.UserChange = {0}合并冲突（由用户更改）
Java.OOSMerge.Header.Change = 更改
Java.OOSMerge.Header.EffectiveDate = 生效
Java.OOSMerge.Header.FromValue = 自
Java.OOSMerge.Header.ToValue = 至
Java.OOSMerge.Value.None = 无
Java.OSGiServiceManager.CannotConfigureService = 无法配置服务{0}\: {1}
Java.OSGiServiceManager.ServiceDidNotStart = 等待启动服务{0}时，发生超时。请检查是否已安装提供此服务的包。
Java.OSGiServiceManager.ThreadInterruptedWhileWaitingForServicesToStart = 等待启动服务时已中断当前线程。
Java.Object.InvalidValue = 对于{1}，“{0}”无效：{2}
Java.Object.PublicId.NotFound = 未找到具有publicId{1}的{0}。
Java.Object.Type.NotFound = {0}不是有效的实体类型
Java.ObjectNotFoundError.Generic.Text = 无法找到请求的对象。另一个用户可能已将其删除。
Java.ObjectNotFoundError.Text = 无法找到请求的{0}。另一个用户可能已将其删除。
Java.OfficialID.InsuredAndOfficialIDType = {0} - {1}
Java.Organization.Inconsistent = 正在尝试将{0}（机构为{1}）插入到组{2}（机构为{3}）
Java.Organization.InconsistentGroup.UserNotInTheSameOrganization = 组{0}包含在机构{1}中，但有属于{3}机构的用户{2}。
Java.Organization.User.Groups.ExternalUserCanNotBeAddedToGroupFromInternalOrganization = 外部用户不能添加到内部机构的组中
Java.Organization.User.Groups.FullyRestricted.UserMustBeInGroupOrganizationOrCarrier = 用户必须属于机构或承保人组
Java.Organization.User.Groups.ProtectInternal.ExternalUserCanNotBeAddedToGroupFromInternalOrganization = 外部用户不能添加到承保人的组
Java.OrganizationSearch.NotEnoughSearchCriteria = 请指定更多详细信息来缩小搜索范围。
Java.OrganizationSearch.UnrestrictedCriteria = 搜索条件不足。请进一步限制搜索。
Java.OrganizationTree.ExternalOrganizations = 外部机构
Java.OrganizationValueWidget.CircularOrganizationException = 无法将此机构的父项设置为机构本身或它的一个子项
Java.OrganizationValueWidget.Error.MultiOrganizations = 找到多个名为“{1}”的机构。请使用机构弹出窗口选择机构。
Java.OrganizationValueWidget.Error.NoOrganization = 没有名为“{1}”的机构。请使用机构弹出窗口选择机构。
Java.PCBeanFinder.LoadByKey.NullKey = 无法为空键加载bean。
Java.PCBeanFinder.LoadByPublicID.NullEntityType = 无法为空实体类型加载bean。
Java.PCBeanFinder.LoadByPublicID.NullPublicID = 无法为空公共ID加载bean。
Java.PCBeanFinder.ReloadBean.NullBean = 无法重新加载空bean。
Java.PeopleInvolved.Inactive = （不活动）
Java.PeopleInvolved.Label.ContactSnapshot = 查看当前
Java.Permission.Activity.Edit = “编辑活动的权限。用户对其创建或拥有的活动具有编辑权限，对于并非其拥有的活动，若是具有编辑权限也可以编辑。”
Java.Permission.Deprecated = “此权限不建议使用，不适用于任何用户。”
Java.Permission.NoUserDefined = 无用户定义项
Java.PermissionMatrix.PermissionDenied = 您没有足够的权限执行该操作（“{0}”）。
Java.PersonalData.Pinnable.Error.EntityMustBeDomainGraphRoot = Pinnable“{0}”不是域图的根。所有Pinnable都必须是域图的根。
Java.PersonalDataDestruction.NotifyProtectionOfficer.ContactContactError.Message = 以下其他联系人与要通过ContactContact表{0}清除的联系人相关
Java.PersonalDataDestruction.NotifyProtectionOfficer.ContactContactError.MessagePart = \n{0}“{1}”
Java.PersonalDataDestruction.NotifyProtectionOfficer.MustDestroyError.Message = 以下内容已标记为MUST_DESTROY，但无法销毁：{0}
Java.PersonalDataDestruction.NotifyProtectionOfficer.MustDestroyError.MessagePart = \n{0}“{1}”标记有错误{2}
Java.PersonalDataDestruction.NotifyProtectionOfficer.MustDestroyError.Title = 无法完成销毁{0}“{1}”的请求
Java.PersonalDataDestruction.NotifyProtectionOfficer.Obfuscation.MustNotDestroy.Message = {0}“{1}”标记有错误。无法对“{2}”进行混淆，因为PersonalDataDestruction插件处理为MUST_NOT_DESTROY
Java.PersonalDataDestruction.NotifyProtectionOfficer.Obfuscation.MustNotDestroy.Title = 无法完成{0}“{1}”的混淆请求
Java.PersonalDataDestruction.NotifyProtectionOfficer.SystemLevelPurgeError.Message = {0}似乎出现了系统级别的配置错误。请查看日志。\n无法完成销毁{1}“{2}”的请求
Java.PersonalDataDestruction.NotifyProtectionOfficer.SystemLevelPurgeError.Title = 出现系统级别的清除错误。
Java.PersonalDataDestruction.PurgeTree.DoNotDestroyFlag = 无法清除“{0}”，因为设置了DoNotDestroy标志
Java.PersonalDataDestruction.PurgeTree.MustNotDestroy = 无法清除“{0}”，因为节点的PersonalDataDestruction插件处理为MUST_NOT_DESTROY
Java.PersonalDataDestruction.PurgeTree.PinnableMismatchException = 实例图形中的Pinnable与“{0}”的Pinnable层级结构不匹配
Java.PersonalDataDestruction.PurgeTree.PolicyPeriodIsArchived = 无法清除“{0}”，因为它是存档的PolicyPeriod
Java.PersonalDataDestruction.PurgeTree.ReferencesFromArchive = 无法清除“{0}”，因为图形是从一个或多个存档单证引用的
Java.PhoneUtil.Error.EntityDelegate.ExtensionMissing = 缺少扩展属性
Java.PhoneUtil.Error.EntityDelegate.NsnMissing = 缺少国家订阅者编号属性
Java.PhoneUtil.Error.EntityDelegate.PhoneRegionCodeMissing = 缺少区域代码属性
Java.PhoneUtil.Error.ParseError = 电话号码{0}无法解析。
Java.PhoneUtil.Error.ViabilityError = 电话号码{0}不可行。很有可能是您的Gosu/Java代码出现了问题。
Java.PhoneUtil.Example.ToolTip = 当前地区： {0} \n示例： {1}\n针对国际号码输入“+”和国际代码
Java.PhoneUtil.MatchType.ExactMatch = 完全匹配
Java.PhoneUtil.MatchType.NSNMatch = 国家预订者匹配
Java.PhoneUtil.MatchType.NoMatch = 不匹配
Java.PhoneUtil.MatchType.NotANumber = 不是数字
Java.PhoneUtil.MatchType.ShortNSNMatch = 短期国家订阅者编号匹配
Java.PhoneUtil.PhoneType.FixedLine = 固定电话
Java.PhoneUtil.PhoneType.FixedLineOrMobile = 固定电话或移动电话
Java.PhoneUtil.PhoneType.Mobile = 移动电话
Java.PhoneUtil.PhoneType.Pager = 寻呼机
Java.PhoneUtil.PhoneType.PersonalNumber = 个人编号
Java.PhoneUtil.PhoneType.PremiumRate = 保费费率
Java.PhoneUtil.PhoneType.SharedCost = 共享成本
Java.PhoneUtil.PhoneType.TollFree = 免费电话
Java.PhoneUtil.PhoneType.UAN = 全局访问数
Java.PhoneUtil.PhoneType.Unknown = 未知
Java.PhoneUtil.PhoneType.Voip = VOIP
Java.PhoneUtil.Upgrade.ChangedWithExtension = {0}分为国家/地区代码{1}、电话号码{2}和扩展{3}。
Java.PhoneUtil.Upgrade.ChangedWithoutExtension = 已确定{0}包含一个{1}国家/地区代码。
Java.PhoneUtil.Upgrade.NumberNotPossible = {0} 针对国家/地区代码而言不是可用的电话号码{1}
Java.PhoneUtil.Upgrade.ParseError = 电话号码无法解析：{0}
Java.PhoneUtil.ValidationResult.Invalid = 无效
Java.PhoneUtil.ValidationResult.InvalidCountryCode = 无效的国家/地区代码
Java.PhoneUtil.ValidationResult.InvalidLength = 长度无效
Java.PhoneUtil.ValidationResult.IsPossible = 有效
Java.PhoneUtil.ValidationResult.IsPossibleLocalOnly = 仅在本地有效
Java.PhoneUtil.ValidationResult.TooLong = 电话号码过长
Java.PhoneUtil.ValidationResult.TooShort = 电话号码过短
Java.Plugin.FailedLeaseTermination = 服务器{0}失败。插件{1}的租约强制于{2}到期
Java.Plugin.FailedStart = 可启动插件{0}未能在{1}秒内启动。
Java.Plugin.FailedStop = 可启动插件{0}未能在{1}秒内停用。
Java.Plugin.InstantiationError = 无法为可启动服务{0}创建实现
Java.Plugin.InterruptedWaitingForState = 等待{0}时发生中断
Java.Plugin.OrphanLeaseTermination = 插件{0}的孤立租约因服务器重启而终止。
Java.Plugin.StartError = 启动可启动服务{0}时抛出异常：\n{1}
Java.Plugin.StopError = 停止可启动服务{0}时抛出异常：\n{1}
Java.PluginConfig.ConflictingSettings = 插件配置无效：{0}与{1}冲突。
Java.PluginConfig.CouldNotLoadImpl = 无法加载{0}的实施类型：{1}
Java.PluginConfig.DuplicatePlugin = 发现重复的插件名称：{0}。
Java.PluginConfig.FatalErrors = 严重的配置错误：有关详细信息，请参阅日志消息。
Java.PluginConfig.InterfaceNotRegistered = 接口{0}并非已注册的插件接口。
Java.PluginConfig.InvalidSettings = 设置条目{0}的插件配置无效
Java.PluginConfig.NoPlugin = 没有为{0}注册插件。
Java.PluginConfig.NoPluginInterface = 没有为{0}注册插件接口。
Java.PluginConfig.NoSettings = 无效的插件配置：未找到当前环境的设置（env\={0}）。
Java.PluginConfig.PluginFileNameIncorrect = 插件文件名称{0}与插件名称({1})不匹配。
Java.PluginConfig.PluginFiles = 插件文件
Java.Policy.Claims.NoConnection = 无法连接到远程理赔管理系统。
Java.Policy.Claims.NoPluginConfigured = 未配置理赔搜索插件。
Java.Policy.Claims.UnableToGivePermission = 无法为用户{0}提供赔案{1} - {2}的权限
Java.Policy.Documents.ExternalPolicy = 无法对外部或草案保单执行单证搜索。
Java.Policy.Error.JobsAlreadyExist = 无法在具有现有保单交易的保单上启动投保单。
Java.Policy.Filters.Viewable = 全部可见
Java.Policy.RunCommandSuffix = <保单号>
Java.PolicyFilePage.PeriodSelectorDate = 日期
Java.PolicyPeriod.AlreadyBound = 无法绑定程序主体中的保单期限
Java.PolicyPeriod.CannotCancelLastOne = 无法取消最新的替代保单版本。
Java.PolicyPeriod.CannotCreateDraftFromDraft = 无法从草案期限创建草案期限
Java.PolicyPeriod.CannotCreateMultiQuoteFromBound = 无法通过承保期间创建多重报价期间
Java.PolicyPeriod.CannotWithdrawPeriod = 无法撤消不属于保单交易{1}的保单期间{0}
Java.PolicyPeriod.Error.AccountContactIsAlreadyAPolicyContactRole = {0}已经是{1}。
Java.PolicyPeriod.Error.AccountLocationIsAlreadyAPolicyLocation = 地点{0}已经是此保单中的“保单地点”。
Java.PolicyPeriod.Error.AddressDoesNotBelongToPrimaryNamedInsured = 给定的地址{0}不是主要列名被保险人{1}的地址，不能设置为该保单的PolicyAddress
Java.PolicyPeriod.Error.BranchCreationFailed = 在从保单交易{1}的当前期间{0}创建保单期间时出错。 {2}处发生错误。有关完整的详细信息，请参阅错误日志。
Java.PolicyPeriod.Error.GapInCoverage = 这种起保/到期日期组合会造成保险缺口
Java.PolicyPeriod.Error.LinesAlreadyExist = 无法创建和添加行到已经具有行的期限。
Java.PolicyPeriod.Error.MissingId = 缺少保单期限ID： {0}
Java.PolicyPeriod.Error.NullJob = 您之前使用的保单期间已不再与有效保单交易关联。这可能是因为另一个交易预先占用了您使用的保单期间。请开始新的保单交易。
Java.PolicyPeriod.Error.NullPeriod = 您之前使用的保单期间已不再有效。这可能是因为另一保单交易预先占用了您使用的保单期间。请开始新的保单交易。
Java.PolicyPeriod.Error.NullPeriodEndDate = 不能将期限到期日期设置为空
Java.PolicyPeriod.Error.NullPeriodStartDate = 不能将期限生效日期设置为空
Java.PolicyPeriod.Error.PeriodCannotBeCommitted = 您尝试更改的保单期限目前正被另一个用户报价，暂时无法修改
Java.PolicyPeriod.Error.PeriodDatesOverlap = 期间日期与现有的承保期间重叠
Java.PolicyPeriod.Error.PeriodEndBeforeEditEffectiveDate = 编辑保单交易的生效日期之前无法更改到期日期
Java.PolicyPeriod.Error.PeriodEndBeforePeriodStart = 到期日期不能早于生效日期
Java.PolicyPeriod.Error.PeriodEndEqualsPeriodStart = 到期日期不能与生效日期相同
Java.PolicyPeriod.Error.PeriodRangeExcludesCancellationDate = 此期间已取消，范围不含取消日期
Java.PolicyPeriod.Error.Permission.UnlockFromQuoting = 当前用户无权解锁此保单期限
Java.PolicyPeriod.InitialBranchName = 版本{0}
Java.PolicyPeriod.Location.IncorrectPeriod = 无法将地点{0}设置为主要地点，它不属于保单期限
Java.PolicyPeriod.NullPeriodEnd = 计算的期间结束日期必须为非空
Java.PolicyPeriod.NullTermType = 计算的保单期限不能为空
Java.PolicyPeriod.OOSChange.ActivePeriod = 生效日期：
Java.PolicyPeriod.PeriodEndTooEarly = 计算的期间结束日期必须在期间开始日期之后
Java.PolicyPeriod.PeriodStart.CannotChange = 除非“编辑生效日期”与当前“期限开始日期”匹配，否则无法更改“期限开始日期”
Java.PolicyPeriod.PolicyLinePatternExists = 无法创建模式为{0}的保单险类，因其已经存在。
Java.PolicyPeriod.PolicyLinePatternIsNotInProduct = 无法创建模式{0}的保单险类，因为保险产品{1}未包含它。
Java.PolicyPeriod.PrimaryLocation.NoPrimaryAccountLocation = 无法创建主要地点：主要账户地点不存在
Java.PolicyPeriod.UnrelatedAccountLocation = 无法对与账户不关联的账户地点创建保单地点
Java.PolicyPeriod.WithdrawPeriodFailed = 无法撤消保单期限{0}
Java.PolicyPeriod.WorkflowTrigger.NoActiveWorkflow = 无法在分支上调用工作流触发器{0}：未找到活动的工作流
Java.PolicyPeriodAsOfDateSelector.NoPeriod = {0}上没有生效的期限。
Java.PolicyRenewal.RunLevelMustBeAtMostNoDaemons = “保单续保检查日期不能在高于{0}的级别运行; 当前级别为{1}”
Java.PolicyRetrieval.InvalidPolicyData = {0}无法检索，因为其数据无效：{1}
Java.Popup.ReturnToBase = 返回到{0}
Java.Print.CSV.Error = 至少必须选定一个项目。
Java.Print.Error.CannotFindWidgetAtLocationError = 无法在位置“{1}”处找到进行打印输出的控件“{0}”
Java.Print.Error.CannotGenerateCsv = 无法生成CSV文件。 {0}
Java.Print.Error.CannotGeneratePdf = 无法生成PDF文件。 {0}
Java.Print.Error.CannotOpenFOPConfigFileError = 无法打开FOP配置文件“{0}”
Java.Print.Error.Details = 无法打印{0}({1})：\n{2}
Java.Print.Error.FOPException = PDF生成出现异常{0}
Java.Print.Error.FOPException.File = 处理{0}时PDF生成失败：{1}
Java.Print.Error.NoWidgetDefinedError = 在位置“{0}”处未定义进行打印输出的控件
Java.Print.Error.NotListViewWidgetError = 控件“{0}”不是列表视图控件
Java.Print.Error.PDFInputTooLarge = 很抱歉，此对象过大，无法打印。请选择要打印的部分数据，然后重试
Java.Print.Error.WidgetNotSelfPrintable = 位置“{1}”处的控件“{0}”无法独立打印
Java.Print.Financials.Multicurrency.Format = {0} \= {1}
Java.Print.ListViewPrint.ColumnGroupFormat = {0}：{1}
Java.Print.ListViewTruncated = {0}个条目后截断，共{1}个条目
Java.Printout.AllPagesWithDetails = 所有页面，包括详细信息
Java.Printout.AllPagesWithoutDetails = 所有页面，不包括详细信息
Java.Printout.Custom = 自定义
Java.Printout.Message.SelectPrintOptions = 选择打印选项
Java.ProducerCode.CommissionPlan.Error.ExistingCommissionPlanWithCurrency = 使用货币{0}的佣金计划已存在，无法添加另一个使用同一货币的佣金计划。
Java.ProducerCode.Delete.Error.ExistingProducerOfRecord = 无法删除ProducerCode，因为ProducerCode是现有保单期间上记录的经理人。
Java.ProducerCode.Delete.Error.ExistingProducerOfService = 无法删除ProducerCode，因为ProducerCode是现有保单上服务的经理人。
Java.ProducerCode.GroupOrg.Error = 对于“{0}”，添加组“{1}”：组的机构“{2}”，而不是“{3}”。
Java.ProducerCode.ParentOrg.Error = 对于“{0}”，将父项设置为“{1}”：父项的机构为“{2}”，而非“{3}”。
Java.ProducerCode.ProducerCodeRoles.Error = "无法向经理人代码{0}添加用户，因为该代码没有经理人代码角色。
Java.ProducerCode.UserOrg.Error = 无法将与“{3}”机构关联的“{0}”经理人代码分配给用户“{1}”，因为该用户属于“{2}”机构，是一个外部用户。
Java.ProducerCodeHandler.BypassProducerCodeCheckOnAccountsWithNoActivePolicies = 对没有有效保单的账户越过ProducerCode检查
Java.ProducerCodePickerWidget.Error.Gosu_SuspendedProducerCode = 经理人代码“{0}”现已暂停。
Java.ProducerCodePickerWidget.Error.MultiProducerCodes = 找到多个代码为“{1}”的{0}。请使用{0}弹出窗口选择{0}。
Java.ProducerCodePickerWidget.Error.NoProducerCode = 没有代码为“{1}”的{0}。请使用{0}弹出窗口选择{0}。
Java.Product.Selection.Submission.Error = 无法创建状态为{1}的保障组合({0})的投保单
Java.ProductModel.ErrorsDetected = 在产品模型中检测到错误。请首先更正错误，然后重新尝试启动。
Java.ProductModel.IllegalModificationsProductModel = 在产品模型中检测到非法修改。
Java.ProductModel.MethodUnavailable = 对生产服务器不可用的方法。
Java.ProductModel.ModelLookupTableError = 在产品模型查找表中检测到错误。请首先更正错误，然后重新尝试启动。
Java.ProductModel.Name.Condition = 条款
Java.ProductModel.Name.Coverage = 承保范围
Java.ProductModel.Name.Exclusion = 免责项
Java.ProductModel.Name.WrongClauseType = 错误的子句类型
Java.ProductModel.ProductModelEntitiesLocked = 产品模型实体不能锁定。
Java.ProductModel.ResourcesNotMutable = 资源在此服务器上不可变。
Java.ProductModel.StructuralVerification.DetectedMissing = 检测到缺少产品模型文件或目录：
Java.ProductModel.StructuralVerification.DetectedMissing.CoveragePatterns = 检测到目录中缺少coveragepatterns目录：
Java.ProductModel.StructuralVerification.DetectedUnexpected = 在产品模型中检测到意外的文件或目录：
Java.ProductModel.StructuralVerification.EmptyProductModelDirectory = 找到了没有任何产品模型文件的产品模型目录：
Java.ProductModel.SystemTableError = 系统表验证失败。
Java.ProductModel.SystemTableNotAllowed = 不允许导入系统表{0}。
Java.Profiler.GeneralError = Profiler出现错误： {0}
Java.Profiler.PleaseSpecifyFile = 请指定文件
Java.Profiler.ProfilerDataPurgeBatchProcess = 定期清除资料数据
Java.Profiler.ProfilerDataPurgeBatchProcess.Purging = 正在清除{0}
Java.Profiler.ProfilerDataPurgeBatchProcess.Report = 已清除{0}的Profiler数据；已处理{1}行。
Java.Profiler.ProfilerSources.ThisSession = 本次会话
Java.ProximitySearch.Argument.Center = 中心
Java.ProximitySearch.Argument.Extractor = 提取器
Java.ProximitySearch.Argument.GeocodeStatus = 状态
Java.ProximitySearch.Argument.Radius = 搜寻半径
Java.ProximitySearch.Error.IncorrectBoundingBox = 请指定位于TopLeft下面和BottomRight左边的界限框。
Java.ProximitySearch.Error.IncorrectLatLongValue = 请确保纬度/经度值对正确。
Java.ProximitySearch.Error.NonGeocodedCenter = 请检查以确认先地理编码中心后调用此方法
Java.ProximitySearch.Error.NullArgument = 实际参数“{0}”不能为null
Java.ProximitySearch.Error.NullExtractorPath = 地址路径必须为非null
Java.ProximitySearch.Error.NullExtractorRootType = 根类型必须为非null
Java.ProximitySearch.Error.PolicyLocation.EmptyLOBs = 至少必须选择一个险种。
Java.ProximitySearch.Error.PolicyLocation.NoPeriodTypeSelected = 必须至少有一个IncludeInForceBoundPeriods或IncludeInProcessNewSubmissions为真。
Java.ProximitySearch.Error.PolicyLocation.NullCenter = 如果LimitToSameAccount为真，则中心的账户不能为空。
Java.ProximitySearch.Invalid = 邻近搜索无效
Java.Purging.History.AccountDescription = “{0}”用于账户“{1}”
Java.Purging.History.ContactDescription = “{0}”用于联系人“{1}”
Java.Purging.History.PolicyDescription = “{0}”用于保单“{1}”
Java.Purging.History.PolicyPeriodDescription = “{0}”用于保单期间“{1}”
Java.Purging.History.PolicyTermDescription = “{0}”用于保单期限“{1}”
Java.Query.CannotJoinTwoEffdatedEntities = 无法连接两个带生效日期的实体（{0}和{1}）
Java.Query.DuplicateQueryRowKey = 重复的行查询键值“{0}”
Java.Query.InvalidDBFunctionExpression = 无效的 DBFunction 表达式\: {0}
Java.Query.InvalidDBFunctionProperty = 无效的 DBFunction 属性{0}
Java.Query.InvalidDBFunctionUseInRowQuery = DBFunction“{0}”不能用于行查询
Java.Query.InvalidEmptyRowQuerySelectColumn = 为行查询选择列列表不能为空
Java.Query.InvalidNullOrderByColumn = 按列排序不能为空
Java.Query.InvalidSelectColumnPath = 无法找到/获取{0}和{1}之间的 Bean 路径
Java.QueryUtil.Multiple.Equals = 已声明多个等于过滤器
Java.QueryUtil.Multiple.LessThanGreaterThan = “小于值”大于“大于值”
Java.QuestionSet.Answer.False = 否
Java.QuestionSet.Answer.True = 是
Java.QuestionSet.BooleanQuestion.AnswerInvalid = 布尔型问题{1}的答案值{0}不正确。唯一正确的答案为“真”或“假”
Java.QuestionSet.CheckAnswersAgainstProductModel.Error.QuestionSetHasWrongType = “待检查问题集列表只能包含适用于此答案容器的问题集。错误的问题集为：{0}。”
Java.QuestionSet.GenericQuestion.AnswerInvalid = 问题{1}的答案值{0}格式不正确。答案类型应为{2}
Java.QuestionSetBuilder.Error.AnswerContainerTypeIsRequired = “答案容器类型是必填项，且没有为问题集设置。”
Java.Quoting.Async.Error.AsyncQuotingNotEnabled = 不允许异步报价。
Java.Quoting.Error.HVQEnabledWithNonArchiveEnabledError = 错误：如果HVQEnabled为true，ArchiveEnabled也必须为true。请禁用HVQ或者将ArchiveEnabled设为true。也可以通过禁用ArchivePolicyTerm批处理来禁用存档。
Java.Quoting.Error.HVQServerWithArchiveEnabledError = 错误：对于同一个服务器节点，ArchiveEnabled和HVQServer不能均为true。请禁用存档（如果这是HVQ节点），或者取消设置此节点/环境的HVQServer。
Java.Quoting.Error.HVQServerWithNonHVQEnabledError = 错误：如果HVQEnabled为false，则HVQServer不能为true。只有当HVQEnabled为true时，才将此服务器的HVQServer设置为true
Java.Quoting.Error.HVQServerWithReinsuranceError = 错误：如果HVQServer为true，则不能打开ReinsuranceModule。请禁用ReinsuranceModule（如果这是HVQ节点），或者取消设置此节点/环境的HVQServer。
Java.Quoting.QuoteDataManager.Error = QuoteDataManager遇到一个错误：{0}
Java.Quoting.QuoteDataManager.NonHVQEnabledError = QuoteDataManger已在非HVQ环境中调用
Java.Quoting.QuoteDataManager.NonHVQServerError = QuoteDataManager已在非HVQServer上调用
Java.REST.Configuration.SchemaComparison.ChangedOperationConsumes = {0}- {1} - 所使用的类型已从“{2}”更改为“{3}”。新使用类型应当是旧使用类型的超集。
Java.REST.Configuration.SchemaComparison.ChangedOperationProduces = {0}- {1} - 所生成的类型已从“{2}”更改为“{3}”。新生成类型应当包含所有旧生成类型而且顺序相同。
Java.REST.Configuration.SchemaComparison.Deprecated = {0}- {1} - 已不建议使用的标志从“true”更改为“{2}”。这可能是无意中做出的更改。
Java.REST.Configuration.SchemaComparison.EnumValuesChanged = {0}- {1} - 允许的枚举类型已从“{2}”更改为“{3}”。新枚举值应当是旧枚举值的超集。
Java.REST.Configuration.SchemaComparison.EnumValuesChangedForOutput = {0}- {1} - 允许的枚举值已从“{2}”更改为“{3}”。对于描述输出值的枚举，新枚举值应当等于旧枚举值或者是其子集，以确保向后兼容性。
Java.REST.Configuration.SchemaComparison.IllegalChangeAcrossCombines = API“{0}”具有针对组合API“{1}”进行的不向后兼容的更改
Java.REST.Configuration.SchemaComparison.IllegalChangeAcrossVersions = API“{0}”具有针对先前API版本“{1}”进行的不向后兼容的更改
Java.REST.Configuration.SchemaComparison.IllegalConstraintChange = {0}- {1} -“{2}”属性已从“{3}”更改为“{4}”。可以移除或放宽约束，但不应添加或收紧约束。
Java.REST.Configuration.SchemaComparison.IllegalOutputConstraintChange = {0}- {1} -“{2}”属性已从“{3}”更改为“{4}”。可以添加或收紧输出约束，但不应移除或放宽输出约束。
Java.REST.Configuration.SchemaComparison.IllegalPropertyChange = {0}- {1} -“{2}”属性已从“{3}”更改为“{4}”
Java.REST.Configuration.SchemaComparison.IncompatiblePropertySchemaReference = {0}- {1} - 引用的JSON架构包含不兼容的更改：{2}
Java.REST.Configuration.SchemaComparison.MissingOperation = {0}- {1} - 操作“{2}”已移除
Java.REST.Configuration.SchemaComparison.MissingParameter = {0}- {1} - 形式参数“{2}”已移除
Java.REST.Configuration.SchemaComparison.MissingPath = {0}- {1} - 路径“{2}”已移除
Java.REST.Configuration.SchemaComparison.NewRequiredParameter = {0}- {1} - 添加了一个新的必需参数“{2}”。请考虑将新参数设置为可选，因为所需的一个新参数可能会中断与现有客户端的向后兼容性。
Java.REST.Configuration.SchemaComparison.RequiredChanged = {0}- {1} - 形式参数已从可选更改为必需
Java.REST.Configuration.SchemaComparison.ResponseAdded = {0}- {1} - 已添加新的响应代码“{2}”。操作的2xx响应代码集应当相同。
Java.REST.Configuration.SchemaComparison.ResponseRemoved = {0}- {1} - 已移除响应代码“{2}”。操作的2xx响应代码集应当相同。
Java.REST.Configuration.SchemaComparison.SerializationEmptyArraysOptionChanged = {0}- {1} - x-gw-serialization属性“{2}”已从“{3}”更改为“{4}”。在序列化期间更改为包括或排除空数组可能会中断现有的客户端代码。
Java.REST.Configuration.SchemaComparison.SerializationNullOptionsChanged = {0}- {1} - x-gw-serialization属性“{2}”已从“{3}”更改为“true”。在序列化期间更改为包括null可能会中断现有的客户端代码。
Java.REST.Configuration.Validation.204ResponseWithNonVoidMethod = 操作“{0}”指定204“无内容”响应代码，但有一个处理程序方法返回{1}而非void。
Java.REST.Configuration.Validation.BadDefaultElementValue = 操作“{0}”指定的默认值元素“{1}”不是“{2}”类型的有效值
Java.REST.Configuration.Validation.BadDefaultValue = 操作“{0}”指定的默认值“{1}”不是“{2}”类型的有效值
Java.REST.Configuration.Validation.BadEnumValueType = {0}- 枚举值“{1}”不是“{2}”类型的有效值
Java.REST.Configuration.Validation.BadMethodParameterName = 方法“{0}”包含一个名称为“{1}”的形式参数，但该形式参数与为路径“{2}”定义的任何形式参数都不对应
Java.REST.Configuration.Validation.BadMethodParameterType = 方法“{0}”有一个“{1}”类型的形式参数，但该形式参数与“{2}”的架构定义不兼容
Java.REST.Configuration.Validation.BadParameterReference = {0}- 不存在名为“{1}”的根级别形式参数定义
Java.REST.Configuration.Validation.BadParameterReferenceSyntax = {0}- 形式参数$ref“{1}”的格式不是“#/parameters/<name>”
Java.REST.Configuration.Validation.BadResponseReference = {0}- 不存在名为“{1}”的根级别响应定义
Java.REST.Configuration.Validation.BadResponseReferenceSyntax = {0}- 响应$ref“{1}”的格式不是“#/responses/<name>”
Java.REST.Configuration.Validation.BadSchemaAlias = {0}指定了架构引用“{1}”，但根单证未定义任何名称为“{2}”的架构别名
Java.REST.Configuration.Validation.BadSchemaReferenceSyntax = {0}指定的架构引用“{1}”未采用<alias>#/definitions/<type>格式
Java.REST.Configuration.Validation.BadlyFormedPath = 路径“{0}”的模板化路径段“{1}”的格式不正确。路径中的模板变量必须用大括号括起来且必须跨越整个路径段。
Java.REST.Configuration.Validation.BodyParameterWithNoConsumes = 操作“{0}”指定了正文形式参数，但未指定所使用的任何MIME类型
Java.REST.Configuration.Validation.BodyParameterWithNoSchema = 运算“{0}”指定了body参数，但未指定架构$ref或类型
Java.REST.Configuration.Validation.BodyParameterWithSchemaRefAndType = 操作“{0}”指定的正文形式参数同时具有架构$ref和type。仅允许$ref和type中的一个。
Java.REST.Configuration.Validation.CannotDeserializeJsonToType = 类型为application/json的数据无法反序列化为{0}类型的对象
Java.REST.Configuration.Validation.CannotSerializeDataType = 类型为{0}的数据无法从{1}类型的结果对象序列化
Java.REST.Configuration.Validation.DefaultValueElementShouldBeAScalar = 操作“{0}”指定的默认值元素为数组或对象，但数组元素必须为标量值。
Java.REST.Configuration.Validation.DefaultValueShouldBeAScalar = 操作“{0}”指定的默认值为数组或对象，但必须为单个标量值。
Java.REST.Configuration.Validation.DefaultValueShouldBeAnArray = 操作“{0}”指定的默认值“{1}”不是元素数组
Java.REST.Configuration.Validation.DuplicateBasePaths = 已发布多个具有相同basePath“{0}”的架构。最终将只发布第一个架构，并忽略所有其它架构。
Java.REST.Configuration.Validation.DuplicateOperationIds = API“{0}”包含多个ID为“{1}”的操作
Java.REST.Configuration.Validation.DuplicateVariableInPath = 路径“{0}”有多个具有模板变量“{1}”的路径段
Java.REST.Configuration.Validation.EmptyEnumProperty = {0}- 枚举属性是空数组，但它必须包含至少一个元素
Java.REST.Configuration.Validation.EmptyPathElement = 路径“{0}”包含空路径元素；也就是说，它具有子字符串//
Java.REST.Configuration.Validation.EnumValuesMustBeUnique = {0}- 枚举声明多次包含了元素“{1}”
Java.REST.Configuration.Validation.FormDataParameterWithInvalidConsumes = 运算“{0}”指定了使用的MIME类型“{1}”，但那不是有效的MIME类型
Java.REST.Configuration.Validation.FormDataParameterWithUnexpectedConsumes = 运算“{0}”指定了formData参数“{1}”和{2}个使用的MIME类型，但只允许一个使用的MIME类型
Java.REST.Configuration.Validation.FormDataParameterWithUnexpectedRuntimeType = 参数“{0}”的运行时类型为“{1}”，但要求为“{2}”类型
Java.REST.Configuration.Validation.FormDataParameterWithUnmatchedConsumes = 运算“{0}”指定了formData参数“{1}”，但使用的MIME类型不是multipart/form-data
Java.REST.Configuration.Validation.InvalidApiHandler = 操作“{0}”指定的x-gw-apihandler“{1}”不是有效的类型名称
Java.REST.Configuration.Validation.InvalidItemsType = 操作“{0}”使用的形式参数“{1}”指定了一个无效的项目类型“{2}”
Java.REST.Configuration.Validation.InvalidParameterType = 操作“{0}”使用的形式参数“{1}”指定的类型“{2}”无效
Java.REST.Configuration.Validation.JsonBodyMustSpecifySchema = 使用application/json且反序列化为JsonObject或JsonWrapper对象的操作必须为正文形式参数指定架构
Java.REST.Configuration.Validation.JsonFormDataParameterMustSpecifySchema = 对于使用application/json且反序列化为JsonObject或JsonWrapper对象的运算，必须为formData参数指定x-gw-schema-ref
Java.REST.Configuration.Validation.MaxItemsMustBePositive = {0}- maxItems值“{1}”必须大于或等于0
Java.REST.Configuration.Validation.MaxItemsOnlyAllowedOnArray = {0}- maxItems只能用于数组形式参数
Java.REST.Configuration.Validation.MaxLengthMustBePositive = {0}- maxLength值“{1}”必须大于或等于0
Java.REST.Configuration.Validation.MaxLengthOnlyAllowedOnString = {0}- maxLength只能用于字符串形式参数
Java.REST.Configuration.Validation.MaximumOnlyAllowedOnNumericParameters = {0}- maximum只能用于数值形式参数
Java.REST.Configuration.Validation.MaximumValueHasWrongType = {0}- maximum值“{1}”不是类型“{2}”的有效值
Java.REST.Configuration.Validation.MinItemsMustBePositive = {0}- minItems值“{1}”必须大于或等于0
Java.REST.Configuration.Validation.MinItemsOnlyAllowedOnArray = {0}- minItems只能用于数组形式参数
Java.REST.Configuration.Validation.MinLengthMustBePositive = {0}- minLength值“{1}”必须大于或等于0
Java.REST.Configuration.Validation.MinLengthOnlyAllowedOnString = {0}- minLength只能用于字符串形式参数
Java.REST.Configuration.Validation.MinimumOnlyAllowedOnNumericParameters = {0}- minimum只能用于数值形式参数
Java.REST.Configuration.Validation.MinimumValueHasWrongType = {0}- minimum值“{1}”不是类型“{2}”的有效值
Java.REST.Configuration.Validation.MissingCombinationProperty = API“{0}”缺少属性“{1}”。必须在API中直接指定该属性，也可以从组合API继承该属性。
Java.REST.Configuration.Validation.MultiCollectionFormatNotAllowed = 操作“{0}”使用的形式参数“{1}”指定了collectionFormat“multi”。“multi”集合格式只能用于查询和formData形式参数。
Java.REST.Configuration.Validation.MultipleMatchingMethods = API处理程序类“{0}”包含多个名称为“{1}”的公用方法。operationIds必须与处理程序类上的一个而且只能与一个公用方法相匹配。
Java.REST.Configuration.Validation.MultipleMatchingParameters = 方法“{0}”包含一个名称为“{1}”的形式参数，但该形式参数与针对路径“{2}”定义的多个可能形式参数相对应。不明确的形式参数名称将需要在运行时从RequestContext对象进行检索。
Java.REST.Configuration.Validation.MultipleOfMustBePositive = {0}- multipleOf值“{1}”必须大于0
Java.REST.Configuration.Validation.MultipleOfOnlyAllowedOnNumericParameters = {0}- multipleOf只能用于数值形式参数
Java.REST.Configuration.Validation.MultipleOfValueHasWrongType = {0}- multipleOf值“{1}”不是“{2}”类型的有效值
Java.REST.Configuration.Validation.MultipleSuccessResponseCodes = 操作“{0}”指定了不止一个2xx响应代码。在这种情况下，处理程序方法必须返回一个显式Response对象。
Java.REST.Configuration.Validation.NoApiHandler = 操作“{0}”未直接指定x-gw-apihandler，根单证未指定任何x-gw-apihandlers值
Java.REST.Configuration.Validation.NoBodyDeserializer = 无法在操作“{0}”上为正文形式参数构造反序列化程序：{1}
Java.REST.Configuration.Validation.NoHandlerMethod = API处理程序类“{0}”不包含任何名称为“{1}”而且要绑定到操作“{2}”的公用方法
Java.REST.Configuration.Validation.NoHandlerMethodMultipleTypes = 任何可能的API处理程序类“{0}”都不包含用于绑定到操作“{2}”的名为“{1}”的公用方法
Java.REST.Configuration.Validation.NoJsonDataConverter = 操作“{0}”使用的形式参数“{1}”指定了格式化类型“{2}”，但该类型没有关联的数据转换器
Java.REST.Configuration.Validation.NoNoArgConstructorForApiHandler = 操作“{0}”指定的x-gw-apihandler“{1}”没有公用的no-arg构造函数
Java.REST.Configuration.Validation.NoProducedTypesForOperation = 操作“{0}”未指定所生成的任何MIME类型，但具有非void处理程序方法
Java.REST.Configuration.Validation.NoResponseSerializer = 无法为操作“{0}”的结果构造序列化程序：“{1}”
Java.REST.Configuration.Validation.NoWrapMethodOnWrapper = 包装器类型{0}没有静态wrap()方法，该方法会采用JsonObject并返回{0}
Java.REST.Configuration.Validation.NonJsonDataIsDeserializedToAString = 除application/json以外的MIME类型当前只能反序列化为String或byte[]，但处理程序方法上的正文形式参数的类型为“{0}”
Java.REST.Configuration.Validation.OperationLacksSuccessResponse = 操作“{0}”未指定任何2xx响应代码。如果处理程序方法不返回显式Response对象，每个操作都必须指定至少一个2xx响应代码。
Java.REST.Configuration.Validation.OperationShouldNotSpecifyConsumes = {0}- get操作不应指定consumes属性
Java.REST.Configuration.Validation.OverlappingRoutes = 路径“{0}”与现有路径“{1}”重叠。这两个路由将与同一传入路径相匹配。
Java.REST.Configuration.Validation.ParameterName = 操作“{1}”上的形式参数“{0}”
Java.REST.Configuration.Validation.PatternOnlyAllowedOnString = {0}- 模式只能用于字符串形式参数
Java.REST.Configuration.Validation.PatternSyntaxException = {0}- 指定的模式“{1}”不是有效的正则表达式：“{2}”
Java.REST.Configuration.Validation.PermissionsOnUnauthenticatedOperation = 操作“{0}”标记为未经身份验证，但还指定了x-gw-permissions
Java.REST.Configuration.Validation.PrimitiveParameterError = 方法“{0}”包含名为“{1}”、基元类型为“{2}”的参数，相应的Swagger参数并非必需参数且无默认值。 此方法参数应更改为boxed类型，否则Swagger参数应为必需参数或应提供它的默认值。
Java.REST.Configuration.Validation.ResponseName = 操作“{1}”上的响应“{0}”
Java.REST.Configuration.Validation.ResponseSchemaRequired = 序列化JsonObject或JsonWrapper对象需要指定响应架构
Java.REST.Configuration.Validation.ResponseSpecifiesBothRefAndType = 响应“{0}”(位于操作“{1}”上)有一个架构同时指定了$ref和type。必须指定且只能指定$ref和type中的一个。
Java.REST.Configuration.Validation.ResponseSpecifiesNoRefOrType = 响应“{0}”(位于操作“{1}”上)有一个架构未指定$ref或type。必须指定且只能指定$ref和type中的一个。
Java.REST.Configuration.Validation.SchemaCouldNotBeLoaded = {0}指定的架构引用“{1}”解析为架构“{2}”，但该架构无法加载
Java.REST.Configuration.Validation.SchemaDoesNotHaveSpecifiedType = {0}指定的架构引用“{1}”解析为架构“{2}”，但该架构不包含名称为“{3}”的定义
Java.REST.Configuration.Validation.SwaggerSchemaCouldNotBeLoaded = 所列出的Swagge架构“{0}”显示为已发布，但无法加载
Java.REST.Configuration.Validation.UniqueItemsOnlyAllowedOnArray = {0}-“uniqueItems”只能用于数组形式参数
Java.REST.Configuration.Validation.UnsupportedBodyType = 操作“{0}”具有不受支持的组合：架构定义“{1}”、所用介质类型“{2}”和处理程序形式参数类型“{3}”
Java.REST.Configuration.Validation.WrongMethodParameterType = 方法“{0}”包含一个名称为“{1}”、类型为“{2}”的形式参数，但不能从实际的运行时反序列化类型“{3}”分配
Java.REST.Filter.Format.Illegal = 过滤器条目是由三部分组成并用“\:”分隔的字符串，格式为propertyName\:operation\:value：value可能是“null”，表示空值；对于日期，value可以同时包含日期（或“now”）和[-]P偏置值。
Java.REST.Filter.Queryable.Operators = 没有可查询的属性，假定它们是CLOB，将限制操作为“cn”或“sw”
Java.REST.Metadata.Catagory.Format = 类型列表类别是包含<类型列表>的字符串。<code>类型列表可以是实体名称，也可以就是类型列表的名称。代码区分大小写。
Java.REST.Page.Size.Zero = 仅当includeTotalCount时，pageSize 0才有意义，因为这将不返回任何项目。
Java.REST.Runtime.Auth.FailedLoginException.DeveloperMessage = 提供的用户名/密码组合无效。
Java.REST.Runtime.Auth.FailedLoginException.UserMessage = 提供的用户名/密码组合无效。
Java.REST.Runtime.Auth.InactiveUserException.DeveloperMessage = 关联的系统用户已停用。
Java.REST.Runtime.Auth.InactiveUserException.UserMessage = 您的系统用户已停用。请联系您的系统管理员。
Java.REST.Runtime.Auth.InvalidAuthenticationSourceData.DeveloperMessage = 无法从请求中提取身份验证源信息：{0}
Java.REST.Runtime.Auth.InvalidAuthenticationSourceData.UserMessage = 请求未包含格式正确的身份验证信息。
Java.REST.Runtime.Auth.InvalidSessionException.DeveloperMessage = 会话 Cookie 中提供的会话未对应有效的服务器会话。
Java.REST.Runtime.Auth.InvalidSessionException.UserMessage = 用户会话无效。请退出并重新登录。
Java.REST.Runtime.Auth.LockedCredentialException.DeveloperMessage = 关联的系统用户因登录尝试失败次数过多已被锁定。
Java.REST.Runtime.Auth.LockedCredentialException.UserMessage = 您的账户因登录尝试失败次数过多已被锁定。请联系您的系统管理员。
Java.REST.Runtime.Auth.MustWaitToRetryException.DeveloperMessage = 关联的用户账户必须稍候片刻，然后再次尝试登录。
Java.REST.Runtime.Auth.MustWaitToRetryException.UserMessage = 上次登录尝试失败，您的账户已临时被锁定。请稍后再尝试登录。
Java.REST.Runtime.Auth.OtherAuthFailure.DeveloperMessage = 系统无法为该用户登录。
Java.REST.Runtime.Auth.OtherAuthFailure.UserMessage = 系统无法为您登录。
Java.REST.Runtime.CORS.BadOrigin = Origin标头“{0}”不是格式正确的值
Java.REST.Runtime.CORS.HeaderNotAllowed = 标头“{0}”不能用于CORS请求
Java.REST.Runtime.CORS.MethodNotAllowed = 方法“{0}”不能用于CORS请求
Java.REST.Runtime.CORS.OriginNotAllowed = 不允许来自来源“{0}”的CORS请求
Java.REST.Runtime.ErrantOperation.DeveloperMessage = 配置错误阻止将此操作映射到运行时操作处理程序。请参阅详细信息。
Java.REST.Runtime.ErrantOperation.UserMessage = 在此资源的服务器配置中遇到了一个错误
Java.REST.Runtime.Error.InternalServerError = 出现内部服务器错误
Java.REST.Runtime.Error.MultipleMatchingRoutes = 多个路由与路径“{0}”匹配
Java.REST.Runtime.Error.NoDefaultStatusCodeAndNonNullResponse = 处理程序方法针对没有默认成功状态代码的操作返回了Response对象以外的内容
Java.REST.Runtime.Error.NoDefaultStatusCodeAndNullResponse = 处理程序方法针对没有默认成功状态代码的操作返回了一个null响应
Java.REST.Runtime.Error.NotAcceptableDeveloperMessage = 请求中的Accept标头与该方法所生成的任何数据类型都不匹配
Java.REST.Runtime.Error.NotAcceptableErrorDetails = 该请求指定的是{0}的Accept标头。此API可以生成以下介质类型：{1}
Java.REST.Runtime.Error.NotAcceptableUserMessage = 服务器生成的数据类型与客户端期望的类型不匹配
Java.REST.Runtime.Error.NotAuthorizedDeveloperMessage = 访问此资源需要“{0}”系统权限
Java.REST.Runtime.Error.NotAuthorizedUserMessage = 您没有访问此资源的权限
Java.REST.Runtime.Error.NotFoundException = 在路径{0}处没有找到资源
Java.REST.Runtime.Error.OperationNotSupportedDetails = 支持下列方法：{0}
Java.REST.Runtime.Error.OperationNotSupportedMessage = 此资源不允许使用{0}方法
Java.REST.Runtime.Error.ServiceUnavailableDeveloperMessage = Runlevel必须为{0}，但它当前为{1}
Java.REST.Runtime.Error.ServiceUnavailableUserMessage = 此服务当前不可用
Java.REST.Runtime.Error.UnsupportedContentTypeMessage = 该请求指定的Content-Type为{0}，但此端点仅接受{1}类型的内容
Java.REST.Runtime.Serialization.ArrayElementTypeMismatch = 定义“{1}”上的属性“{0}”需要的值为{2}，但实际值组合了{3}元素
Java.REST.Runtime.Serialization.BadElementType = 定义“{1}”上作为{2}数组的属性“{0}”不能序列化{3}类型的元素
Java.REST.Runtime.Serialization.BadValueType = 定义“{1}”上{2}类型的属性“{0}”不能序列化{3}类型的值
Java.REST.Runtime.Serialization.CannotSerializeType = 没有可用于“{0}”类型的值的JSON序列化器：{1}
Java.REST.Runtime.Serialization.DeveloperExceptionMessage = 在序列化JSON输出时出错
Java.REST.Runtime.Serialization.NoPropertyFound = 架构定义“{0}”不包含任何名称为“{1}”的属性而且不允许有其它属性
Java.REST.Runtime.Serialization.NoSerializerForProperty = 定义“{1}”上的属性“{0}”的类型{2}没有关联的序列化器
Java.REST.Runtime.Serialization.PropertyItemNotNullable = 属性“{0}”不得包含null项目
Java.REST.Runtime.Serialization.PropertyNotNullable = 属性“{0}”不得包含显式null值
Java.REST.Runtime.Serialization.UserExceptionMessage = 出现内部服务器错误
Java.REST.Runtime.Serialization.ValueTypeMismatch = 定义“{1}”上的属性“{0}”需要的值为{2}，但实际值为{3}
Java.REST.Runtime.Validation.BadInputDeveloperMessage = 请求的形式参数或正文有问题。有关这些问题的确切详细信息，请参阅详细信息元素。
Java.REST.Runtime.Validation.BadInputUserMessage = 请求的形式参数或正文有问题
Java.REST.Runtime.Validation.BadStringListParameterValue = 列表元素“{0}”不是{1}格式的有效值
Java.REST.Runtime.Validation.BadStringParameterValue = 值“{0}”不是{1}格式的有效值
Java.REST.Runtime.Validation.BodyShouldBeAnObject = 请求正文应为JSON对象
Java.REST.Runtime.Validation.Constraints.Enum = 值“{0}”不是合法枚举值{1}之一
Java.REST.Runtime.Validation.Constraints.ExclusiveMax = 值“{0}”大于或等于允许的最大值“{1}”（不含）
Java.REST.Runtime.Validation.Constraints.ExclusiveMin = 值“{0}”小于或等于允许的最小值“{1}”（不含）
Java.REST.Runtime.Validation.Constraints.Max = 值“{0}”大于允许的最大值“{1}”
Java.REST.Runtime.Validation.Constraints.MaxItems = 值“{0}”包含{1}个项目，但最多只允许{2}个项目
Java.REST.Runtime.Validation.Constraints.MaxItemsNoRawValue = 数组包含{0}个项目，但最多只允许{1}个项目
Java.REST.Runtime.Validation.Constraints.MaxLength = 值“{0}”超出了允许的最大长度（{1}个字符）
Java.REST.Runtime.Validation.Constraints.Min = 值“{0}”小于允许的最小值“{1}”
Java.REST.Runtime.Validation.Constraints.MinItems = 值“{0}”包含{1}个项目，但至少需要{2}个项目
Java.REST.Runtime.Validation.Constraints.MinItemsNoRawValue = 数组包含{0}个项目，但至少需要{1}个项目
Java.REST.Runtime.Validation.Constraints.MinLength = 值“{0}”未达到允许的最小长度（{1}个字符）
Java.REST.Runtime.Validation.Constraints.MultipleOf = 值“{0}”不是“{1}”的整数倍
Java.REST.Runtime.Validation.Constraints.Pattern = 值“{0}”与必需的模式“{1}”不匹配
Java.REST.Runtime.Validation.Constraints.UniqueItems = 值“{0}”包含重复项目
Java.REST.Runtime.Validation.Constraints.UniqueItemsNoRawValue = 数组包含重复项目
Java.REST.Runtime.Validation.ExceptionDuringDeserialization = 对请求正文反序列化失败：{0}
Java.REST.Runtime.Validation.ExceptionDuringFormParameterDeserialization = 对formData参数进行反序列化失败：{0}
Java.REST.Runtime.Validation.FileExceedMaxSize = 文件超出了允许的最大大小（{0}字节），已被拒绝
Java.REST.Runtime.Validation.FormDataParameterParseError = 无法解析FormData参数“{0}”。{1}
Java.REST.Runtime.Validation.FormDataParameterRequiresValue = 必须为FormData参数“{0}”指定值
Java.REST.Runtime.Validation.Json.DuplicateProperty = 属性“{0}”在该对象上定义了多次
Java.REST.Runtime.Validation.Json.NullItemsNotAllowed = 属性“{0}”不得包含null项目
Java.REST.Runtime.Validation.Json.NullNotAllowed = 属性“{0}”不得包含显式null值
Java.REST.Runtime.Validation.JsonParseErrorInFormDataParameter = formData参数“{0}”不是有效的json：{1}
Java.REST.Runtime.Validation.MalformedAcceptHeader = Accept标头“{0}”无法解析
Java.REST.Runtime.Validation.MalformedContentTypeHeader = Content-Type标头“{0}”无法解析
Java.REST.Runtime.Validation.MalformedQualityFactory = Accept标头“{0}”包含的质量因子“{1}”不是有效的小数
Java.REST.Runtime.Validation.MissingContentTypeHeader = Content-Type标头对于具有非空正文的请求是必需的
Java.REST.Runtime.Validation.MissingRequiredBody = 请求正文是必需的
Java.REST.Runtime.Validation.MissingRequiredFormDataParameter = FormData参数“{0}”为必需
Java.REST.Runtime.Validation.MissingRequiredHeaderParameter = 标头“{0}”是必需的
Java.REST.Runtime.Validation.MissingRequiredQueryParameter = 查询形式参数“{0}”是必需的
Java.REST.Runtime.Validation.NoRequestBodyExpected = 此资源不允许使用请求正文
Java.REST.Runtime.Validation.ParseErrorInBody = 请求正文不是有效的JSON：{0}
Java.REST.Runtime.Validation.QueryParameterCanOnlyAppearOnce = 查询形式参数“{0}”在查询字符串中出现了多次，但只能接受单个值
Java.REST.Runtime.Validation.QueryParameterRequiresValue = 必须为查询形式参数“{0}”指定值
Java.REST.Runtime.Validation.QueryParameterValidationError = 为查询形式参数“{0}”提供的值无效：{1}
Java.REST.Runtime.Validation.RequestContentTypeIsNotMultipart = 请求内容类型为“{0}”，但要求为multipart/form-data类型
Java.REST.Runtime.Validation.Schema.BadArrayObjectValue = 属性“{1}”的值中的元素“{0}”不是对象
Java.REST.Runtime.Validation.Schema.BadArrayPropertyValue = 属性“{1}”的值中的元素“{0}”不是“{2}”格式的有效值：{3}
Java.REST.Runtime.Validation.Schema.BadPropertyValue = 属性“{1}”的值“{0}”不是“{2}”格式的有效值：{3}
Java.REST.Runtime.Validation.Schema.ExpectedObject = 属性“{0}”应为JSON对象
Java.REST.Runtime.Validation.Schema.ExpectedObjectArray = 属性“{0}”应为对象的JSON数组
Java.REST.Runtime.Validation.Schema.ExpectedRootObject = 输入应映射到单个JSON对象
Java.REST.Runtime.Validation.Schema.ExpectedScalar = 属性“{0}”应为JSON“{1}”
Java.REST.Runtime.Validation.Schema.ExpectedScalarArray = 属性“{0}”应为“{1}”值的JSON数组
Java.REST.Runtime.Validation.Schema.MissingRequiredProperty = “{0}”属性是必需的
Java.REST.Runtime.Validation.Schema.ReadOnlyProperty = 属性“{0}”定义为只读，无法在输入中指定
Java.REST.Runtime.Validation.Schema.UnknownProperty = 架构定义“{0}”未定义任何名称为“{1}”的属性
Java.REST.Runtime.Validation.Schema.WrongJsonType = 属性“{1}”的值“{0}”是JSON{2}，但该属性定义为JSON {3}
Java.REST.Swagger.Validation.AllowEmptyValueOnlyAllowedForQueryParameters = {0}- 仅允许对查询形式参数使用“allowEmptyValue”属性
Java.REST.Swagger.Validation.ApiHandlerFormat = 值不是有效的类型名称
Java.REST.Swagger.Validation.AuthorizationUrlAllowed = 除非“type”是“oauth2”而且flow是“implicit”或“accessCode”
Java.REST.Swagger.Validation.AuthorizationUrlRequired = 当“type”是“oauth2”而且flow是“implicit”或“accessCode”时
Java.REST.Swagger.Validation.BadCombine = x-gw-combine引用了一个无法加载的架构“{0}”
Java.REST.Swagger.Validation.BadCorsPolicy = {0} - 引用的CORS策略“{1}”不是“x-gw-cors-policies”下定义的策略的名称
Java.REST.Swagger.Validation.BadImport = {0}- 导入的架构“{1}”不是有效的JSON架构名称
Java.REST.Swagger.Validation.BadParameterSetReference = {0} - 不存在名为“{1}”的根级别参数集
Java.REST.Swagger.Validation.BadResponseCode = 代码“{0}”不是有效的响应代码。响应代码必须是“default”或有效的HTTP响应代码。
Java.REST.Swagger.Validation.BadSecurityScheme = {0}- 尚未定义名为“{1}”的安全架构
Java.REST.Swagger.Validation.BadSecurityScope = {0}- 架构“{1}”的安全要求引用了一个未在该架构上定义的范围“{2}”
Java.REST.Swagger.Validation.BasePathFormat = “basePath”属性必须以前导/开头
Java.REST.Swagger.Validation.BodyParameterCoexistWithFormDataParameter = {0} - 该运算中不能同时存在Body参数和formData参数
Java.REST.Swagger.Validation.BodyParameterMustBeNamedBody = {0}- 正文形式参数的名称必须为“body”
Java.REST.Swagger.Validation.CircularCombine = x-gw-combine引用的架构“{0}”导致循环引用。完整引用链为“{1}”
Java.REST.Swagger.Validation.CorsAllowMethodsBadValue = 方法“{0}”不是有效方法
Java.REST.Swagger.Validation.CorsAllowOriginsBadUri = URI“{0}”不是表单<scheme>\://<host>[\:<port>]的有效来源
Java.REST.Swagger.Validation.CorsAllowOriginsBadValue = 值“{0}”不是有效的URI、正则表达式或者常量值“*”或“any”
Java.REST.Swagger.Validation.CorsAllowOriginsCannotBeEmpty = {0} -“allowOrigins”属性为必需，且必须包含至少一个元素
Java.REST.Swagger.Validation.CorsAllowOriginsDefaultPortIncluded = \ 在URI“{0}”中应省略默认http或https端口
Java.REST.Swagger.Validation.CorsAllowOriginsMustBeOnlyElement = {0} -“allowOrigins”值“{1}”不能与任何其它值一起使用，必须是“allowOrigins”数组中的唯一元素
Java.REST.Swagger.Validation.CorsAllowOriginsWildcardAndCredentials = {0} -“allowOrigins”通配符值“*”无法与设为“true”的“allowCredentials”一起使用
Java.REST.Swagger.Validation.DefaultNotAllowedWhenRequired = {0}- 必需的形式参数不能具有默认值
Java.REST.Swagger.Validation.DuplicateParameters = {0}-“parameters”属性在“{2}”中包含名为“{1}”的重复形式参数
Java.REST.Swagger.Validation.DuplicateParametersAcrossParameterSets = {0} - 该运算包含的多个参数集都定义了一个名称为“{1}”且位于“{2}”中的参数
Java.REST.Swagger.Validation.DuplicateParametersInParameterSet = {0} - 该参数集包含名称为“{1}”且位于“{2}”中的重复参数
Java.REST.Swagger.Validation.DuplicateWarningCategory = {0}-“{1}”属性包含重复的警告类别：“{2}”
Java.REST.Swagger.Validation.EmailFormat = 值必须采用电子邮件地址格式
Java.REST.Swagger.Validation.HostFormat = “host”属性只能由主机名和端口组成，不应包括架构或路径
Java.REST.Swagger.Validation.InvalidFormattedType = {0}-“type”、“format”和“x-gw-type”的组合无效：{1}
Java.REST.Swagger.Validation.ItemsRequiredForArrays = {0}- 类型为“array”时，“items”属性为必需
Java.REST.Swagger.Validation.MimeTypeFormat = 值不是有效的MIME类型
Java.REST.Swagger.Validation.PathMustStartWithSlash = 路径必须以/开头
Java.REST.Swagger.Validation.PathParametersMustBeRequired = {0}- 路径形式参数必须将“required”指定为“true”
Java.REST.Swagger.Validation.PropertyNotAllowedOnArrayType = {0}- 当类型为“array”时，不允许使用“{1}”属性
Java.REST.Swagger.Validation.PropertyNotAllowedOnBodyParameters = {0}- 不允许对正文形式参数使用“{1}”属性
Java.REST.Swagger.Validation.PropertyNotAllowedOnFileTypeParameters = {0} - 不允许对“file”类型的formData参数使用“{1}”属性
Java.REST.Swagger.Validation.PropertyNotAllowedOnNonArrayType = {0}- 除非类型为“array”，否则不允许使用“{1}”属性
Java.REST.Swagger.Validation.Publishing.AmbiguousAPI = published-apis.yaml包含指定服务器和环境中匹配的“{0}”的多个API定义
Java.REST.Swagger.Validation.Publishing.AmbiguousDefaultTemplate = published-apis.yaml包含指定服务器和环境中匹配的多个defaultTemplate元素
Java.REST.Swagger.Validation.Publishing.BadApiName = published-apis.yaml列出的api“{0}”无法加载
Java.REST.Swagger.Validation.Publishing.BadDefaultTemplate = published-apis.yaml列出的默认模板“{0}”无法加载
Java.REST.Swagger.Validation.Publishing.BadTemplate = API“{0}”随模板“{1}”一起发布，但该模板无法加载
Java.REST.Swagger.Validation.Publishing.ParseException = published-apis.yaml文件无法解析
Java.REST.Swagger.Validation.Publishing.PluginSourceParseException = IIntegrationConfigSourcePlugin返回的其他已发布api源无法解析
Java.REST.Swagger.Validation.RedundantAllWarningCategory = {0}-“{1}”属性不得包含除“all”之外的任何警告类别
Java.REST.Swagger.Validation.RefNotAllowedWithOtherProperties = {0}- 指定了“$ref”属性时，不得设置“{1}”属性
Java.REST.Swagger.Validation.RefOrTypeIsRequired = {0}-“$ref”和“type”中有一个是必需项
Java.REST.Swagger.Validation.RequiredProperty = {0}-“{1}”属性为必需
Java.REST.Swagger.Validation.RequiredWhenNoRef = {0}- 未设置“$ref”时，“{1}”属性为必需
Java.REST.Swagger.Validation.ResponsesCannotBeEmpty = {0}- 操作必须至少有一个响应
Java.REST.Swagger.Validation.SchemaOnlyAllowedForBodyParameters = {0}- “schema”属性只能用于正文形式参数
Java.REST.Swagger.Validation.SchemaRequiredForBodyParameters = {0}-“schema”属性对于正文形式参数为必需
Java.REST.Swagger.Validation.ScopesNotAllowed = {0}- 架构“{1}”的安全要求指定了范围。只有当架构的类型为“oauth2”时，才允许使用范围。
Java.REST.Swagger.Validation.SecurityPropertyAllowed = 除非“type”为“{1}”
Java.REST.Swagger.Validation.SecurityPropertyRequired = 当“type”为“{1}”时
Java.REST.Swagger.Validation.SwaggerProperty = “swagger”属性必须设置为“{0}”
Java.REST.Swagger.Validation.SystemPermissionFormat = 值不是有效的SystemPermissionType
Java.REST.Swagger.Validation.TagNotUnique = {0}- 指定了多个名称为“{1}”的标记
Java.REST.Swagger.Validation.TokenUrlAllowed = 除非“type”是“oauth2”而且flow是“password”、“application”或“accessCode”
Java.REST.Swagger.Validation.TokenUrlRequired = 当“type”是“oauth2”而且flow是“password”、“application”或“accessCode”时
Java.REST.Swagger.Validation.TopLevelParametersCannotBeRefs = 顶级形式参数定义不能指定$ref属性
Java.REST.Swagger.Validation.TopLevelResponsesCannotBeRefs = 顶级响应定义不能指定$ref属性
Java.REST.Swagger.Validation.TypeList.Export = {0}- 仅当“x-gw-type”已指定且为类型列表时，“x-gw-export-enumeration”属性才有效
Java.REST.Swagger.Validation.TypeList.ExportAndEnum = {0}- 显式“enum”属性将覆盖'x-gw-export-enumeration'\='true'
Java.REST.Swagger.Validation.TypeList.MustBeString = {0}-“type”属性无效。“{1}”是类型列表，因此类型应为“字符串”。
Java.REST.Swagger.Validation.TypeRequiredForNonBodyParameters = {0} -“type”属性对于query、header、formData和path参数为必需
Java.REST.Swagger.Validation.UrlFormat = 值不是有效的URL
Java.REST.Swagger.Validation.XGwSchemaRefOnlyAllowedForFormDataParameters = {0} - “x-gw-schema-ref”属性只能用于formData参数
Java.REST.Swagger.Validation.XGwSchemaRefOnlyAllowedForStringType = {0} -“x-gw-schema-ref”属性只能用于“string”类型的参数
Java.Rating.Async.Error.AsyncRatingNotEnabled = 不允许异步保费计算。
Java.Rating.Error.CostDataInitialization = 在MultiCurrencyMode中，必须调用包含货币作为实际参数的构造函数。
Java.Rating.Error.ModuleNotEnabled = 保费计算模块未启用时操作无效。
Java.Regions.Delete.Error = 区域{0}正在使用中，无法将其删除。
Java.Reinsurance.Error.CedingPlugin.CalculateException = 尝试为{0}计算分保时遇到异常。异常为{1}\n可以重试此计算。
Java.Reinsurance.Error.CedingPlugin.CalculateFailed = 尝试为{0}计算分保时遇到错误。
Java.Reinsurance.Error.CedingPlugin.EnqueueFailed = 尝试添加{0}到分保计算的队列时遇到异常。异常为：{1}
Java.Reinsurance.Error.ModuleNotEnabled = 再保险模块未启用时操作无效。
Java.Reinsurance.Validation.AgreementDateRange = 协议{0}未覆盖当前风险的日期范围。
Java.Reinsurance.Validation.CurrencyDoesNotMatch = 协议的货币{0}必须与被保险价值总额的货币{1}匹配。
Java.Reinsurance.Validation.FacultativeInUse = 无法附加到临分{0}，因其已被保单{1}使用。
Java.ReloadWorkflowEngine.Failed = 重新加载工作流引擎遇到错误： 有关详细信息，请参阅日志。
Java.ReloadWorkflowEngine.Succeeded = 重新加载工作流引擎成功。
Java.RenderStep.ScreenContextLost = 出现系统错误。请重新登录。
Java.ReportRepository.InvalidReportPath = 报告“{0}”的路径无效。
Java.RescindCancellationMenuActionWidget.NoReason = 原因未指定
Java.Rest.Request.Error = 形式参数“{0}”无效：{1}
Java.Rest.Request.UnknownFormDataParameter = 未知的formData参数“{0}”
Java.Rest.Request.UnknownFormDataParameters = 存在未知的formData参数名称
Java.Rest.Request.UnknownQueryParameter = 未知的查询参数“{0}”
Java.Rest.Request.UnknownQueryParameters = 存在未知的查询参数名称
Java.RetiredBeanError.Text = 其他用户已删除您正在处理的对象
Java.RiskClassPickerWidget.InvalidCode = {0}必须是有效的风险类。
Java.Role.Error.InternalOnlyError = 无法将外部用户{0}添加到内部角色
Java.Role.Error.ProducerCodeRoleInternalOnlyError = 无法将外部经理人代码{0}添加到内部角色。
Java.Role.Filters.All = 所有角色
Java.RoleName.NamedInsured = 附加被保险人
Java.Rules.Archive.CanOnlyBeInvokedFromRules = 只能通过规则调用
Java.Rules.Archive.CannotArchive = 无法存档：
Java.RulesAdminService.AppendToCurrentVersion.ParentRuleName = 已追加{0}
Java.Runlevel.DAEMONS = 后台程序
Java.Runlevel.GUIDEWIRE_STARTUP = 启动
Java.Runlevel.MULTIUSER = 多用户
Java.Runlevel.NODAEMONS = 维护
Java.Runlevel.NONE = 无
Java.Runlevel.SHUTDOWN = 启动
Java.SOAPException.Detail = 详细信息 -- {0}\: {1}
Java.SOAPException.Generic = 引发了异常：{0}
Java.SampleData.XmlImport.Errors = 文件中发现错误：{0}
Java.SampleData.XmlImport.NoDataFound = 未在指定文件中找到任何示例数据：{0}
Java.Scheduler.Changed = {0}的计划已更改。
Java.Scheduler.Error.ChangeScheduleFailed = 无法将{0}的计划更改为{1}。
Java.Scheduler.Error.ResumeSchedulerFailed = 无法恢复计划程序。
Java.Scheduler.Error.StartScheduleFailed = 无法为{0}启动计划。
Java.Scheduler.Error.StopScheduleFailed = 无法为{0}停止计划。
Java.Scheduler.Error.SuspendSchedulerFailed = 无法暂停计划程序。
Java.Scheduler.Error.SyncScheduleFailed = 无法与{0}的配置计划同步。
Java.Scheduler.Name = 批处理计划程序
Java.Scheduler.NoMapForBatchType = 没有流程类型映射到“{0}”
Java.Scheduler.NoType = 未指定流程类型。
Java.Scheduler.NotFound = 未找到流程类型“{0}”的计划或找到的计划不可修改
Java.Scheduler.NotStarted = 计划程序尚未启动
Java.Scheduler.Resumed = 计划程序已恢复。
Java.Scheduler.Started = {0}的计划已启动。
Java.Scheduler.Stopped = {0}的计划已停止。
Java.Scheduler.Suspended = 计划程序已暂停。
Java.Search.AdapterDataConversionError = 外部搜索插件返回的数据无效。请尝试其它搜索或内部搜索。
Java.Search.AdapterFailed = 外部搜索插件失败： {0}。请尝试其它搜索或内部搜索。
Java.Search.AdapterUnavailable = 外部搜索插件当前无效。请执行内部搜索。
Java.Search.Any = 任意
Java.Search.Attribute.Name = 属性名称的长度不能超过 100 个字符
Java.Search.Date.FieldToSearch = 要搜索的日期
Java.Search.Date.From = 从
Java.Search.Date.RangeChoice = 范围选择
Java.Search.Date.SearchType = 日期搜索类型
Java.Search.Date.Since = 自
Java.Search.Date.To = 至
Java.Search.Error.RequiredNotPresent = 信息不足 - 请指定更多详细信息缩小搜索范围
Java.Search.From = 自
Java.Search.In = 范围
Java.Search.NoResults = 搜索返回零个结果。
Java.Search.ResultsCapped = 搜索结果数已超过最大允许数。要减少结果数或对结果进行排序，请指定更多的搜索条件。
Java.Search.To = 至
Java.Search.TooManyResults = 找到的结果超过{0}个。请提供更具体的搜索条件。
Java.SearchPanel.CappedResultsKnownLimit = 共{1}个匹配结果，仅显示前{0}个搜索结果。请细化搜索条件。
Java.SearchPanel.CappedResultsUnknownLimit = 仅显示前{0}个搜索结果，但有更多的匹配结果。请细化搜索条件。
Java.Security.ActionPermission.InvalidSystemPermission = 权限“{0}”在“系统权限”代码列表中不存在
Java.Security.CannotFindPermissionKey = 无法找到“{1}”的权限密钥“{0}”。
Java.Security.CannotFindSystemPermission = 无法找到系统权限“{0}”。
Java.Security.DisplayKeyNotDefined = 未定义显示键值“{0}”。
Java.Security.NoSystemPermission = 元素“{0}”未定义系统权限。
Java.Security.UnknownChildElement = 未知子元素“{0}”。
Java.SeeDetail = 请参见详细信息
Java.Select.All = 所有
Java.Select.Any = 任意
Java.SelectDuplicateContact.WrongForm = 当前表单不是相关方编辑表单，因此无法选定联系人。
Java.ServerMode.Label.Dev = [开发模式 - {0}]
Java.ServerMode.Label.Test = [测试模式 - {0}]
Java.ServerMode.Warning.Dev = 服务器处于“开发”模式。此模式绝不能用于生产服务器。
Java.ServerMode.Warning.Test = 服务器处于“测试”模式。此模式绝不能用于生产服务器。
Java.Solr.Warning.FetchLimitExceeded = 已超出获取限额。在索引中{0}行内未找到任何可见结果。
Java.Status.Fail = 失败
Java.Status.Running = 正在运行
Java.Status.Success = 运行至完成
Java.StyleClass.PanelHeader = 面板标题
Java.Submission.Button.FullApp = 完全应用
Java.Team.InQueue = 排队中
Java.Team.Misassigned = 错误分配
Java.Team.MyGroups = 我的组
Java.Team.NeverCalculated = （从未计算）
Java.Team.Other = 其它
Java.Team.Supervisor = {0}（主管）
Java.Team.Supervisor.Print = {0}（主管） [{1}]
Java.TextValueWidget.AutoComplete.Invalid.Arguments = 自动完成的其它实际参数无效：{0}
Java.TextValueWidget.NoneSelected = <未选定>
Java.TileActionsWidget.DefaultLabel.MutipleItems = 操作
Java.TooLooseContactSearchCriteriaException.Company = 指定以下其中一项： 公司名称、税务代码、邮政编码或省和市
Java.TooLooseContactSearchCriteriaException.Contact = 指定以下其中一项：名称、邮政编码或省和市
Java.TooLooseContactSearchCriteriaException.General.Error = 请提供更具体的搜索条件
Java.TooLooseContactSearchCriteriaException.Person = 指定以下其中一项： 名字、姓氏、公司名称、税务代码、邮政编码或省和市
Java.ToolBar.Activities.AllOpen = 所有未决项
Java.ToolBar.Activities.AllOpenExternal = 所有未决项（外部）
Java.ToolBar.Activities.ClosedLastNDays = 过去{0}天结案
Java.ToolBar.Activities.CurrentOpen = 我今天的活动
Java.ToolBar.Activities.CurrentOpenTeam = 今天的活动
Java.ToolBar.Activities.CurrentVacationOpen = 今天的活动
Java.ToolBar.Activities.Due7Days = 7天内到期
Java.ToolBar.Activities.DueNDays = {0}天内到期
Java.ToolBar.Activities.Escalated = 仅已升级
Java.ToolBar.Activities.InQueue = {0} ({1})
Java.ToolBar.Activities.MyAssignmentReviewActivities = 我的待分配项
Java.ToolBar.Activities.MyGroupAssignmentReviewActivities = 我的组的待分配项
Java.ToolBar.Activities.Overdue = 仅过期
Java.ToolBar.Activities.SkippedLastNDays = 过去{0}天内跳过
Java.ToolBar.Claim.All = 所有
Java.ToolBar.Filter.Separator = -----
Java.Transaction.NoActiveUser = 必须有活动用户才能执行交易
Java.Transaction.UserNotFound = 未找到用户名为{0}的用户
Java.TraversalExcludedLinks.Validation.Failure = 遍历排除链接的校验错误为：
Java.TraversalExcludedLinks.Validation.InvalidOwnerOrOwnedType = 实体{1}中链接“{0}”上的“ExcludeFromNonRevisionedOwner”标记仅允许排除从非修订存档所有者到已修订子项的链接
Java.TreeView.Close.AltText = 关闭
Java.TreeView.Open.AltText = 未完成
Java.TypeKey.Deactivated = （已取消激活）
Java.UI.ProductModelValidation.AvailablePolicyTerm = {0}引用不再存在的类型键“{1}”。请移除此{2}。
Java.UWIssue.PolicyRenewalAPI.PolicyNumberCollision.LongDesc = 保单号为{0}的期限已经存在 - 生成期限的保单号设为{1}。
Java.UWIssue.PolicyRenewalAPI.PolicyNumberCollision.ShortDesc = 导入的保单号冲突
Java.UnsavedWork = 未保存的工作
Java.UnsavedWork.ConfirmDiscard = 是否确定要放弃“{0}”的未保存工作?
Java.UnsavedWork.Discard = 放弃
Java.UnsavedWork.NotFound = 无法导航到未保存的工作
Java.UnsavedWork.UnloadApp = 有尚未保存的工作，如果离开将会丢失。
Java.UnsavedWork.WorksheetNotInScope = 工作表“{0}”不在范围内。
Java.UnsupportedOOSChangeException.Message = 无法使保单更改在{0}生效，因为之后的日期（{1}）存在期间。
Java.UnsupportedOOSChangeException.NonSOR.Message = 无法使保单更改在{0}生效，因为PolicyCenter不是该日期的记录系统。
Java.Upgrader.ExecutingPhase = 正在执行升级阶段：{0}
Java.Uplink.UpToParent = 向上返回到{0}
Java.UserDetail.Delete.Error = 用户{0}拥有业务对象，因此无法将其删除。
Java.UserDetail.Delete.IsSupervisorError = 用户是以下组的组长，因此无法将其删除：{0}。
Java.UserGroupStats.Supervisor = （主管人员）
Java.UserGroupTree.UnassignedUsers = 未分配用户
Java.UserRoles.ValidationError.DuplicateRoles = {0}被多次分配给{2}的{1}。
Java.UserRoles.ValidationError.Exclusive = {0}不能将多个用户分配给{1}。
Java.UserValueWidget.Error.MultiUsers = 找到多个与“{0}”匹配的用户。请使用用户弹出窗口选择用户。
Java.UserValueWidget.Error.NoUser = 未找到名称为“{0}”的用户。请使用用户弹出窗口选择用户。
Java.UserValueWidget.Error.TooManyNameParts = 请仅输入名字和姓氏，或使用用户弹出窗口选择用户。
Java.UserWidget.SearchForUser = 搜索用户...
Java.UserWidget.SelectUser = 选择用户...
Java.Validation.ContactField.InvalidFormat = {0} '{1}'的格式不正确： {2}
Java.Validation.ConversionFailure = 字段“{0}”出现未知转换错误。
Java.Validation.Currency.MismatchedCurrencies = 输入货币与要求的货币不匹配。
Java.Validation.Date.DateOnly = 日期中不能包含时间。
Java.Validation.Date.ForbidFuture = 日期必须为过去时间。
Java.Validation.Date.ForbidPast = 日期必须为将来时间。
Java.Validation.Date.ForbidPastForField = “{0}”不能为过去时间。
Java.Validation.Date.ForbidStartAfterEnd = 开始日期必须早于结束日期。
Java.Validation.Date.FourDigitYear = 字段必须包含一个介于 1000 和 9999 之间的四位数年份。
Java.Validation.Date.FutureDate = {0}必须为过去时间。
Java.Validation.Date.InvalidDate = 字段必须为采用格式“{1}”的有效日期。
Java.Validation.Date.InvalidDateForField = “{0}”必须为采用格式“{1}”的有效日期。
Java.Validation.Date.InvalidDateTime = 字段必须为采用格式“{1}”的有效日期/时间。
Java.Validation.Date.InvalidDateTimeUnknownFormat = {0}必须为采用其中一种配置格式的有效日期或日期/时间。
Java.Validation.Date.InvalidTime = 字段必须为采用格式“{1}”的有效时间。
Java.Validation.Date.MaximumDate = 字段不得晚于“{1}”
Java.Validation.Date.MinimumDate = 字段不得早于“{1}”
Java.Validation.EditableListView.InvalidRows = {0}\: {1}
Java.Validation.EditableListView.MissingRequired = 需要{0}
Java.Validation.EditableListView.NoRows = {0}至少必须有一行数据
Java.Validation.EditableListView.NotUnique = {0}不能包含重复值
Java.Validation.Error = 错误
Java.Validation.Error.RolledBackBean = 在由规则自动创建的类型为{0}的对象中发现校验错误： {1}
Java.Validation.Errors = 存在规则校验错误。
Java.Validation.Errors.NoWorkspace = 存在规则校验错误： {0}
Java.Validation.Field.DateOnlyException.Reason = 仅日期字段中包含时间
Java.Validation.Field.FieldFormatException = 字段“{1}”的值“{0}”的格式不正确
Java.Validation.Field.FieldFutureDateException.Reason = 为将来时间
Java.Validation.Field.FieldLengthException.Reason = 超过最大长度{0}个字符({1})
Java.Validation.Field.FieldNullException.Reason = 不可为null的字段包含null值
Java.Validation.Field.FieldPrecisionException.Reason = 超过精度{0}
Java.Validation.Field.FieldScaleException.Reason = 超过缩放比例{0}
Java.Validation.Field.MismatchedCurrenciesException.Reason = 金额货币{0}与预期货币{1}不匹配。
Java.Validation.Field.NegativeValueException.Reason = 为不接受负值的字段指定了负值
Java.Validation.Field.NonNegativeValueException.Reason = 为不接受正值或 0 的字段指定了正值或 0
Java.Validation.Field.NonPositiveMoneyException.Reason = 为不接受负值或0的字段指定了负值或0
Java.Validation.Field.PositiveValueException.Reason = 为不接受正值的字段指定了正值
Java.Validation.Field.UnknownTypeCodeException.Reason = 类型代码“{0}”在列表“{1}”中不存在
Java.Validation.FieldTooLong = {0}过长(最大长度{1})
Java.Validation.GeneralErrorGroup = 通用（不特定于页面）
Java.Validation.InvalidEntityKey = 字段“{1}”中的值“{0}”不是有效实体键
Java.Validation.InvalidFieldData = {0}无效： {1}
Java.Validation.IteratorWidget.InvalidEntryCount = 至少必须输入{0}条{1}
Java.Validation.IteratorWidget.UniqueConstraint = 列“{0}”必须包含唯一值。
Java.Validation.Messages.CURRENT_PAGE.error.Label = 当前页上的错误：
Java.Validation.Messages.CURRENT_PAGE.error.SubLabel = 单击某个错误可将焦点移至相关字段（如果可用）。
Java.Validation.Messages.CURRENT_PAGE.info.Label = 当前页的信息：
Java.Validation.Messages.CURRENT_PAGE.request_validation_error.Label = 当前页上的校验错误：
Java.Validation.Messages.CURRENT_PAGE.request_validation_error.SubLabel = 单击某个错误可重点关注相关字段（如果可用）。
Java.Validation.Messages.CURRENT_PAGE.warning.Label = 当前页上的警告：
Java.Validation.Messages.CURRENT_PAGE.warning.SubLabel = 单击某个警告可重点关注相关字段（如果可用）。
Java.Validation.Messages.DESTINATION.error.Label = 另一页上的错误：{0}
Java.Validation.Messages.DESTINATION.error.SubLabel = 如有可能，单击此处直接导航到地点。
Java.Validation.Messages.DESTINATION.info.Label = 有关另一页的信息：{0}
Java.Validation.Messages.DESTINATION.info.SubLabel = 如有可能，单击此处直接导航到地点。
Java.Validation.Messages.DESTINATION.request_validation_error.Label = 另一页上的校验错误：{0}
Java.Validation.Messages.DESTINATION.request_validation_error.SubLabel = 如有可能，单击此处直接导航到地点。
Java.Validation.Messages.DESTINATION.warning.Label = 另一页上的警告：{0}
Java.Validation.Messages.DESTINATION.warning.SubLabel = 如有可能，单击此处直接导航到地点。
Java.Validation.Messages.OnCurrentPage = 在当前页面中：
Java.Validation.Messages.OnSomePage = 在“{0}”中：
Java.Validation.Messages.UNKNOWN.SimpleGroupHeaderLabelPageName = 另一个
Java.Validation.Messages.UNKNOWN.error.Label = 错误：
Java.Validation.Messages.UNKNOWN.info.Label = 信息：
Java.Validation.Messages.UNKNOWN.request_validation_error.Label = 校验错误：
Java.Validation.Messages.UNKNOWN.warning.Label = 警告：
Java.Validation.Messages.UnknownLocation = 其它：
Java.Validation.MissingRequired = 缺少必填字段“{0}”
Java.Validation.MissingRequiredNameless = 请填写所有必填字段。
Java.Validation.Money.NoNegatives = {0}必须大于{1}
Java.Validation.NonNullable = {0}不能包含null值
Java.Validation.Number.Ceiling = {0}不能大于{1}
Java.Validation.Number.Ceiling.Exclusive = {0} 不能大于或等于{1}
Java.Validation.Number.ExceedsAllowedPrecisionMinusScale = {0}的小数点左侧位数不能超过{1}位。
Java.Validation.Number.ExceedsCurrencyScale = 使用货币{1}的{0}的小数点右侧位数不能超过{2}位。
Java.Validation.Number.ExceedsPrecision = {0}的位数不能超过{1}位。
Java.Validation.Number.ExceedsScale = {0}的小数点右侧位数不能超过{1}位。
Java.Validation.Number.Floor = {0}不能小于{1}。
Java.Validation.Number.Floor.Exclusive = {0}不能小于或等于{1}。
Java.Validation.Number.MaximumNumber = {0}不得大于“{1}”
Java.Validation.Number.MinimumNumber = {0}不得小于“{1}”
Java.Validation.Number.NoNegatives = {0}不能为负数。
Java.Validation.Number.NoNonNegatives = {0}必须为小于 0 的数。
Java.Validation.Number.NoNonPositives = {0}必须为大于 0 的数。
Java.Validation.Number.NoPositives = {0}不能为正数。
Java.Validation.Number.NotADecimal = {0}必须为数值。
Java.Validation.Number.NotALongInteger = {0}必须为不超过 19 位的整数。
Java.Validation.Number.NotAnInteger = {0}必须为不超过10位的整数。
Java.Validation.Number.Range.Closed = {0}必须介于{1}和{2}之间
Java.Validation.Number.Range.Closed.Open = {0}必须介于{1}和{2}(不包括)之间
Java.Validation.Number.Range.Open = {0}必须介于{1}(不包括)和{2}（不包括）之间
Java.Validation.Number.Range.Open.Closed = {0}必须介于{1}(不包括)和{2}之间
Java.Validation.ProductModel.Base.ErrorsAndWarningsHeader = 在{2}“{3}”中有{0}个错误和{1}个警告
Java.Validation.ProductModel.Base.ErrorsHeader = {1} “{2}”中有{0}个错误
Java.Validation.ProductModel.Base.WarningsHeader = {1} “{2}”中有{0}个警告
Java.Validation.ProductModel.Lookup.ErrorsAndWarningsHeader = {2}中有{0}个错误和{1}个警告
Java.Validation.ProductModel.Lookup.ErrorsHeader = {1}中有{0}个错误
Java.Validation.ProductModel.Lookup.WarningsHeader = {1}中有{0}个警告
Java.Validation.ProductModel.Main.ErrorsAndWarningsHeader = 在{2}中检测到{0}个错误和{1}个警告：
Java.Validation.ProductModel.Main.ErrorsHeader = 在{1}中检测到{0}个错误：
Java.Validation.ProductModel.Main.WarningsHeader = 在{1}中检测到{0}个警告：
Java.Validation.ProductModel.OfferingSelection.WithDisplayName.ErrorsAndWarningsHeader = “{2}” （{3}）选择中有{0}个错误和{1}个警告
Java.Validation.ProductModel.OfferingSelection.WithDisplayName.ErrorsHeader = “{1}”({2})选择中有{0}个错误
Java.Validation.ProductModel.OfferingSelection.WithDisplayName.WarningsHeader = “{1}” （{2}）选择中有{0}个警告
Java.Validation.ProductModel.OfferingSelection.WithoutDisplayName.ErrorsAndWarningsHeader = 在“{2}”选择部分有{0}个错误和{1}个警告
Java.Validation.ProductModel.OfferingSelection.WithoutDisplayName.ErrorsHeader = “{1}”选择中有{0}个错误
Java.Validation.ProductModel.OfferingSelection.WithoutDisplayName.WarningsHeader = “{1}”选择中有{0}个警告
Java.Validation.UnknownTypecode = {0}必须为列表“{1}”中的类型代码。
Java.Validation.Unspecified = {0}校验失败。
Java.ValidationError.DataType.ClassName.NullAllowed = 允许的数据类型应为空
Java.ValidationError.FormPattern.CoveragePartTypeNotAllowed = 对于保单险类“{1}”，不允许承保范围部分类型为“{0}”
Java.ValidationError.FormPattern.DeleteInProductionMode = 服务器在生产模式下运行时，无法删除表格模式。保单可能已经包含使用该表格模式的表格。
Java.ValidationError.ProductModel.Availability.BadDenormValue = 可用性查找{0}对{1}具有错误的非标准化祖先值。预期：{2}，实际：{3}。如果XML是在Studio外部篡改的，请手动修正。
Java.ValidationError.ProductModel.Availability.EmptyDateRange = 查找指定从{0}到{1}的空日期范围
Java.ValidationError.ProductModel.Availability.ExtraLookupFiles = 外部保险产品模型目录中包含与现有险类模型实体不符的查找文件
Java.ValidationError.ProductModel.Availability.ExtraProductModelPatterns = 外部保险产品模型目录中包含与现有险类模型实体不对应的模式
Java.ValidationError.ProductModel.Availability.LookupDateRanges = 查找日期范围
Java.ValidationError.ProductModel.Availability.Lookups = 查找
Java.ValidationError.ProductModel.Availability.OverlappingRows = 可用性表包含对同一组标准具有重叠期间的行
Java.ValidationError.ProductModel.AvailabilityLookup.MustBeAvailable = “可用性”列必须设置为“可用”。参考日期类型查找{0}。
Java.ValidationError.ProductModel.BadAvailabilityScript = 解析可用性脚本中的异常：
Java.ValidationError.ProductModel.BadExistenceScript = 解析存在脚本中的异常：
Java.ValidationError.ProductModel.BadInitializeScript = 解析初始化脚本中的异常：
Java.ValidationError.ProductModel.BadOnRemovalScript = 解析onRemoval脚本中的异常：
Java.ValidationError.ProductModel.BadRICoverageGroupScript = 解析再保险承保范围组脚本中的异常：
Java.ValidationError.ProductModel.ChoiceCovTerm = 选项承保范围条款具有无效的查询表名称。
Java.ValidationError.ProductModel.ChoiceCovTerm.DuplicateCurrencyLimits = 为同一货币指定多个缺省值
Java.ValidationError.ProductModel.Clause.InvalidCategory = “{0}”不是有效的类别。
Java.ValidationError.ProductModel.Clause.MissingCategory = {0}必须具有类别。
Java.ValidationError.ProductModel.Clause.MultipleClauseSchedulePatterns = 在子句{0}上定义了多个ClauseSchedulePattern
Java.ValidationError.ProductModel.Clause.PolicyLinePatternCoverageCategoryMismatch = 子句“{0}”属于保单险类“{1}”，后者与它在文件“{4}”中的承保范围类别“{2}”的保单险类“{3}”不匹配。
Java.ValidationError.ProductModel.ConversionError = 将“{0}”转换为{1}时出错
Java.ValidationError.ProductModel.ConversionErrorWithReason = 将“{0}”转换到{1}时出错： {2}
Java.ValidationError.ProductModel.CovTerm.DisabledDefaultValue = 默认值({0})未启用。
Java.ValidationError.ProductModel.CovTerm.InvalidDefaultValue = 无效的默认值({0})。
Java.ValidationError.ProductModel.CovTerm.MissingStateDimension = 险别条款对沿用省/市进行了定义，但查找表中没有省/市字段。
Java.ValidationError.ProductModel.CovTerm.UnspecifiedDefaultValue = 必须指定默认值，因为在保障组合中未启用承保范围条款默认值({0})。
Java.ValidationError.ProductModel.CovTermChoice.MissingCurrencyField = 没有为{0}中的险别附加责任选择设置货币字段
Java.ValidationError.ProductModel.CovTermChoice.SpacesInCode = 代码不得包含空格
Java.ValidationError.ProductModel.CovTermOpt.MissingStateDimension = 修饰符对沿用省/市进行了定义，但查找表中没有省/市字段。
Java.ValidationError.ProductModel.CovTermPack.MissingStateDimension = 修饰符对沿用省/市进行了定义，但查找表中没有省/市字段。
Java.ValidationError.ProductModel.Coverage.MissingStateDimension = 承保范围对沿用省/市进行了定义，但查找表中没有省/市字段。
Java.ValidationError.ProductModel.DirectCovTerm.DuplicateCurrencyLimits = 为同一货币指定多个限额
Java.ValidationError.ProductModel.DirectCovTerm.InvalidNonMoneyLimits = 无效的DirectCovTerm限额：只能包含不使用货币的单一限额条目。
Java.ValidationError.ProductModel.DirectCovTerm.MissingCurrencyForLimitsAccess = 通过属性字段访问的过时DirectCovTermPattern：指定特定货币的限额后货币缺失。
Java.ValidationError.ProductModel.DirectCovTerm.MultipleCurrencyLimitsInSingleCurrencyMode = 模式以SingleCurrencyMode指定不同币种的限额。
Java.ValidationError.ProductModel.DuplicateCovSymbolPattern = 此承保范围符号模式是{0}的重复项。
Java.ValidationError.ProductModel.DuplicateItem = '{0}'
Java.ValidationError.ProductModel.DuplicatePolicyLineSubtype = 某些保单险类模式具有重复的子类型：
Java.ValidationError.ProductModel.DuplicateRateFactorTypes = 部分费率因子模式具有重复类型：
Java.ValidationError.ProductModel.DuplicateStates = 某些最小 - 最大值查找具有重复的省/直辖市：
Java.ValidationError.ProductModel.EmptyInterval = {0} “{1}”大于或等于{2}“{3}”
Java.ValidationError.ProductModel.EmptyRequiredDisplayKey = {0}是必要的，但未在默认区域设置({1})中定义。
Java.ValidationError.ProductModel.EmptyRequiredField = {0}为必填，但为空白。
Java.ValidationError.ProductModel.ExistenceScriptEmpty = 如果脚本定义了存在，则需要存在脚本。
Java.ValidationError.ProductModel.ExistenceScriptNotEmpty = 如果脚本未定义存在，则存在脚本必须为空。
Java.ValidationError.ProductModel.Field = 字段“{1}”的值“{0}”的格式不正确
Java.ValidationError.ProductModel.FormPattern.Inference.CannotBeAbstract = 表格推断类“{0}”是抽象的。
Java.ValidationError.ProductModel.FormPattern.Inference.FormCodeHasSpaces = 表格代码不能包含任何空格字符：“{0}”
Java.ValidationError.ProductModel.FormPattern.Inference.Generic = 表格推断类“{0}”无法实施gw.forms.GenericFormInference。
Java.ValidationError.ProductModel.FormPattern.Inference.Inheritance = 表格推断类“{0}”无法扩展gw.forms.FormData。
Java.ValidationError.ProductModel.FormPattern.Inference.InvalidClassName = 表格推断类“{0}”不是有效的类名称。
Java.ValidationError.ProductModel.FormPattern.Inference.RequiresNoArgConstructor = 表格推断类“{0}”没有无形式参数构造函数。
Java.ValidationError.ProductModel.Grandfathering.DuplicateRows = 找到重复的祖父行：
Java.ValidationError.ProductModel.InvalidCode = 代码“{0}”必须以字母开头，并且只能由字母、数字和下划线组成。
Java.ValidationError.ProductModel.InvalidCode.CannotMatchKeyword = 代码“{0}”不得与以下任何一个保留关键字匹配：{1}
Java.ValidationError.ProductModel.InvalidCode.CodeTooLong = 代码“{0}”包含的字符数不得超过{1}个。
Java.ValidationError.ProductModel.InvalidCode.ConflictCode = {1}类型的模式上的代码“{0}”与某个现有代码冲突。
Java.ValidationError.ProductModel.InvalidConditionPattern = 条件模式“{0}”不适用于“{1}”。
Java.ValidationError.ProductModel.InvalidCovSymbolGroup = 承保范围符号组属于保单险种{0}，但承保范围属于{1}。
Java.ValidationError.ProductModel.InvalidCovSymbolPattern = 承保范围符号组{0}必须至少有一个承保范围符号。
Java.ValidationError.ProductModel.InvalidCovTermOpt = CovTermOpt “{0}” ({1})不适用于险别附加责任“{2}”。
Java.ValidationError.ProductModel.InvalidCovTermPack = CovTermPack“{0}”({1})对险别期限“{2}”无效。
Java.ValidationError.ProductModel.InvalidCovTermPattern = 险别条款模式“{0}”不适用于“{1}”。
Java.ValidationError.ProductModel.InvalidCoveragePattern = 承保范围模式“{0}”不适用于“{1}”。
Java.ValidationError.ProductModel.InvalidExclusionPattern = 排除模式“{0}”对“{1}”无效。
Java.ValidationError.ProductModel.InvalidLookupTableName = {0}具有无效的查找表名称。"
Java.ValidationError.ProductModel.InvalidModifierPattern = 修饰符模式“{0}”对“{1}”无效。
Java.ValidationError.ProductModel.InvalidTypefilter = “{0}”不是类型列表“{1}”中的有效类型过滤器
Java.ValidationError.ProductModel.InvalidTypekey = “{0}”在类型列表“{1}”中不是有效的代码
Java.ValidationError.ProductModel.InvalidTypekey.Filtered = 类型键值“{0}”没有被类型过滤器“{1}”包含
Java.ValidationError.ProductModel.InvalidTypelist = 未知的类型列表：{0}
Java.ValidationError.ProductModel.Jurisdiction.JurisdictionSpecificElementInNonJurisdictionFile = 在非管辖权特定文件“{3}”中找到了特定于管辖权的元素，该元素的类型为“{0}”，ID为“{1}”，管辖权为“{2}”
Java.ValidationError.ProductModel.Jurisdiction.JurisdictionSpecificElementInWrongJurisdictionDirectory = 在管辖权“{4}”的特定于管辖权的错误文件“{3}”中找到了特定于管辖权的元素，该元素的类型为“{0}”，ID为“{1}”，管辖权为“{2}”
Java.ValidationError.ProductModel.Jurisdiction.NonJurisdictionSpecificElementInJurisdictionSpecificFile = 在管辖权“{3}”的特定于管辖权的文件“{2}”中找到了非管辖权特定的元素，该元素的类型为“{0}”，ID为“{1}”
Java.ValidationError.ProductModel.MissingRequiredField = 缺少必填字段{0}
Java.ValidationError.ProductModel.MissingSubtype = {0}必须具有子类型。
Java.ValidationError.ProductModel.Modifier.MissingStateDimension = 修饰符对沿用省/市进行了定义，但查找表中没有省/市字段。
Java.ValidationError.ProductModel.Modifier.NonEmptyMixMaxLookups = 非费率调整系数具有最小 - 最大值查找。您必须通过直接编辑XML来移除它们。
Java.ValidationError.ProductModel.Modifier.NonEmptyRateFactors = 非计划费率调整系数具有费率因子。需要通过直接编辑XML来将其移除。
Java.ValidationError.ProductModel.Modifier.RequiredModifierType = 修饰符模式必须指定实施修饰符的实体类型，但“{0}”无效。
Java.ValidationError.ProductModel.Modifier.RequiredScheduleRate = 费率调整系数无法定义其是否为计划费率。您必须通过直接编辑XML来修正。
Java.ValidationError.ProductModel.MostDescriptivePropertyDoesNotExist = 对于子句计列模式“{1}”的最具描述性的属性，不存在公共ID为“{0}”的已计列项目属性模式。
Java.ValidationError.ProductModel.NoSuchConditionPattern = 不存在代码为“{0}”的条件模式。
Java.ValidationError.ProductModel.NoSuchCovSymbolGroup = 代码为{0}的承保范围符号组不存在。
Java.ValidationError.ProductModel.NoSuchCovTermOpt = 不存在代码为“{0}”的险别条款选项。
Java.ValidationError.ProductModel.NoSuchCovTermPack = 不存在代码为“{0}”的CovTermPack。
Java.ValidationError.ProductModel.NoSuchCovTermPattern = 不存在代码为“{0}”的险别条款模式。
Java.ValidationError.ProductModel.NoSuchCoveragePattern = 不存在代码为“{0}”的承保范围模式。
Java.ValidationError.ProductModel.NoSuchExclusionPattern = 不存在代码为“{0}”的排除模式。
Java.ValidationError.ProductModel.NoSuchModifierPattern = 不存在代码为“{0}”的修饰符模式。
Java.ValidationError.ProductModel.NonActivatedPatternHasAnActivatedChild = 未激活的模式具有激活的子项：{0} -> {1}
Java.ValidationError.ProductModel.Number.DefaultGEMin = 默认值（{0}"）必须大于或等于最小值（{1}）。
Java.ValidationError.ProductModel.Number.DefaultLEMax = 默认值({0})必须小于或等于最大值({1})。
Java.ValidationError.ProductModel.Number.DefaultMustBeNumeric = DirectCovTerm的默认值({0})必须为数字。
Java.ValidationError.ProductModel.Number.MaxGEMin = 最大值({0})必须大于或等于最小值({1})。
Java.ValidationError.ProductModel.Offering.AllPolicyLinesDisabled = 保险产品“{0}”的所有保单险类都已禁用。请至少启用一个。
Java.ValidationError.ProductModel.Offering.MissingStateDimension = 保障组合对沿用省市进行了定义，但查找表中没有省/直辖市字段。
Java.ValidationError.ProductModel.Offering.OfferingQuestionFilter.InvalidFilterQuestion = 问题{0}不存在。
Java.ValidationError.ProductModel.Offering.OfferingQuestionFilter.InvalidProductQuestionSet = 问题{0}的问题集尚未添加到保险产品。
Java.ValidationError.ProductModel.Offering.OfferingQuestionFilter.InvalidQuestionSetType = 问题{0}的问题集不是有效的“保障组合选择”类型。
Java.ValidationError.ProductModel.Offering.PolicyIsCorrupted = 保险产品“{0}”中的供应品已损坏。
Java.ValidationError.ProductModel.Offering.ProductIsCorrupted = CodeIdentifier为“{0}”的保障组合已损坏。
Java.ValidationError.ProductModel.OptionCovTerm.AtLeastOneOption = “承保范围条款选项”必须至少有一个选项。
Java.ValidationError.ProductModel.OptionCovTerm.DuplicateOptionCodes = 某些选项具有重复的选项代码：
Java.ValidationError.ProductModel.OptionCovTerm.InvalidCode = 选项代码“{0}”在此OptionCovTermPattern中未识别
Java.ValidationError.ProductModel.PackageCovTerm.AtLeastOnePackage = “综合险条款”必须至少有一个“综合险”。
Java.ValidationError.ProductModel.PackageCovTerm.DuplicatePackageCodes = 某些综合保险具有重复的综合保险代码：
Java.ValidationError.ProductModel.PackageCovTerm.InvalidCode = 综合保险代码“{0}”在此PackageCovTermPattern中未识别
Java.ValidationError.ProductModel.PolicyLine.DoesNotExist = 保单险类“{0}”不存在。
Java.ValidationError.ProductModel.PolicyLine.DuplicateCoverageCurrencies = 在PolicyLine中找到重复的有效承保范围货币
Java.ValidationError.ProductModel.PolicyLine.DuplicateOfficialIds = 在保单险类中找到重复的公务员ID，其中每个字段都相同
Java.ValidationError.ProductModel.PolicyLine.MismatchedCoverageCurrency = 有效承保范围货币与系统默认货币不匹配
Java.ValidationError.ProductModel.PolicyLine.MultipleCoverageCurrencies = 不允许在单一货币模式中为险种定义多个承保范围货币
Java.ValidationError.ProductModel.PolicyLine.NoSuchCode = 不存在代码为“{0}”的保单险类。
Java.ValidationError.ProductModel.PolicyLine.NonEmptyCode = 保单险类必须具备有效的非空白公共ID/代码。
Java.ValidationError.ProductModel.PolicyLine.NonEmptyCoverageCurrencies = 保单险种必须至少有一个有效承保范围货币
Java.ValidationError.ProductModel.PolicyLine.NonEmptyName = 保单险类必须具备有效的非空白名称。
Java.ValidationError.ProductModel.PolicyLine.NotValidForProduct = 保单险类“{0}”不适用于“{1}”保险产品。
Java.ValidationError.ProductModel.PolicyLine.PolicyLineSpecificElementInNonPolicyLineDirectory = 在非保单险类特定的文件“{3}”中找到了特定于保单险类的元素，该元素的类型为“{0}”，ID为“{1}”，保单险类为“{2}”
Java.ValidationError.ProductModel.PolicyLine.PolicyLineSpecificElementInWrongPolicyLineDirectory = 在保单险类“{4}”的错误保单险类目录“{3}”中找到了特定于保单险类的元素，该元素的类型为“{0}”，ID为“{1}”，保单险类为“{2}”
Java.ValidationError.ProductModel.PolicyLine.UndefinedSubtype = 保单险类模式必须定义其子类型。
Java.ValidationError.ProductModel.PolicyTerm.Disabled = 必须启用“{0}”保单期限，因为它是{1}的默认附加责任。
Java.ValidationError.ProductModel.PolicyTerm.NotValidForProduct = “{0}”保单期限不能是保障组合选择的一部分，因为它不是{1}的有效保单期限。
Java.ValidationError.ProductModel.Product.AtLeastOnePolicyLine = 保险产品必须至少有一个与其关联的保单险类。
Java.ValidationError.ProductModel.Product.DefaultPolicyTermMismatch = 默认保单期限必须包含在保险产品的有效保单期限列表中
Java.ValidationError.ProductModel.Product.DuplicateDocTemplateTypes = 找到重复的单证模板类型
Java.ValidationError.ProductModel.Product.MissingPolicyTerms = 保险产品必须至少有一个可用保单期限
Java.ValidationError.ProductModel.Product.MissingRequiredOffering = 如果OfferingRequired设置为true，则必须至少定义一个保障组合
Java.ValidationError.ProductModel.Product.NonEmptyCode = 保险产品必须具备有效的非空白公共ID/代码。
Java.ValidationError.ProductModel.Product.NonEmptyName = 保险产品必须具备有效的非空白名称。
Java.ValidationError.ProductModel.Product.ProductSpecificElementInNonProductDirectory = 在非产品特定文件“{3}”中找到了特定于产品的元素，该元素的类型为“{0}”，ID为“{1}”，产品为“{2}”
Java.ValidationError.ProductModel.Product.ProductSpecificElementInWrongProductDirectory = 在产品“{4}”的错误产品目录“{3}”中找到了特定于产品的元素，该元素的类型为“{0}”，ID为“{1}”，产品为“{2}”
Java.ValidationError.ProductModel.Product.StaleReference.Plural = {0}个失效的引用。要解决，请在Studio中右键单击保险产品并选择“移除失效的引用”
Java.ValidationError.ProductModel.Product.StaleReference.Singular = 1 个失效的引用。要解决，请在Studio中右键单击保险产品并选择“移除失效的引用”
Java.ValidationError.ProductModel.Question.AtLeastOneChoice = 选择题必须至少有一个选择。
Java.ValidationError.ProductModel.Question.BadIssueTypeCheckingSet = 值UWIssueType “{0}”具有检查集“{1}”。只有检查集为“问题”的问题类型可用于“问题”。
Java.ValidationError.ProductModel.Question.DuplicateChoiceCodes = 某些问题选项具有重复代码：
Java.ValidationError.ProductModel.Question.InvalidAnswer.Choice = 值“{0}”不是问题“{1}”的有效答案; 必须从该问题定义的答案选项中选择。
Java.ValidationError.ProductModel.Question.InvalidIssueType = 值“{0}”不是有效的核保项类型代码。
Java.ValidationError.ProductModel.Question.MissingCorrectAnswerForBlockingAction = 若指定阻止操作，还必须指定正确答案。
Java.ValidationError.ProductModel.Question.MissingCorrectAnswerForFailureMessage = 若指定正确答案，还必须指定失败消息。
Java.ValidationError.ProductModel.Question.MissingCorrectAnswerForRiskPoints = 若已指定风险点，还必须指定正确答案。
Java.ValidationError.ProductModel.Question.MissingCorrectAnswerForUWIssueType = 如果指定了核保项类型，还必须指定正确答案。
Java.ValidationError.ProductModel.Question.MissingFailureReason = 设置了问题类型的问题还必须包含失败消息。
Java.ValidationError.ProductModel.Question.MissingOtherFieldsForCorrectAnswer = 如果指定了“正确答案”，则必须指定“阻止操作”、“核保项类型”或“风险点”。
Java.ValidationError.ProductModel.Question.NoChoiceAllowed = 非选择题不得包含任何选项。
Java.ValidationError.ProductModel.Question.QuestionFilter.InvalidFilterQuestion = 问题过滤器{1}的过滤器问题{0}无效。
Java.ValidationError.ProductModel.Question.QuestionFormat = {1}问题的问题格式“{0}”无效。
Java.ValidationError.ProductModel.QuestionSet.AnswerContainerType = “{1}”问题集上的答案容器类型“{0}”无效
Java.ValidationError.ProductModel.QuestionSet.CannotBeDisabled = 保障组合问题集“{0}”无法禁用。
Java.ValidationError.ProductModel.QuestionSet.DoesNotExist = 问题集“{0}”不存在。
Java.ValidationError.ProductModel.QuestionSet.InvalidForProduct = 问题集“{0}”不适用于“{1}”保险产品。
Java.ValidationError.ProductModel.QuestionSet.NoSuch = 不存在代码为“{0}”的问题集。
Java.ValidationError.ProductModel.ScheduledItemClauseLinkages.InvalidClausePattern = 子句链接“{0}”中为“{1}”模式指定的模式无效。
Java.ValidationError.ProductModel.ScheduledItemClauseLinkages.MoreThanOneLink = 在“{0}”模式中只允许使用一个子句引用。
Java.ValidationError.ProductModel.ScheduledItemEntityDoesNotExist = 在{1}模式中定义的{0}实体不存在。
Java.ValidationError.ProductModel.ScheduledItemIdentityColumnShouldBeRequired = {0}实体上应当也需要标识列。
Java.ValidationError.ProductModel.ScheduledItemProperty.DuplicateColumnValues = 发现重复的列值：
Java.ValidationError.ProductModel.ScheduledItemProperty.DuplicatePropertyNames = 发现重复的PropertyName值：
Java.ValidationError.ProductModel.ScheduledItemPropertyColumnDoesNotExist = {1}实体中不存在列{0}。
Java.ValidationError.ProductModel.ScheduledItemPropertyValueGetterConstructorMissing = 在注册为计列项目属性{1}的值getter的类{0}上，找不到具有单个“子句”类型的参数的构造函数。
Java.ValidationError.ProductModel.ScheduledItemPropertyValueGetterDoesNotExist = 找不到注册为计列项目属性{1}的值getter的类{0}。
Java.ValidationError.ProductModel.Script.ReturnTypeMisMatch = 错误的返回类型（预期为{0}）。
Java.ValidationError.ProductModel.Script.ReturnTypeMissing = 缺少返回类型（预期为{0}）。
Java.ValidationError.ProductModel.StateSet.InvalidToken = 未知的省/直辖市或省/直辖市集：“{0}”。
Java.ValidationError.ProductModel.TypeList.DefaultFilteredOut = 默认值{0}已被过滤器{1}滤掉。
Java.ValidationError.ProductModel.TypeList.InvalidDefault = 默认值{0}不是类型列表{1}的一部分。
Java.ValidationError.ProductModel.TypeListShouldBeEmpty = 如果数据类型不是类型键，则类型列表必须为空。
Java.ValidationError.ProductModel.UnequalFieldValues = 字段{0} ({1}) 与{2} ({3}) 必须相等。
Java.ValidationError.ProductModel.UnsupportedValueType = 将“{0}”转换到{1}时出错： {2}
Java.ValidationError.SystemTables.DuplicateColumn = 重复的列：{0}。该文件可能已在Studio外部编辑。请直接在XML中修正错误。
Java.ValidationError.SystemTables.DuplicatePublicId = 重复的公共ID： “{0}”。该文件可能已在Studio外部编辑。请直接在XML中修正错误。
Java.ValidationError.SystemTables.EffDateAfterExpDate = 失效日期必须晚于起效日期
Java.ValidationError.SystemTables.EffDateOverlap = 代码为{0}、字段值为{1}的行的生效日期重叠
Java.ValidationError.SystemTables.Inheritance = 实施类别{0}无法扩展{1}
Java.ValidationError.SystemTables.InvalidClassName = 实施类{0}不是有效的类名称。
Java.ValidationError.SystemTables.NoPublicId = 未找到行的公共ID。该文件可能已在Studio外部编辑。请直接在XML中修正错误。
Java.ValidationError.SystemTables.NullOrEmptyField = 字段[{0}]不能为空。
Java.ValidationError.SystemTables.ReasonCodeActionTypeVerifier.DuplicateNodeError = 重复的原因代码和通知类别：原因代码\={0}，通知类别\={1}，通知操作类型\={2}
Java.ValidationError.SystemTables.UniqueIndexConstraintViolation = {1}在{0}违反的唯一索引约束
Java.ValidationError.SystemTables.UnknownField = 未知字段“{0}”。该文件可能已在Studio外部编辑。请直接在XML中修正错误。
Java.ValidationWarning.ProductModel.Availability.EmptyTable = 未找到查找结果。使用 Product Designer 解决此问题。
Java.ValidationWarning.ProductModel.CovTerm.CodeTooLong = {0} “{1}”的代码超过{2}的最大长度
Java.ValidationWarning.RateBook.ImportInProductionMode = 通过“公共事业 -> 导入数据”进行导入时将部分验证费率手册，这会导致出错，不允许对生产系统运行。通过“费率 -> 费率手册 -> 从XML导入”进行导入时可执行一组完整的验证。
Java.Vendor.Preferred = （首选）
Java.ViewDetailsActionListener.EmptyContactError = 必须先进行选择，才能查看详细信息。
Java.Warn.CannotSave = 无法保存数据更改。
Java.Warn.ConcurrentDataChange = 数据已被其他用户修改。请取消并重试更改。
Java.Web.CompilationErrorCausingRuntimeBreak = 编译元素时发现将会导致此页面不能正常工作的错误：
Java.Web.ConsistencyCheck.AllCheckTypes = 所有检查类型
Java.Web.ConsistencyCheck.AssignedObjectsShouldNotHaveBothANonNullUserIdAndANonNullQueueId = 已分配对象不应同时具有非空用户ID和非空序列ID
Java.Web.ConsistencyCheck.AssignedObjectsShouldNotHaveNullGroupIDsOrNullUserAndQueueIDs = 已分配对象不应有null组ID或null用户和队列ID
Java.Web.ConsistencyCheck.BeanVersionConsistencyChecks = 验证BeanVersion是否非空且对于{0}中的所有行都不小于零
Java.Web.ConsistencyCheck.BlockingMessagePerPrimaryObjectMustHaveLowestSendOrder = 各主要对象的拦截消息必须具有最低发送顺序
Java.Web.ConsistencyCheck.BoundPeriodWithDraftFac = 临时分保协议草案存在相关的已承保保单期间
Java.Web.ConsistencyCheck.ConsistentChildren = 验证三者的一致性
Java.Web.ConsistencyCheck.CustomCommand = &lt;自定义&gt;
Java.Web.ConsistencyCheck.CustomExchangeRateSetsMatchExchangeRatesOneToOne = 市场汇率为零的ExchangeRateSets必须只具有一个ExchangeRate
Java.Web.ConsistencyCheck.DatetimeOrderings = 验证{0}和{1}之间的日期时间排序
Java.Web.ConsistencyCheck.DeclaredConsistencyCheck = 元数据架构{0}中声明的一致性检查说明
Java.Web.ConsistencyCheck.DeleteConfirmation = 是否确定要删除这些一致性检查结果?
Java.Web.ConsistencyCheck.DuplicateConsistencyCheckTypePassed = 传递的一致性检查类型重复： {0}
Java.Web.ConsistencyCheck.Duration = 持续时间（秒）
Java.Web.ConsistencyCheck.EachGroupHasAGroupAssignmentstatebaseObjectThatDoesNotIncludeSubGroups = 检查是否各组都存在不包含子组的GroupAssignmentStateBase对象
Java.Web.ConsistencyCheck.EachGroupHasAGroupassignmentstatebaseObjectThatIncludesSubGroups = 检查是否各组都存在包含子组的GroupAssignmentStateBase对象
Java.Web.ConsistencyCheck.EffDatedConsistencyChecks = 验证{0}中引用的各分支在{1}中是否存在对应条目
Java.Web.ConsistencyCheck.EveryGroupMayHave0Or1GroupassignmentstatebaseObjectThatIncludesOrDoesNotIncludeSubgroupsForASpecificGrouptype = 检查是否每组都可能有0个或1个GroupAssignmentStateBase对象包含或不包含特定GroupType的子组
Java.Web.ConsistencyCheck.EveryOrgHasARootGroup = 每个机构的边表中都有一个根组条目
Java.Web.ConsistencyCheck.EveryTypekeyInTypelistTable = 验证类型列表表格中是否包含所有类型键值
Java.Web.ConsistencyCheck.ExactlyOneCarrierOrg = 社区中存在多个承保人机构或不存在任何承保人机构
Java.Web.ConsistencyCheck.ExchangeRateSetsNotMarketRate = ExchangeRateSets的MarketRates必须为零
Java.Web.ConsistencyCheck.ExternalUserBelongsToCarrierOrg = 社区中存在属于承保人机构的外部用户
Java.Web.ConsistencyCheck.ExternalUserHasInternalGroup = 社区中有些非承保人用户所属的组属于承保人
Java.Web.ConsistencyCheck.GroupIsRootGroupForMultipleOrgs = 社区中存在作为多个机构根组的组。
Java.Web.ConsistencyCheck.IOExceptionCreatingZipFileOfDatabasestatistics = 创建数据库统计的zip文件时出现IO异常。 {0}
Java.Web.ConsistencyCheck.InternalUserDoesNotBelongToCarrierOrg = 社区中存在属于非承保人机构的内部用户
Java.Web.ConsistencyCheck.InternalWorkflowWithNoFoo = 非外部工作流必须具有非空的{0}
Java.Web.ConsistencyCheck.InvalidConsistencyCheckTypePassed = 传递的一致性检查类型无效： {0}
Java.Web.ConsistencyCheck.InvalidTableGroupNamePassed = 传递的表组名称无效（未在配置中定义）： {0}
Java.Web.ConsistencyCheck.InvalidTableGroupNamePassedEmpty = 传递的表组名称无效（空）
Java.Web.ConsistencyCheck.InvalidTableNamePassed = 传递的表名称无效： {0}
Java.Web.ConsistencyCheck.JoinTable = 验证{0}与{1}之间联表的一致性
Java.Web.ConsistencyCheck.LocalizedColumnHasValues = 验证{1}中已本地化的列{0}是否具有所有语言的值
Java.Web.ConsistencyCheck.MaxKey = 验证{0}和{1}之间的一致性
Java.Web.ConsistencyCheck.MonetaryAmount = MonetaryAmount列必须均为空或均非空
Java.Web.ConsistencyCheck.MultContactAddressAddress = 请确保ContactAddress.AddressID不与任何ContactAddress.AddressID共享
Java.Web.ConsistencyCheck.MultContactAddressPrimaryAddress = 请确保ContactAddress.AddressID不与任何Contact.PrimaryAddressID共享
Java.Web.ConsistencyCheck.MultPrimaryAddresses = 请确保Contact.PrimaryAddressID不与任何Contact.PrimaryAddressID共享
Java.Web.ConsistencyCheck.NoDuplicateSenderRefIdsForADestination = 目标存在重复的发送者参考ID
Java.Web.ConsistencyCheck.NoMatchCheckDesc = 验证受制约支票{0}
Java.Web.ConsistencyCheck.ObjectsAssignedToTheQueueOrUnderManualAssignmentShouldNotHaveANullGroupId = 分配至队列的对象或手动分配的对象不应具有null组ID
Java.Web.ConsistencyCheck.OnlyApprovalActivitiesCanHaveApprovedFieldSet = 仅审批活动可以具有经批准的字段集
Java.Web.ConsistencyCheck.OnlyAssignmentReviewActivitiesShouldHaveRelatedactivityidSet = 仅分配审查活动可以具有RelatedActivityID字段集
Java.Web.ConsistencyCheck.OnlyOneValueFieldNonNull = 脚本参数表不应包含具有多个非null值字段的行
Java.Web.ConsistencyCheck.ParameterShouldHaveANonNullBooleanValueOnlyIfItIsABooleanParameter = 仅布尔参数可以具有非null布尔值
Java.Web.ConsistencyCheck.ParameterShouldHaveANonNullDateValueOnlyIfItIsADateParameter = 仅日期参数可以具有非空日期值
Java.Web.ConsistencyCheck.ParameterShouldHaveANonNullIntegerValueOnlyIfItIsAnIntegerParameter = 仅整数参数可以具有非null整数值
Java.Web.ConsistencyCheck.ParameterShouldHaveANonNullStringValueOnlyIfItIsAStringParameter = 仅字符串参数可以具有非null字符串值
Java.Web.ConsistencyCheck.PrimaryObjectShouldNotHaveMoreThanOneBlockingMessage = 对于每个目标，主要对象不能具有多个拦截消息（待确认、重试、错误、可重试错误状态）
Java.Web.ConsistencyCheck.Run.Canceled = 已取消
Java.Web.ConsistencyCheck.Run.Failure = 已运行{0}次检查并在数据库中发现不一致。请检查信息页面中的日志和报告。
Java.Web.ConsistencyCheck.Run.Prefix = 一致性检查(id {0})：
Java.Web.ConsistencyCheck.Run.Success = {0}检查运行成功
Java.Web.ConsistencyCheck.RunFromSystemTools = 从系统工具命令行运行
Java.Web.ConsistencyCheck.RunFromSystemToolsAsBatch = 以批处理作业形式从系统工具命令行运行
Java.Web.ConsistencyCheck.SameStagingTableSpecifiedTwice = 相同的临时表{0}指定两次。
Java.Web.ConsistencyCheck.SameTableSpecifiedTwice = 相同表{0}指定两次。
Java.Web.ConsistencyCheck.SameTypelistTableSpecifiedTwice = 相同的类型列表表{0}指定两次。
Java.Web.ConsistencyCheck.StagingTableShouldExistInDataModel = 临时表{0}应位于数据模型中
Java.Web.ConsistencyCheck.TableExistsButShouldBeATypelistTable = 表{0}存在，但应为类型列表表
Java.Web.ConsistencyCheck.TableExistsButShouldNotBeaTypelistTable = 表{0}存在，但不应为类型列表表
Java.Web.ConsistencyCheck.TableShouldExistInDataModel = 表{0}应位于数据模型中
Java.Web.ConsistencyCheck.ThereShouldOnlyBeActiveMessagesInTheMessageTable = 消息表中不应存在任何不活动的消息
Java.Web.ConsistencyCheck.ThereShouldOnlyBeInactiveMessagesInTheMessagehistoryTable = 消息历史记录表中不应存在任何活动的消息
Java.Web.ConsistencyCheck.TypeCode = 类型代码
Java.Web.ConsistencyCheck.TypelistTableOnlyContainsValuesInModel = 验证类型列表表格中是否仅包含元数据/数据模型中的值
Java.Web.ConsistencyCheck.TypelistTableShouldExistInDataModel = 类型列表表{0}应位于数据模型中
Java.Web.ConsistencyCheck.UnassignedObjectsShouldNotHaveNonNullGroupUserOrQueueIds = 未分配的对象不应有非空的组、用户或队列ID
Java.Web.ConsistencyCheck.UniqueDenormZoneCode = 存在重复代码
Java.Web.ConsistencyCheck.UserAndGroupHaveDifferentOrgs = 社区中存在这样的用户，他们所属组所在的机构与用户所属机构不同
Java.Web.ConsistencyCheck.VerifyCheckConstraints = 验证检查约束
Java.Web.ConsistencyCheck.VerifyNoNullSubtypeColsNonNullOnSubtypeRow = 当行是针对子类型{0}时，验证不可为空的子类型列是否非空。
Java.Web.ConsistencyCheck.VerifySubtypeColsNullWhenNotForSubtype = 当行不是针对子类型{0}时，验证子类型特定的列是否为空
Java.Web.ConsistencyCheck.ZoneContainment = “层级结构中存在按国家/地区\={0}、区域类型\={1}且容器区域类型\={2}粒度定义的包含于多个父区域的区域
Java.Web.DateInputHintText.PatternCharacter.Day = d
Java.Web.DateInputHintText.PatternCharacter.Era = G
Java.Web.DateInputHintText.PatternCharacter.Hour = h
Java.Web.DateInputHintText.PatternCharacter.Meridian = a
Java.Web.DateInputHintText.PatternCharacter.Minute = m
Java.Web.DateInputHintText.PatternCharacter.Month = M
Java.Web.DateInputHintText.PatternCharacter.Second = s
Java.Web.DateInputHintText.PatternCharacter.Year = y
Java.Web.InternalServerException.Log = {1}上的内部服务器异常编号{0}：
Java.Web.InternalServerException.Message = 发生内部服务器异常，编号为{0}（{1}，{2}）
Java.Web.InternalServerException.Title = 内部服务器异常
Java.Web.Media.NoFileSpecified = 未指定任何文件
Java.Web.MediaGallery.ClearFiles = 清除文件
Java.Web.MediaGallery.ConfirmClearFiles = 是否确定要移除所有导入的文件？
Java.Web.MediaGallery.ExifData = Exif数据
Java.Web.MediaGallery.FileSize = 文件大小
Java.Web.MediaGallery.Filename = 文件名
Java.Web.MediaGallery.ImportFiles = 导入文件
Java.Web.MediaGallery.Information = 信息
Java.Web.MediaGallery.LastModified = 上次修改日期
Java.Web.MediaGallery.NoFilesSelected = 未选择任何文件
Java.Web.MediaGallery.PasteFiles = 将文件粘贴至此处
Java.Web.MediaGallery.Preview = 预览
Java.Web.MediaGallery.UploadFiles = 上传文件
Java.Web.OldImageFilesWarning = 在resources/Ocean/images或resources/themes/Titanium/resource/images下找到图像文件。图像现在应位于resources/themes/theme-9/resources/images。
Java.Web.PCFConfigRuntimeError.MonetaryAmountValueWidget.NullCurrency = 无法根据值或货币表达式获得货币。
Java.Web.PCFVerification.Base.AttributeMustBe = 属性“{0}”必须为“{1}”。
Java.Web.PCFVerification.Base.DoesNotExist = “{0}”不存在。
Java.Web.PCFVerification.Base.EmptyId = 有空ID。
Java.Web.PCFVerification.Base.ErrorOnAttribute = 无效“{0}”表达式：
Java.Web.PCFVerification.Base.IllegalJavaConstructor = 静态Java构造函数“{0}”指定的位置“{1}”无效。
Java.Web.PCFVerification.Base.IllegalLocationConstructor = 无效java位置构造函数：“{0}”。可能的匹配项为“{1}”。
Java.Web.PCFVerification.Base.TypeNameIsNotAvailable = 类型名称不可用
Java.Web.PCFVerification.Base.WarningOnAttribute = 关于“{0}”属性的警告：
Java.Web.PCFVerification.CheckedValuesToolbarButtonWidget.IteratorsExposeDifferentNames = 封闭迭代器公开不同的元素名称“{0}”，“{1}”。
Java.Web.PCFVerification.CheckedValuesToolbarButtonWidget.IteratorsExposeDifferentTypes = 封闭迭代器公开不同的元素类型“{0}”，“{1}”。
Java.Web.PCFVerification.CheckedValuesToolbarButtonWidget.NoIterator = 无法找到任何引用类型的迭代器“{0}”。
Java.Web.PCFVerification.ContactSubtypeAccessProfileNode.DuplicatePermission = 在实体“{2}”的权限配置“{1}”中找到重复的权限类型代码“{0}”。
Java.Web.PCFVerification.ContactTagAccessProfileNode.DuplicatePermission = 在标记“{2}”的权限配置“{1}”中找到重复的权限类型代码“{0}”。
Java.Web.PCFVerification.Destination.CannotFindVariable = 需要名为“{0}”的变量，但未定义此类变量。
Java.Web.PCFVerification.HeaderCellValueWidget.CantShowIcon = 无法在页眉单元中显示图标，因为每行均不同。将 showHeaderIcon 设置为 false。
Java.Web.PCFVerification.HeaderCellValueWidget.EntityWithNoDisplayNameNotSortable = 基于查询的列表视图中的单元可排序，但排序值指定的排序顺序中的路径[{0}]解析为没有显示名称的实体。没有显示名称的实体不能排序。
Java.Web.PCFVerification.HeaderCellValueWidget.QueryCellNotSortable = 基于查询的列表视图中的单元可排序，但排序值未指定排序行为： {0}。
Java.Web.PCFVerification.HeaderCellValueWidget.SortValueNotInDB = 基于查询的列表视图中的单元可排序，但排序值指定的排序顺序中的路径[{0}]不在数据库中。
Java.Web.PCFVerification.HeaderCellValueWidget.SortingThrewException = 基于查询的列表视图中的单元可排序，但在获取排序顺序时抛出异常。排序值： [{0}]
Java.Web.PCFVerification.HeaderCellValueWidget.TextColumnsNotSortable = 基于查询的列表视图中的单元可排序，但排序值指定的排序顺序中的路径 [{0}] 解析为文本列。数据库中的文本列不能排序。
Java.Web.PCFVerification.IteratorWidget.Ambiguous = 迭代器引用不明确，在ID为“{0}”的列表视图中找到多个子迭代器
Java.Web.PCFVerification.IteratorWidget.AmbiguousWithMultipleOccurrences = 迭代器引用不明确，迭代器“{0}”在以下行中出现多次： {1}
Java.Web.PCFVerification.IteratorWidget.CouldNotFindIterator = 找不到ID为“{0}”的迭代器或列表视图面板。
Java.Web.PCFVerification.IteratorWidget.MissingIterator = 无法引用列表视图{0}，因为它没有行迭代器。
Java.Web.PCFVerification.LayoutElement.NestedLayout = [{0}]上不允许表布局，因为其嵌套在[{1}]上的另一表布局内部。
Java.Web.PCFVerification.ListViewWidget.IteratedFootersDoNotMatch = ListView 有不匹配的迭代页脚。
Java.Web.PCFVerification.ListViewWidget.MoreThanOneIteratedFooter = ListView定义了多个迭代页脚，但其中只有一个将进行渲染。考虑通过从单元中移除页脚相关的属性来移除其它页脚。
Java.Web.PCFVerification.ListViewWidget.MoreThanOneIteratedHeader = ListView定义了多个迭代页眉，但其中只有一个将进行渲染。考虑通过从单元中移除标签属性来移除其它页眉。
Java.Web.PCFVerification.Location.IllegalLocationKey = 必须存在ID为“{1}”的“{0}”，以便代码对其进行引用。
Java.Web.PCFVerification.Location.IllegalLocationKeyType = 通过ID“{0}”定义的位置必须为类型“{1}”。
Java.Web.PCFVerification.Location.WrongNumberOfArguments = 位置“{0}”的实际参数数量不正确。
Java.Web.PCFVerification.Location.WrongNumberOfArgumentsWithExpected = 位置的实际参数数量不正确。需要“{0}”个，已获取“{1}”。
Java.Web.PCFVerification.RequireElement.InvalidType = 需要元素“{0}”具有无效的类型“{1}”。
Java.Web.PCFVerification.RowIteratorWidget.NestedIteratorFooter = 必须为所有嵌套迭代器定义脚本，或为所有嵌套迭代器均不定义脚本。
Java.Web.PCFVerification.RowWidget.UniqueCanOnlyBeSetUnderListViewIterator = 仅当单元直接用在“列表视图迭代器”内部的行中时才能设置“唯一”。
Java.Web.PCFVerification.SectionWidget.InvalidModeParameters = 需要数与其它模式不匹配。需要“{0}”个，已获取“{1}”个。
Java.Web.PCFVerification.SectionWidget.InvalidRequiresType = 需要类型与其他模式不匹配。需要“{0}”个，已获取“{1}”个。
Java.Web.PCFVerification.VariableElement.InvalidName = 具有无效的“{0}”属性“{1}”。标识符必须是有效的Gosu标识符名称，并且不能为保留的Java关键字、Gosu关键字，也不能与内置PCF符号名称冲突。
Java.Web.PCFVerification.VariableElement.InvalidType = 变量元素“{0}”具有无效的类型“{1}”。
Java.Web.Rating.Errors.DuplicateCalcRoutineCodes = 费率手册引用多个具有相同代码的计算例程
Java.Web.Rating.Errors.MissingCalcRoutineCode = 费率手册“{0} v. {1}”不包含计算例程“{2}”
Java.Web.Rating.Errors.SystemErrorMessage = 在费率计算中已经出现一个系统错误。请与系统管理员联系以寻求帮助。 错误详细信息：
Java.Web.RenderException.Action = 返回到应用程序
Java.Web.RenderException.Log = 在{0}上呈现异常：
Java.Web.RenderException.Message = 在{1}的{0}上呈现异常
Java.Web.RenderException.Title = 呈现异常
Java.Web.ShortcutHelp.Close = 关闭
Java.Web.ShortcutHelp.HelpItem.EditPcfInStudio = 编辑页面配置：{0}
Java.Web.ShortcutHelp.HelpItem.HelpWindow = 帮助窗口：{0}
Java.Web.ShortcutHelp.HelpItem.InfoPage = 信息页面：{0}
Java.Web.ShortcutHelp.HelpItem.PageInfo = 控件页面信息：{0}
Java.Web.ShortcutHelp.HelpItem.ReloadPCFs = 重新加载PCF：{0}
Java.Web.ShortcutHelp.HelpItem.ServerTools = 服务器工具：{0}
Java.Web.ShortcutHelp.Title = 快捷键帮助窗口
Java.Web.UncaughtException.Log = {1}上未发现异常编号{0}：
Java.Web.UncaughtException.Message = 联系用户支持
Java.Web.UncaughtException.Title = 意外的服务器错误
Java.Web.Validation.NoIssues = 无校验错误。
Java.Web.Validation.StepOff.InvalidValue = 该字段中的值无效
Java.Web.Validation.StepOff.InvalidValueWithFormatHelp = 字段必须为采用格式“{0}”的有效值
Java.Web.Value.ConfirmChange = 是否确定要更改“{0}”的值？
Java.Web.Wizard.Continue = 继续
Java.Web.Wizard.Popup.Navigate = 请先确认或取消，然后再离开此页面。
Java.WorkItemFilter.AllActive = 所有活动项
Java.WorkItemFilter.AllErrors = 所有错误
Java.WorkItemFilter.AllFailures = 所有失败
Java.WorkItemFilter.AllProblems = 所有问题
Java.WorkItemSet.FailRestart = 服务器已重启
Java.WorkItemSet.Writer.CheckExclusivePhase = 检查WorkItemSet是否唯一
Java.WorkItemSet.Writer.PreProcessingPhase = 执行WorkItemSetWorkQueue的预处理工作
Java.WorkItemSet.Writer.WriterPhase = 创建工作项
Java.WorkersComp.IfAnyExposure = 如有
Java.Workflow.AbstractActivity.NameLength = 活动名称的长度不能超过{0}个字符。
Java.Workflow.AbstractActivity.NoPattern = 未找到名为“{0}”的活动模式。
Java.Workflow.AbstractActivity.Null = 活动模式不能为null
Java.Workflow.Activity.AtLeastOne = 必须为活动步骤至少定义一个活动。
Java.Workflow.Activity.DisplayName = 活动
Java.Workflow.Activity.Duplicate = 复制活动名称：“{0}”
Java.Workflow.AutoStep.AtLeastOne = 至少必须有一个Go元素
Java.Workflow.AutoStep.IfRequired = 除步骤中的最后一个Go eJavaements以外，其他必须都包含“if”属性
Java.Workflow.AutoStep.Last = 步骤中的最后一个Go不能有“if”属性
Java.Workflow.Branch.Start.DisplayName = 开始
Java.Workflow.Context.DisplayName = {0}.<上下文>
Java.Workflow.Context.DuplicateSymbol = 重复符号名称： {0}
Java.Workflow.Definition.NotFound = 未找到工作流{0}版本{1}的定义
Java.Workflow.Delete.ById.Error = 删除ID为{0}的工作流时出错
Java.Workflow.Delete.Old.Error = 删除超过{0}天的工作流时出错
Java.Workflow.Delete.Retired.Error = 删除已注销工作流时出错
Java.Workflow.InvalidBranchTimeout = 无效的分支超时{0}
Java.Workflow.InvalidStateChangeRequested = 无法将工作流从{0}更改为{1}
Java.Workflow.Log.Advance = 在{0} {1}处开始推进
Java.Workflow.Log.Entered.Step = 已进入步骤{0}
Java.Workflow.Log.Exception.Location = 对{0}执行{1}操作时出现异常
Java.Workflow.Log.Exception.Message = 异常{0}
Java.Workflow.Log.Executed.Branch = 正在{0}处执行分支
Java.Workflow.Log.Finished = 已完成工作流
Java.Workflow.Log.Generated.Activity = 在{0}处生成活动编号{2}
Java.Workflow.Log.Generated.Event = 在{0}处生成事件编号{2}
Java.Workflow.Log.Generated.Notification = 在{0}处生成通知编号{2}
Java.Workflow.Log.OrphanRestarted = 正在尝试重试编号{0}
Java.Workflow.Log.Started = 已启动工作流
Java.Workflow.Manual.AtLeastOne = 至少必须有 1 个触发器或超时值
Java.Workflow.MessageStep.DestinationId = 必须指定目标ID。
Java.Workflow.MessageStep.DestinationNotFound = 目标ID {0}与配置的任何目标都不匹配。有效项{1}
Java.Workflow.MessageStep.EventName = 必须指定事件名称。
Java.Workflow.Notification.DisplayName = 通知
Java.Workflow.Script.Enter.DisplayName = 进入
Java.Workflow.Script.Exit.DisplayName = 退出
Java.Workflow.Script.Finish.DisplayName = 结束
Java.Workflow.Script.Init.DisplayName = 初始化
Java.Workflow.Step.Definition.NotFound = 未找到工作流{0}版本{1}中的步骤“{2}”的定义
Java.Workflow.Symbol.DisplayName = 符号({0}\:{1}\:{2})
Java.Workflow.Symbol.Expression = 计算表达式“{0}”的值时出错： {1}
Java.Workflow.Symbol.ExpressionType = 定义的类型与计算出的表达式类型不同（定义的类型\=“{0}”，计算出的类型\=“{1}”）
Java.Workflow.Symbol.InvalidType = 无效符号类型： {0}
Java.Workflow.Symbol.Name = 名称不能为空
Java.Workflow.Symbol.Value = 值不能为空
Java.Workflow.Trigger.Invalid = 无效的工作流触发器ID“{0}”：必须与工作流触发器键值类型列表中的某一代码对应。是否忘记将其添加到列表？
Java.Workflow.Trigger.Unavaliable = 请求的触发器无效
Java.WorkflowAssert.EmptyCondition = Assert条件为空
Java.WorkflowEvent.BlankEventName = 事件名称为空
Java.WorkflowEvent.EntityNotEntity = 无效事件，符号{0}不是实体
Java.WorkflowEvent.EntityNotFound = 无效实体，“{0}”无效或未找到
Java.WorkflowEvent.EventNameSize = 事件名称长度不能超过{0}个字符。
Java.WorkflowEvent.EventNotFound = 事件{0}在“{1}”上未定义
Java.WorkflowEvent.NoEventsOnEntity = {0}实体不支持事件
Java.WorkflowProcess.Locale.Expression = 无效区域设置Gosu“{0}”：{1}
Java.WorkflowProcess.Locale.Type = 无效区域设置，表达式是{0}而非ILocale
Java.WorkflowProcess.NoOutcome = 工作流中至少应有一个结果步骤。
Java.WorkflowProcess.SubType.Abstract = 无效子类型： {0}子类型为抽象，正在中止验证。
Java.WorkflowProcess.SubType.Error = 无效子类型： {0}，正在中止验证。
Java.WorkflowScript.Exppression.Boolean = 无效的{0}表达式“{1}”\:要求布尔表达式
Java.WorkflowScript.Exppression.Comments = 无效的{0}表达式“{1}”：表达式不能包含注释。
Java.WorkflowScript.Exppression.ElementName.AssertCondition = Assert条件
Java.WorkflowScript.Exppression.ElementName.GoIfCondition = If条件
Java.WorkflowScript.Exppression.ElementName.TriggerAvailable = Available条件
Java.WorkflowScript.Exppression.ElementName.TriggerPermission = 触发器权限
Java.WorkflowScript.Exppression.Gosu = 无效的{0}表达式“{1}”  Gosu错误：{2}
Java.WorkflowScript.Gosu = 无效Gosu“{0}”：{1}
Java.WorkflowStep.BlankID = 步骤ID不能为空
Java.WorkflowStep.Branch.Next = 无效的nextStep“{0}”：在此工作流流程中不存在步骤
Java.WorkflowStep.DuplicateBranch = 重复分支{0}
Java.WorkflowStep.DuplicateEvent = “{1}”上存在重复事件{0}
Java.WorkflowStep.DuplicateLocale = 重复区域设置{0}
Java.WorkflowStep.Localization = 区域设置“{0}”未定义
Java.WorkflowStep.MaxIDLength = 步骤ID超过最大长度{0}
Java.WorkflowTimeout.Absolute.Gosu = 无效的timeAbsolute表达式： {0}
Java.WorkflowTimeout.Absolute.Type = timeAbsolute必须为返回日期时间的有效Gosu表达式
Java.WorkflowTimeout.Both = 不能同时指定timeDelta和timeAbsolute
Java.WorkflowTimeout.Delta.Gosu = 无效的timeDelta表达式： {0}
Java.WorkflowTimeout.Neitier = 必须指定timeDelta或timeAbsolute
Java.WorkflowTriggerAvailable.Empty = 请为Available条件提供一个表达式或移除该表达式。
Java.WorkflowValidationException.ActivityApproval = 批准活动导致工作流校验异常
Java.WorkflowValidationException.ActivityDecline = 拒绝活动导致工作流校验异常
Java.WorkflowValidationException.ActivityRequestChanges = 请求更改活动导致工作流校验异常
Java.WorkflowVerify.InvalidFilename = 子类型为“{0}”且版本为“{1}”的工作流进程的文件名应为“{2}”，但其名称为“{3}”
Java.WorkflowVerify.InvalidSubtype = 处理工作流进程“{0}”找不到子类型“{1}”。该子类型是否已删除？
Java.WorkflowVerify.NoDefForSubtype = 工作流子类型“{0}”被定义为非外部类型，但是未定义脚本或者脚本无法解析。请检查日志，确认是否存在任何解析失败。
Java.Workflows.Error = 出错
Java.Workflows.Started = 已启动
Java.Workflows.Waiting = 等待时间超过{0}天
Java.Workflows.Waiting5Days = 等待时间超过5天
Java.XML.AttributeContainsInvalidCharacters = 元素“{1}”中的属性“{0}”包含无效字符。
Java.XML.AttributeProhibited = 元素“{1}”中的属性“{0}”被禁止。
Java.XML.AttributeRequired = 元素“{1}”中的属性“{0}”为必需项。
Java.XML.AttributeWrongEnumerationValue = 元素“{2}”中属性“{1}”的值（“{0}”）必须为枚举{3}的有效成员。
Java.XML.AttributeWrongType = 元素“{1}”中的属性“{0}”必须为{2}值。
Java.XML.CannotHaveChildrenOfType = 不能具有[{0}({1})]类型的子项
Java.XML.CannotHaveTextContent = 不能具有任何文本内容
Java.XML.DoesNotDefineAttribute = 未定义任何名为“{0}”的属性
Java.XML.ElementCanOnlyAppearOnce = 元素“{0}”只能作为子项出现一次。
Java.XML.ElementRequired = 元素“{0}”作为子项是必需项。
Java.XML.ErrorAt = {0}[行： {1}, 列{2}]
Java.XML.ErrorIn = 位置
Java.XML.IllegalOrdering = 元素{0}发现非法顺序
Java.XML.MustBeAtLeast = 至少必须有{0}个类型{1}的子元素
Java.XML.MustBeAtMost = 最多可有{0}个类型{1}的子元素
Java.XML.NodeMustHaveValue = 该节点必须有值
Java.XML.UnknownChildElement = {0}： 未知子元素“{1}”
Java.ZoneImport.InvalidData.Size = 数据无效，此行（行号{0}）格式错误或其中的区域数不正确（“{1}”）：{2}
Java.ZoneImport.ReaderCloseError = 关闭输入流时出错
Java.ZoneImport.StagingNotConfigured = 未为区域导入配置分期
Javascript.Calendar.Date = 日期
Javascript.Calendar.Time = 时间
Javascript.Calendar.Today = 今天
Javascript.Calendar.ValidDateCharacters = 0123456789 \:/AaPpMm
Job.Cancellation.CancellationForRenewal = 已对计划续保的保单开始取消
Job.Cancellation.Error.AlreadyCanceled = 保单已在该日期取消
Job.Cancellation.Error.IssuePolicy = 取消日期不为空，因此取消无法签发
Job.Cancellation.Error.NoCancelPermission = 用户没有取消此期限的权限
Job.Cancellation.Escalation.CannotCancel = 无法取消保单期限{0}
Job.Cancellation.Escalation.Reason.UnhandledPreemptions = 此保单交易有未处理的优先权
Job.Cancellation.History.Reschedule = 已为{0}重新计划取消
Job.Cancellation.OpenRenewal = 已对具有未完成续保的{0}号保单启动取消。
Job.Cancellation.RenewalToBeRewritten = 保单号{0}的重新填写
Job.Cancellation.RenewalToBeRewritten.Description = 此保单已取消，必须重新填写
Job.CopyPolicyData.History.Description = 数据已从{0} #{1}复制到{2} #{3}
Job.CopyPolicyData.History.Description.WithSourcePolicy = 数据已从保单#{4} {0} #{1}复制到{2} #{3}
Job.DividePolicy.Split.Activity.Description = 保单号#{0}已拆分为两个新的投保单。您可能要计划取消。
Job.DividePolicy.Split.Activity.Subject = 保单号{0}已拆分
Job.Error.ContingencyActionForUnboundJob = 无法执行事故操作，因为保单交易尚未被承保
Job.Error.EnterValidEffectiveDate = 请输入有效的生效日期
Job.Error.FailedToStartJobForContingency = 无法启动保单交易来处理未解决的事故
Job.Error.NoAuditPermission = 用户无权创建审计交易
Job.Error.NoChangePermission = 用户无权更改此期间
Job.Error.NoIssuancePermission = 用户无权创建出单交易
Job.Error.NoPeriodForEffectiveDate = 没有适用于此生效日期的期限
Job.Error.OpenIssuanceJob = 存在未完成的出单交易
Job.Error.OpenRewriteJob = 存在未完成重新填写交易
Job.Error.OtherOpenJobs = “此保单有其它待处理交易”
Job.Error.PolicyIssuedAlready = 保单已签发
Job.Error.PolicyNotCanceled = 保单未取消
Job.Error.PolicyNotIssued = 保单未签发
Job.Error.PolicyPeriodArchivedInBillingSystem = 不能承保此保单交易，因为计费信息存档在计费系统中。
Job.Error.Preempted = 无法签发交易，因为它已被其他交易占先
Job.JobCondition.Error.NullPeriod = 附加责任为空。若无期限，“作业条件”无法正常运行。
Job.Operation.ApplyToRenewal = 将更改应用到续保
Job.Operation.ApplyToRenewal.ConfirmBound = 是否确定要启动新保单交易以将这些更改应用至续保？
Job.Operation.ApplyToRenewal.ConfirmUnbound = 是否确定将这些更改应用到取消绑定的续保？
Job.Operation.BindAndIssue = 签发保单
Job.Operation.BindAndIssue.Confirm = 是否确定要承保并签发此保单？
Job.Operation.BindOnly = 仅承保
Job.Operation.BindOnly.Confirm = 是否确定要绑定此保单而搁置出单？
Job.Operation.BindOptions = 承保选项
Job.Operation.CancelNow = 立即取消
Job.Operation.CancelPolicy = 计划取消
Job.Operation.CancelPolicy.Confirm = 是否确定要取消此保单？
Job.Operation.CancelPolicy.ConfirmBoundRenewal = 是否要取消此保单？取消也会在未来续保时启动。
Job.Operation.CancelPolicy.ConfirmUnboundRenewal = 是否确定要取消此保单？未来取消承保的续保{0}也将被撤消。
Job.Operation.CloseOptions = 关闭选项
Job.Operation.Declining = 拒绝
Job.Operation.DoNotEscalateAfterPolicyHoldReleased = 在消除搁置时允许出单
Job.Operation.Edit.Confirm = 编辑此保单交易将使当前报价无效，并且可能需要核保人重新审批。是否确定要继续？
Job.Operation.EditWorkOrder = 编辑保单交易
Job.Operation.EnterReinstating = 复效
Job.Operation.EnterReinstating.Confirm = 是否确定要复效此保单？
Job.Operation.EscalateAfterPolicyHoldReleased = 搁置释放时不要签发
Job.Operation.FinishQuote = 完成报价
Job.Operation.HandlePreemption = 处理优先权
Job.Operation.IssueNow = 立即签发
Job.Operation.IssueNow.Confirm = 是否确定要立即签发此保单？
Job.Operation.IssuePolicy = 签发保单
Job.Operation.IssuePolicy.Confirm = 是否确定要签发此保单？
Job.Operation.MultiQuote.Edit.Confirm = 至少一个版本处于“已计算保费”或“已报价”状态。编辑此保单交易将使当前报价无效，并且可能需要核保人重新审批。是否确定要继续？
Job.Operation.NotTaking = 不投保
Job.Operation.Quote = 报价
Job.Operation.QuoteAsync.Confirm = 将在后台处理报价，完成报价时会发送一个通知/活动。
Job.Operation.QuoteAsync.WorkQueue.Activity.Failed.Description = 编号为{1}的保单的{0}报价请求失败。
Job.Operation.QuoteAsync.WorkQueue.Activity.Failed.Subject = 编号为{1}的保单的{0}报价请求失败。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Failed.Description = 编号为{1}和{2}的保单的{0}报价请求失败。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Failed.Subject = 编号为{1}和{2}的保单的{0}报价请求失败。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Successful.Description = 编号为{1}和{2}的保单的{0}报价请求已完成。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Successful.Subject = 编号为{1}和{2}的保单的{0}报价请求已完成。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Description = 编号为{1}和{2}的保单的{0}报价请求已完成但有警告。
Job.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Subject = 编号为{1}和{2}的保单的{0}报价请求已完成但有警告。
Job.Operation.QuoteAsync.WorkQueue.Activity.Successful.Description = 编号为{1}的保单的{0}报价请求已完成。
Job.Operation.QuoteAsync.WorkQueue.Activity.Successful.Subject = 编号为{1}的保单的{0}报价请求已完成。
Job.Operation.QuoteAsync.WorkQueue.Activity.SuccessfulWithWarning.Description = 编号为{1}的保单的{0}报价请求已完成但有警告。
Job.Operation.QuoteAsync.WorkQueue.Activity.SuccessfulWithWarning.Subject = 编号为{1}的保单的{0}报价请求已完成但有警告。
Job.Operation.Rate = 费率
Job.Operation.RateAsync.Confirm = 将在后台处理保费计算，完成保费计算时会发送一个通知/活动。
Job.Operation.RateAsync.WorkQueue.Activity.Failed.Description = 编号为{1}的保单的{0}费率请求失败。
Job.Operation.RateAsync.WorkQueue.Activity.Failed.Subject = 编号为{1}的保单的{0}费率请求失败。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Failed.Description = 编号为{1}和{2}的保单的{0}费率请求失败。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Failed.Subject = 编号为{1}和{2}的保单的{0}费率请求失败。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Successful.Description = 编号为{1}和{2}的保单的{0}费率请求已完成。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Successful.Subject = 编号为{1}和{2}的保单的{0}费率请求已完成。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Description = 编号为{1}和{2}的保单的{0}费率请求已完成但有警告。
Job.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Subject = 编号为{1}和{2}的保单的{0}费率请求已完成但有警告。
Job.Operation.RateAsync.WorkQueue.Activity.Successful.Description = 编号为{1}的保单的{0}费率请求已完成。
Job.Operation.RateAsync.WorkQueue.Activity.Successful.Subject = 编号为{1}的保单的{0}费率请求已完成。
Job.Operation.RateAsync.WorkQueue.Activity.SuccessfulWithWarning.Description = 编号为{1}的保单的{0}费率请求已完成但有警告。
Job.Operation.RateAsync.WorkQueue.Activity.SuccessfulWithWarning.Subject = 编号为{1}的保单的{0}费率请求已完成但有警告。
Job.Operation.ReleaseLock = 释放锁定
Job.Operation.ReleaseLockInvalidatesQuoteWarning = 释放其中含有阻止报价释放的问题或已被拒绝的核保人锁定，将会导致报价无效。是否继续？
Job.Operation.RescheduleCancellation = 重新计划取消
Job.Operation.Rescind = 撤销取消
Job.Operation.SendToNonRenewal = 未续保
Job.Operation.SendToNonRenewal.Confirm = 是否确定非续保此保单？
Job.Operation.SendToNotTaken.Confirm = 是否确定不接受此保单？
Job.Operation.SendToRenewal = 续保
Job.Operation.SendToRenewal.Confirm = 是否确定要为此保单续保？
Job.Operation.Validation.ValidateOOSNotSupportedForLevel = 不支持在指定的校验证等级{0}校验无序(OOS)片段
Job.Operation.Withdraw = 撤消交易
Job.Operation.Withdraw.Confirm = 是否确定要撤消此保单交易？\n任何未保存的更改都将丢失。
Job.PaymentRequired.Activity.Description = 作业{0}已进行了付款。请检查该付款以确定它是否需要冲销，并视需要对该付款进行冲销。
Job.Process.Audit.Complete = 完成
Job.Process.Audit.CreateAuditPackage = 创建审计包
Job.Process.Audit.Edit = 编辑
Job.Process.Audit.FinishReversal = finishReversal
Job.Process.Audit.Waive = 免除
Job.Process.BeginEditing = 开始编辑
Job.Process.Bind = 承保
Job.Process.Cancellation.CrossSliceBoundaries = 分割边界
Job.Process.Cancellation.EditCancellationDate = 编辑取消日期
Job.Process.Cancellation.FinishCancellation = 完成取消
Job.Process.Cancellation.FinishRescind = 完成撤销
Job.Process.Cancellation.FinishSendingNotices = 完成发送通知
Job.Process.Cancellation.IssueCancellation = 签发取消
Job.Process.Cancellation.JobEscalation = 作业升级
Job.Process.Cancellation.RescheduleCancellation = 重新计划取消
Job.Process.Cancellation.Rescind = 撤销
Job.Process.Cancellation.ScheduleCancellation = 计划取消
Job.Process.Cancellation.ScheduleImmediateCancellation = 计划立即取消
Job.Process.Cancellation.StartCancellation = 开始取消
Job.Process.ChangeEditEffectiveDate = 更改编辑生效日期
Job.Process.CopyData = 复制数据
Job.Process.Edit = 编辑
Job.Process.Expire = 到期
Job.Process.ExpireJob = 作业到期
Job.Process.FailBind = 承保失败
Job.Process.FailIssue = 签发失败
Job.Process.FinishBinding = 完成承保
Job.Process.HandlePreemptions = 处理优先权
Job.Process.Issuance.FailingIssuing = 签发失败
Job.Process.Issuance.FinishIssuing = 完成签发
Job.Process.Issuance.Issuing = 签发
Job.Process.Issue = 签发
Job.Process.MakeNewVersion = 创建新版本
Job.Process.PolicyChange.Bind = 承保
Job.Process.PolicyChange.ChangeEditEffectiveDate = 更改保单更改的编辑生效日期
Job.Process.PolicyChange.FinishBinding = 完成承保
Job.Process.PostRatingQuote = 计算保费后报价
Job.Process.ProductModelSync.Error.SystemResources = 对保单交易{0}执行多线程产品模型可用性检查时发生系统资源错误
Job.Process.ProductModelSync.Error.Task = 对保单交易{0}执行多线程产品模型可用性检查时任务执行失败
Job.Process.ProductModelSync.UserMessage = 对于保单交易{0}，无法完成产品模型同步。如果问题依然存在，请重试或联系管理员。
Job.Process.Quote = 报价
Job.Process.Rate = 费率
Job.Process.Reinstatement.FinishReinstatement = 完成复效
Job.Process.Reinstatement.Reinstate = 复效
Job.Process.Renewal.EditInWorkflow = editInWorkflow
Job.Process.Renewal.FinishRenewal = 完成续保
Job.Process.Renewal.ImmediateBind = 立即承保
Job.Process.Renewal.IssueRenewal = 签发续保
Job.Process.Renewal.JobEscalation = 作业升级
Job.Process.Renewal.ManuallyQuote = 手动报价
Job.Process.Renewal.NonRenew = 非续保
Job.Process.Renewal.PendingNonRenew = 待处理非续保
Job.Process.Renewal.PendingNotTaken = 待处理未接受
Job.Process.Renewal.PendingRenew = 待续保
Job.Process.Renewal.SendNonRenewalDoc = 发送非续保单证
Job.Process.Renewal.SendRenewalDoc = 发送续保单证
Job.Process.Renewal.StartOrAssign = 开始或进行分配
Job.Process.Review = 审查
Job.Process.Rewrite.FailRewrite = 重新填写失败
Job.Process.Rewrite.FinishRewrite = 完成重新填写
Job.Process.Rewrite.Rewrite = 重新填写
Job.Process.RewriteNewAccount.FinishRewrite = 完成rewriteNewAccount
Job.Process.RewriteNewAccount.RewriteNew = rewriteNewAccount
Job.Process.StartJob = 开始作业
Job.Process.Submission.ConvertToFullApp = 转换为完全应用
Job.Process.Submission.Decline = 拒保
Job.Process.Submission.DeclineJob = 拒绝作业
Job.Process.Submission.FinishBinding = 完成承保
Job.Process.Submission.FinishIssuing = 完成签发
Job.Process.Submission.NotTake = 未接受
Job.Process.Submission.NotTakeJob = 未接受作业
Job.Process.Submission.SaveDraft = 保存草案
Job.Process.Withdraw = 撤消
Job.Process.WithdrawJob = 撤消作业
Job.Process.WithdrawOther = 撤消其它活动期间
Job.Reinstatement.Error.NoRecentBoundPeriod = 找不到最近的承保期间
Job.Reinstatement.Error.NoReinstatePermission = 用户没有复效此期间的权限
Job.Reinstatement.Error.OpenReinstate = 存在待复效交易
Job.Reinstatement.Error.OverlapPeriod = 复效期限与之前绑定的期限之间有重叠
Job.Renewal.Error.ConversionOnRenewalFailure = 创建保单号{0}的续保时出现问题
Job.Renewal.Error.NoCreateRenewPermission = 用户无权创建续保
Job.Renewal.Error.NoPeriod = 没有用于此保单的期间
Job.Renewal.Error.NoRenewPermission = 用户无权续保此期间
Job.Renewal.Error.OpenRenewal = 存在待续保交易
Job.Renewal.Error.PolicyCanceled = 保单已取消
Job.Renewal.Escalation.ActivityHeader = 此待处理{0}的自动处理因下列原因而无法继续：\n{1}
Job.Renewal.Escalation.JobState.NonRenewing = 非续保
Job.Renewal.Escalation.JobState.NotTaking = 非续保
Job.Renewal.Escalation.JobState.Renewing = 续保
Job.Renewal.Escalation.Reason.InvalidQuote = 无效报价
Job.Renewal.Escalation.Reason.NonRenewLeadTime = 发送非续保通知的前置时间不足
Job.Renewal.Escalation.Reason.NonRenewalRefer = 已对非续保请求转交
Job.Renewal.Escalation.Reason.OpenCancellation = 之前期限中有未完成的取消
Job.Renewal.Escalation.Reason.Other = 其它问题
Job.Renewal.Escalation.Reason.ReferralRequested = 转交已请求到{0}
Job.Renewal.Escalation.Reason.UWIssues = 风险配置文件和/或财务审批权限
Job.Renewal.Escalation.Reason.UnhandledPreemptions = 此保单交易有未处理的优先权
Job.Renewal.Escalation.Reason.ValidationErrors = 校验错误
Job.Renewal.Escalation.Subject.NonRenewing = 已阻止 - 待处理非续保{0} - 需要操作
Job.Renewal.Escalation.Subject.NotTaking = 已阻止 - 待处理未提供续保{0} - 需要操作
Job.Renewal.Escalation.Subject.Renewing = 已阻止 - 待续保{0} - 需要操作
Job.Renewal.History.Button.EditFromWorkflow = 正在编辑状态为“{1}”的续保“{0}”。
Job.Renewal.History.Button.ImmediateIssue = 续保“{0}”将立即签发。
Job.Renewal.History.Button.PendingNonRenew = 状态为“{1}”的续保“{0}”是待处理非续保。
Job.Renewal.History.Button.PendingNotTaken = 状态为“{1}”的续保“{0}”正等待不接受。
Job.Renewal.History.Button.PendingRenewal = 状态为“{1}”的续保“{0}”为待处理续保。
Job.Renewal.History.Escalated = 状态为“{1}”的续保{0}已升级。
Job.Renewal.History.FixedProductModelIssue = 已在续保{0}开始时发现并修复产品模型同步问题：￥{1}
Job.Renewal.History.Issued = 续保“{0}”已完成签发。
Job.Renewal.History.NonRenewPopup = 续保信息已编辑。
Job.Renewal.History.NonRenewed = 续保“{0}”已完成非续保。
Job.Renewal.History.NotTaken = 续保“{0}”已完成不接受。
Job.Renewal.History.PreRenewalDirection.PendingNonRenewal = 根据续保前说明，续保“{0}”为待处理非续保。
Job.Renewal.History.PreRenewalDirection.PendingNotTaken = 根据续保前说明，续保“{0}”正等待不采用处理。
Job.Renewal.History.Quoted = 续保“{0}”已完成报价，正等待续保。
Job.Renewal.History.Withdrawn = 已撤消状态为“{1}”的续保“{0}”。
Job.Renewal.Process.AlreadyHasRenewalNotificationDate = 已有续保通知日期
Job.Renewal.Process.HasActiveRenewalWorkflow = 具有活动的续保工作流
Job.Renewal.Process.NoActiveRenewalWorkflow = 没有活动的续保工作流
Job.Renewal.Process.PeriodEndNotSet = 期限结束日期未设置
Job.Renewal.Process.PeriodStartNotSet = 未设置期间开始日期
Job.Renewal.Process.WorkflowNotInAStateThatAllowsWithdraw = 续保工作流不在允许撤消的省/直辖市
Job.Review.Activity.Description = 保单交易需要核保审批。
Job.Review.Activity.Subject = 请审查{0}
Job.Rewrite.Error.EffectiveBeforeCancelDate = 生效日期不能早于取消日期
Job.Rewrite.Error.NoRewritePermission = 用户没有重新填写此期限的权限
Job.Rewrite.Error.OpenJobs = 此保单有审计以外的其它未完成保单交易
Job.Rewrite.Error.OverlapPeriod = 重新填写期限与之前绑定期限之间有重叠
Job.RewriteNewAccount.Activity.Description = 需要完成新账户保单交易的重新填写操作。
Job.RewriteNewAccount.Activity.Description.OpenActivities = 保单号{0}仍有未完成的活动，这些活动将随其保单保留。
Job.RewriteNewAccount.Activity.Subject = 从{2}号保单的源账户{1}重新填写新账户{0}
Job.RewriteNewAccount.Error.CanceledAndExistingRewriteNewAccountJob = 具有开始日期更早的重新填写新账户交易
Job.RewriteNewAccount.Error.ExistingRewriteNewAccountJob = 保单已重新填写新账户
Job.RewriteNewAccount.Error.ExpirationLaterThanRewriteEffectiveDate = 此保单已重新填写新账户。此保单的到期日期不能晚于该保单的生效日期：{0}。
Job.RewriteNewAccount.Error.NoPermission = 用户没有重新填写此期限的权限
Job.RewriteNewAccount.Error.NotCanceledOrExpired = 保单未取消或在{0}到期
Job.RewriteNewAccount.Error.OpenJobs = 此保单有审计以外的其它待处理保单交易
Job.RewriteNewAccount.Error.OpenRewriteNewAccountJob = 另一账户上存在待重新填写的交易
Job.RewriteNewAccount.Error.PeriodStartAfterDestinationStart = 此保单已重新填写新账户。此保单交易的生效日期必须早于该保单的开始日期：{0}。
Job.RewriteNewAccount.Error.PeriodStartBeforeSourceExpiration = 此保单已通过旧账户重新填写。此保单的开始日期不能早于该保单的承保范围结束日期：{0}.
Job.RewriteNewAccount.Error.PeriodsFromSamePolicy = 无法开始新账户保单交易的重新填写操作。选定了同一保单的多个附加责任。
Job.RewriteNewAccount.Error.PolicyInForce = 保单在请求的重新填写日期后生效
Job.RewriteNewAccount.Error.SameAccount = 无法将新账户重新填写同一账户
Job.RewriteNewAccount.History.SourceAccount.Description = 已启动保单交易将保单{0}重新填写到账户{1}
Job.RewriteNewAccount.History.TargetAccount.Description = 保单{0}已从账户{1}重新填写此账户
Job.ViewPolicyFileDetails = 查看保单文件详细信息
Job.Withdraw.Error.NoActivePeriods = 因期间无效而无法撤消保单交易
JobAPI.Error.InvalidJob = 未找到ID为{0}的作业。
JobAPI.Error.InvalidQueue = 未找到ID为{0}的队列。
LITERAL = {0}
LV.Admin.Holidays.Date = 日期
LV.Admin.Holidays.Name = 假期
LV.Admin.Holidays.Tags = 类型
LV.Admin.Holidays.Zones = 区域
LV.Admin.Regions.Name = 名称
LV.Admin.Regions.Organization = 机构
LV.Admin.Regions.Type = 类型
LV.Admin.Regions.Zones = 覆盖区域
LV.Admin.ScriptParameters.Description = 说明
LV.Admin.ScriptParameters.Name = 名称
LV.Admin.ScriptParameters.Type = 类型
LV.Admin.ScriptParameters.Value = 值
LargeLoss.ActivityDescription = 此保单的{1}上报告的{0}发生额总计。
LargeLoss.ActivitySubject = 关于保单{0}的大额损失警示
LargeLoss.ClaimExceedsThreshold.NoPolicyFound = 找不到起始日期为{1}的保单“{0}”
LargeLoss.Description = {1}上报告的{0}发生额总计
LogViewer.Button = 以数据流方式在弹出菜单中显示完整日志
LogViewer.Title = 查看{0}
LookupTable.Exception.Exception.QueryError = 针对表“{0}”进行的查找导致异常。已生成如下所示的异常：{1}
LookupTable.Execution.Exception.InputCountNotMatch = 无法完成表“{0}”的查找请求。在验证中找到的输入列数与定义中的计数不匹配。应当为：{1}，实际为：{2}。
LookupTable.Execution.Exception.InputIsWrong = 无法完成表“{0}”的查找请求。在查找注册表中找不到名称为“{1}”和数据类型为“{2}”的输入列。请检查列名和数据类型是否一致。
LookupTable.Execution.Exception.InputsHasDuplicates = 无法完成表“{0}”的查找请求。输入负载中出现了多次列名相同的列。已生成如下所示的异常：{1}
LookupTable.Execution.Exception.NullColumns = 无法完成表代码“{0}”的查找请求验证。为查找表传入的值为null。请检查该请求。
LookupTable.Execution.Exception.NullTableCode = 无法完成查找请求验证。为查找表传入的值为null。请检查该请求。
LookupTable.Execution.Exception.SystemTableEntityIsNotFound = 查找表“{0}”无效。找不到关联的查找实体“{1}”。请考虑：(1) 更新查找表，使其指向现有的查找实体；(2) 创建缺少的查找实体。
LookupTable.Execution.Exception.TableCodeIsWrong = 无法完成查找请求。找不到查找表代码“{0}”。请考虑在查找注册表中创建此查找。
LookupTable.Execution.ExistenceColumn.ColumnName = 存在性检查
Merge.Error.ArgumentEffdated = 实际参数“parent”不能为EffDated。
Merge.Error.DuplicateChildren = 可合并的“{1}”上类型为{0}的子项重复。
Merge.Error.InvalidType = merge()的实际参数的类型必须为{0}; 获得的实际参数类型为{1}。
Merge.Error.SameArgument = 尝试将{0}： “{1}”与自身合并。
Merge.Error.SingletonRole = 无法合并保单角色{0}; 该角色是单身角色，保单中不能包含多个此类角色。
Mimetype.application_csv = CSV（逗号分隔值）
Mimetype.application_msword = Microsoft Word文档
Mimetype.application_octet_stream = OCTET流
Mimetype.application_pdf = PDF
Mimetype.application_postscript = 附言
Mimetype.application_rtf = RTF格式
Mimetype.application_vnd.ms_excel = Microsoft Excel工作表
Mimetype.application_vnd.ms_powerpoint = Power Point
Mimetype.application_vnd.openxmlformats_officedocument.presentationml.presentation = Open XML演示文稿
Mimetype.application_vnd.openxmlformats_officedocument.spreadsheetml.sheet = Open XML电子表格
Mimetype.application_vnd.openxmlformats_officedocument.wordprocessingml.document = Open XML Word文档
Mimetype.application_x_msexcel = Microsoft Excel工作表(Windows 98)
Mimetype.audio_wav = 波形音频
Mimetype.audio_x_ms_wma = Microsoft音频
Mimetype.image_bmp = 位图图像
Mimetype.image_gif = GIF图像
Mimetype.image_jpeg = JPEG图像
Mimetype.image_pjpeg = 渐进式JPEG图像
Mimetype.image_png = PNG图像
Mimetype.image_tiff = TIFF图像
Mimetype.image_vnd.ms_modi = Microsoft MODI
Mimetype.image_x_png = X-PNG图像
Mimetype.text_html = HTML
Mimetype.text_plain = 纯文本
Mimetype.text_richtext = RTF
Mimetype.text_xml = XML
Mimetype.video_mpeg = MPEG视频
Mimetype.video_quicktime = QuickTime视频
Mimetype.video_x_msvideo = Microsoft视频
ModifiableAdapter.Error.ReferenceDateNotPersisted = 引用日期不能存留在生效日期字段中
ModifierAdapter.Error.BAVehicleRateFactorsNotDefined = 未对商务车定义费率因子实体
Multicluster.FederatedData.EmptyResponse = "从Federated Data Service收到空实体。如果问题持续存在，请联系管理员以调查问题原因。"
Multicluster.FederatedData.NoConnection = "未连接Federated Data Service，请联系管理员以调查问题原因。\n桌面数据将不可用。"
Multicluster.FederatedData.NotOkMessage = "Federated Data Service问题。状态代码：{0} 消息：{1}"
Multicluster.Job.Assignment.Fail = "无法分配作业。\n请重试；如果问题持续存在，请与系统管理员联系"
Multicluster.Job.Assignment.NotFound = "分配作业时失败：{0}"
Multicluster.Job.Assignment.ServiceUnavailable = "服务不可用 - 分配作业时失败：{0}"
Multicluster.OAuth.NoConnection = "未连接授权服务，请联系管理员以调查问题原因。\n桌面数据将不可用。"
Multicluster.Resolver.EmptyResponse = "从解析程序服务收到空实体。如果问题持续存在，请联系管理员以调查问题原因。"
Multicluster.Resolver.NoConnection = "未连接解析程序服务，请联系管理员以调查问题原因。\n桌面数据将不可用。"
Multicluster.Resolver.NotOkMessage = "解析程序服务问题。状态代码：{0} 消息：{1}"
NVV.Admin.ScriptParameter.BitValue = 值
NVV.Admin.ScriptParameter.DatetimeValue = 值
NVV.Admin.ScriptParameter.DecimalValue = 值
NVV.Admin.ScriptParameter.GroupIDValue = 值
NVV.Admin.ScriptParameter.IntegerValue = 值
NVV.Admin.ScriptParameter.MoneyValue = 值
NVV.Admin.ScriptParameter.MonthlyfrequencyValue = 值
NVV.Admin.ScriptParameter.Name = 名称
NVV.Admin.ScriptParameter.NonnegativeintegerValue = 值
NVV.Admin.ScriptParameter.NonnegativemoneyValue = 值
NVV.Admin.ScriptParameter.PercentageValue = 值
NVV.Admin.ScriptParameter.PercentagedecValue = 值
NVV.Admin.ScriptParameter.PhoneValue = 值
NVV.Admin.ScriptParameter.PositiveintegerValue = 值
NVV.Admin.ScriptParameter.PositivemoneyValue = 值
NVV.Admin.ScriptParameter.PostalcodeValue = 值
NVV.Admin.ScriptParameter.RiskValue = 值
NVV.Admin.ScriptParameter.SpeedValue = 值
NVV.Admin.ScriptParameter.Type = 类型
NVV.Admin.ScriptParameter.UserIDValue = 值
NVV.Admin.ScriptParameter.VarcharValue = 值
NVV.Admin.ScriptParameter.WeeklyfrequencyValue = 值
NVV.Admin.ScriptParameter.YearValue = 值
NVV.Admin.UserProfile.AdminUserDetails.Department = 部门
NVV.Admin.UserProfile.AdminUserDetails.Title = 职称
NVV.Admin.UserProfile.AdminUserProfile.Email1 = 电子邮箱
NotUsed.Java.Login.AlreadyLoggedIn = 警告！此用户已在其它位置登录。\n单击“登录”可取消另一个用户会话并仍以该用户登录，\n也可以单击“更改用户”用另一个用户名登录。
NotUsed.Java.Login.CredentialLocked.Manual = 此用户的账户已锁定。请联系系统管理员。
NotUsed.Java.Login.CredentialLocked.Temp = 此用户账户将临时禁用{0}秒。
NotUsed.Java.Login.InactiveUser = 此用户账户处于不活动状态。
NotUsed.Java.Login.InvalidInfo = 提交的用户名/密码无效。
Note.UnknownLevel = 备注级别的值类型未知！！！
NoteAPI.ExceptionCaught = 在{0}上捕获。
NoteUsed.Java.Login.WaitToRetry = 必须稍候片刻，然后才能再次尝试登录。
NotificationPlugin.Error.ActionType.NoMatch = 生效日期{0}、险种{1}、管辖权{2}和通知操作类型{3}没有匹配的通知配置
NotificationPlugin.Error.ActionType.NullValue = 用于通知配置查找的通知操作类型应为非空
NotificationPlugin.Error.Category.NoMatch = 生效日期{0}、险种{1}、管辖权{2}和通知类别{3}没有匹配的通知配置
NotificationPlugin.Error.Category.NullValue = 通知配置查找应为非空通知类别
NotificationPlugin.Error.Jurisdictions.Empty = 用于通知配置查找的险种{0}应至少有一个管辖权
NotificationPlugin.Error.Jurisdictions.NullValue = 用于通知配置查找的险种{0}应有一个非空管辖权
NotificationPlugin.Error.PolicyLinePatterns.Empty = 预期至少有一个险种用于通知配置查找
NotificationPlugin.Error.PolicyLinePatterns.NullValue = 用于通知配置查找的险种应为非空
OrganizationModel.populateOrganization.Error.CannotFindForeignKeyBeanWithPublicID = 无法将外键设置为{0}，因为未找到具有publicID{1}的{0}。
OrganizationModel.populateOrganization.Error.ForeignKeyCannotBeNull = {1}的{0}不能为null
OutboundFile.BatchID = 批处理ID
OutboundFile.Config = 配置
OutboundFile.Config.DaysTillPurge = 清除前的剩余天数
OutboundFile.Config.Extension = 扩展
OutboundFile.Config.HandlerClass = 文件处理程序类
OutboundFile.Config.HandlerClass.Full = 类的完全限定名称
OutboundFile.Config.LocalConfig = 本地存储配置
OutboundFile.Config.Name = 名称
OutboundFile.Config.New = 新出站文件配置
OutboundFile.Config.OutboundFileConfig = 出站文件配置
OutboundFile.Config.PermanentBucket = 永久目录存储桶
OutboundFile.Config.PermanentDirectory = 永久目录
OutboundFile.Config.PermanentPrefix = 永久目录前缀（目录路径）
OutboundFile.Config.Prefix = 前缀
OutboundFile.Config.S3Config = Amazon S3存储配置
OutboundFile.Config.TemporaryDirectory = 临时目录
OutboundFile.Config.Title = 出站文件配置
OutboundFile.Config.UserProfile = Amazon用户配置文件名称
OutboundFile.CreateDate = 创建日期
OutboundFile.DateRangeEnd = 到
OutboundFile.DateRangeStart = 创建日期 - 从
OutboundFile.FileName = 文件名
OutboundFile.FileStatus = 文件状态
OutboundFile.OutboundFileCard.Title = 出站文件
OutboundFile.OutboundRecordCard.Title = 未处理的记录
OutboundFile.Page.Title = 出站文件
OutboundFile.PurgeDate = 清除日期
OutboundFile.RecordDetails = 记录详细信息
OutboundFile.Search.Title = 文件{0}
OutboundRecord.Content = 内容物
OutboundRecord.CreateDate = 创建日期
OutboundRecord.DateRangeStart = 创建日期 - 从
OutboundRecord.Edit.Record.Title = 编辑记录
OutboundRecord.ErrorMessage = 错误消息
OutboundRecord.LastModifiedDate = 上次修改日期
OutboundRecord.LastModifiedUser = 上次修改者
OutboundRecord.PurgeDate = 清除日期
OutboundRecord.SetStatus = 将状态设置为{0}
OutboundRecord.Skip = 跳过
OutboundRecord.Skip.ConfirmationMessage = 是否确定要跳过此记录？该记录将变为可以清除：{0}
OutboundRecord.Status = 状态
PersonalAuto.Location.CannotDelete.HasFutureVehicles = 以下车辆会在之后的日期停放在此地点，必须先移除：{1}上的{0}。
PersonalAuto.Location.CannotDelete.HasVehicles = 下列车辆停在此地点，必须先移除： {0}.
PersonalAuto.Vehicle.AdditionalInterest.Error.AdditionalInterestIsWrongType = 个人汽车其他权益方的类型必须为PAVhcleAddlInterest，但找到类型却是{0}
PersonalAuto.Vehicle.AdditionalInterest.LVLabel = 个人车辆
PersonalData.Error.Missing.Implement = 个人数据配置错误；“{0}”具有一个或多个标记为PersonalData的字段，但既未实施Obfuscatable又未扩展PersonalDataObfuscator
PersonalData.Error.NullEntity = 实体为空，请传入有效的实体。
PersonalData.Error.ObfuscateNotImplemented = 不支持对“{0}”进行混淆
PersonalData.Error.ObfuscatedCredential = 混淆的证书无法再激活
PersonalData.Error.Tag.Value = 个人数据配置错误；“{0}.{1}”被标记为PersonalData，但包含无法识别的标记值“{2}”。
PersonalData.Error.Tag.Value.Empty = 个人数据配置错误；“{0}.{1}”被标记为PersonalData，但标记值为空。
PersonalData.Message.DownStreamSystemPayload = 个人数据清除-“{0}”：“{1}”“{2}”
PersonalData.NotifyProtectionOfficer.DuplicateABUID.Message = 有多个联系人具有ABUID“{0}”。其中一个已经销毁，清除其他联系人的请求已排队。
PersonalData.NotifyProtectionOfficer.DuplicateABUID.Title = 正在清除重复的ABUID
PersonalData.NotifyProtectionOfficer.MustDestroyError.Description = 数据销毁请求未完成。需要干预。\n\n有关详细信息，请查看标题和附加的备注。
PersonalData.NotifyProtectionOfficer.Obfuscation.MustNotDestroy.Message = {0}“{1}”标记有错误：无法对“{2}”进行混淆，因为PersonalDataDestruction插件处理为MUST_NOT_DESTROY
PersonalData.NotifyProtectionOfficer.Obfuscation.MustNotDestroy.Title = 无法完成{0}“{1}”的混淆请求
PersonalData.Obfuscator.Exception.DoNotDestroyIsSet = 无法混淆类型为“{0}”、ID 为“{1}”且设置了DoNotDestroy标志的实体
PersonalData.Obfuscator.Exception.EmptyValue = 字段“{0}”的个人数据标记没有值
PersonalData.Obfuscator.Exception.UnknownValue = 字段“{0}”的个人数据标记具有未知值“{1}”
Phone.Country = 国家/地区代码
PluginHandler.MayNotBeNull = 插件{0}的pluginCallbackHandler可能不为null
PluginHandler.StateOfPlugin = 插件{0}的状态为{1}
Policy.AddReferralReason.InvalidIssueTypeCode = 代码为“{0}”的核保项类型不适用于转交检查点。
Policy.AddReferralReason.MissingIssueTypeCode = 必须具有“issueTypeCode”实际参数才可将转交原因添加到保单。
Policy.AddReferralReason.MissingKey = 必须具有“key”实际参数才可将转交原因添加到保单。
Policy.AddReferralReason.NonexistentIssueTypeCode = 不存在代码为“{0}”的核保项类型。
PolicyAPI.ActivityPattern.NotFound = 无法找到类型为{0}代码为{1}的活动模式。
PolicyAPI.Error.InvalidPolicyPublicId = 无法将“{0}”从字符串转换为保单：未找到此类公共ID
PolicyAPI.Error.InvalidProducerCode = 未找到ID为{0}的经理人代码。
PolicyAPI.Error.InvalidQueue = 未找到ID为{0}的队列。
PolicyChange.Description.UnresolvedContingency = 未解决的事故
PolicyChange.History.ChangedEditEffectiveDate = 编辑生效日期，从{0}改为{1}
PolicyChange.History.JobCreated = 保单更改已创建
PolicyChange.IssuePolicyChange.Failed.Description = 外部系统指示保单更改承保失败。
PolicyChange.IssuePolicyChange.Failed.Subject = 绑定保单更改失败
PolicyChangeAPI.Error.CannotStart = 无法启动保单更改{0}
PolicyChangeAPI.Error.InvalidPolicyNumber = 找不到编号为{0}的保单
PolicyHold.Released.Activity.Description = 阻止该保单交易进展的保单搁置{0}已修改，不再阻止它。您可以继续处理保单交易。
PolicyHold.Released.Activity.Subject = 保单搁置{0}已释放
PolicyLineMethods.Error.MustOverride.BaseStateRequired = 子类必须覆盖BaseStateRequired属性
PolicyLineMethods.Error.MustOverride.CoveredStates = 子类必须覆盖CoveredStates属性
PolicyLineMethods.Error.MustOverride.GetAllCostsForCoverage = 子类必须覆盖getAllCostsForCoverage方法
PolicyPeriod.PeriodDisplayStatus.Canceled = 已取消
PolicyPeriod.PeriodDisplayStatus.Expired = 已到期
PolicyPeriod.PeriodDisplayStatus.InForce = 已生效
PolicyPeriod.PeriodDisplayStatus.InForceOrScheduled = 生效/已计列
PolicyPeriod.PeriodDisplayStatus.Scheduled = 已计列
PolicyPeriod.PurgeFlag.HandlingPreemptionReason = 处理优先权时发生更改
PolicyPeriod.Quote.Requesting.Done = {0}完成
PolicyPeriod.Quote.Requesting.Synchronously = 正在同步请求{0}的报价...
PolicyPeriod.Quote.Transactions.Calculating = 正在计算交易，根据...
PolicyPeriod.Quote.Transactions.Done = {0}完成
PolicyPeriod.UWCompany.MultipleApplicableRatingFactors = 为同一个核保公司({0})、产品({1})、省/直辖市{2})和生效日期({3})找到多个适用的费率因子
PolicyPeriod.UWCompany.NoLicensedStates = 没有为生效日期{3}、省{2}、险类{1}、核保公司{0}找到省驾驶证。
PolicyPeriod.UnassignedPolicyNumberIdentifier = 未分配
PolicyPeriodAPI.AddDocument.Error.PolicyPeriodArchived = 无法向保单期间{0}添加凭证，因为该期间已存档
PolicyPeriodAPI.AddNote.Error.PolicyPeriodArchived = 无法向保单期间{0}添加备注，因为该期间已存档
PolicyRenewalAPI.ConfirmTerm.Error.TermNotBound = 期限{0}尚未绑定。
PolicyRenewalAPI.ConfirmTerm.Error.TermNotFound = 无法找到保单号为{0}且期限数为{1}的期限
PolicyRenewalAPI.Error.AccountNotFound = 无法找到编号为{0}的账户
PolicyRenewalAPI.Error.ParseError = 无法将形式参数名称"{0}"形式参数值"{1}"解析为日期。
PolicyRenewalAPI.Error.ProducerCodeNotFound = 无法找到公共id为{0}的经理人代码
PolicyRenewalAPI.Error.ProductNotFound = 无法找到代码为{0}的产品
PolicyRenewalAPI.Error.TermArchived = 保单期限{0}已存档
PolicyRenewalAPI.NotifyPayment.Error.RenewalNotFound = 无法找到保单id为{0}的续保保单
PolicyRenewalAPI.StartRenewals.Error.InvalidPolicyNumber = 未找到保单号为{0}的保单
PolicyRenewalAPI.StartRenewals.Error.NullArgument = 续保所需保单号阵列为看空
PolicyTermPlugin.CalculatePeriodEnd.MissingFormulaForTermType = 找不到计算TermType“{0}”默认到期日期的公式
ProducerAPI.Error.CreateGroup.GroupWithPublicIDAlreadyExists = 已存在具有指定publicID{0}的组，因此无法创建新组。
ProducerAPI.Error.CreateGroup.NoOrganizationWithPublicId = 无法将组添加到具有PublicID{0}的机构，因为没有找到具有该PublicID的机构。
ProducerAPI.Error.CreateOrganization.OrgWithPublicIDAlreadyExists = 已存在具有指定publicID{0}的机构，因此无法创建新机构。
ProducerAPI.Error.CreateProducerCode.NoOrganizationWithPublicId = 无法将ProducerCode添加到具有PublicID{0}的机构，因为没有找到具有该PublicID的机构。
ProducerAPI.Error.CreateProducerCode.ProducerCodeWithPublicIDAlreadyExists = 已存在具有指定publicID{0}的ProducerCode，因此无法创建新ProducerCode。
ProducerAPI.Error.UpdateGroup.GroupWithPublicIDDoesNotExist = 无法更新组，因为不存在具有PublicID{0}的组。
ProducerAPI.Error.UpdateGroup.NullPublicID = 必须指定用于更新的PublicID
ProducerAPI.Error.UpdateOrganization.NullPublicID = 必须指定用于更新的PublicID
ProducerAPI.Error.UpdateOrganization.OrgWithPublicIDDoesNotExist = 无法更新机构，因为不存在具有PublicID{0}的机构。
ProducerAPI.Error.UpdateProducerCode.NullPublicID = 必须指定用于更新的PublicID
ProducerAPI.Error.UpdateProducerCode.ProducerCodeWithPublicIDDoesNotExist = 无法更新ProducerCode，因为不存在具有PublicID{0}的ProducerCode。
ProducerCodeModel.populateProducerCode.Error.CannotFindForeignKeyBeanWithPublicID = 无法将外键设置为{0}，因为未找到具有publicID{1}的{0}。
ProductModelAPI.Error.EntityNotFound = 无法找到实体：{0}
ProductModelAPI.Error.PolicyLinePatternNotFound = 无法找到代码为{0}的保单险类模式
ProductModelAPI.Error.ProductCodeNotFound = 无法找到代码为{0}的产品
PurgeAPI.Error.InvalidAccountNumber = 账号{0}无效
PurgeAPI.Error.InvalidAddressBookUID = addressBookUID {0}无效
PurgeAPI.Error.InvalidPolicyNumber = 保单号{0}无效
PurgeAPI.Error.InvalidPolicyPeriodID = 保单期间公共ID{0}无效
Quoting.AccountHandler.Missing.System.AccountSearchCriteria = 报价Sidecar XML中缺少AccountSearchCriteria
Quoting.GroupHandler.Missing.InputStream = 报价边车XML中缺少组名或组织名
Quoting.GroupHandler.Missing.System.GroupName = 当前系统中没有名为{0}的匹配组
Quoting.Handler.CannotLocateAdditionalInfo = 找不到额外的信息XML内容！
Quoting.Handler.Missing.System.Organization = 当前系统中没有名为{0}的匹配组织
Quoting.Handler.Multiple.System.Organization = 当前系统中有多个名为{0}的匹配组织
Quoting.IndustryCodeHandler.Missing.InputStream = 导入流中缺少IndustryCode
Quoting.IndustryCodeHandler.Missing.System.IndustryCode = 当前系统中找不到代码为{0}的匹配IndustryCode
Quoting.PerformSearch.MinimumSearchCriteria = 请输入“名字”和“姓氏”或者“电子邮件地址”或“办公电话”或“报价ID”，继续进行搜索。
Quoting.ProducerCodeHandler.Missing.InputStream = 报价边车XML中缺少组织或ProducerCode
Quoting.ProducerCodeHandler.Missing.System.ProducerCode = 在当前系统中的组织{1}内没有找到匹配的ProducerCode {0}
Quoting.QuoteDataManager.InvalidPeriodStatusOrType = 期间{0}的类型必须是“投保单”，状态必须为“草案”
Quoting.RunCommand.UnsupportedPolicyLine = PolicyLine不受支持：{0}
Quoting.Submission.Error.CannotFindProductCode = 找不到产品代码{0}
Quoting.UWCompanyHandler.Missing.InputStream = 报价边车XML中缺少UWCompany
Quoting.UWCompanyHandler.Missing.System.UWCompany = 当前系统中没有代码为{0}的匹配UWCompany
Quoting.UWIssueTypeHandler.Missing.InputStream = 报价边车XML中缺少UWIssueType
Quoting.UWIssueTypeHandler.Missing.System.UWIssueType = 当前系统中没有PublicID为{0}的匹配UWIssueType
Quoting.UWIssueTypeHandler.Missing.System.UWIssueTypeNonProductionMode = 当前系统中没有PublicID为{0}或代码为{1}的匹配UWIssueType
Quoting.UserHandler.Missing.InputStream = 报价边车XML中缺少UserName
Quoting.UserHandler.Missing.System.UserName = 当前系统中没有UserName为{0}的匹配用户
RangeInputAddress.CountryChangeWarning = 如果更改国家/地区字段，现有地址字段值可能变为无效
Rating.CostDatesOutOfBounds = 部分成本的生效和到期日期超出保费报告开始和结束日期的范围。成本：{0}）。
Rating.Error.ExecuteRoutineWithCostDataButNoLine = 无法执行费率例程：包含成本数据的费率例程的形式参数集中还必须包含一个有效的保单险类。
Rating.Impact.AccountJurisdiction = 账户管辖权
Rating.Impact.AccountName = 账户名称
Rating.Impact.AccountNumber = 账号
Rating.Impact.ActiveRateBook = 基线费率手册
Rating.Impact.BaseActualAmount = 基线实际金额
Rating.Impact.BaseTermAmount = 基线期限金额
Rating.Impact.BaselineTotalCost = 基线总成本
Rating.Impact.Column.Unknown = 未知的列类型
Rating.Impact.ComparisonActualAmount = 比较实际金额
Rating.Impact.ComparisonRateBook = 比较费率手册
Rating.Impact.ComparisonTermAmount = 比较期限金额
Rating.Impact.ComparisonTotalCost = 比较总成本
Rating.Impact.CostDescription = 成本说明
Rating.Impact.CostType = 成本类型
Rating.Impact.Coverable = 承保项
Rating.Impact.EffectiveDate = 生效日期：
Rating.Impact.End = \ \ \ \ 结束
Rating.Impact.ExpirationDate = 到期日期：
Rating.Impact.InForceOn = 生效于：
Rating.Impact.InvalidRate = 错误
Rating.Impact.Issued = 出单日期
Rating.Impact.Jurisdictions = 管辖权：
Rating.Impact.Max = \ \ \ 最大
Rating.Impact.Min = \ \ \ 最小
Rating.Impact.Offering = 保障组合
Rating.Impact.PeriodEnd = 期限结束日期
Rating.Impact.PeriodStart = 期间开始日期
Rating.Impact.PolicyJurisdiction = 保单管辖权
Rating.Impact.PolicyNumber = 保单号
Rating.Impact.PostalCodes = 邮政编码：
Rating.Impact.ProducerCodeOfRecord = 记录的经理人代码
Rating.Impact.ProducerCodeOfService = 服务经理人代码
Rating.Impact.ProducerCodes = 经理人代码\:
Rating.Impact.Product = 产品
Rating.Impact.Products = 险种\:
Rating.Impact.SearchCriteria = 搜索：
Rating.Impact.Start = \ \ \ \ 开始
Rating.Impact.TableTitle = 影响测试
Rating.Impact.TermNumber = 期限数
Rating.Impact.UWCompany = 核保公司
Rating.Impact.Unknown = 未知条件
Rating.Impact.UsesStartsWith = （使用starts-with）
Rating.OverrideReason.AutomaticRenewalCap = 自动续保限额
Rating.Parallelization.Error.Timeout = 并行保费计算在{0}毫秒之后超时
RatingImpact.Count = 此测试案例中已存在期间。
Regional.Languages = 语言
Regional.Locales = 区域格式
Regional.RegionalSettings = 国际
Reinstatement.IssueReinstatement.Failed.Description = 外部系统指示复效承保失败。
Reinstatement.IssueReinstatement.Failed.Subject = 绑定复效失败
ReinstatementAPI.BeginReinstatement.Error = 保单{0}无法复效，因为： {1}
ReinstatementAPI.BeginReinstatement.Error.InvalidPolicyNumber = 未找到保单{0}的期间。
Reinsurance.Activity.FacActivate.Description = 临分再保险协议无法激活，因为发生了校验错误。
Reinsurance.Activity.FacActivate.Subject = 审查临分再保险协议的校验错误
ReinsuranceAPI.Error.CannotFindPolicyPeriod = 在日期{1}找不到保单号{0}
ReinsuranceAPI.Error.InvalidCoverageCode = 无效承保范围代码
ReinsuranceAPI.jurisdiction = 没有为管辖权{0}定义货币。
ReinsuranceAPI.reinsurance.coverables = 找不到与承保项{0}关联的管辖区。
RenewalAPI.RenewalOffer.InvalidPayment = 无法找到代码为“{0}”且首付款总额小于或等于{1}的赔付计划
RenewalAPI.RenewalOffer.InvalidPlan = 无法找到首付款总额小于或等于{0}的赔付计划。
RenewalAPI.RenewalOffer.OfferNotReady = 无法接受对出价{0}的赔付，因为该出价未就绪或已到期。
Rest.API.BizRules.InvalidRuleSubtype = 无效的规则子类型{0}
Rest.API.BizRules.MissingRuleChecksumsFile = 缺少规则校验和文件{0}
Rest.API.ClusterTools.CancelShutdown.CannotCancelShutdown = 无法取消，因为未计划关闭
Rest.API.ClusterTools.ScheduleShutdown.CannotScheduleShutdown = 无法计划此关闭，因为已经计划了一项关闭
Rest.API.DatabaseTools.CountMustBe0OrGreater = 预期计数为0或正数；实际为：{0}
Rest.API.DatabaseTools.CountMustBePositive = 预期计数为正数；实际为：{0}
Rest.API.DatabaseTools.LoadHistoryReport.NotComplete = ID为{0}的报告不完整
Rest.API.DatabaseTools.LoadHistoryReport.NotFound = 未找到ID为“ {0}”的加载历史记录报告
Rest.API.DatabaseTools.PerfReport.AlreadyRunning = 已开始运行性能报告批处理作业。
Rest.API.DatabaseTools.PerfReport.NotFound = 找不到ID为{0}的性能报告
Rest.API.DatabaseTools.PerfReport.StillRunning = ID为{0}的报告仍在运行中
Rest.API.DatabaseTools.PerfReport.WrongDBType = 无法在当前数据库类型({1})上针对{0}运行性能报告批处理作业。
Rest.API.DatabaseTools.SubmitSqlServerPerfReport.CannotSubmitMissingInterval = 无法提交SQL Server性能报告，因为缺少间隔信息
Rest.API.MaintenanceTools.InvalidPluginaction = 操作{0}不是受支持的操作[start,stop]之一
Rest.API.MaintenanceTools.InvalidPluginname = 无效的插件名称{0}
Rest.API.MaintenanceTools.InvalidProcessId = 无效的流程id {0}
Rest.API.MaintenanceTools.InvalidProcessName = 无效的流程名称{0}
Rest.API.MaintenanceTools.InvalidProcessType = 无效的流程类型{0}
Rest.API.MaintenanceTools.InvalidQueueaction = 操作{0}不是受支持的操作[start,stop,notify,wait]之一
Rest.API.MaintenanceTools.InvalidWorkQueueConfig = 无效的工作队列配置
Rest.API.MaintenanceTools.QueueWorkersWaitTimedOut = 等待处理的工作{0}
Rest.API.ServerProfilerTools.DeleteProfilerAnalysis.NoOccurrenceFoundMatchingCriteria = 未找到与指定条件匹配的历史数据
Rest.API.ServerProfilerTools.DeleteProfilerAnalysisForId.ProfilingIncompleteForOccurrenceId = 无法删除。针对ID为{0}的发生项的剖析不完整
Rest.API.ServerProfilerTools.GetEntryPointConfig.InvalidEntryPoint = 进入点{0}无效
Rest.API.ServerProfilerTools.GetProfilerAnalysisForId.HistoryMissingForOccurrenceId = 未找到此ID {0}的历史数据
Rest.API.ServerProfilerTools.GetWebServiceOccurrences.InvalidWebServiceName = Web服务{0}无效
Rest.API.ServerProfilerTools.PatchEntryPointConfig.InvalidEntryPointConfig = 无法设置指定的配置。未为进入点{0}启用剖析。
Rest.API.ServerTools.ServerMbean.ExecuteOperation.InvalidOperationName = 找不到托管Bean {1}的操作{0}
Rest.API.ServerTools.ServerMbean.ExecuteOperation.InvalidParameter = 在托管Bean {1}中找不到操作{0}的参数
Rest.API.ServerTools.ServerMbean.ExecuteOperation.InvalidParameter.Name = 未找到形式参数
Rest.API.ServerTools.ServerMbean.GetBeanByName.InvalidBeanName = 无效的Bean名称{0}
Rest.API.ServerTools.ServerMbean.UpdateMbeanProperties.InvalidProperty = 找不到托管Bean {0}的属性
Rest.API.ServerTools.ServerMbean.UpdateMbeanProperties.InvalidProperty.Name = 未找到属性
Rest.API.ServerTools.ServerMbean.UpdateMbeanProperties.InvalidProperty.Value = 为属性{1}指定的值{0}无效
Rest.API.ServerTools.UpdateLoggingLevel.AmbiguousRequest = 请求不明确。无法重新加载配置和更新特定的记录器。
Rest.API.ServerTools.UpdateLoggingLevel.LoggersMissing = 请求正文中缺少记录器
Rest.API.SystemTools.FromDateGreaterThanUntilDate = 开始日期不能晚于结束日期
Rest.API.SystemTools.InvalidFromUntilDate = 指定的日期无效
Rest.API.SystemTools.InvalidFromUntilOffestInput = 请求不明确。指定的查询参数不应超过[from, until, offset]中的两个
Rest.API.SystemTools.InvalidOffsetValue = 指定的偏置值{0}无效
Rest.API.WorkflowTools.BulkActions.InvalidInput = 请求不明确。对于此批量操作，能且只能指定属性[all, ids]中的一个
Rest.API.WorkflowTools.GetWorkflowById.InvalidWorkflowId = 无效的工作流ID {0}
Rest.API.WorkflowTools.GetWorkflowExecutions.InvalidWorkflowType = 无效的工作流类型{0}
Rewrite.History.JobCreated = 重新填写已创建。
Rewrite.IssueRewrite.Failed.Description = 外部系统表示无法绑定重新填写。
Rewrite.IssueRewrite.Failed.Subject = 绑定重新填写失败
RiskAssessment.PolicyLocation.WorkItemFailed.Description = 进行风险评估期间保单数据发生更改。风险评估未更新。您可以重试该请求，并确保没有其他用户正在编辑保单交易。
RiskAssessment.PolicyLocation.WorkItemFailed.Subject = 风险评估更新失败
RiskClassSearchCriteria.Error.MinimumCriteria = 请指定保单险类模式。
Rules.Validation.Region.NoZonesInLookupDataset = 部分区域未显示在区域查找数据集中：
Rules.Validation.Region.NoZonesInOrgOrLookupDataset = 部分区域未显示在区域查找数据集中或不是机构的一部分：
RuntimeProperties.Property = 属性
RuntimeProperties.Property.Delete.Confirmation = 是否确定要删除此属性？
RuntimeProperties.Property.Delete.Selected.Confirmation = 是否确定要删除选定属性？
RuntimeProperties.Property.Description = 说明
RuntimeProperties.Property.Detail = 属性详细信息
RuntimeProperties.Property.Export.All = 所有组
RuntimeProperties.Property.Export.Button = 导出
RuntimeProperties.Property.Export.Cancel = 取消
RuntimeProperties.Property.Export.Environment.Current = 为当前环境导出
RuntimeProperties.Property.Export.Environment.Default = 导出为默认值
RuntimeProperties.Property.Export.Environment.Target = 为目标环境导出
RuntimeProperties.Property.Export.Environment.Target.Name = 目标环境名称
RuntimeProperties.Property.Export.Properties = 导出运行时属性
RuntimeProperties.Property.Filter.Group = 属性组
RuntimeProperties.Property.Group = 组
RuntimeProperties.Property.Import.Button = 导入
RuntimeProperties.Property.Import.Cancel = 取消
RuntimeProperties.Property.Import.Failure = 导入选定属性文件时遇到问题。
RuntimeProperties.Property.Import.File = 选择要导入的属性文件
RuntimeProperties.Property.Import.Message = 已读取{0}个属性并已导入{1}个属性。
RuntimeProperties.Property.Import.Properties = 导入运行时属性
RuntimeProperties.Property.Import.Update.Existing = 更新现有值
RuntimeProperties.Property.Name = 名称
RuntimeProperties.Property.New.Property = 新属性
RuntimeProperties.Property.Page.Title = 运行时属性
RuntimeProperties.Property.Value = 值
SOAPUtil.AlreadyExecuted = 交易{0}已执行。
ScheduledItemAdapter.Error.MustOverrideMethod = 子类必须覆盖{0}方法
Services.Accommodation.Description = 住宿
Services.Accommodation.Name = 住所
Services.AlternativeAccomodation.Description = 住宿 - 替代住宿
Services.AlternativeAccomodation.Name = 替代住所
Services.Auto.AdjudicateClaim.Description = 汽车 - 判决赔案
Services.Auto.AdjudicateClaim.Name = 判决赔案
Services.Auto.Appraisal.Description = 车险 - 鉴定
Services.Auto.Appraisal.Name = 鉴定
Services.Auto.AudioEquipment.Description = 汽车 - 检查/修理 - 音频设备
Services.Auto.AudioEquipment.Name = 音频设备
Services.Auto.AutoBody.Description = 汽车 - 检查/修理 - 汽车车身
Services.Auto.AutoBody.Name = 汽车车身
Services.Auto.CarRental.Description = 汽车 - 其它 - 汽车租赁
Services.Auto.CarRental.Name = 汽车租赁
Services.Auto.Description = 汽车
Services.Auto.Glass.Description = 汽车 - 检查/修理 - 玻璃
Services.Auto.Glass.Name = 玻璃
Services.Auto.InspectionRepair.Description = 汽车 - 检查/修理
Services.Auto.InspectionRepair.Name = 检查/修理
Services.Auto.Name = 汽车
Services.Auto.Other.Description = 汽车 - 其它
Services.Auto.Other.Name = 其它
Services.Auto.ProvideCourtesyCar.Description = 汽车 - 其它 - 提供代步车
Services.Auto.ProvideCourtesyCar.Name = 提供代步车
Services.Auto.RoadsideAssistance.Description = 汽车 - 其它 - 道路救援
Services.Auto.RoadsideAssistance.Name = 道路救援
Services.Auto.Salvage.Description = 汽车 - 其它 - 残值
Services.Auto.Salvage.Name = 残值
Services.Auto.Towing.Description = 汽车 - 其它 - 拖车
Services.Auto.Towing.Name = 拖车
Services.Content.Appraisal.Description = 内容物 - 检查 - 鉴定
Services.Content.Appraisal.Name = 鉴定
Services.Content.AudioEquipment.Description = 内容物 - 更换 - 音频设备
Services.Content.AudioEquipment.Name = 音频设备
Services.Content.ComputerEquipment.Name = 计算机设备
Services.Content.ComputerEquipment.Repair.Description = 内容物 - 修理 - 计算机设备
Services.Content.ComputerEquipment.Replacement.Description = 内容物 - 更换 - 计算机设备
Services.Content.Electronics.Description = 内容物 - 更换 - 电子器件
Services.Content.Electronics.Name = 电子器件
Services.Content.Electronics.Repair.Description = 内容物 - 修理 - 电子器件
Services.Content.Furniture.Name = 家具
Services.Content.Furniture.Repair.Description = 内容物 - 修理 - 家具
Services.Content.Furniture.Replacement.Description = 内容物 - 更换 - 家具
Services.Content.Garden.Name = 花园
Services.Content.Garden.Repair.Description = 内容物 - 修理 - 花园
Services.Content.Garden.Replacement.Description = 内容物 - 更换 - 花园
Services.Content.Inspection.Description = 内容物 - 检查
Services.Content.Inspection.Name = 检查
Services.Content.KitchenAppliances.Description = 内容物 - 修理 - 厨房设备
Services.Content.KitchenAppliances.Name = 厨房设备
Services.Content.KitchenApplicanes.Description = 内容物 - 更换 - 厨房设备
Services.Content.KitchenApplicanes.Name = 厨房设备
Services.Content.Repair.Description = 内容物 - 修理
Services.Content.Repair.Name = 修理
Services.Content.Replacement.Description = 内容物 - 更换
Services.Content.Replacement.Name = 更换
Services.Contents.Description = 内容物
Services.Contents.Name = 内容物
Services.HomeServices.Cleaning.Description = 家庭服务 - 急救服务 - 清洁
Services.HomeServices.Cleaning.Name = 清洁
Services.HomeServices.Description = 家庭服务
Services.HomeServices.EmergencyServices.Description = 家庭服务 - 急救服务
Services.HomeServices.EmergencyServices.Name = 急救服务
Services.HomeServices.MakeSafe.Description = 家庭服务 - 急救服务 - 设为安全
Services.HomeServices.MakeSafe.Name = 安全保障
Services.HomeServices.Name = 家庭服务
Services.Medical.Description = 医疗
Services.Medical.MedicalAssessment.Description = 医疗 – 医疗评估
Services.Medical.MedicalAssessment.Name = 医疗评估
Services.Medical.MedicalCare.Description = 医疗 – 医疗护理
Services.Medical.MedicalCare.Name = 医疗护理
Services.Medical.Name = 医疗
Services.Property.AdjudicateClaim.Description = 财产 - 检查 - 判决赔案
Services.Property.AdjudicateClaim.Name = 判决赔案
Services.Property.Appraisal.Description = 财产 - 检查 - 鉴定
Services.Property.Appraisal.Name = 鉴定
Services.Property.Arborist.Description = 财产 - 建筑服务 - 树艺家
Services.Property.Arborist.Name = 树艺师
Services.Property.Boilers.Description = 财产 - 建筑服务 - 锅炉
Services.Property.Boilers.Name = 锅炉
Services.Property.Carpentry.Description = 财产 - 建筑服务 - 木工
Services.Property.Carpentry.Name = 木工
Services.Property.ConstructionServices.Description = 财产 - 建筑服务
Services.Property.ConstructionServices.Name = 建筑服务
Services.Property.DebrisRemoval.Description = 财产 - 急救服务 - 残骸清除
Services.Property.DebrisRemoval.Name = 残骸清除
Services.Property.Description = 财产
Services.Property.Drying.Description = 财产 - 建筑服务 - 烘干
Services.Property.Drying.Name = 烘干
Services.Property.Electrical.Description = 财产 - 建筑服务 - 电气系统
Services.Property.Electrical.Name = 电气系统
Services.Property.EmergencyServices.Description = 财产 - 急救服务
Services.Property.EmergencyServices.Name = 急救服务
Services.Property.Fencing.Description = 财产 - 建筑服务 - 栅栏
Services.Property.Fencing.Name = 栅栏
Services.Property.Flooring.Description = 财产 - 建筑服务 - 地板
Services.Property.Flooring.Name = 地板
Services.Property.GeneralContractor.Description = 财产 - 建筑服务 - 一般承包商
Services.Property.GeneralContractor.Name = 一般承包商
Services.Property.IndependentAppraisal.Description = 财产 - 检查 - 独立鉴定
Services.Property.IndependentAppraisal.Name = 独立鉴定
Services.Property.Inspection.Description = 财产 - 检查
Services.Property.Inspection.Name = 检查
Services.Property.Locksmith.Description = 财产 - 建筑服务 - 锁匠
Services.Property.Locksmith.Name = 锁匠
Services.Property.MakeSafe.Description = 财产 - 急救服务 - 设为安全
Services.Property.MakeSafe.Name = 安全保障
Services.Property.Name = 财产
Services.Property.Painting.Description = 财产 - 建筑服务 - 油漆
Services.Property.Painting.Name = 上漆
Services.Property.Plaster.Description = 财产 - 建筑服务 - 石膏
Services.Property.Plaster.Name = 石膏
Services.Property.Plumber.Description = 财产 - 建筑服务 - 水管工
Services.Property.Plumber.Name = 水管工
Services.Property.Roofing.Description = 财产 - 建筑服务 - 屋顶
Services.Property.Roofing.Name = 屋顶
Services.Property.Walls.Description = 财产 - 建筑服务 - 墙
Services.Property.Walls.Name = 墙
Services.Property.Windows.Description = 财产 - 建筑服务 - 窗户
Services.Property.Windows.Name = 窗户
SolrMessageTransportPlugin.Error.NotEnabled = 配置错误：未启用Solr消息传输插件。
SolrSearchPlugin.Error.NotEnabled = 配置错误：未启用Solr搜索插件。
Submission.BindSubmission.Failed.Activity.Description = 外部系统指示投保单承保失败。
Submission.BindSubmission.Failed.Activity.Subject = 投保单承保失败
Submission.Copy.Error.CannotCopy = 无法复制保单{2}上的保单期限（{0}） {1}
Submission.Copy.Error.PeriodNotOnJob = 无效的保单期限{0}
Submission.History.IncorrectAnswerChanged = 已更改之前对“{0}”的错误答案
Submission.History.JobBound = 投保单已承保
Submission.History.JobCreated = 投保创建
Submission.History.JobIssued = 投保单已签发
Submission.IssuePolicy.Failed.Activity.Description = 外部系统指示保单签发失败。
Submission.IssuePolicy.Failed.Activity.Subject = 签发保单失败
Submission.NotIssued.Activity.Description = 投保单已承包但尚未签发。
Submission.NotIssued.Activity.Subject = 签发保单
Submission.Operation.QuoteAsync.WorkQueue.Activity.Failed.Description = 编号为{1}的{0}报价请求失败。
Submission.Operation.QuoteAsync.WorkQueue.Activity.Failed.Subject = 编号为{1}的{0}报价请求失败。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Failed.Description = 编号为{1}和{2}的{0}报价请求失败。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Failed.Subject = 编号为{1}和{2}的{0}报价请求失败。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Successful.Description = 编号为{1}和{2}的{0}报价请求已完成。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.Successful.Subject = 编号为{1}和{2}的{0}报价请求已完成。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Description = 编号为{1}和{2}的{0}报价请求已完成但有警告。
Submission.Operation.QuoteAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Subject = 编号为{1}和{2}的{0}报价请求已完成但有警告。
Submission.Operation.QuoteAsync.WorkQueue.Activity.Successful.Description = 编号为{1}的{0}报价请求已完成。
Submission.Operation.QuoteAsync.WorkQueue.Activity.Successful.Subject = 编号为{1}的{0}报价请求已完成。
Submission.Operation.QuoteAsync.WorkQueue.Activity.SuccessfulWithWarning.Description = 编号为{1}的{0}报价请求已完成但有警告。
Submission.Operation.QuoteAsync.WorkQueue.Activity.SuccessfulWithWarning.Subject = 编号为{1}的{0}报价请求已完成但有警告。
Submission.Operation.RateAsync.WorkQueue.Activity.Failed.Description = 编号为{1}的{0}费率请求失败。
Submission.Operation.RateAsync.WorkQueue.Activity.Failed.Subject = 编号为{1}的{0}费率请求失败。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Failed.Description = 编号为{1}和{2}的{0}费率请求失败。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Failed.Subject = 编号为{1}和{2}的{0}费率请求失败。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Successful.Description = 编号为{1}和{2}的{0}费率请求已完成。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.Successful.Subject = 编号为{1}和{2}的{0}费率请求已完成。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Description = 编号为{1}和{2}的{0}费率请求已完成但有警告。
Submission.Operation.RateAsync.WorkQueue.Activity.PeriodVersion.SuccessfulWithWarning.Subject = 编号为{1}和{2}的{0}费率请求已完成但有警告。
Submission.Operation.RateAsync.WorkQueue.Activity.Successful.Description = 编号为{1}的{0}费率请求已完成。
Submission.Operation.RateAsync.WorkQueue.Activity.Successful.Subject = 编号为{1}的{0}费率请求已完成。
Submission.Operation.RateAsync.WorkQueue.Activity.SuccessfulWithWarning.Description = 编号为{1}的{0}费率请求已完成但有警告。
Submission.Operation.RateAsync.WorkQueue.Activity.SuccessfulWithWarning.Subject = 编号为{1}的{0}费率请求已完成但有警告。
Submission.Withdrawn.Activity.Description = 此投保单已撤消
Submission.Withdrawn.Activity.Subject = 投保撤消
SubmissionAPI.Error.AccountNotFound = 无法找到编号为{0}的账户
SubmissionAPI.Error.CannotPostRatingQuote = 无法针对投保单{0}执行postRatingQuote：当前状态为{1}
SubmissionAPI.Error.JobNumberNotFound = 找不到作业号为{0}的投保单
SubmissionAPI.Error.ProducerCodeNotFound = 无法找到公共id为{0}的经理人代码
SubmissionAPI.Error.ProductCodeNotFound = 无法找到代码为{0}的产品
TaxLocation.Search.Error.InvalidCode = 没有适用于{1}省的代码为{0}的纳税地点
TerritoryLookupCriteria.Error.MinimumCriteria = 必须为地区代码查找提供省/直辖市、保单险类模式和生效日期。
Tools.AnnontationValidator.AvailableNotOnStartable = {0}可用注释仅在IStartablePlugin子类上有效。如果Web服务使用WsiAvailability。
Tools.AnnontationValidator.DistributedAvailableAtStarting = {0}非分布式插件只能在状态为“正在启动”之后启动。
Tools.AnnontationValidator.DistributedNotOnStartable = {0}分布式注释仅在IStartablePlugin或MessageReply子类上有效。
Tools.AnnontationValidator.InboundAndStartable = {0}入站集成处理程序插件不得为IStartablePlugin。
Tools.AnnontationValidator.ServletNotOnServlet = {0}Servlet注释仅在HttpServlet子类上有效。
Tools.ExternalSchemaGenerator.Error.CacheInitializationFailure = {0}无法初始化JSON和/或Swagger架构缓存
Tools.ExternalSchemaGenerator.Error.CannotConstructFileFrom = 无法从{0}创建文件名：{1}
Tools.ExternalSchemaGenerator.Error.CopySystemSchema = 无法将系统架构{0}复制到{1}：{2}
Tools.ExternalSchemaGenerator.Error.CreateOutputDir = {0}：无法创建输出目录{1}
Tools.ExternalSchemaGenerator.Error.Done = {0}已完成 - 架构生成失败：JSON {1} ; XSD {2} ; Swagger JSON {3} ; Swagger XSD {4}
Tools.ExternalSchemaGenerator.Error.Load = 加载失败{0}：{1}
Tools.ExternalSchemaGenerator.Error.NoFilesFound = JSON架构{0}和Swagger架构{1}都不存在
Tools.ExternalSchemaGenerator.Error.NotFound = 找不到文件{0}的架构
Tools.ExternalSchemaGenerator.Error.Type.Json = JSON架构
Tools.ExternalSchemaGenerator.Error.Type.Swagger = Swagger架构
Tools.ExternalSchemaGenerator.Error.Type.XSD = XSD
Tools.ExternalSchemaGenerator.Error.Validation = 校验错误：{0}
Tools.ExternalSchemaGenerator.Error.ValidationSummary = 校验错误{0}：有关具体错误，请参阅日志
Tools.ExternalSchemaGenerator.Error.Write = 在{0}“{1}”上无法写入：{2}
Tools.ExternalSchemaGenerator.Info.CopySystemSchema = 已将系统架构{0}复制到{1}
Tools.ExternalSchemaGenerator.Info.CreateSchema = 已创建{0}
Tools.ExternalSchemaGenerator.Info.Done = {0}已完成 - 架构已生成：JSON {1} ; XSD {2} ; Swagger JSON {3} ; Swagger XSD {4}
Tools.ExternalSchemaGenerator.Info.Initialized = {0}：已初始化
Tools.ExternalSchemaGenerator.Info.Starting = {0}：正在启动，正在写入{1}
Tools.ExternalSchemaGenerator.Info.Validation = 校验信息：{0}
Tools.ExternalSchemaGenerator.Warning.Validation = 校验警告：{0}
Typekey.RateAmountType = 费率金额类型
UWIssue.Approval.CannotExpire = 键值为{1}类型为{0}的问题没有要到期的审批
UWIssue.Approval.Expired = {0} #{1}中到期
UWIssue.BigDecimalType.InvalidDecimal = 空值不是有效小数
UWIssue.BigDecimalType.InvalidDecimalValue = 值{0}不是有效小数
UWIssue.ChangeEffDate = 更改编辑生效日期。
UWIssue.Homeowners.HOPAnimalBiteHistory.Description = 有咬伤历史记录的动物需要审批
UWIssue.Homeowners.HOPAnimalBiteHistory.LongDesc = 类型为{0}、品种为{1}的住宅内动物需要审批，因为它们有咬伤历史记录
UWIssue.Homeowners.HOPAnimalBiteHistory.Name = HOP：动物咬伤历史记录
UWIssue.Homeowners.HOPAnimalBiteHistory.ShortDesc = 动物咬伤历史记录
UWIssue.Homeowners.HOPBackdatedSubmission.Description = 保单开始日期在投保日期之前
UWIssue.Homeowners.HOPBackdatedSubmission.LongDesc = 保单期限开始日期({0})在投保日期({1})之前
UWIssue.Homeowners.HOPBackdatedSubmission.Name = HOP：从前日期的投保单
UWIssue.Homeowners.HOPBackdatedSubmission.ShortDesc = 从前日期的投保单
UWIssue.Homeowners.HOPCondoCovALimit.Description = 公寓承保范围A限额值需要审批
UWIssue.Homeowners.HOPCondoCovALimit.LongDesc = 超过100,000的承保范围A限额值需要{0}的审批。限额值为{1}
UWIssue.Homeowners.HOPCondoCovALimit.Name = HOP：公寓承保范围A限额值
UWIssue.Homeowners.HOPCondoCovALimit.ShortDesc = 承保范围A限额值需要审批
UWIssue.Homeowners.HOPCovCLimit.Description = 承保范围C限额值需要审批
UWIssue.Homeowners.HOPCovCLimit.LongDesc = 超过100,000的承保范围C限额值需要审批。限额值为{0}
UWIssue.Homeowners.HOPCovCLimit.Name = HOP：承保范围C限额值
UWIssue.Homeowners.HOPCovCLimit.ShortDesc = 承保范围C限额值需要审批
UWIssue.Homeowners.HOPDistanceToFireHydrant.Description = 住宅到消防栓的距离超过400英尺或者不详
UWIssue.Homeowners.HOPDistanceToFireHydrant.LongDesc = 住宅到消防栓的距离超过400英尺或者不详。距离为{0}
UWIssue.Homeowners.HOPDistanceToFireHydrant.Name = HOP：到消防栓的距离
UWIssue.Homeowners.HOPDistanceToFireHydrant.ShortDesc = 到消防栓的距离
UWIssue.Homeowners.HOPDistanceToFireStation.Description = 住宅到消防站的距离超过5英里或者不详
UWIssue.Homeowners.HOPDistanceToFireStation.LongDesc = 住宅到消防站的距离超过5英里或者不详。距离为{0}
UWIssue.Homeowners.HOPDistanceToFireStation.Name = HOP：到消防站的距离
UWIssue.Homeowners.HOPDistanceToFireStation.ShortDesc = 到消防站的距离
UWIssue.Homeowners.HOPDwellCovALimit.Description = 住宅承保范围A限额值需要审批
UWIssue.Homeowners.HOPDwellCovALimit.LongDesc = 超过100,000的承保范围A限额值需要{0}的审批。限额值为{1}
UWIssue.Homeowners.HOPDwellCovALimit.Name = HOP：住宅承保范围A限额值
UWIssue.Homeowners.HOPDwellCovALimit.ShortDesc = 承保范围A限额值需要审批
UWIssue.Homeowners.HOPHazardType.Description = 风险类型需要审批
UWIssue.Homeowners.HOPHazardType.LongDesc = 风险类型{0}需要审批
UWIssue.Homeowners.HOPHazardType.Name = HOP：风险类型
UWIssue.Homeowners.HOPHazardType.ShortDesc = 风险级别需要审批
UWIssue.Homeowners.HOPNonCopperPlumbing.Description = 非铜管道需要审批
UWIssue.Homeowners.HOPNonCopperPlumbing.LongDesc = 非铜管道需要审批。住宅的管道类型为{0}
UWIssue.Homeowners.HOPNonCopperPlumbing.Name = HOP：非铜管道
UWIssue.Homeowners.HOPNonCopperPlumbing.ShortDesc = 非铜管道
UWIssue.Homeowners.HOPNonCopperWiring.Description = 非铜线路需要审批
UWIssue.Homeowners.HOPNonCopperWiring.LongDesc = 非铜线路需要审批。住宅的电线类型为{0}
UWIssue.Homeowners.HOPNonCopperWiring.Name = HOP：非铜线路
UWIssue.Homeowners.HOPNonCopperWiring.ShortDesc = 非铜线路
UWIssue.Homeowners.HOPNotOccupied.Description = 住宅当前无人居住
UWIssue.Homeowners.HOPNotOccupied.LongDesc = 住宅无人居住。规定的用途为{0}
UWIssue.Homeowners.HOPNotOccupied.Name = HOP：住宅无人居住
UWIssue.Homeowners.HOPNotOccupied.ShortDesc = 住宅无人居住
UWIssue.Homeowners.HOPNumberOfAdditionalInterests.Description = 其他权益方的数量需要审批
UWIssue.Homeowners.HOPNumberOfAdditionalInterests.LongDesc = 其他权益方的数量需要审批
UWIssue.Homeowners.HOPNumberOfAdditionalInterests.Name = HOP：其他权益方的数量
UWIssue.Homeowners.HOPNumberOfAdditionalInterests.ShortDesc = 其他权益方的数量
UWIssue.Homeowners.HOPNumberOfStories.Description = 超过3层的住宅需要审批
UWIssue.Homeowners.HOPNumberOfStories.LongDesc = 超过3层的住宅需要审批。住宅有{0}层
UWIssue.Homeowners.HOPNumberOfStories.Name = HOP：楼层数
UWIssue.Homeowners.HOPNumberOfStories.ShortDesc = 楼层数
UWIssue.Homeowners.HOPRoofAge.Description = 屋顶年龄超过25年而且尚未升级
UWIssue.Homeowners.HOPRoofAge.LongDesc = 屋顶年龄超过25年而且尚未升级。屋顶年龄为{0}
UWIssue.Homeowners.HOPRoofAge.Name = HOP：屋顶年龄
UWIssue.Homeowners.HOPRoofAge.ShortDesc = 屋顶年龄
UWIssue.Homeowners.HOPSchedPersonalPropertyLimit.Description = 计列个人财产项目限额需要审批
UWIssue.Homeowners.HOPSchedPersonalPropertyLimit.LongDesc = 超过10,000美元的计列个人财产项目限额值需要审批。{0}的限额值为{1}
UWIssue.Homeowners.HOPSchedPersonalPropertyLimit.Name = HOP：计列财产项目限额
UWIssue.Homeowners.HOPSchedPersonalPropertyLimit.ShortDesc = 计列个人财产项目限额
UWIssue.Homeowners.HOPYearBuilt.Description = 住宅的建造日期在1950年之前或者在保单开始日期之后
UWIssue.Homeowners.HOPYearBuilt.LongDesc = 住宅的建造日期在1950年之前或者在保单开始日期之后。住宅建造于{0}
UWIssue.Homeowners.HOPYearBuilt.Name = HOP：建造年份
UWIssue.Homeowners.HOPYearBuilt.ShortDesc = 建造年份
UWIssue.LossClaims.ClaimTotalIncurred.LongDesc = 此保单在保单期限{0}-{1}内的最高成本理赔是编号为{2}的赔案，发生的价值总额为{3}。要查看其它理赔信息，请在“风险分析”的“理赔”页面运行详细的理赔搜索。
UWIssue.LossClaims.ClaimTotalIncurred.ShortDesc = 最高成本理赔{0}
UWIssue.LossClaims.IncidenceOfClaims.LongDesc = 此保单在保单期限{1}-{2}内有{0}个理赔。保单上同一保单期限的签单保费为{3}。要查看其它理赔信息，请在“风险分析”的“理赔”页面运行详细的理赔搜索。
UWIssue.LossClaims.IncidenceOfClaims.ShortDesc = 理赔事件
UWIssue.LossClaims.ManualClaimReviewNeeded.LongDesc = 此保单在保单期限{0}-{1}的理赔多于可自动检索的数量。要查看其它理赔信息，请在“风险分析”的“理赔”页面运行详细的理赔搜索。
UWIssue.LossClaims.ManualClaimReviewNeeded.ShortDesc = 自动检索到的赔案过多
UWIssue.LossClaims.RatioOfClaimsTotalIncurredToWrittenPremium.LongDesc = 此保单在保单期限{0} - {1}内所有理赔发生的总额合计为{2}。保单上该保单期限的签单保费为{3}。总发生额与签单保费的比率为{4}%。要查看其它理赔信息，请从“风险分析”的“理赔”页面运行详细的理赔搜索。
UWIssue.LossClaims.RatioOfClaimsTotalIncurredToWrittenPremium.ShortDesc = 应计理赔总额与保单签单保费的比率
UWIssue.LossClaims.UnableRetrieveClaimInfo.LongDesc = 自动检查此保单在保单期限{0}-{1}内的理赔信息失败。要再次尝试运行详细的理赔搜索，请转到“风险分析”的“理赔”页面。
UWIssue.LossClaims.UnableRetrieveClaimInfo.ShortDesc = 无法检索赔案信息
UWIssue.MonetaryAmountType.InvalidMonetaryAmount = 值{0}不是有效的MonetaryAmount
UWIssue.NoValueType.ExpectNullValue = 值应该为空
UWIssue.NoValueType.ValueShouldBeNull = 值{0}应为空。
UWIssue.PersonalAuto.CollisionDeductible.LongDesc = 车辆{0}的车辆损失险免赔额为{1}
UWIssue.PersonalAuto.CollisionDeductible.ShortDesc = 权限之外的险别附加责任
UWIssue.PersonalAuto.ComprehensiveDeductible.LongDesc = 车辆{0}具有{1}的综合险免赔额
UWIssue.PersonalAuto.ComprehensiveDeductible.ShortDesc = 权限之外的险别附加责任
UWIssue.PersonalAuto.Ferrari.LongDesc = 车辆识别号码为{0}的车辆
UWIssue.PersonalAuto.Ferrari.ShortDesc = 车辆需要FRE批准
UWIssue.PersonalAuto.GarageState.LongDesc = {1}中停放的车辆{0}
UWIssue.PersonalAuto.GarageState.ShortDesc = 停车的省/直辖市
UWIssue.PersonalAuto.GarageZip.LongDesc = 车辆{0}停泊的区域邮政编码为{1}，与主被保险人的邮政编码{2}不匹配
UWIssue.PersonalAuto.GarageZip.ShortDesc = 车库邮政编码不一致
UWIssue.PersonalAuto.PAMVRAccidentsViolations.longDesc = {0}在保单文件上的内容与{0}的MVR上找到的内容之间，有{1}个事故差异和{2}个违章差异
UWIssue.PersonalAuto.PAMVRAccidentsViolations.shortDesc = 保单司机与汽车驾驶记录（MVR）之间的事故/违章不匹配
UWIssue.PersonalAuto.PrimaryDriverUnder25.LongDesc = {0}的年龄为{1}
UWIssue.PersonalAuto.PrimaryDriverUnder25.ShortDesc = 主要司机未满25岁
UWIssue.PersonalAuto.QuoteHasManualOverrides.LongDesc = 报价含有一个或多个手动覆盖
UWIssue.PersonalAuto.QuoteHasManualOverrides.ShortDesc = 报价有手动覆盖
UWIssue.PersonalAuto.TooManyVehicles.LongDesc = 保单包含{0}辆车
UWIssue.PersonalAuto.TooManyVehicles.ShortDesc = 车险保单上有五辆或更多辆车
UWIssue.PersonalAuto.TotalPremium.LongDesc = {0}的保费超出权限
UWIssue.PersonalAuto.TotalPremium.ShortDesc = 保费总额超过权限
UWIssue.PolicySegment.PolicyRiskSegmentInvalidForUWCompany = “保单风险细分”不适用于选定的核保公司
UWIssue.PolicySegment.PolicyRiskSegmentValueNotAllowedForUWCompany = 不允许将{0}的保单风险细分值用于核保公司{1}
UWIssue.ProducerCodeChange.LongDesc = 多个经理人代码已使用。该保单使用经理人{0}（代码{1}）
UWIssue.ProducerCodeChange.ShortDesc = 多个经理人代码已使用
UWIssue.ProducerOrgChange.LongDesc = 多个经理人组织已使用。该保单使用经理人{0}（代码{1}）
UWIssue.ProducerOrgChange.ShortDesc = 多个经理人机构已使用
UWIssue.Question.NoAnswerSupplied = （未提供答案）
UWIssue.Question.PolicyPeriodName = {0} {1}
UWIssue.Question.PreQualRiskPointSumDescription = 预审问题风险得分合计为{0}
UWIssue.Reinsurance.NetRetentionGreaterThanTarget.LongDesc = {0}需要另外{1}个临分再保险
UWIssue.Reinsurance.NetRetentionGreaterThanTarget.ShortDesc = 再保险净留存额大于目标净留存额
UWIssue.Rewrite.PeriodMismatch.LongDesc = 重新填写期限跨越{0}至{1}，而基础期限跨越{2}至{3}
UWIssue.Rewrite.PeriodMismatch.ShortDesc = 新期限结束日期与上一期限的结束日期不匹配。
UWIssue.ValueFormat.Age = {0}年
UWIssue.ValueFormat.AtLeast = 至少{0}
UWIssue.ValueFormat.AtMost = 最多{0}
UWIssue.ValueFormat.States = {0}
UWIssue.ValueFormat.StatesBut = 除{0}以外的任何省/直辖市
UWIssue.ValueFormat.USD = ${0}
UWIssue.ValueFormat.Units = {0}个单位
UWIssueType.Error.AnyComparatorNotAllowed = “比较器”字段不得具有“任意”值。
UWIssueType.Error.BlockingPoint = 默认审批阻止点与问题阻止点不一致
UWIssueType.Error.InvalidAssignmentValueType = 必须为所有数字参考值字段选择默认值分配类型
UWIssueType.Error.InvalidValueOffsetAmount = 默认值冲销金额必须是正数值
UWIssueType.Error.InvalidValueOffsetCurrency = 必须为包含非空冲销金额和固定冲销金额的MonetaryAmount比较器设置默认值冲销货币
UWIssueType.Error.MissingOffsetAmount = 值分配类型为“{0}”时必须提供冲销金额
UniqueStringGenerator.CannotIncrement = 无法递增文本“{0}”
Validation.Answer.MissingRequired = 必要问题“{0}”缺少答案
Validation.FormPattern.CodeHasSpaces = 表格{0} - 基本信息： 代码不能包含任何空格字符：“{1}”
Validation.FormPattern.CodeInUse = 表格{0} - 基本信息：代码“{1}”已被另一个表格使用
Validation.FormPattern.EmptyJobs = 表格{0} - 交易类型：必须至少有一个条目
Validation.FormPattern.EmptyProducts = 表格{0} - 保险产品： 必须至少有一个条目
Validation.FormPattern.FormNumberOverlapsOtherGroupCode = 表格{0} - 基本信息：表格编号和组代码必须是唯一的。“{1}”已被其它表格用作组代码。
Validation.FormPattern.GroupInferenceTimesUnequal = 表格{0} - 基本信息：组“{1}”中其它表格的数据的采集时间与此表格的时间不同。
Validation.FormPattern.Inference.CannotBeAbstract = 表格{0} - 推断：表格推断类“{1}”是抽象的。
Validation.FormPattern.Inference.ClauseNotInPolicyLine = 表格{0} - 子句模式“{1}”不存在于保单险类模式{2}中
Validation.FormPattern.Inference.ClauseNotValidForAnyLineOnProduct = 表格{0} - 子句模式“{1}”不存在于保险产品{2}的任何保单险类中
Validation.FormPattern.Inference.IncompatibleCoverableType = 表格{0} - 推断： 在保单险类“{1}”上未找到承保对象“{2}”
Validation.FormPattern.Inference.IncompatibleCoverableTypeKey = 表格{0} - 推断： 在选定字段“{1}”中未找到选定值“{2}”
Validation.FormPattern.Inference.IncompatibleCoverableTypeList = 表格{0} - 推断：在承保的对象“{1}”中找不到选定的字段“{2}”
Validation.FormPattern.Inference.Inheritance = 表格{0} - 推断： 表格推断类“{1}”无法扩展gw.forms.FormData。
Validation.FormPattern.Inference.Interface = 表格{0} - 推断：表格推断类“{1}”无法实施gw.forms.GenericFormInference。
Validation.FormPattern.Inference.InvalidClassName = 表格{0} - 推断： “{1}”不是有效的类名称。
Validation.FormPattern.Inference.InvalidCoverableTypeList = 表格{0} - 推断：选定的字段“{1}”不是类型列表。
Validation.FormPattern.Inference.LineDoesNotExist = 表格{0} - 推断：保单险类“{1}”不存在。
Validation.FormPattern.Inference.LineNotInProducts = 表格{0} - 推断： 此表格特定于保单险类“{1}”，但此表格有一个或多个保险产品{2}不包含该险类。
Validation.FormPattern.Inference.MissingRequired = 表格{0} - 推断： 缺少必填字段“{1}”
Validation.FormPattern.Inference.NullClassName = 表格{0} - 推断：需要表格推断条件。
Validation.FormPattern.Inference.PolicyLinePatternIsNotValidForInferenceClass = 表格{0} - 推断： 表格的保单险类模式{1}未包含在表格推断类{2}的有效保单险类列表中。
Validation.FormPattern.Inference.RequiresNoArgConstructor = 表格{0} - 推断： 表格推断类“{1}”没有无形式参数构造函数。
Validation.FormPattern.InvalidCoverableProperties = 表格{0} - 此表格具有不适用于{1}的已承保对象字段：{2}。
Validation.FormPattern.InvalidJobType = 表格{0} - 作业：不允许JobType{1}
Validation.FormPattern.InvalidLookupDateRange = 表格{0} - 管辖权： 失效日期{2}不在起效日期{1}（行号{3}）之后
Validation.FormPattern.JobDefinedMoreThanOnce = 表格{0} - 交易类型：引用同一保单交易类型({1})多次
Validation.FormPattern.NonMatchingPolicyLine = 表格{0} - 推断： 此表格的保单险类与选定移除批单表格的保单险类不匹配。
Validation.FormPattern.NonMatchingProducts = 表格{0} - 保险产品： 此表格的保险产品({1})与选定移除批单表格的保险产品({2})不匹配
Validation.FormPattern.NonRemovalEndorsement = 表格{0} - 保单更改：无法使用表格编号“{1}”来指示移除或替换此表格，因为“{2}”不是移除批单
Validation.FormPattern.NonUniqueGroupCode = 表格{0} - 管辖权： 表格编号和组代码需要是唯一的。“{1}”已被其它表格用作表格编号。
Validation.FormPattern.OverlappingLookupDates = 表格{0} - 管辖权： 查找找到相同的管辖权（{1}）和核保公司代码（{2}）以及重叠的有效日期范围：{3}到{4}和{5}到{6}
Validation.FormPattern.ProductDefinedMoreThanOnce = 表格{0} - 保险产品：对同一保险产品({1})引用多次
Validation.FormPattern.ReissueOnChangeFlagsUnequal = 表格{0} - 保单更改：此表格的保单更改行为与组“{1}”中的其它表格不匹配。组中所有表格的“再次添加此表格”设置必须具有相同的值。
Validation.FormPattern.RemovalEndorsementDoesNotExist = 表格{0} - 保单更改： 移除批单表格编号“{1}”引用不存在的表格
Validation.FormPattern.RemovalEndorsementFlagsUnequal = 表格{0} - 保单更改： 此表格的保单更改行为与组“{1}”中的其它表格不匹配。组中所有表格的移除/替换设置必须具有相同的值。
Validation.FormPattern.RemovalEndorsementInUse = 表格{0} - 保单更改：无法将RemovalEndorsement设置为false，因为此表格用作其它表格的移除批单：{1}
Validation.FormPattern.RemovalEndorsementMustHavePolicyChange = 表格{0} - 保单更改：“移除批单”表格必须将PolicyChange包含在其有效保单交易类型的列表内。
Validation.FormPattern.RequiresEndorsementNumbering = 表格{0} - 保单更改：表格具有移除批单表格编号({1})，但不是编号的批单。
Validation.FormPattern.UseInsteadFormCycle = 表格{0} - 管辖权： 在组“{2}” （“{1}”的管辖权表格中检测到指回“{0}”））的循环
Validation.FormPattern.UseInsteadFormDoesNotExist = 表格{0} - 管辖权： 要使用的表格“{1}”不存在
Validation.FormPattern.UseInsteadFormInDifferentGroup = 表格{0} - 管辖权：表格“{1}”位于其它组：{2}
Validation.FormPattern.UseInsteadFormInNoGroup = 表格{0} - 管辖权： 表格“{1}”没有组代码
Validation.FormPattern.UseInsteadFormRequiresGroup = 表格{0} - 管辖权： 管辖权特定表格需要组代码
Validation.Group.UserTypes = {0}为类型{1}，具有不匹配的用户{2}
Validation.Lookup.LookupTableDefinition.BackingSystemTableNotFound = 查找表“{0}”引用系统表“{1}”。此系统表不存在。
Validation.Lookup.LookupTableDefinition.ColumnDataTypeMismatch = 查找表“{0}”和系统表“{1}”之间的列类型不匹配。列名：{2}，查找表列类型：{3}，系统表列类型：{4}。
Validation.Lookup.LookupTableDefinition.ColumnNameMismatch = 在系统表“{1}”中找不到查找表“{0}”中的某个列。列名：{2}，列类型：{3}。
Validation.Lookup.LookupTableDefinition.HasOutputForExistence = 在查找表“{0}”中找到了输出列。存在性查找表中不能有输出列。
Validation.Lookup.LookupTableDefinition.MissingInput = 查找表“{0}”中缺少输入列。必须至少存在一个输入列。
Validation.Lookup.LookupTableDefinition.MissingOutputForNonExistence = 查找表“{0}”中缺少输出列。非存在性查找表中必须有输出列。
Validation.Lookup.LookupTableDefinition.TableCodeIsNotUnique = LookupTableDefinition表代码“{0}”不唯一。请提供唯一的表代码。
Validation.OfficialID.ValueFormat = {1}中{0}公务员ID格式无效。允许的格式为：\n{2}
Validation.OfficialID.ValueRequired = 公务员ID - 需要{0} {1} - {2}
Validation.PolicyHold.CodeHasSpaces = 保单搁置代码不能包含任何空格字符： {0}
Validation.PolicyHold.CodeInUse = 保单搁置代码：{0}已被另一保单搁置使用
Validation.PolicyHold.DuplicateHoldRuleFound = 一个或多个搁置规则具有重复的规则数据
Validation.PolicyHold.EmptyHoldRules = 保单搁置必须至少有一个规则
Validation.PolicyHold.HoldEndDateValidation = 保单搁置结束日期不能早于开始日期
Validation.PolicyHold.RegionCodeInUse = {0} - {1}已作为搁置地区存在。请选择新地区。
Validation.ProducerCode.NoCommissionPlans = 一个佣金计划至少需要一种货币，才能创建经理人代码。
Validation.ProducerCode.NoRoles = 此经理人代码没有角色。必须至少具有一个角色才可将用户分配到“{0}”。
Validation.Rating.CompareNullWithConstant = 无法与null值比较
Validation.Rating.InvalidCoveragePatternCode = {0}不是有效的承保范围模式代码
Validation.Rating.ParameterSet.DuplicateParameterCode = 不允许重复的形式参数代码。[{0}]
Validation.Rating.ParameterSet.DuplicateParameterSetCode = 形式参数集是拥有唯一代码所必需的。
Validation.Rating.RateRoutineDefinition.BadRateTableData = 无法调和费率表“{0}”的定义。
Validation.Rating.RateRoutineDefinition.BadRateTableParameters = 形式参数已从费率表{0}中移除。单击“确定”接受此更改；如果出错，请单击“取消”。
Validation.Rating.RateRoutineDefinition.CostDataFieldNotAssigned = 从未分配成本数据字段{0}。
Validation.Rating.RateRoutineDefinition.DuplicateRateRoutineCode = 包含“{0}”列的费率例程已存在。
Validation.Rating.RateRoutineDefinition.ExtraRateTableParameters = 形式参数已添加到费率表{0}。单击“确定”接受此更改；如果出错，请单击“取消”。
Validation.Rating.RateRoutineDefinition.IfOutOfSequence = If需要位于Elseif/Else/Endif之前
Validation.Rating.RateRoutineDefinition.InScopeUsageTypeChanged = {0}与此形式参数集中指定的类型不匹配
Validation.Rating.RateRoutineDefinition.IncompatibleVariableTypes = 变量{2}不兼容的类型{0}和{1}
Validation.Rating.RateRoutineDefinition.InvalidTypekey = {0}为无效类型键值{1}
Validation.Rating.RateRoutineDefinition.InvalidTypelist = {0}不是有效的类型列表。
Validation.Rating.RateRoutineDefinition.Iterable.InvalidClass = 分类类型{0}对循环数组或可迭代{1}无效。
Validation.Rating.RateRoutineDefinition.Iterable.InvalidLocalVariableProperty = 循环数组或可迭代不能是属性({0})(属于本地变量{1})。
Validation.Rating.RateRoutineDefinition.Iterable.InvalidOperandType = 操作数类型{0}对循环数组或可迭代{1}无效。
Validation.Rating.RateRoutineDefinition.Iterable.NoElementType = 循环可迭代必须指定元素类型。{0}具有无效/不完整的类型{1}。
Validation.Rating.RateRoutineDefinition.Iterable.NotIterableOrArray = 循环只能超过数组或可迭代。{0}具有无效类型{1}。
Validation.Rating.RateRoutineDefinition.Iterable.Null = 循环数组或可迭代不得为 null。
Validation.Rating.RateRoutineDefinition.Iterable.Unknown = 在此上下文中，循环数组或可迭代{0}不可用。
Validation.Rating.RateRoutineDefinition.LocalVariable.BeginWithLetter = 变量名称必须以字母开头
Validation.Rating.RateRoutineDefinition.LocalVariable.CostData = 变量名称{0}不得与成本数据相同
Validation.Rating.RateRoutineDefinition.LocalVariable.ExistingName = 无法使用已定义的变量名称
Validation.Rating.RateRoutineDefinition.LocalVariable.InvalidCharacters = 变量名称只能包含字母、数字和下划线。
Validation.Rating.RateRoutineDefinition.LocalVariable.NonEmpty = 变量名称不能为空
Validation.Rating.RateRoutineDefinition.LocalVariable.ParameterInParamSet = 变量名称{0}不得与形式参数集中的形式参数相同
Validation.Rating.RateRoutineDefinition.LocalVariable.ReservedKeyword = 变量名称{0}不得仅保留关键字
Validation.Rating.RateRoutineDefinition.LoopOutOfSequence = Loop需位于Endloop的前面
Validation.Rating.RateRoutineDefinition.LoopVariable.Duplicate = 此上下文中已定义循环变量{0}。
Validation.Rating.RateRoutineDefinition.LoopVariable.IllegalFieldName = 循环变量{0}：不允许使用字段或属性{1}。
Validation.Rating.RateRoutineDefinition.LoopVariable.IllegalModification = 循环变量无法修改。无法向{0}分配值。
Validation.Rating.RateRoutineDefinition.LoopVariable.IllegalPropertyReference = 循环变量名称{0}不得引用字段或属性。
Validation.Rating.RateRoutineDefinition.LoopVariable.InvalidType = 循环变量{0}具有无效类型或未指定类型。
Validation.Rating.RateRoutineDefinition.LoopVariable.Null = 必须指定循环变量。
Validation.Rating.RateRoutineDefinition.LoopVariable.Unknown = 此范围中未定义循环变量{0}。
Validation.Rating.RateRoutineDefinition.MissingENDIF = 缺少ENDIF
Validation.Rating.RateRoutineDefinition.MissingENDLOOP = 缺少ENDLOOP
Validation.Rating.RateRoutineDefinition.MissingInstruction = 缺少说明。
Validation.Rating.RateRoutineDefinition.MissingLeftParenthesis = 缺少“（”
Validation.Rating.RateRoutineDefinition.MissingOperand = 缺少运算符。
Validation.Rating.RateRoutineDefinition.MissingOperator = 缺少运算符。
Validation.Rating.RateRoutineDefinition.MissingRateFunction = 找不到{0}的方法声明
Validation.Rating.RateRoutineDefinition.MissingRightParenthesis = 缺少“)”
Validation.Rating.RateRoutineDefinition.MissingTable = 缺少费率表“{0}”
Validation.Rating.RateRoutineDefinition.MultiFactorVariableReassigned = 仅当分配功能未更改类型时，才能重新分配多因子变量{0}。
Validation.Rating.RateRoutineDefinition.NoFactorSpecified = 表{0}有多个因子，因此查找功能必须指定所需的因子。
Validation.Rating.RateRoutineDefinition.NullConditionNotAllowedForIF = IF的条件不能为空
Validation.Rating.RateRoutineDefinition.OnlyTypekeysCanBeComparedToLists = 值列表只能用于通过IN/NOT IN运算符计算类型键值
Validation.Rating.RateRoutineDefinition.OutOfSequenceRateRoutineSteps = 费率例程步骤排序顺序必须是从 1 开始的连续正数块。
Validation.Rating.RateRoutineDefinition.PolicyLineMismatch = 形式参数集和费率例程的PolicyLinePatternCode值不兼容。
Validation.Rating.RateRoutineDefinition.RateFunctionReturnTypeMismatch = 此处不得使用返回类型为{1}的函数{0}。
Validation.Rating.RateRoutineDefinition.ReferencedByPromotedRateBook = 非汇票费率手册引用的例程
Validation.Rating.RateRoutineDefinition.RoundingStepValidation = 四舍五入步骤必须为分配的最后一步。
Validation.Rating.RateRoutineDefinition.RoutineInUseAndHasDifferentSteps = 尝试导入的费率例程（代码：{0}版本：{1}管辖权\:{2}）与已升级费率手册使用的例程不同。
Validation.Rating.RateRoutineDefinition.SelectInScopeItem = 请选择一个“范围内”项目
Validation.Rating.RateRoutineDefinition.TypeMismatch = {0}和{1}之间的类型不一致
Validation.Rating.RateRoutineDefinition.UnreachableInScopeUsage = {0}在此形式参数集中不可访问
Validation.Rating.RateRoutineDefinition.ValidatationPasses = 费率例程有效
Validation.Rating.RateRoutineDefinition.VariableUsedBeforeDeclared = 对变量{0}进行声明之后方可使用此变量。
Validation.Rating.RateTableCell.NumberFormatException = 无法在列{2}中将“{0}”转换为{1}
Validation.Rating.RateTableDefinition.AddArgumentSourceSetForNewParameters = 要在费率例程中的费率表查找中使用此形式参数，必须创建一个新的实际参数源集。
Validation.Rating.RateTableDefinition.CovNotFound = 在保单险类{1}上找不到代码标识符为{0}的承保范围
Validation.Rating.RateTableDefinition.CovTermNotFound = 在承保范围{1}上找不到代码标识符为{0}的承保范围条款
Validation.Rating.RateTableDefinition.DecimalPlacesMustBeGreaterThanZero = 系数{0}的小数位数必须大于或等于零。
Validation.Rating.RateTableDefinition.DecimalPlacesTooBig = 系数{0}的小数位数过大。设置的小数位应小于等于{1}。
Validation.Rating.RateTableDefinition.DependsOnMultiValueParameterError = 不能依赖允许使用多个值的形式参数。
Validation.Rating.RateTableDefinition.DuplicateFactorSortOrder = 优先级重复用于一个或多个系数列。
Validation.Rating.RateTableDefinition.DuplicateMatchOpName = 无效费率表定义： 存在重复的形式参数名称。
Validation.Rating.RateTableDefinition.DuplicateParameterName = 费率表定义无效：存在重复的形式参数列名。
Validation.Rating.RateTableDefinition.DuplicateSortOrder = 优先级重复用于一个或多个参数列。
Validation.Rating.RateTableDefinition.DuplicateSortOrderOnTable = 优先级重复用于表{0}上的一个或多个形式参数列。
Validation.Rating.RateTableDefinition.DuplicateTableCode = 费率表定义无效：选定保单险类的费率表定义代码{0}重复。
Validation.Rating.RateTableDefinition.InvalidEntity = 物理表“{0}”无效： 检查此实体存在，并且具有名为费率表的外键（费率表实体参考）。
Validation.Rating.RateTableDefinition.MatchOpsAreInPriorityOrder = 范围匹配参数应在优先级上接近。{0}优先级在{1}的优先级之间
Validation.Rating.RateTableDefinition.MissingArgumentSourceSet = 费率表定义缺少实际参数源集。
Validation.Rating.RateTableDefinition.MissingArgumentSourceSetForExistingParameters = 必须首先为现有的形式参数创建一个默认的实际参数源集，才能向正在使用的费率表定义中添加新的形式参数。在添加新形式参数之后，可以创建包括新形式参数的实际参数源集。
Validation.Rating.RateTableDefinition.MissingAssignmentTarget = 预期使用变量名称作为分配的目标。分配的左侧不能为null或空。
Validation.Rating.RateTableDefinition.MissingFactors = 费率表定义缺少费率因子。
Validation.Rating.RateTableDefinition.MissingMatchOp = 费率表定义必须至少有一个参数匹配操作。
Validation.Rating.RateTableDefinition.MoreThanOneInterpolation = 无法在一个表中定义多个Interpolation Matchop。
Validation.Rating.RateTableDefinition.NoSortedMatchOpBeforeInterpolation = 仅精确或范围匹配比内插匹配具有更高优先级
Validation.Rating.RateTableDefinition.NumArguments = {0}需要0或2个参数
Validation.Rating.RateTableDefinition.Parameter.DecimalPlacesMustBeGreaterThanZero = 参数{0}的小数位数必须大于或等于零。
Validation.Rating.RateTableDefinition.Parameter.DecimalPlacesMustBeTheSameUnderOneMatchOp = 同一匹配运算中所有参数的小数位数必须相同： {0}
Validation.Rating.RateTableDefinition.Parameter.DecimalPlacesTooBig = 参数{0}的小数位数过大。设置的小数位数应小于等于{1}。
Validation.Rating.RateTableDefinition.ParameterSetNoLongerInScope = 实际参数源所引用的形式参数集已进行修改，已不在作用域内。
Validation.Rating.UnescapedQuotes = 如果字符串常量中包括引号，必须使用转义符号。
Validation.Rating.UntypedConstantValue = 常数值必须为数值、布尔值、字符串或null。字符串值必须以双引号(")开头和结尾
Validation.User.ExternalUserCannotBeFromCarrier = 外部用户不能来自承保人机构。
Validation.User.InternalUserCannotBeFromExternalOrg = 内部用户不能来自外部机构。
Validation.User.NonMatchingRole = {0}的类型为{1}，但没有匹配的角色
Validation.User.UserGroup = {0}是{1}，但不是匹配组的成员
ValidationError.ProductModel.EmptyRequiredField = {0}为必填，但为空白。
ValidationError.ProductModel.PolicyLine.Configuration.ClassInvalid = 保单险类配置类“{0}”无效。
ValidationError.ProductModel.PolicyLine.Configuration.ClassNotFound = 未找到保单险类配置类“{0}”。
ValidationError.ProductModel.PolicyLine.Configuration.ConstructorNotFound = 保单险类配置类“{0}”没有有效的构造函数。
ValidationError.ProductModel.PolicyLine.Configuration.IncorrectSupertype = 保单险类配置类“{0}”没有扩展“PolicyLineConfiguration”。
ValidationError.ProductModel.PolicyLine.Configuration.MissingTypeKey = 险类{0}缺少InstalledPolicyLine TypeKey。
Validator.APDCode = {0}必须以字母或数字开头，且只能包含字母、数字、“$”或“_”
Validator.APDName = {0}必须以大写字母开头，且只能包含字母、数字、“$”或“_”
Validator.Account = {0}必须为账号。
Validator.AddressLine = {0}必须为地址行。
Validator.ClaimNumber = {0}必须为 11 位的数字且第三位和第五位后跟短线。
Validator.CoName = {0}必须是公司名称。
Validator.CostOverride = 可覆盖成本只允许包含一个被覆盖的字段。
Validator.CreditCardNumber = {0}必须为有效的信用卡号（如 1234-1234-1234-1234 或 1234-123456-12345）
Validator.DaysWorkedWeek = {0}必须为0到7之间的数值（等级 \= 1）
Validator.DunAndBradstreetNumber = {0}必须为有效的邓白氏编号（如 12-123-1234）
Validator.Email = {0}必须为有效的电子邮件地址
Validator.EmploymentClassification = {0}必须为有效职业分类代码（4-10 个字符 - 字母数字加上“(”和“)”，例如“0038(2)”）。
Validator.Example.Error = 这是校验错误的示例。
Validator.Example.Warn = 这是一个校验警告
Validator.ExchangeRate = {0}必须为 0.000000 到 9.999999 之间的汇率
Validator.Exmod = {0}必须是介于0.0000与9.9999之间的费用调整系数
Validator.FEIN = {0}必须为九位的雇主税号(FEIN) 且前两个数字后跟短线
Validator.FirstName = {0}必须为名字
Validator.ForAuditOnlyError = validateForAudit()仅能在审计作业的保单险类上调用
Validator.HoursWorkedDay = {0}必须为 1  到 24 之间的整数
Validator.ID.Birthday.Mismatch = 生日与身份证号码不匹配。
Validator.ID.Checksum.Fail = 中文ID Checksum失败
Validator.ID.Length.Fail = 中国国家身份证号码的长度必须是{0}位。
Validator.ID.Order.GenderFail = 控制编号{0}与指定性别不匹配。男性为奇数，女性为偶数。
Validator.LastName = {0}必须为姓氏
Validator.LoadFactor = {0}必须为 0 到 100 之间的整数
Validator.Money = {0}必须为金额，其中小数点左侧最多 16 位，右侧最多 2 位。
Validator.NAICCode = {0}必须是有效的NAIC组代码，后接有效NAIC代码，格式如下： ####-#####
Validator.NonNegativeMoney = {0}必须为非负值金额
Validator.Phone = {0}必须为10位的电话号码，后面可跟分机号
Validator.Phone.Cell.CountryCode.Null = 手机国家/地区代码不能为空。
Validator.Phone.Cell.CountryCode.Unparseable = 手机国家/地区代码不能设置为不可解析。
Validator.Phone.CountryCode.Null = 电话国家/地区字段不能为空。
Validator.Phone.CountryCode.Unparseable = 不可解析对电话国家/地区而言为无效设置。
Validator.Phone.EmptyNsn = 在没有电话号码的情况下，无法输入扩展。
Validator.Phone.Extension = 扩展长度必须在 1 到 {0} 位之间。
Validator.Phone.Fax.CountryCode.Null = 传真电话国家/地区代码不能为空。
Validator.Phone.Fax.CountryCode.Unparseable = 传真电话国家/地区代码不能设置为不可解析。
Validator.Phone.Home.CountryCode.Null = 家庭电话国家/地区代码不能为空。
Validator.Phone.Home.CountryCode.Unparseable = 家庭电话国家/地区代码不能设置为不可解析。
Validator.Phone.Invalid = {0}对于国家/地区代码{1}而言是无效电话号码。
Validator.Phone.InvalidCountryCode = 电话号码{0}包含{1}的无效国家/地区代码。这很有可能是配置问题。
Validator.Phone.NotViable = {0}似乎不是一个电话号码。
Validator.Phone.TooLong = 电话号码{0}对于国家/地区代码{1}而言过长
Validator.Phone.TooShort = 电话号码{0}对于国家/地区代码{1}而言过短
Validator.Phone.Work.CountryCode.Null = 办公电话国家/地区代码不能为空。
Validator.Phone.Work.CountryCode.Unparseable = 办公电话国家/地区代码不能设置为不可解析。
Validator.PolicyNumber = {0}必须为保单号
Validator.PositiveInteger = {0}必须为正整数
Validator.PositiveMoney = {0}的当前值必须大于 0。
Validator.PostalCode = {0}必须为五位或九位数字
Validator.PostalCode.CA = {0}必须是六个字符，如“A1A 1A1”
Validator.PostalCode.FiveDigit = {0}必须为五位数
Validator.PostalCode.FourDigit = {0}必须为四位
Validator.PostalCode.GB = {0}必须是五个到七个字母/数字的组合
Validator.PostalCode.JP = {0}必须是七位，如“000-0000”
Validator.PostalCode.US = {0}必须为五位或九位数字
Validator.PriceFactor = {0}必须是 0.00 与 99.99 之间的价格系数。
Validator.ProrationFactor = {0}必须为 0.0000 到 9.9999 之间的比例系数
Validator.Rate = {0}必须为 0.0000 到 999999.0000 之间的比率
Validator.RatingLineBasisAmount = {0}必须为基础金额
Validator.Risk = {0}必须为0.00到9999.99之间的风险数量
Validator.SSN = {0}必须为九位的社会保障号且第三位和第五位后跟短线
Validator.Speed = {0}必须为小于 1000 的整数
Validator.TaxID = {0}必须为九位的社会保障号且第三位和第五位后跟短线，或九位的雇主识别码且第二位后跟短线
Validator.UnsupportedAuditLineError = 使用审计的险类必须实施validateForAudit（）
Validator.VIN = {0}必须为有效的车辆识别码
Validator.Year = {0}必须为 1000  到 2999  之间的四位年份
Velocity.DatePicker.Help = 单击此处选择日期
Velocity.Print.RootStart.LoggedInUser = 用户：
Velocity.Print.RootStart.Page = 页面
Verifier.Finished = ...已完成{0}映射、{1}架构和{2} Swagger架构的验证
Verifier.Json.InvalidFile = 传递的文件无效：“{0}”
Verifier.Json.Mapping.FailedToLoad = 加载映射“{0}”时失败：{1}
Verifier.Json.Mapping.FailedToValidate = 无法验证：{0}
Verifier.Json.NoLocationProvided = 未指定地点：{0}
Verifier.Json.Schema.FailedToLoad = 加载架构“{0}”时失败：{1}
Verifier.Json.Schema.FailedToValidate = 无法验证：{0}
Verifier.Json.Schema.Unreferenced = 未在任何JSON映射器或REST Swagger架构中引用JSON架构
Verifier.Json.SwaggerSchema.FailedToLoad = 加载Swagger架构“{0}”时失败：{1}
Verifier.Json.SwaggerSchema.FailedToValidate = 无法验证：{0}
Verifier.Json.WrongDirectory = 文件应当位于{0}中
Web.APD.AddNewProductButton = 新保险产品
Web.APD.Codegen.LinkedClause.Description = {0}项目承保范围
Web.APD.Codegen.LinkedClause.Name = {0}项目承保范围
Web.APD.CurrencyMismatch.WarningMessage = 在PolicyCenter单一货币模式下，不允许使用为此保险产品定义的货币处理模式{0}。请在config.xml中将PolicyCenter服务器的MultiCurrencyDisplayMode从SINGLE更新为MULTIPLE
Web.APD.EditProductButton = 编辑保险产品
Web.APD.EntityName.NewlyCreated = （新建）
Web.APD.GeneratedProtectedFiles.ChangesDetected.WarningMessage = 在生成的文件中检测到更改。重新生成产品时，这些文件将被覆盖：\n{0}
Web.APD.ImportFromTemplateButton = 从模板导入
Web.APD.ImportFromXmindButton = 从XMind导入
Web.APD.InstalledProduct.Actions = 操作
Web.APD.InstalledProduct.Description = 保险产品说明
Web.APD.InstalledProduct.GenerateTemplate = 生成模板
Web.APD.InstalledProduct.Name = 保险产品名称
Web.APD.InstalledProducts = 已安装的保险产品
Web.APD.LVColumnHeading.Availability = 可用性
Web.APD.LVColumnHeading.Details = 详细信息
Web.APD.LVColumnHeading.Fields = 字段
Web.APD.LVColumnHeading.GenerateAsClauseTerm = 生成为子句项
Web.APD.LVColumnHeading.Move = 订购
Web.APD.LVColumnHeading.Tags = 标记
Web.APD.LVColumnHeading.Terms = 条款项
Web.APD.LocationRiskObject.LocationField.DefaultLabel = 地址：{0}
Web.APD.ManualProduct.DateInstalled = 安装日期
Web.APD.ManualProduct.Description = 保险产品说明
Web.APD.ManualProduct.Details = 详细信息
Web.APD.ManualProduct.Installed = 已安装
Web.APD.ManualProduct.LastUpdated = 上次更新
Web.APD.ManualProduct.Lines = 保险产品险类
Web.APD.ManualProduct.Name = 保险产品名称
Web.APD.ManualProduct.Submissions = 投保单
Web.APD.ProductGenerationTree.Description = 说明
Web.APD.ProductGenerationTree.ElementType = 元素类型
Web.APD.ProductTree.ClauseCategoryNode = 条款类别
Web.APD.ProductTree.ConditionNode = 条件
Web.APD.ProductTree.Contents = 内容物
Web.APD.ProductTree.CostNode = 成本
Web.APD.ProductTree.CoverageNode = 承保范围
Web.APD.ProductTree.ExclusionNode = 免责项
Web.APD.ProductTree.ExposureFieldNode = 赔付明细字段
Web.APD.ProductTree.ExposureNode = 赔付明细
Web.APD.ProductTree.FieldNode = 字段
Web.APD.ProductTree.NodeName = 节点名称
Web.APD.ProductTree.ProductLineNode = 保险产品险类
Web.APD.ProductTree.ProductNode = 保险产品
Web.APD.ProductTree.RiskObjectNode = 风险对象
Web.APD.ProductTree.ScheduleTermNode = 计列项
Web.APD.ProductTree.TermNode = 条款项
Web.APD.ProductTree.Type = 类型
Web.APD.ProductTree.TypelistNode = 类型列表
Web.APD.RemoveProduct.Button = 移除保险产品
Web.APD.RemoveProduct.Confirmation = 此操作将移除保险产品{0}并撤消保险产品上的所有未决作业。是否确实要继续？
Web.APD.RemoveProduct.Error.BoundJobs = 无法移除此保险产品，因为它含有已承保保单。
Web.APD.RemoveProduct.Error.OpenJobs = 无法移除此保险产品，因为它包含无法自动撤消的未决作业。请先手动撤消这些作业。
Web.APD.RequiredForGeneration.Suffix = （*财产损失）
Web.APD.UpdateProductButton = 更新保险产品
Web.APD.UpdateProductButton.FromTemplate = 从模板
Web.APD.UpdateProductButton.FromXmind = 从XMind
Web.APD.VisualizedProducts = 已可视化的保险产品
Web.APDAttribute.Remove.DependentConditions = “{0}”包含附属规则条件，因此无法移除。请先移除以下规则条件：
Web.APDAttributeDropDownDefinition.AddColumnName = <添加列名称>(*财产损失）
Web.APDAttributeDropDownDefinition.Button = 定义
Web.APDAttributeDropDownDefinition.DropDownType = 下拉类型
Web.APDAttributeDropDownDefinition.DropdownEntry.AddColumn = 添加列
Web.APDAttributeDropDownDefinition.DropdownEntry.Code = 短名称
Web.APDAttributeDropDownDefinition.DropdownEntry.Currency = 货币
Web.APDAttributeDropDownDefinition.DropdownEntry.Description = 说明
Web.APDAttributeDropDownDefinition.DropdownEntry.NameNotRequired = 标签
Web.APDAttributeDropDownDefinition.DropdownEntry.RemoveColumn = 移除
Web.APDAttributeDropDownDefinition.Label = 标签
Web.APDAttributeDropDownDefinition.OwningDropDown = 拥有共享代码列表的属性
Web.APDAttributeDropDownDefinition.OwningDropDown.Help = 其中，有两个或更多个下拉列表相同（且将使用相同的类型列表），可以共享定义。只要一个字段拥有列表，所有其它字段将共享此列表。
Web.APDAttributeDropDownDefinition.RebuildTypelist = 类型列表重建状态
Web.APDAttributeDropDownDefinition.RebuildTypelist.False = 重建
Web.APDAttributeDropDownDefinition.RebuildTypelist.Help = 选择“不重建”将保持现有的类型列表定义，不被正在设计的保险产品所做的任何修改所覆盖。仅当类型列表是常用列表且与产品分开维护时，才选择“重建”。
Web.APDAttributeDropDownDefinition.RebuildTypelist.True = 不重建
Web.APDAttributeDropDownDefinition.Title = 下拉框定义
Web.APDAttributeDropDownDefinition.Typelist = 类型列表
Web.APDAttributeDropDownDefinition.Typelist.Sync = 同步
Web.APDAttributeRule.APDRuleElement.APDCondition.Attribute = 属性
Web.APDAttributeRule.APDRuleElement.APDCondition.CoreAttributeQualifier = 保单
Web.APDAttributeRule.APDRuleElement.APDCondition.Operator = 运算符
Web.APDAttributeRule.APDRuleElement.APDCondition.Value = 匹配值
Web.APDAttributeRule.APDRuleElement.Add = 添加条件
Web.APDAttributeRule.APDRuleElement.Condition = 条件
Web.APDAttributeRule.APDRuleElement.ConditionLabel = 条件
Web.APDAttributeRule.APDRuleElement.Move = 移动
Web.APDAttributeRule.APDRuleElement.Move.Down = 向下
Web.APDAttributeRule.APDRuleElement.Move.Heading = 订购
Web.APDAttributeRule.APDRuleElement.Move.Up = 向上
Web.APDAttributeRule.APDRuleElement.Priority = 优先级
Web.APDAttributeRule.APDRuleElement.Remove = 移除
Web.APDAttributeRule.APDRuleElement.ResultingValue = {0}结果值
Web.APDAttributeRule.APDRuleElement.ToolbarLabel = 条件异常
Web.APDAttributeRule.APDRuleElement.Value = 值
Web.APDAttributeRule.Default = 显示的UI值
Web.APDAttributeRule.Existence.Availability = 默认可用性
Web.APDAttributeRule.Existence.Usage = 默认使用情况
Web.APDAttributeRule.Label = 标签
Web.APDAttributeRule.Maximum = 最大可能值
Web.APDAttributeRule.Minimum = 最小可能值
Web.APDClause.ScheduledItem.Name.Suffix = 项目
Web.APDClause.SearchPage.Clause = 条款
Web.APDClauseCategory.Title = 类别
Web.APDClauseCategoryInputSet.CodeIdentifier = 短名称
Web.APDClauseCategoryInputSet.Description = 说明
Web.APDClauseCategoryInputSet.Itemised = 显示类别
Web.APDClauseCategoryInputSet.Itemised.HelpText = 在“风险详细信息”上，承保范围将按类别分组并分险种显示为单独的视图。
Web.APDClauseCategoryInputSet.Name = 标签
Web.APDClauseCategoryInputSet.UsedOnClauses = 包含的条款
Web.APDClauseCategoryPopup.Title = 编辑类别
Web.APDClauseSchedule.ScheduleDetails.ClauseScheduleTerms = 子句计列项
Web.APDClauseSchedule.ScheduleDetails.GenerateAsClauseTerm.Help = 选择以指明此属性是链接的子句项。否则，在生成代码时，此属性将变成子句上的计列属性。小数、金额、选项和综合险子句项始终是链接的子句项。
Web.APDClauseTerms.Title = 条款项
Web.APDConfirmationMessage.RemoveChildRiskObjects = 是否要从该风险对象中移除所有子项风险对象？
Web.APDConfirmationMessage.RemoveExposures = 是否要从该风险对象中移除所有赔付明细？
Web.APDCostCodesPopup.ChargePattern = 借记类型
Web.APDCostCodesPopup.CostCode = 代码
Web.APDCostCodesPopup.CostName = 名称
Web.APDCostCodesPopup.CostType = 费率金额类型
Web.APDCostCodesPopup.Description = 说明
Web.APDCostCodesPopup.ExportCostCodes = 重新生成系统表XML
Web.APDCostCodesPopup.Overrideable = 可覆盖
Web.APDCostCodesPopup.Overrideable.Tooltip = 如果为“是”，将对费率计算手动覆盖此代码
Web.APDCostCodesPopup.ProrationMethod = 按比例分配
Web.APDCostCodesPopup.Title = 成本定义代码
Web.APDCoverable.AutoNumber.HelpText = 自动将序号添加到风险对象
Web.APDCoverable.ChildrenLabel = 子项的UI标签
Web.APDCoverable.CoverableType = 风险对象的类型
Web.APDCoverable.Description = 说明
Web.APDCoverable.HasChildren = 包含子项风险
Web.APDCoverable.HasExposure = 针对{0}风险的多个赔付明细
Web.APDCoverable.IsAutoNumbered = 编号{0}
Web.APDCoverable.MenuLabel = 所生成UI的菜单标签
Web.APDCoverable.Name = 名称
Web.APDCoverable.RiskLocation = 地点/管辖权
Web.APDCoverable.Title = {0}风险对象定义
Web.APDCoverable.TypeName = 短名称
Web.APDCoverable.WrittenByThirdParty = 由第三方核保
Web.APDCoverableCV.APDExposure.ContactRole = 角色
Web.APDCoverableCV.APDExposure.Description = 说明
Web.APDCoverableCV.APDExposure.ExposureType = 类型
Web.APDCoverableCV.APDExposure.MenuLabel = 菜单标签
Web.APDCoverableCV.APDExposure.Name = 标签
Web.APDCoverableCV.APDExposure.RatingType = 费率基数
Web.APDCoverableCV.APDExposure.RiskLocation = 风险地点
Web.APDCoverableCV.APDExposure.TypeName = 短名称
Web.APDCoverableCV.ClauseCategory = 类别
Web.APDCoverableCV.CodeIdentifier = 短名称
Web.APDCoverableCV.Description = 说明
Web.APDCoverableCV.EditClauseCategory = 编辑类别
Web.APDCoverableCV.EditCoverageDetails = 详细信息
Web.APDCoverableCV.EditFields = 字段
Web.APDCoverableCV.EditTerms = 条款项
Web.APDCoverableCV.ManageClauseCategoriesButton = 管理条款类别
Web.APDCoverableCV.Name = 标签
Web.APDCoverageClaimCostCategoriesLV.Category = 类别
Web.APDCoverageClaimCostCategoriesLV.RestrictedTo = 限制为
Web.APDCoverageClaimCostCategoriesLV.Type = 类型
Web.APDCoverageInputSet.WrittenByThirdParty = 由第三方核保
Web.APDCoveragePerilsLV.Deductible = 固定免赔项
Web.APDCoveragePerilsLV.DeductibleAttribute = 免赔额属性
Web.APDCoveragePerilsLV.Event = 事件
Web.APDCoveragePerilsLV.Limit = 固定限制
Web.APDCoveragePerilsLV.LimitAttribute = 限制属性
Web.APDCoveragePopup.CostDetails = 承保成本
Web.APDCoveragePopup.CoverDetails = 承保事件
Web.APDCoveragePopup.Title = 承保范围明细
Web.APDCoverageSearchPopup.AddConditionDefinition = 添加条件定义
Web.APDCoverageSearchPopup.AddCoverageDefinition = 添加新承保范围定义
Web.APDCoverageSearchPopup.AddExclusionDefinition = 添加免责项定义
Web.APDCoverageSearchPopup.RemoveClauseDefinition = 移除条款定义
Web.APDCoverageSearchResultsLV.AddNewCategoryMenu = 添加新类别
Web.APDDependantPricePopup.CostCode = 代码
Web.APDDependantPricePopup.CostCodeFilter = 过滤成本代码（可选）
Web.APDDependantPricePopup.CostName = 名称
Web.APDDependantPricePopup.Description = 说明
Web.APDDependantPricePopup.FilterCostCode = 包括
Web.APDDependantPricePopup.JurisdictionFilter = 管辖权过滤器
Web.APDDependantPricePopup.RateAmountTypeFilter = 成本类型过滤器
Web.APDDependantPricePopup.Title = 附属价格基础规则
Web.APDDropDownEntry.Description = 说明
Web.APDExposureFields.Title = 赔付明细字段
Web.APDExposurePricePopup.Rate = 费率
Web.APDExposurePricePopup.Title = {1}的{0}定价
Web.APDLineSelection.LineEnabled = 已启用
Web.APDLineSelection.ProductLineName = 险类类型
Web.APDLineSelection.Warning.ConfirmLine = 请确认为此保单选择了正确的险类。
Web.APDManageClauseCategoriesPopup.Details = 类别详细信息
Web.APDManageClauseCategoriesPopup.Title = 管理条款类别
Web.APDNewCoverable.Title = 新的风险对象类型
Web.APDNewCoverageCategory.Title = 添加新类别
Web.APDNewDropDownEntry.Title = 添加新下拉框条目
Web.APDNewExposure.ContactRole = 联系人角色
Web.APDNewExposure.Description = 说明
Web.APDNewExposure.ExposureType = 赔付明细类型
Web.APDNewExposure.RatingType = 赔付明细费率类型
Web.APDNewExposure.RiskLocation = 地点/管辖权
Web.APDNewExposure.Title = 添加新的赔付明细类型
Web.APDNewProduct.Abbreviation = 缩写
Web.APDNewProduct.ChildrenLabel = 子项的UI标签
Web.APDNewProduct.CodeIdentifier = 标识符
Web.APDNewProduct.Coinsurance = 共同保险
Web.APDNewProduct.Currencies = 货币
Web.APDNewProduct.DefaultFields.Label = 其它字段采用默认设置？
Web.APDNewProduct.DefaultFields.OptionValueColumn = 值
Web.APDNewProduct.DefaultFields.Warning = 如果选中，思维导图上未显示的代码生成所需字段将根据可用信息采用默认设置。请检查标记了“*财产损失”的字段是否准确，再启动代码生成，否则可能会发生名称冲突或其它问题。
Web.APDNewProduct.DefaultNewLine = 新建
Web.APDNewProduct.Description = 说明
Web.APDNewProduct.EnabledForRestAPI = 为Rest API启用
Web.APDNewProduct.EnabledForRestAPI.Disabled = 已禁用
Web.APDNewProduct.EnabledForRestAPI.Enabled = 已启用
Web.APDNewProduct.ExposureLabel = 赔付明细的UI标签
Web.APDNewProduct.HasChildren = 包含子项风险
Web.APDNewProduct.HasExposure = 针对被保险人风险的多个赔付明细
Web.APDNewProduct.LinePrefix = 险类前缀
Web.APDNewProduct.LocalLanguage = 本地语言
Web.APDNewProduct.MenuLabel = 所生成UI的菜单标签
Web.APDNewProduct.Multiline = 多险类
Web.APDNewProduct.Name = 名称
Web.APDNewProduct.Portal = 启用数字自动生成
Web.APDNewProduct.Product = 保险产品
Web.APDNewProduct.ProductAccountType = 账户类型
Web.APDNewProduct.ProductLine = 保险产品险类
Web.APDNewProduct.ProductLineType = 保险产品险类类型
Web.APDNewProduct.ProductTemplate = XML文件
Web.APDNewProduct.Template = 模板导入
Web.APDNewProduct.Title = 加载保险产品
Web.APDNewProduct.TypeName = PolicyLine子类型，不含前缀
Web.APDNewProduct.UsesLocationListView = 向导中的地点列表
Web.APDNewProduct.Xmind = XMind思维导图导入
Web.APDNewProduct.XmindFile = XMind文件
Web.APDNewProductLine.Title = 新保险产品险类
Web.APDPricing.EmptyValueAlert = 以下基本属性选项需要值来确定成本基准：“{0}”。进入产品定义开发人员模式，以向条款选项中添加值。
Web.APDPricingPopup.Title = 风险对象定价
Web.APDProduct.Button.Cancel = 取消
Web.APDProduct.Button.Export = 导出到模板
Web.APDProduct.Button.Generate = 生成保险产品代码
Web.APDProduct.GenerateSourceCode.Cancel = 取消生成
Web.APDProduct.GenerateSourceCode.Confirm = 是否确实要为此保险产品生成项目源文件？
Web.APDProduct.GenerateSourceCode.Title = 检查保险产品元素
Web.APDProduct.GenerateSourceCode.Update = 完成生成
Web.APDProductDefinition.Title = 保险产品定义
Web.APDProductLine.LineName = {0}险类
Web.APDProductManagementPage.SubmissionLV.EffectiveDate = 生效日期
Web.APDProductManagementPage.SubmissionLV.Number = 投保单号
Web.APDProductManagementPage.SubmissionLV.PrimaryInsured = 主被保险人
Web.APDProductManagementPage.SubmissionLV.Status = 状态
Web.APDProductManagementPage.SubmissionLV.Title = {0}：使用保险产品的投保单
Web.APDProductManagementPage.Title = 保险产品管理
Web.APDProductScreen.APDCoverable.Pricing = 定价
Web.APDProductScreen.APDCoverableCV.ExistenceRule = 条款可用性
Web.APDProductScreen.APDCoverableCV.Tags = 标记
Web.APDProductScreen.APDCoverage.Move.Down = 向下
Web.APDProductScreen.APDCoverage.Move.Up = 向上
Web.APDProductScreen.APDField.BasisScalingKey = 基数键
Web.APDProductScreen.APDField.Category = 类别
Web.APDProductScreen.APDField.DefaultingRule = 默认值
Web.APDProductScreen.APDField.Description = 说明
Web.APDProductScreen.APDField.ExistenceRule = 字段使用情况
Web.APDProductScreen.APDField.Identifier = 标识符
Web.APDProductScreen.APDField.Jurisdiction = 管辖权
Web.APDProductScreen.APDField.Label = 标签
Web.APDProductScreen.APDField.Move = 移动
Web.APDProductScreen.APDField.Move.Down = 向下
Web.APDProductScreen.APDField.Move.Up = 向上
Web.APDProductScreen.APDField.Name = 短名称
Web.APDProductScreen.APDField.Scalable = 可调整
Web.APDProductScreen.APDField.SplitByRatingPeriods = 按费率期拆分
Web.APDProductScreen.APDField.Type = 类型
Web.APDProductScreen.APDProduct.Description = 说明
Web.APDProductScreen.APDProduct.Name = 名称
Web.APDProductScreen.APDProductLine.AddExistingLine = 将现有险类添加到保险产品
Web.APDProductScreen.APDProductLine.Children = 子项
Web.APDProductScreen.APDProductLine.Conditions = 条件
Web.APDProductScreen.APDProductLine.Coverages = 承保范围
Web.APDProductScreen.APDProductLine.DeleteLine = 删除保险产品险类
Web.APDProductScreen.APDProductLine.Description = 说明
Web.APDProductScreen.APDProductLine.Details = 详细信息
Web.APDProductScreen.APDProductLine.Exclusions = 免责项
Web.APDProductScreen.APDProductLine.Exposures = 赔付明细
Web.APDProductScreen.APDProductLine.Fields = 字段
Web.APDProductScreen.APDProductLine.MenuLabel = 菜单标签
Web.APDProductScreen.APDProductLine.Name = 名称
Web.APDProductScreen.APDProductLine.NewLine = 新建保险产品险类
Web.APDProductScreen.APDProductLine.RemoveLineUse = 从保险产品中移除险类
Web.APDProductScreen.APDProductLine.Title = 保险产品险类
Web.APDProductScreen.APDTerm.ExistenceRule = 条款项使用情况
Web.APDRiskClauseInputSet.Clause.Currency = 货币
Web.APDRiskClauseInputSet.Clause.Details = 条款详细信息
Web.APDRiskClauseInputSet.Clause.Menu.Remove.ConfirmMessage = 此操作将从保单定义中彻底移除此条款
Web.APDRiskClauseInputSet.Clause.Menu.Remove.Label = 移除条款
Web.APDRiskClauseInputSet.Clause.Menu.Remove.Tooltip = 从保单定义中彻底移除此条款
Web.APDRiskClauseInputSet.Clause.Schedule = 条款计列项
Web.APDRiskClauseInputSet.Clause.Tags = 标记
Web.APDRiskCoverable.ADPRiskPanelSet.AddItemisedCoverSet = 项目化承保
Web.APDRiskCoverable.ADPRiskPanelSet.AddProductElement = 添加主承保集
Web.APDRiskCoverable.ADPRiskPanelSet.PackagedCover = 综合承保
Web.APDRiskCoverage.Title = 第一个承保范围
Web.APDRiskFieldValue.Typekey.Add = 添加新选项
Web.APDRiskFieldValue.Typekey.Definition = 编辑定义
Web.APDRiskFieldValue.Typekey.Edit = 更改选择名称
Web.APDRiskPanelSet.Coverable.Currency = 货币
Web.APDRiskPricingPanelSet.ActionsButton = 操作
Web.APDRiskPricingPanelSet.AddCost = 添加成本
Web.APDRiskPricingPanelSet.Basis = 基本信息
Web.APDRiskPricingPanelSet.BasisDefinition = 基本属性
Web.APDRiskPricingPanelSet.ChargePattern = 借记类型
Web.APDRiskPricingPanelSet.CostCode = 代码
Web.APDRiskPricingPanelSet.CostName = 名称
Web.APDRiskPricingPanelSet.CoverageCosts = 承保范围成本
Web.APDRiskPricingPanelSet.DeletePriorCosts = 删除之前的成本规则
Web.APDRiskPricingPanelSet.Edit = 编辑成本代码
Web.APDRiskPricingPanelSet.EditPriorCosts = 编辑之前的成本规则
Web.APDRiskPricingPanelSet.ExposurePricing = 赔付明细定价
Web.APDRiskPricingPanelSet.Move.Down = 向下
Web.APDRiskPricingPanelSet.Move.Up = 向上
Web.APDRiskPricingPanelSet.OtherCosts = 其它成本
Web.APDRiskPricingPanelSet.PriorCosts = 使用之前的成本
Web.APDRiskPricingPanelSet.PriorCosts.NoneSelected = <之前的成本>
Web.APDRiskPricingPanelSet.Rate = 费率
Web.APDRiskPricingPanelSet.RateAmountType = 成本类型
Web.APDRiskPricingPanelSet.RatingScale = 每
Web.APDRiskPricingPanelSet.Remove = 移除
Web.APDRiskPricingPanelSet.SeparateBilling = 项目化以用于计费
Web.APDRiskPricingPanelSet.SeparateBilling.Tooltip = 选择“是”在费用明细中提供有关此项目的项目成本
Web.APDRiskPricingPanelSet.SeparateCollection = 单独托收
Web.APDRiskPricingPanelSet.SeparateCollection.Tooltip = 选择“是”创建单独的费用
Web.APDRule.Available = {0}的默认状态在保险产品模型中可用并向用户显示
Web.APDRule.Captured = {0}的默认状态可捕获用户的数据输入
Web.APDRule.CapturedBind = {0}的默认状态可捕获用户的数据输入且是承保所必需的
Web.APDRule.CapturedIssue = {0}的默认状态可捕获用户的数据输入且是核保项所必需的
Web.APDRule.CapturedQuote = {0}的默认状态可捕获用户的数据输入且是报价所必需的
Web.APDRule.ConditionLabel.And = AND
Web.APDRule.Default = {0}的默认值为{1}
Web.APDRule.Derived = {0}的默认状态可从其他来源派生数据且为只读
Web.APDRule.Existence.Attribute = 使用情况
Web.APDRule.Existence.Clause = 可用性
Web.APDRule.Existence.DropdownEntry = 可用性
Web.APDRule.Hidden = {0}的默认状态对用户不可见
Web.APDRule.Maximum = {0}的默认最大值为{1}
Web.APDRule.Minimum = {0}的默认最小值为{1}
Web.APDRule.Optional = {0}的默认状态为可选
Web.APDRule.Owner.Clause = 条款
Web.APDRule.Owner.CovTerm = 条款项
Web.APDRule.Owner.DropdownEntry = 代码
Web.APDRule.Owner.Field = 字段
Web.APDRule.Required = {0}的默认状态为必填
Web.APDRule.Suggested = {0}的默认状态为建议
Web.APDRule.Tag.Applies = {0}的默认状态标记了“{1}”
Web.APDRule.Tag.DoesNotApply = {0}的默认状态未标记“{1}”
Web.APDRule.Unavailable = {0}的默认状态在保险产品模型中不可用并对用户不可见
Web.APDRule.Variant.Available = 在以下情况下，{0}在保险产品模型中可用并向用户显示
Web.APDRule.Variant.Captured = 在以下情况下，{0}可捕获用户的数据输入
Web.APDRule.Variant.CapturedBind = 在以下情况下，{0}可捕获用户的数据输入且是承保所必需的
Web.APDRule.Variant.CapturedIssue = 在以下情况下，{0}可捕获用户的数据输入且是核保项所必需的
Web.APDRule.Variant.CapturedQuote = 在以下情况下，{0}可捕获用户的数据输入且是报价所必需的
Web.APDRule.Variant.Default = 在以下情况下，{0}的默认值为{1}
Web.APDRule.Variant.Derived = 在以下情况下， {0}可从其他来源派生数据且为只读
Web.APDRule.Variant.Hidden = 在以下情况下，{0}对用户不可见
Web.APDRule.Variant.Maximum = 在以下情况下，{0}的最大值为{1}
Web.APDRule.Variant.Minimum = 在以下情况下，{0}的最小值为{1}
Web.APDRule.Variant.Optional = 在以下情况下，{0}为可选
Web.APDRule.Variant.Required = 在以下情况下，{0}为必填
Web.APDRule.Variant.Suggested = 在以下情况下，建议使用{0}
Web.APDRule.Variant.Tag.Applies = 在以下情况下，{0}标记了“{1}”
Web.APDRule.Variant.Tag.DoesNotApply = 在以下情况下，{0}未标记“{1}”
Web.APDRule.Variant.Unavailable = 在以下情况下，{0}在保险产品模型中不可用并对用户不可见
Web.APDRuleElement.DisplayInfo = 规则所有者：“{0}”；条件：“{1}”
Web.APDRulePopup.Title = {0}属性
Web.APDSplitRiskPopup.Date = 日期
Web.APDSplitRiskPopup.Split = 拆分
Web.APDSplitRiskPopup.Title = 拆分风险
Web.APDTagPopup.AddTagButton = 添加标记
Web.APDTagPopup.TagDefaultValue = 默认
Web.APDTagPopup.TagType = 标记
Web.APDTagPopup.Title = 标记属性
Web.APDValidation.Attribute.Dropdown.InvalidCode = 对于下拉框条目“{0}”，短名称的格式无效
Web.APDValidation.Attribute.Dropdown.MissingCode = 必须为下拉框条目“{0}”定义短名称
Web.APDValidation.Attribute.Dropdown.MissingDescription = 必须为下拉框条目“{0}”定义说明
Web.APDValidation.Attribute.Dropdown.MissingName = 必须为下拉框条目“{0}”定义{Web.APDAttributeDropDownDefinition.DropdownEntry.NameNotRequired} *
Web.APDValidation.Attribute.Dropdown.MissingValue = 下拉框条目{0}选项/综合险列{1}需要值
Web.APDValidation.Attribute.Dropdown.UniqueCodes = 条款项内的每个下拉框条目必须包含唯一代码
Web.APDValidation.Attribute.DropdownColumn.MissingName = 所有下拉框选项/综合险列都需要名称
Web.APDValidation.Attribute.DropdownColumn.MissingPackageColumns = 下拉框综合险条款项至少需要两列
Web.APDValidation.Attribute.DropdownColumn.MissingValueType = 所有下拉框选项/综合险列都需要类型
Web.APDValidation.Attribute.DropdownColumn.NoColumns = 下拉框选项条款项应该包含一列
Web.APDValidation.Attribute.DuplicateEscapedTypelistCodes = 类型列表{0}中的类型键包含重复的转义代码值：{1}
Web.APDValidation.Attribute.InvalidGenerateAsClauseTerm = 对该类型，"生成为子句项"必须设置为真
Web.APDValidation.Attribute.InvalidJurisdiction = 此字段无法设置为管辖权
Web.APDValidation.Attribute.InvalidName = 短名称必须是有效名称
Web.APDValidation.Attribute.InvalidScalable = 此字段不可调整
Web.APDValidation.Attribute.InvalidTypelistName = 类型列表下拉框的类型列表名称必须有效
Web.APDValidation.Attribute.MissingDescription = 必须定义说明
Web.APDValidation.Attribute.MissingLabel = 必须定义标签
Web.APDValidation.Attribute.MissingName = 必须定义短名称
Web.APDValidation.Attribute.MissingTypelist = 必须为类型列表下拉框定义类型列表
Web.APDValidation.Attribute.UniqueTermNames = 条款中的每个条款项必须包含唯一名称
Web.APDValidation.Clause.InvalidCodeIdentifier = {0}必须是有效名称
Web.APDValidation.Clause.MissingCodeIdentifier = 必须定义{0}
Web.APDValidation.Clause.MissingDescription = 必须定义说明
Web.APDValidation.Clause.MissingName = 必须定义标签
Web.APDValidation.Clause.UniqueCodes = 险类中的每个条款必须包含唯一代码
Web.APDValidation.ClauseCategory.InvalidCodeIdentifier = 短名称必须是有效名称
Web.APDValidation.ClauseCategory.MissingCodeIdentifier = 必须定义短名称
Web.APDValidation.ClauseCategory.MissingDescription = 必须定义说明
Web.APDValidation.ClauseCategory.MissingName = 必须定义标签
Web.APDValidation.ClauseCategory.UniqueCodes = 险类中的每个条款类别必须包含唯一代码
Web.APDValidation.Coverable.Children.UniqueCoverableNames = 子项风险对象必须包含唯一实体名称
Web.APDValidation.Coverable.Children.UniqueExposureEntityNames = 风险对象的赔付明细必须包含唯一实体名称
Web.APDValidation.Coverable.Children.UniqueFieldNames = 子项字段必须包含唯一名称
Web.APDValidation.Coverable.InvalidTypeName = 短名称必须是有效名称
Web.APDValidation.Coverable.MissingDescription = 必须定义说明
Web.APDValidation.Coverable.MissingFieldIdentifier = 风险对象必须至少包含一个标识符
Web.APDValidation.Coverable.MissingMenuLabel = 必须为生成的UI定义菜单标签
Web.APDValidation.Coverable.MissingName = 必须定义名称
Web.APDValidation.Coverable.MissingTypeName = 必须定义短名称
Web.APDValidation.Coverable.MultipleJurisdictions = 风险对象必须只能有一个位置设置为管辖权
Web.APDValidation.Coverable.UniqueEntityName = 风险对象必须包含与其父项风险对象不同的实体名称
Web.APDValidation.DuplicateTypelistName = {0}使用的类型列表名称只能定义一次（定义为所有者和共享）
Web.APDValidation.Exposure.Children.UniqueAPDExposureFieldNames = 赔付明细的字段必须包含唯一名称
Web.APDValidation.Exposure.InvalidTypeName = 短名称必须是有效名称
Web.APDValidation.Exposure.MissingContactRole = 赔付明细指明相关方时，必须定义角色
Web.APDValidation.Exposure.MissingDescription = 必须定义说明
Web.APDValidation.Exposure.MissingMenuLabel = 必须定义菜单标签
Web.APDValidation.Exposure.MissingTypeName = 必须定义短名称
Web.APDValidation.Exposure.MultipleJurisdictions = 风险单位必须只能有一个位置设置为管辖权
Web.APDValidation.Exposure.UniqueEntityName = 赔付明细必须包含与其父项风险对象不同的实体名称
Web.APDValidation.Product.InvalidName = {0}必须是有效名称
Web.APDValidation.Product.MissingDescription = 必须定义说明
Web.APDValidation.Product.MissingName = 必须定义名称
Web.APDValidation.Product.UniqueIdentifiers = 保险产品及其所有险类都必须包含唯一标识符
Web.APDValidation.ProductLine.InvalidName = {0}必须是有效名称
Web.APDValidation.ProductLine.MissingDescription = 必须定义说明
Web.APDValidation.ProductLine.MissingMenuLabel = 必须为生成的UI定义菜单标签
Web.APDValidation.ProductLine.MissingName = 必须定义名称
Web.APDValidation.ProductLine.MissingTypeName = 必须定义PolicyLine子类型（不带前缀）
Web.APDValidation.ProductLine.NoCoverages = 保险产品险类不含承保范围
Web.APDValidation.ProductLine.UniqueLinePrefixes = 所有保险产品险类必须包含唯一的险类前缀
Web.APDValidation.ProductLine.Uppercase = {0}中的字母必须全为大写
Web.APDValidation.XML.InvalidFile = 文件“{0}”不是有效的XML保险产品模板。
Web.APDValidation.XML.MissingFileName = 请输入XML文件名。
Web.APDValidation.XMindImport.InvalidFile = 文件“{0}”不是有效的XMind思维导图。
Web.APDValidation.XMindImport.InvalidLinksToScheduledItemDefNode = 不能将{0}节点添加到“{1}”{2}节点。只能添加{3}和{4}节点。
Web.APDValidation.XMindImport.MissingClauseCategory = 不能直接将{0}节点添加到“{1}”{2}节点。请更新思维导图，在中间添加{3}节点。
Web.APDValidation.XMindImport.MissingFileName = 请输入XMind文件名。
Web.APDValidation.XMindImport.MissingLinePrefixAndCode = 未定义带前缀和缩写/代码的险类。
Web.APDValidation.XMindImport.MissingProductForMultiline = 未为多险类定义保险产品。请添加保险产品，或者更改思维导图以只包含一个险类。
Web.APDValidation.XMindImport.MissingProductPrefixAndCode = 尚未定义保险产品前缀和缩写/代码。
Web.APDValidation.XMindImport.MultipleClausesInScheduledItemDefNode = “{0}”{1}节点中最多只能包含一个条款。
Web.APDValidation.XMindImport.MultipleProductsDefined = 思维导图中只能定义一个保险产品。
Web.APDValidation.XMindImport.MultipleScheduledItemDefNodes = “{0}”{1}节点链接到了不止一个{2}节点。请更新思维导图，以只链接到一个节点。
Web.APDValidation.XMindImport.NestedSchedules = “{0}”链接条款节点下不允许包含嵌套计列项。
Web.APDValidation.XMindImport.Product.DuplicateAbbreviation = 已有一个现有保险产品的缩写为“{0}”
Web.APDValidation.XMindImport.Product.DuplicateCodeIdentifier = 已有一个现有保险产品的代码标识符为“{0}”
Web.APDropdownEntry.Title = 下拉列表条目
Web.Account.Contact.AddAll = 全部添加
Web.Account.Contact.AddRole = 添加角色
Web.Account.Contact.ChangeAccountHolder = 将账户持有人更改为
Web.Account.Contact.Driver.DateCompletedTrainingClass = 驾校毕业日期
Web.Account.Contact.Driver.GoodDriverDiscount = 获得优秀司机折扣资格
Web.Account.Contact.Driver.NumberOfAccidents = 事故数
Web.Account.Contact.Driver.NumberOfViolations = 违章次数
Web.Account.Contact.Driver.Student = 好学生
Web.Account.Contact.Driver.TrainingClassType = 培训班类型
Web.Account.Contact.Driver.YearGotLicence = 首次获得驾驶证年份
Web.Account.Contact.Edit = 编辑
Web.Account.Contact.RemoveContact = 移除联系人
Web.Account.Contact.RemoveRole = 移除角色
Web.Account.Location.RemoveLocation = 移除地点
Web.Account.Locations.Active = 活动
Web.Account.Locations.Description = 地址说明
Web.Account.Locations.EmployeeCount = 此地点的雇员数量
Web.Account.Locations.Filter.ShowActive = 显示活动
Web.Account.Locations.Filter.ShowAll = 全部显示
Web.Account.Locations.Filter.ShowInactive = 显示非活动
Web.Account.Locations.IsSynchronized = 最新日期
Web.Account.Locations.IsSynchronized.Policy.Link = 查看当前地点
Web.Account.Locations.IsSynchronized.Policy.Message = 地点信息在此保单承保后已更改！
Web.Account.Locations.LocNum = 地点编号
Web.Account.Locations.LocationCode = 地点代码
Web.Account.Locations.LocationInformation.Title = 地点信息
Web.Account.Locations.LocationIsNonSpecific = 非特定地点
Web.Account.Locations.LocationName = 地点名称
Web.Account.Locations.NonSpecific = 非特定
Web.Account.Locations.Panel.GeneralInfo.Title = 地点详细信息
Web.Account.Locations.Phone = 电话
Web.Account.Locations.PrimaryLocation = 首选
Web.Account.Locations.UnableToInitialize = 无法初始化CP地点页面
Web.Account.Locations.WorkPhone = 办公电话
Web.Account.NewAccount = 新建账户
Web.Account.NoAccountToShow = 无账户可显示
Web.Account.NoAccountToShow.Message = 您的历史列表中没有任何账户文件。访问任何账户文件之后，单击“账户”选项卡可转到最近访问的文件。
Web.Account.Participants.AssignedGroup = 已分配组
Web.Account.Participants.AssignedUser = 已分配用户
Web.Account.Participants.Role = 角色
Web.Account.Participants.UserValidation = 已分配用户没有同时要分配的组
Web.Account.Status.ReopenAccount = 重开账户
Web.Account.Status.WithdrawAccount = 撤消账户
Web.AccountBasics.PoliciesLV.PolicyEffDate = 生效日期
Web.AccountBasics.PoliciesLV.PolicyExpirDate = 失效日期
Web.AccountBasics.PoliciesLV.PolicyNumber = 保单号
Web.AccountBasics.PoliciesLV.Product = 保险产品
Web.AccountBilling.Error.GeneralException = 从计费系统检索信息时遇到问题：{0}
Web.AccountBilling.Title = 计费
Web.AccountBilling.Warning.BillingNotAvailable = 目前无法获得计费信息。
Web.AccountBilling.Warning.PolicyNotFound = 在计费系统中找不到保单#{0}。
Web.AccountContactCV.AdditionalInformation = 附加信息
Web.AccountContactCV.Error.CannotRemoveInUseRole = 无法移除角色{0}，因其正在使用。
Web.AccountContactCV.Error.CannotRemoveOnlyRole = 无法移除唯一的角色：请改用“账户文件 - 联系人”页面
Web.AccountContactCV.Roles = 角色
Web.AccountContacts.AccountDetail = 联系人详细信息
Web.AccountContacts.AssociatedJobs = 相关交易
Web.AccountContacts.AssociatedPolicies = 关联的保单
Web.AccountContacts.DisplayAllRoles = 显示所有角色
Web.AccountContacts.Persons = 个人
Web.AccountContacts.PersonsAndCompanies = 个人和公司
Web.AccountContactsLV.Address = 地址
Web.AccountContactsLV.Edit = 编辑
Web.AccountContactsLV.Email = 电子邮件
Web.AccountContactsLV.External = 外部
Web.AccountContactsLV.GoToContact = 转到联系人
Web.AccountContactsLV.Name = 姓名
Web.AccountContactsLV.Phone = 电话
Web.AccountContactsLV.Roles = 角色
Web.AccountContactsLV.Warning.UnselectableContact = 无法选择的联系人缺少PolicyCenter所需的某些联系人信息。请联系管理员以解决数据问题。
Web.AccountDetail.Currencies = 货币
Web.AccountDetail.PreferredCoverageCurrency = 承保范围
Web.AccountDetail.PreferredSettlementCurrency = 赔付
Web.AccountFile.Billing = 计费
Web.AccountFile.Billing.AccountBalances = 账户余额
Web.AccountFile.Billing.AmountsConvertedForReference = 金额转换仅供参考
Web.AccountFile.Billing.BilledOutstanding = 计费未清费用
Web.AccountFile.Billing.BilledOutstandingCurrent = \ \ 当前
Web.AccountFile.Billing.BilledOutstandingPastDue = \ \ 逾期
Web.AccountFile.Billing.BilledPolicies = 计入此账户的其它保单
Web.AccountFile.Billing.BillingAccount = 计费账户
Web.AccountFile.Billing.Collateral = 保证金
Web.AccountFile.Billing.CollateralHeld = 锁定
Web.AccountFile.Billing.CollateralRequirement = 要求
Web.AccountFile.Billing.DelinquencyWarningMessage = 警告： 此账户处于欠费状态。
Web.AccountFile.Billing.Invoices = 发票
Web.AccountFile.Billing.OwnedPolicies = 自有保单
Web.AccountFile.Billing.PolicyTerms = 保单期限
Web.AccountFile.Billing.PrimaryPayer = 主要付款人
Web.AccountFile.Billing.PrimaryPayer.Address = 地址
Web.AccountFile.Billing.PrimaryPayer.Name = 姓名
Web.AccountFile.Billing.PrimaryPayer.Phone = 电话
Web.AccountFile.Billing.Title = 账户文件 - 计费
Web.AccountFile.Billing.UnappliedFunds = 未支配资金
Web.AccountFile.Billing.Unbilled = 未开票
Web.AccountFile.Claims = 理赔
Web.AccountFile.Claims.ClaimSearch.Date = 按出险日期搜索
Web.AccountFile.Claims.Title = 账户文件 - 索赔
Web.AccountFile.Contacts = 联系人
Web.AccountFile.Contacts.Active = 活动
Web.AccountFile.Contacts.ChangeActiveStatus = 更改活动状态
Web.AccountFile.Contacts.Title = 账户文件 - 联系人
Web.AccountFile.Create = 创建
Web.AccountFile.Documents = 单证
Web.AccountFile.Documents.Title = 账户文件 - 单证
Web.AccountFile.History = 历史记录
Web.AccountFile.History.Title = 账户文件 - 历史记录
Web.AccountFile.LocationGroup.Title = 账户文件{0}
Web.AccountFile.Locations = 地点
Web.AccountFile.Locations.AddNewLocation = 添加新地点
Web.AccountFile.Locations.ChangeActiveStatus = 更改活动状态
Web.AccountFile.Locations.SetAsPrimary = 设为主要
Web.AccountFile.Locations.Title = 账户文件 - 地点
Web.AccountFile.MergeAccounts = 合并账户
Web.AccountFile.MergeAccounts.AccountSearchInstructions = 选择要合并到账户{0}的账户
Web.AccountFile.MergeAccounts.AccountSelection = 将账号{0}合并到账号{1}
Web.AccountFile.MergeAccounts.Cancel = 取消
Web.AccountFile.MergeAccounts.Confirmation = 是否将账号{0}合并到账号{1}？\n账号{0}将被移除。
Web.AccountFile.MergeAccounts.MergeAccount = 将账户合并到此账户中
Web.AccountFile.MergeAccounts.RemovalWarning = 账号{0}将被移除。
Web.AccountFile.MergeAccounts.RequireDifferentAccountNumber = 账号#{0}与当前账户匹配。请选择其它账户进行合并。
Web.AccountFile.MergeAccounts.Warning = 账号{0}中的所有信息都将合并到账号{1}中。
Web.AccountFile.MovePolicies = 将保单移至此账户
Web.AccountFile.MovePolicies.AccountSearchInstructions = 搜索要从中移出保单的账户
Web.AccountFile.MovePolicies.Policies = 保单
Web.AccountFile.MovePolicies.PoliciesSelection.CurrEffectiveDate = 当前生效日期
Web.AccountFile.MovePolicies.PoliciesSelection.CurrExpirationDate = 当前失效日期
Web.AccountFile.MovePolicies.PoliciesSelection.PolicyStartDate = 保单开始日期
Web.AccountFile.MovePolicies.RequireDifferentAccountNumber = 账号{0}与当前账户匹配。请提供其它账号以移动保单账户选择。
Web.AccountFile.MovePolicies.Selection = 移动保单选择
Web.AccountFile.MovePolicies.SourceAccountLabel = 保单移自：
Web.AccountFile.NewActivity = 新建活动
Web.AccountFile.NewDocument = 新建单证
Web.AccountFile.NewDocument.Template = 从模板创建
Web.AccountFile.NewDocuments.Linked = 上传单证
Web.AccountFile.NewEmail = 新建电子邮件
Web.AccountFile.NewNote = 新建备注
Web.AccountFile.NewSubmission = 新建投保单
Web.AccountFile.Notes = 备注
Web.AccountFile.Notes.Title = 账户文件 - 备注
Web.AccountFile.Overview = 摘要
Web.AccountFile.Overview.NewSubmission = 新投保单
Web.AccountFile.Overview.Title = 账户摘要：{0}
Web.AccountFile.RelatedAccounts = 相关账户
Web.AccountFile.RelatedAccounts.AccountNumber = 账号
Web.AccountFile.RelatedAccounts.Address = 地址
Web.AccountFile.RelatedAccounts.EditPopup = 账户关系
Web.AccountFile.RelatedAccounts.Name = 名称
Web.AccountFile.RelatedAccounts.RelatedAccount = 相关账户
Web.AccountFile.RelatedAccounts.Relationship = 关系
Web.AccountFile.RelatedAccounts.SearchPopup = 搜索相关账户
Web.AccountFile.RelatedAccounts.SharedContact = 具有相同账户持有人或列名被保险人的账户
Web.AccountFile.RelatedAccounts.Title = 账户文件 - 相关账户
Web.AccountFile.RewritePolicies = 将保单重新填写到此账户
Web.AccountFile.RewritePolicies.AccountSearchInstructions = 搜索要从其重新填写保单的账户
Web.AccountFile.RewritePolicies.Policies = 保单
Web.AccountFile.RewritePolicies.RequireDifferentAccountNumber = 账号{0}与当前账户匹配。请提供不同的账号以重新填写选择的保单账户。
Web.AccountFile.RewritePolicies.Selection = 重新填写保单选择
Web.AccountFile.RewritePolicies.SourceAccountLabel = 保单重新填写自：
Web.AccountFile.Roles = 参与人
Web.AccountFile.Roles.Title = 账户文件 - 参与人
Web.AccountFile.SearchAccount.AccountSearchInstructions = 账户搜索
Web.AccountFile.SearchAccount.RequireDifferentAccountNumber = 账号{0}与您所排除的账户匹配。请提供一个不同的账号用于搜索。
Web.AccountFile.Summary.AccountNumber = 账号
Web.AccountFile.Summary.AccountStatus = 状态
Web.AccountFile.Summary.AddPolicy = 添加保单
Web.AccountFile.Summary.Address = 地址
Web.AccountFile.Summary.DUNS = 邓白氏编号
Web.AccountFile.Summary.EditAccount = 编辑账户
Web.AccountFile.Summary.Email = 电子邮件
Web.AccountFile.Summary.MulticurrencyWarning = 这是一个多币种账户。计费图表和概述磁贴显示的是以赔付货币完成的计算。
Web.AccountFile.Summary.Name = 账户名称
Web.AccountFile.Summary.Nickname = 账户昵称
Web.AccountFile.Summary.OfficialIDs = 官方ID
Web.AccountFile.Summary.PendingWorkOrders = 待处理保单交易
Web.AccountFile.Summary.PhoneNumber = 电话号码
Web.AccountFile.Summary.PolicyTerms = 保单期限
Web.AccountFile.Summary.PolicyTermsLV.EffectiveDate = 生效日期
Web.AccountFile.Summary.PolicyTermsLV.ExpirationDate = 到期日期
Web.AccountFile.Summary.PolicyTermsLV.PolicyNumber = 保单号
Web.AccountFile.Summary.PolicyTermsLV.Product = 产品
Web.AccountFile.Summary.PolicyTermsLV.Status = 状态
Web.AccountFile.Summary.TUNS = 临时DUNS编号
Web.AccountFile.Summary.Title = 账户文件 - 摘要
Web.AccountFile.Summary.WorkOrdersLV.CreateDate = 创建日期
Web.AccountFile.Summary.WorkOrdersLV.JobStatus = 状态
Web.AccountFile.Summary.WorkOrdersLV.PolicyNumber = 保单号
Web.AccountFile.Summary.WorkOrdersLV.Product = 产品
Web.AccountFile.Summary.WorkOrdersLV.Underwriter = 核保人
Web.AccountFile.Summary.WorkOrdersLV.WorkOrderNumber = 交易号
Web.AccountFile.Summary.WorkOrdersLV.WorkOrderType = 类型
Web.AccountFile.WorkOrders = 保单交易
Web.AccountFile.WorkOrders.CompletionDate = 完成日期
Web.AccountFile.WorkOrders.CreateDate = 创建日期
Web.AccountFile.WorkOrders.Filter.JobType = 类型
Web.AccountFile.WorkOrders.Filter.Product = 保险产品
Web.AccountFile.WorkOrders.Filter.Status = 状态
Web.AccountFile.WorkOrders.PolicyNumber = 保单号
Web.AccountFile.WorkOrders.Product = 产品
Web.AccountFile.WorkOrders.Status = 状态
Web.AccountFile.WorkOrders.Title = 账户文件 - 保单交易
Web.AccountFile.WorkOrders.WorkOrderNumber = 交易号
Web.AccountFile.WorkOrders.WorkOrderType = 类型
Web.AccountFileInfoBar.AccountName = 账户
Web.AccountFileInfoBar.AccountNumber = 账户：
Web.AccountLocation.CannotRemoveBecauseInUse = 无法移除地点{0}，因其正在使用。
Web.AccountLocation.CountryChanged = 国家/地区无法从{0}更改为{1}。请恢复更改。
Web.AccountLocation.StateChanged = 省/直辖市无法从{0}改为{1}。请恢复更改。
Web.AccountSearch.AccountName = 账户名称
Web.AccountSearch.AccountNamePhonetic = 账户名称（拼音）
Web.AccountSearch.AccountNumber = 账号
Web.AccountSearch.ApplicantInfo = 申请人信息
Web.AccountSearch.CannotSpecifyBothPersonAndCompany = 请指定公司名称或个人姓名，但不要同时指定两者。
Web.AccountSearch.CompanyNameExactMatch = 公司名称精确匹配
Web.AccountSearch.FirstNameExactMatch = 名字精确匹配
Web.AccountSearch.IndustryCode = 行业代码
Web.AccountSearch.LastNameExactMatch = 姓氏精确匹配
Web.AccountSearch.MinimumSearchCriteriaRequirement = 请输入充分的名称信息、公务员ID、账号、电话号码或经理人信息。如果按姓氏搜索而不使用精确匹配，则需要输入省/市或邮政编码。不使用精确匹配时，至少需要输入名称的两个汉字（搜索公司则需要输入三个汉字）。
Web.AccountSearch.Phone = 电话
Web.AccountSearch.PrimaryPayer = 主要付款人
Web.AccountSearch.ProducerCode = 经理人代码
Web.AccountSearch.ProducerOrganization = 经理人
Web.AccountSearch.RelatedTo = 关联到{0}
Web.AccountSearch.TaxID = 税号
Web.AccountSearch.Title = 搜索账户
Web.AccountSearchResults.AccountNumber = 账号
Web.AccountSearchResults.Address = 地址
Web.AccountSearchResults.Name = 名称
Web.AccountSearchResults.NamePhonetic = 名称（拼音）
Web.AccountSearchResults.Select = 选择
Web.Activity.ActivityDetailTab = 活动
Web.Activity.ActivityDetailTitle = 活动详细信息
Web.Activity.ActivityNoNotes = 没有此活动的备注。
Web.Activity.Assign.Title = 分配活动
Web.Activity.DefaultDocumentTemplate.NotFound = 找不到适用于当前地点的{0}默认模板
Web.Activity.DocumentTemplate.NotFound = 无法找到语言为{1}的模板{0}
Web.Activity.EmailTemplate.DoesNotExist = 模板{0}无法用于以下语言，因此无法将电子邮件另存为单证：{1}
Web.Activity.EmailTemplate.Language = 未找到电子邮件模板{0}（语言为{1}）
Web.Activity.FederatedData.Processing = 正在处理突出显示的行
Web.ActivityDetail.ActivityCanceled = 此活动已取消。
Web.ActivityDetail.ActivityInfo = 活动信息
Web.ActivityDetail.ApprovalRationale = 批准理由
Web.ActivityDetail.AssignedTo = 负责人
Web.ActivityDetail.Button.Approve = 批准
Web.ActivityDetail.Button.Assign = 分配
Web.ActivityDetail.Button.Cancel = 取消
Web.ActivityDetail.Button.Complete = 完成
Web.ActivityDetail.Button.CompleteCreate = 完成并新建
Web.ActivityDetail.Button.CreateDocument = 创建单证
Web.ActivityDetail.Button.CreateEmail = 创建电子邮件
Web.ActivityDetail.Button.Decline = 拒绝
Web.ActivityDetail.Button.RenewalGroup = 续保组
Web.ActivityDetail.Button.Skip = 跳过
Web.ActivityDetail.Button.UWAuthApprovalSend = 释放
Web.ActivityDetail.Button.UWAuthRequestSend = 发送请求
Web.ActivityDetail.Button.Update = 确定
Web.ActivityDetail.Button.ViewNotes = 查看备注
Web.ActivityDetail.CreateDocument = 单证模板
Web.ActivityDetail.Description = 说明
Web.ActivityDetail.EmailTemplate = 电子邮件模板
Web.ActivityDetail.EscalationDate = 升级日期
Web.ActivityDetail.Mandatory = 强制
Web.ActivityDetail.Priority = 优先级
Web.ActivityDetail.Recurring = 按周期反复
Web.ActivityDetail.Status = 状态
Web.ActivityDetail.Subject = 主题
Web.ActivityDetail.TargetDate = 目标日期
Web.ActivityEscWorkItem.Id = 活动ID
Web.ActivityEscWorkItem.Subject = 主题
Web.ActivitySearch.AccountNumber = 账号
Web.ActivitySearch.ActivityPriority = 优先级
Web.ActivitySearch.ActivityStatus = 活动状态
Web.ActivitySearch.AssignedUser = 负责人
Web.ActivitySearch.MinimumSearchCriteria = 请指定受理人、保单号或账号
Web.ActivitySearch.OptionalCriteria = 可选条件：
Web.ActivitySearch.OverdueNow = 现已过期
Web.ActivitySearch.PolicyNumber = 保单号
Web.ActivitySearch.RequiredCriteria = 至少指定以下其中一项：
Web.ActivitySearch.Results = 搜索结果
Web.ActivitySearch.Results.Assign = 分配
Web.ActivitySearch.Results.Complete = 完成
Web.ActivitySearch.Results.Skip = 跳过
Web.ActivitySearch.Title = 搜索活动
Web.Address.AutoFill.AddressField.InvalidFormat = “{0}”的格式不正确：{1}
Web.Address.AutoFill.AddressField.Warning = {0} {1}与地址中的其它字段不匹配。
Web.Address.AutoFill.CityState.NotEnoughInfo = 请输入市和省以使用此自动填充功能。
Web.Address.AutoFill.CityState.Warning = 无法找到针对{0}、{1}的有效省、市和邮政编码信息。
Web.Address.AutoFill.County.Warning = 区/县{0}对{1}无效。
Web.Address.AutoFill.PostalCode.NotEnoughInfo = 请输入邮政编码以使用此自动填充功能。
Web.Address.AutoFill.PostalCode.Warning = 邮政编码{0}对{1}、{2}无效。
Web.AddressBook.AddressBookConvertable.Button.New = 在通讯簿中创建
Web.AddressBook.AddressBookConvertable.Button.Permission = 您没有执行该操作的权限。
Web.AddressBook.AddressBookConvertable.Button.Sync = 同步到通讯簿
Web.AddressBook.AddressBookConvertable.Button.Update = 更新通讯簿
Web.AddressBook.AddressInputSet.Address1 = 地址1
Web.AddressBook.AddressInputSet.Address1Phonetic = 地址 1（拼音）
Web.AddressBook.AddressInputSet.Address2 = 地址2
Web.AddressBook.AddressInputSet.Address2Phonetic = 地址 2（拼音）
Web.AddressBook.AddressInputSet.Address3 = 地址3
Web.AddressBook.AddressInputSet.AddressSummary = 地址
Web.AddressBook.AddressInputSet.CEDEX = CEDEX
Web.AddressBook.AddressInputSet.CEDEXBureau = CEDEX办公处
Web.AddressBook.AddressInputSet.City = 城市
Web.AddressBook.AddressInputSet.CityPhonetic = 市（拼音）
Web.AddressBook.AddressInputSet.Country = 国家/地区
Web.AddressBook.AddressInputSet.County = 区/县
Web.AddressBook.AddressInputSet.Description = 说明
Web.AddressBook.AddressInputSet.Name = 地点
Web.AddressBook.AddressInputSet.PostalCode = 邮政编码
Web.AddressBook.AddressInputSet.Postcode = 邮政编码
Web.AddressBook.AddressInputSet.Prefecture = 省/直辖市
Web.AddressBook.AddressInputSet.Province = 省
Web.AddressBook.AddressInputSet.RangeInputAddress.CountryChangeWarning = 如果更改国家/地区字段，现有地址字段值可能变为无效
Web.AddressBook.AddressInputSet.State = 省/市
Web.AddressBook.AddressInputSet.TownCity = 乡（镇）/市
Web.AddressBook.AddressInputSet.ZIP = 邮政编码
Web.AddressBook.Button.CreateNewContact = 创建新联系人
Web.AddressBook.Button.Delete.Warning = 是否确定要删除该联系人？
Web.AddressBook.Button.DeleteSelected.Warning = 是否确定要删除选定联系人？
Web.AddressBook.Button.Search.Generic = 添加现有联系人
Web.AddressBook.Button.UpdateAddressBook = 更新通讯簿
Web.AddressBook.ContactDetail.ScreenTab.Addresses = 地址
Web.AddressBook.ContactDetail.ScreenTab.Basics = 基本情况
Web.AddressBook.ContactDetail.ScreenTab.RelatedContacts = 相关联系人
Web.AddressBook.ContactSearchPage.Title = 搜索通讯簿
Web.AddressBook.Directions.From = 起点
Web.AddressBook.Directions.Segment = 步骤
Web.AddressBook.Directions.SegmentTime = 预计时间
Web.AddressBook.Directions.Title = 驾车指示
Web.AddressBook.Directions.To = 目标
Web.AddressBook.Directions.TotalDistance = 总距离
Web.AddressBook.Directions.TotalTime = 预计总时间
Web.AddressBook.Error.ContactNotFound = 未找到联系人： 联系人可能已被另一用户删除
Web.AddressBook.MenuLinks.Search = 搜索
Web.AddressBook.Search.AdjudicativeDomain = 审判范围
Web.AddressBook.Search.AttorneyLicense = 律师执照
Web.AddressBook.Search.AttorneySpecialty = 受理类型
Web.AddressBook.Search.AutoRepairLicense = 汽车修理营业执照
Web.AddressBook.Search.ContactName = 名字/姓氏
Web.AddressBook.Search.DoctorLicense = 行医执照
Web.AddressBook.Search.DoctorSpecialty = 医学专长
Web.AddressBook.Search.EmployeeNumber = 雇员编号
Web.AddressBook.Search.FirstName = 名字
Web.AddressBook.Search.LastName = 姓氏
Web.AddressBook.Search.LawFirmSpecialty = 律师事务所专长
Web.AddressBook.Search.Location = 地点
Web.AddressBook.Search.Location.City = 市
Web.AddressBook.Search.Location.Country = 国家/地区
Web.AddressBook.Search.Location.PostalCode = 邮政编码
Web.AddressBook.Search.Location.Province = 省
Web.AddressBook.Search.Location.State = 省/直辖市
Web.AddressBook.Search.Location.ZipCode = 邮政编码
Web.AddressBook.Search.MedicalSpecialty = 医学专长
Web.AddressBook.Search.Name = 名称
Web.AddressBook.Search.OrganizationName = 机构名称
Web.AddressBook.Search.PreferredVendors = 仅首选经销商？
Web.AddressBook.Search.ProximitySearch = 搜索靠近此地址的结果
Web.AddressBook.Search.ProximitySearch.AddressLine1 = 地址行 1
Web.AddressBook.Search.ProximitySearch.AddressLine2 = 地址行 2
Web.AddressBook.Search.ProximitySearch.City = 市
Web.AddressBook.Search.ProximitySearch.Country = 国家/地区
Web.AddressBook.Search.ProximitySearch.County = 区/县
Web.AddressBook.Search.ProximitySearch.PostalCode = 邮政编码
Web.AddressBook.Search.ProximitySearch.Province = 省
Web.AddressBook.Search.ProximitySearch.Radius = 搜索半径
Web.AddressBook.Search.ProximitySearch.State = 省/直辖市
Web.AddressBook.Search.ProximitySearch.UnitOfDistance = 单位
Web.AddressBook.Search.ProximitySearch.ZipCode = 邮政编码
Web.AddressBook.Search.Result.Address = 地址
Web.AddressBook.Search.Result.City = 市
Web.AddressBook.Search.Result.Directions = 指示
Web.AddressBook.Search.Result.Distance = 距离
Web.AddressBook.Search.Result.DrivingDistance = 驾驶距离
Web.AddressBook.Search.Result.ExactMatch = 精确匹配
Web.AddressBook.Search.Result.GetDirections = 获取指示
Web.AddressBook.Search.Result.GetRequested = 检索请求的指示
Web.AddressBook.Search.Result.LinkTo = 链接至
Web.AddressBook.Search.Result.Name = 名称
Web.AddressBook.Search.Result.Phone = 电话号码
Web.AddressBook.Search.Result.PotentialMatch = 潜在匹配
Web.AddressBook.Search.Result.ProximateDistance = 最近距离
Web.AddressBook.Search.Result.ResetRequested = 重置请求的指示
Web.AddressBook.Search.Result.Select = 选择
Web.AddressBook.Search.Result.State = 省/直辖市
Web.AddressBook.Search.Result.Type = 类型
Web.AddressBook.Search.Result.Zip = 邮政编码
Web.AddressBook.Search.SearchType = 搜索类型
Web.AddressBook.Search.TaxID = 税务代码
Web.AddressBook.Search.Type = 类型
Web.AddressBook.Search.VendorType = 经销商类型
Web.AddressBook.Title.New = 新建{0}
Web.AddressBookContactDetail.Title = {0}
Web.AddressDetail.AddressLine1 = 地址行 1
Web.AddressDetail.AddressLine2 = 地址行 2
Web.AddressDetail.AddressType = 地址类型
Web.AddressDetail.BillingAddress = 开票地址
Web.AddressDetail.City = 市
Web.AddressDetail.Country = 国家/地区
Web.AddressDetail.County = 区/县
Web.AddressDetail.Description = 说明
Web.AddressDetail.PostalCode = 邮政编码
Web.AddressDetail.Province = 省
Web.AddressDetail.State = 省/直辖市
Web.AddressDetail.ValidUntil = 有效期截止日期
Web.AddressDetail.ViewMap = 查看地图
Web.AddressDetail.ZipCode = 邮政编码
Web.Addresses.Address = 地址
Web.Addresses.AddressType = 类型
Web.Addresses.Linked.AlreadyLinked = 无法链接地址，它已经链接。
Web.Addresses.Linked.ContactAlreadyLinked = 此地址已链接到此联系人
Web.Addresses.Linked.MarkAsPrimaryAddress = *{0}
Web.Addresses.Linked.NullAddress = 无法链接到空地址
Web.Addresses.Linked.UnlinkException = 无法取消链接未链接的地址
Web.Addresses.Primary = 首选
Web.Admin.ActivityPatternDV.EmailTemplate = 电子邮件模板
Web.Admin.ActivityPatternDV.Templates = 模板
Web.Admin.ActivityPatternDetail = 活动模式详细信息：{0}
Web.Admin.ActivityPatternDetailDV.ActivityClass = 活动分类
Web.Admin.ActivityPatternDetailDV.AutomatedOnly = 仅自动
Web.Admin.ActivityPatternDetailDV.Category = 类别
Web.Admin.ActivityPatternDetailDV.Code = 代码
Web.Admin.ActivityPatternDetailDV.Description = 说明
Web.Admin.ActivityPatternDetailDV.EscalationDays = 升级天数
Web.Admin.ActivityPatternDetailDV.EscalationHours = 升级小时数
Web.Admin.ActivityPatternDetailDV.EscalationInclDays = 升级天数组成类型
Web.Admin.ActivityPatternDetailDV.EscalationStartPt = 升级起始点
Web.Admin.ActivityPatternDetailDV.Mandatory = 强制
Web.Admin.ActivityPatternDetailDV.PatternLevel = 模式级别
Web.Admin.ActivityPatternDetailDV.Priority = 优先级
Web.Admin.ActivityPatternDetailDV.Recurring = 按周期反复
Web.Admin.ActivityPatternDetailDV.ShortSubject = 简短主题
Web.Admin.ActivityPatternDetailDV.Subject = 主题
Web.Admin.ActivityPatternDetailDV.TargetDays = 目标天数
Web.Admin.ActivityPatternDetailDV.TargetHours = 目标小时数
Web.Admin.ActivityPatternDetailDV.TargetIncludeDays = 目标天数组成类型
Web.Admin.ActivityPatternDetailDV.TargetStartPoint = 目标起始点
Web.Admin.ActivityPatternDetailDV.Type = 类型
Web.Admin.ActivityPatternLocalizedLV.Description = 说明
Web.Admin.ActivityPatternLocalizedLV.Subject = 主题
Web.Admin.ActivityPatterns = 活动模式
Web.Admin.ActivityPatternsLV.ActivityClass = 活动分类
Web.Admin.ActivityPatternsLV.AutomatedOnly = 仅自动
Web.Admin.ActivityPatternsLV.Category = 类别
Web.Admin.ActivityPatternsLV.Mandatory = 强制
Web.Admin.ActivityPatternsLV.PatternLevel = 模式级别
Web.Admin.ActivityPatternsLV.Priority = 优先级
Web.Admin.ActivityPatternsLV.Subject = 主题
Web.Admin.ActivityPatternsLV.Type = 类型
Web.Admin.AddHoliday = {JSP.NewHoliday.Admin.NewHolidayName}
Web.Admin.AddRegion = {JSP.NewRegion.Admin.NewRegionName}
Web.Admin.AddRemoveReports = 添加/移除报告
Web.Admin.AddScriptParameter = 添加脚本参数
Web.Admin.AdminBusinessWeekDV.ZoneCode = 区域代码
Web.Admin.AdminHolidayDV.ZoneCode = 区域代码
Web.Admin.AffinityGroup = 亲和组
Web.Admin.AffinityGroup.Name = 名称
Web.Admin.AffinityGroupDetail = 亲和组：{0}
Web.Admin.AffinityGroupDetail.Basics = 基本情况
Web.Admin.AffinityGroupDetail.BasicsDV.Description = 说明
Web.Admin.AffinityGroupDetail.BasicsDV.EndDate = 结束日期
Web.Admin.AffinityGroupDetail.BasicsDV.Group = 组
Web.Admin.AffinityGroupDetail.BasicsDV.GroupName = 组名称
Web.Admin.AffinityGroupDetail.BasicsDV.GroupNamePhonetic = 组名称（拼音）
Web.Admin.AffinityGroupDetail.BasicsDV.Organization = 组织
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContact = 主要联系人
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContactFirstName = 名字
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContactLastName = 姓氏
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContactPhone = 电话
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContactPhoneticFirstName = 名字（拼音）
Web.Admin.AffinityGroupDetail.BasicsDV.PrimaryContactPhoneticLastName = 姓氏（拼音）
Web.Admin.AffinityGroupDetail.BasicsDV.StartDate = 开始日期
Web.Admin.AffinityGroupDetail.BasicsDV.Type = 类型
Web.Admin.AffinityGroupDetail.Jurisdictions = 管辖权
Web.Admin.AffinityGroupDetail.Jurisdictions.Jurisdiction = 管辖权
Web.Admin.AffinityGroupDetail.ProducerCodes = 经理人代码
Web.Admin.AffinityGroupDetail.Products = 险类
Web.Admin.AffinityGroupDetail.Products.Add = 添加
Web.Admin.AffinityGroupDetail.Products.Error.AlreadyExists = 产品“{0}”已存在。
Web.Admin.AffinityGroupDetail.Products.Product = 险类
Web.Admin.AffinityGroupEndDateBeforeStartDate = 亲和组的开始日期应该早于结束日期。
Web.Admin.AffinityGroupOrganizationNotAllowed = 未决的亲和组上不允许使用组织。
Web.Admin.AffinityGroupProducerCodesNotAllowed = 未决的亲和组上不允许使用经理人代码。
Web.Admin.AffinityGroupSameStartAndEndDates = 亲和组的开始和结束日期为同一日期。
Web.Admin.AffinityGroupSearch = 亲和组
Web.Admin.AffinityGroupSearch.ProducerCode = 可用的经理人代码
Web.Admin.AffinityGroupSearch.Product = 险类
Web.Admin.AgencyBillPlanSearch = 搜索代理缴费计划
Web.Admin.AgencyBillPlanSearch.Currencies = 支持的货币
Web.Admin.AgencyBillPlanSearch.Name = 计划名称
Web.Admin.AssignableQueueDetailDV.AssignableQueue = 可分配队列
Web.Admin.AssignableQueueDetailDV.Description = 说明
Web.Admin.AssignableQueueDetailDV.Name = 名称
Web.Admin.AssignableQueueDetailDV.SubGroupVisible = 在子组内可见吗？
Web.Admin.AttributeDetail = 属性详细信息
Web.Admin.AttributeDetailDV.Attribute = 属性
Web.Admin.AttributeDetailDV.Description = 说明
Web.Admin.AttributeDetailDV.Name = 名称
Web.Admin.AttributeDetailDV.Type = 类型
Web.Admin.Attributes = 属性
Web.Admin.AttributesLV.Description = 说明
Web.Admin.AttributesLV.Name = 名称
Web.Admin.AttributesLV.Type = 类型
Web.Admin.BrowseBranches = 浏览分支
Web.Admin.BrowseGroupRegion = 浏览组地区
Web.Admin.BrowseGroups = 浏览组
Web.Admin.BrowseProducers = 浏览经理人
Web.Admin.BrowseUserAttributes = 浏览用户属性
Web.Admin.BrowseUserRegion = 浏览用户地区
Web.Admin.BusinessSettings = 业务设置
Web.Admin.BusinessSettings.ActivityPatterns = 活动模式
Web.Admin.BusinessSettings.Holidays = 假期
Web.Admin.BusinessWeek = 工作周
Web.Admin.BusinessWeek.AddBusinessWeek = 添加工作周
Web.Admin.BusinessWeek.Name = 名称
Web.Admin.BusinessWeek.Zones = 区域
Web.Admin.BusinessWeekDetail = {0}
Web.Admin.BusinessWeekDetailDV.AppliesToAllZones = 适用于所有区域
Web.Admin.BusinessWeekDetailDV.BusinessDay = 是工作日
Web.Admin.BusinessWeekDetailDV.BusinessDayDemarcation = 工作日划分
Web.Admin.BusinessWeekDetailDV.BusinessEnd = 工作日结束
Web.Admin.BusinessWeekDetailDV.BusinessStart = 工作日开始
Web.Admin.BusinessWeekDetailDV.BusinessWeekEnd = 工作周结束
Web.Admin.BusinessWeekDetailDV.BusinessWeekHasZones = 工作周必须适用于所有区域或者已被分配区域。
Web.Admin.BusinessWeekDetailDV.BusinessWeekType = 工作周区域类型
Web.Admin.BusinessWeekDetailDV.Country = 国家/地区
Web.Admin.BusinessWeekDetailDV.Friday = 星期五
Web.Admin.BusinessWeekDetailDV.Monday = 星期一
Web.Admin.BusinessWeekDetailDV.Name = 名称
Web.Admin.BusinessWeekDetailDV.Saturday = 星期六
Web.Admin.BusinessWeekDetailDV.Sunday = 星期日
Web.Admin.BusinessWeekDetailDV.Thursday = 星期四
Web.Admin.BusinessWeekDetailDV.Tuesday = 星期二
Web.Admin.BusinessWeekDetailDV.Wednesday = 星期三
Web.Admin.BusinessWeekDetailDV.ZoneType = 区域类型
Web.Admin.BusinessWeekDetailDV.Zones = 区域
Web.Admin.BusinessWeeksLV.Zones = 区域
Web.Admin.ContactDetailDV.Email = 电子邮件地址
Web.Admin.ContactDetailDV.EmployeeNumber = 雇员ID
Web.Admin.ContactDetailDV.Fax = 传真
Web.Admin.ContactDetailDV.PrimaryPhone = 主要电话
Web.Admin.Create = 创建
Web.Admin.DataChange = 数据更改
Web.Admin.DataChange.CreateDate = 创建时间
Web.Admin.DataChange.CreateUser = 创建人
Web.Admin.DataChange.DescLabel = 说明
Web.Admin.DataChange.DiscardButton = 放弃
Web.Admin.DataChange.ExecuteButton = 执行
Web.Admin.DataChange.ExecuteUser = 执行人
Web.Admin.DataChange.ExecutedDate = 执行日期
Web.Admin.DataChange.Gosu = Gosu
Web.Admin.DataChange.RefField = 引用
Web.Admin.DataChange.Result = 结果
Web.Admin.DataChange.StatusLabel = 状态
Web.Admin.DataFlowMaskDetailDV.AvailableColumns = 可用列
Web.Admin.DataFlowMaskDetailDV.CannotExcludeRequiredColumnError = 列{0}是用于导入的必填列，不能排除
Web.Admin.DataFlowMaskDetailDV.DuplicateNameError = {1}已存在名为“{0}”的导出格式。请选择其它名称。
Web.Admin.DataFlowMaskDetailDV.EntityType = 导出
Web.Admin.DataFlowMaskDetailDV.ExcludedRequiredColumnAction = 从已排除列列表中移除必填列
Web.Admin.DataFlowMaskDetailDV.IncludedColumns = 已包括列
Web.Admin.DataFlowMaskDetailDV.Name = 名称
Web.Admin.DataFlowMaskDetailDV.RequiredColumns = 默认包括列
Web.Admin.DataFlowMasks.Delete.Confirm = 是否确定要删除选定掩码？
Web.Admin.DataFlowMasks.SetDefault = 设置默认
Web.Admin.DataFlowMasksDV.Mask = 掩码
Web.Admin.DataFlowMasksLV.DefaultMask = 默认？
Web.Admin.DataFlowMasksLV.Name = 名称
Web.Admin.DataFlowMasksLV.Type = 导出
Web.Admin.Dictionary = 实体字典
Web.Admin.ExportData = 导出数据
Web.Admin.ExportDataDV.DataSet = 要导出的数据
Web.Admin.ExportDataDV.ExportButton = 导出
Web.Admin.ExportDataDV.ExportDataMessage = 导出管理数据
Web.Admin.ExportTab = 导出数据
Web.Admin.FormPatternDetail = 表格模式：{0}
Web.Admin.FormPatternDetail.Basics = 基本情况
Web.Admin.FormPatternDetail.BasicsDV.Code = 代码
Web.Admin.FormPatternDetail.BasicsDV.CodeCopy = {0}复制
Web.Admin.FormPatternDetail.BasicsDV.Edition = 版本
Web.Admin.FormPatternDetail.BasicsDV.EndorsementNumbered = 是否向此表格分配批单号？
Web.Admin.FormPatternDetail.BasicsDV.InferenceTime = 在报价后是否收集了任何与此表格相关的数据？
Web.Admin.FormPatternDetail.BasicsDV.IntegrationFields = 集成字段
Web.Admin.FormPatternDetail.BasicsDV.Name = 名称
Web.Admin.FormPatternDetail.BasicsDV.Number = 编号
Web.Admin.FormPatternDetail.BasicsDV.NumberCopy = {0}复制
Web.Admin.FormPatternDetail.BasicsDV.Priority = 优先级
Web.Admin.FormPatternDetail.BasicsDV.RefCode = 参考代码
Web.Admin.FormPatternDetail.CoveragePartTypesPanelSet.NoValueSelected = 如果未指定值，则将匹配任意保单类型或承保范围部分。
Web.Admin.FormPatternDetail.CoveragePartTypesPanelSet.Title = 保单类型/承保范围部分
Web.Admin.FormPatternDetail.CoveragePartTypesPanelSet.Type = 类型
Web.Admin.FormPatternDetail.FormPatternAdditionalInsured.Description = 说明
Web.Admin.FormPatternDetail.FormPatternAdditionalInsured.NoValueSelected = 如果未指定值，则选定的任何值都将推论此表格模式。
Web.Admin.FormPatternDetail.FormPatternAdditionalInsured.Title = 附加被保险人选项
Web.Admin.FormPatternDetail.FormPatternAdditionalInterest.Description = 说明
Web.Admin.FormPatternDetail.FormPatternAdditionalInterest.NoValueSelected = 如果未指定值，则选定的任何值都将推论此表格模式。
Web.Admin.FormPatternDetail.FormPatternAdditionalInterest.Title = 其他权益方选项
Web.Admin.FormPatternDetail.FormPatternCovTermPopup.Code = 代码
Web.Admin.FormPatternDetail.FormPatternCovTermPopup.Description = 说明
Web.Admin.FormPatternDetail.FormPatternCovTermPopup.Name = 名称
Web.Admin.FormPatternDetail.FormPatternCovTermPopup.Title = 承保范围条款
Web.Admin.FormPatternDetail.FormPatternCovTermValuesLV.Code = 代码
Web.Admin.FormPatternDetail.FormPatternCovTermValuesLV.Description = 说明
Web.Admin.FormPatternDetail.FormPatternCovTermValuesLV.NoValueSelected = 如果未指定值，则将匹配任意承保范围条款。
Web.Admin.FormPatternDetail.FormPatternCovTermValuesLV.Title = 承保范围条款选项
Web.Admin.FormPatternDetail.FormPatternCovTermsLV.Code = 代码
Web.Admin.FormPatternDetail.FormPatternCovTermsLV.Description = 说明
Web.Admin.FormPatternDetail.FormPatternCovTermsLV.Name = 名称
Web.Admin.FormPatternDetail.FormPatternCovTermsLV.Title = 承保范围条款
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyLV.DataType = 数据类型
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyLV.Name = 名称
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyLV.Title = 承保对象字段
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyPopup.DataType = 数据类型
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyPopup.Name = 名称
Web.Admin.FormPatternDetail.FormPatternCoverablePropertyPopup.Title = 承保对象字段
Web.Admin.FormPatternDetail.Inference = 推断
Web.Admin.FormPatternDetail.InferenceDV.Caption = 仅在产品、交易类型和管辖权条件同时匹配时才会推断表格。
Web.Admin.FormPatternDetail.InferenceDV.ClausePattern = 承保范围、条款或免责项
Web.Admin.FormPatternDetail.InferenceDV.CoverableType = 承保的对象
Web.Admin.FormPatternDetail.InferenceDV.CoverableTypeKey = 选定值
Web.Admin.FormPatternDetail.InferenceDV.CoverableTypeKeyExistsOnAll = 是否必须存在于已承保对象的所有实例中？
Web.Admin.FormPatternDetail.InferenceDV.CoverableTypeList = 选定字段
Web.Admin.FormPatternDetail.InferenceDV.CovtermPattern = 承保范围条款
Web.Admin.FormPatternDetail.InferenceDV.CustomInferenceClass = 此表格使用在Guidewire Studio中定义的自定义推断逻辑。请联系PolicyCenter系统配置员修改此表格的推断逻辑。
Web.Admin.FormPatternDetail.InferenceDV.GenericClauseSelectionForm.PatternExist = 是否必须存在于已承保对象的所有实例中？
Web.Admin.FormPatternDetail.InferenceDV.GenericCovtermSelectionForm.PatternExist = 是否必须在承保范围的所有实例中设置？
Web.Admin.FormPatternDetail.InferenceDV.GenericInferenceClass = 表格推断条件
Web.Admin.FormPatternDetail.InferenceDV.LinePattern = 保单险类
Web.Admin.FormPatternDetail.InferenceDV.MidTermChangeLabel = 对保单更改中任意一项值的更改都需要使表格无效或将其替代
Web.Admin.FormPatternDetail.InferenceDV.More = 更多...
Web.Admin.FormPatternDetail.Jobs = 交易类型
Web.Admin.FormPatternDetail.JobsLV.Job = 保单交易类型
Web.Admin.FormPatternDetail.Jurisdictions = 管辖权
Web.Admin.FormPatternDetail.JurisdictionsDV.GroupCode = 组代码
Web.Admin.FormPatternDetail.JurisdictionsDV.Title = 管辖权更换
Web.Admin.FormPatternDetail.JurisdictionsDV.UseInsteadOfForm = 此表格是以下内容的管辖权特定版本：
Web.Admin.FormPatternDetail.JurisdictionsLV.Availability = 有效？
Web.Admin.FormPatternDetail.JurisdictionsLV.EndEffectiveDate = 结束日期
Web.Admin.FormPatternDetail.JurisdictionsLV.Jurisdiction = 管辖权
Web.Admin.FormPatternDetail.JurisdictionsLV.SortOrder.Message = 行按评估的顺序排序\n开始日期包含在内，结束日期不含在内
Web.Admin.FormPatternDetail.JurisdictionsLV.StartEffectiveDate = 开始日期
Web.Admin.FormPatternDetail.JurisdictionsLV.Title = 可用性表
Web.Admin.FormPatternDetail.JurisdictionsLV.UWCompanyCode = 核保公司
Web.Admin.FormPatternDetail.L10nDV.Name = 名称
Web.Admin.FormPatternDetail.PolicyChange = 保单更改
Web.Admin.FormPatternDetail.PolicyChangeDV.ReissueOnChange = 如果数据发生更改（即替换），是否能够再次将该表格添加到保单更改？
Web.Admin.FormPatternDetail.PolicyChangeDV.RemovalEndorsement = 此表格是否仅用于指示另一个表格的无效或替换？
Web.Admin.FormPatternDetail.PolicyChangeDV.RemovalEndorsementForm = 如果表格数据改变，请同时添加以下无效/替换表格：
Web.Admin.FormPatternDetail.PolicyChangeDV.Title = 保单更改行为
Web.Admin.FormPatternDetail.Products = 保险产品
Web.Admin.FormPatternDetail.ProductsLV.Product = 保险产品
Web.Admin.FormPatterns = 保单表格模式
Web.Admin.FormPatternsLV.Code = 代码
Web.Admin.FormPatternsLV.Edition = 版本
Web.Admin.FormPatternsLV.GroupCode = 组代码
Web.Admin.FormPatternsLV.Name = 名称
Web.Admin.FormPatternsLV.Number = 编号
Web.Admin.FormPatternsValidationSuccessful = 未找到保单表格模式错误
Web.Admin.FormPatternsValidationTitle = 正在检查保单表格模式是否有错误...
Web.Admin.GroupDetail = 组：{0}
Web.Admin.GroupDetail.Basic = 基本情况
Web.Admin.GroupDetail.BasicDV.Name = 名称
Web.Admin.GroupDetail.BasicDV.Organization = 机构
Web.Admin.GroupDetail.BasicDV.Parent = 上级组
Web.Admin.GroupDetail.BasicDV.SupervisorBadOrgError = 您所选择的用户必须具有与组的机构相等的机构
Web.Admin.GroupDetail.BasicDV.Type = 类型
Web.Admin.GroupDetail.BasicDV.Users = 用户
Web.Admin.GroupDetail.DeleteConfirm = 是否确定要删除此组？
Web.Admin.GroupDetail.ProducerCodes = 经理人代码
Web.Admin.GroupDetail.ProducerCodesLV.Branch = 分支
Web.Admin.GroupDetail.ProducerCodesLV.Code = 代码
Web.Admin.GroupDetail.ProducerCodesLV.Description = 说明
Web.Admin.GroupDetail.ProducerCodesLV.Status = 状态
Web.Admin.GroupDetail.ProducerCodesLabel = 可以在此处从对父组可用的项中选择经理人代码
Web.Admin.GroupDetail.Queue = {0}
Web.Admin.GroupDetail.Queues = 队列
Web.Admin.GroupDetail.Queues.Description = 说明
Web.Admin.GroupDetail.Queues.Name = 名称
Web.Admin.GroupDetail.Queues.SubGroupVisible = 在子组内可见吗？
Web.Admin.GroupDetail.Regions = 地区
Web.Admin.GroupDetailInputSet.Assignment = 分配规则
Web.Admin.GroupDetailInputSet.Assignment.LoadFactor = 工作量系数
Web.Admin.GroupDetailInputSet.Assignment.LoadFactor.OutOfRange = 工作量系数必须为介于 0 和 100 之间的整数。
Web.Admin.GroupDetailInputSet.BranchCode = 分支代码
Web.Admin.GroupDetailInputSet.Description = 说明
Web.Admin.GroupDetailInputSet.ExistingUsers = 现有用户
Web.Admin.GroupDetailInputSet.Group = 组
Web.Admin.GroupDetailInputSet.SecurityZone = 安全区域
Web.Admin.GroupDetailInputSet.Supervisor = 主管人员
Web.Admin.GroupDetailInputSet.Supervisor.ValidationError = 请指定内部用户。
Web.Admin.GroupQueuesLV.Error.CanNotRemoveQueueWithActivities = “无法移除队列{0}，因其仍包含活动”
Web.Admin.GroupSearch = 组
Web.Admin.GroupSearch.Name = 组名称
Web.Admin.GroupSearch.NamePhonetic = 组名称（拼音）
Web.Admin.GroupSearchResults.Name = 名称
Web.Admin.GroupSearchResults.Organization = 机构
Web.Admin.GroupSearchResults.Parent = 上级组
Web.Admin.GroupSearchResults.Type = 类型
Web.Admin.GroupUsers.AddButton = 添加
Web.Admin.GroupUsers.AddInvalidGroup = 无法将组{0}添加给用户{1}，因为该用户无权访问此组
Web.Admin.GroupUsers.AddInvalidUser = 无法将用户{0}添加到组{1}中，因为该用户无权访问此组
Web.Admin.GroupUsers.AddRedundantGroup = 无法将组{0}添加到用户{1}中，因为该用户已经是此组的成员
Web.Admin.GroupUsers.AddRedundantUser = 无法将用户{0}添加到组{1}中，因为该用户已经是此组的成员
Web.Admin.GroupUsers.AddUserGroup = 选择用户组
Web.Admin.GroupUsers.Group = 组
Web.Admin.GroupUsers.LoadFactor = 工作量系数
Web.Admin.GroupUsers.LoadFactor.OufOfRange = 工作量系数必须为介于 0 和 100 之间的整数。
Web.Admin.GroupUsers.LoadFactorType = 工作量系数权限
Web.Admin.GroupUsers.Manager = 负责人
Web.Admin.GroupUsers.Member = 成员
Web.Admin.GroupUsers.SearchAndAddGroup = 搜索和选择组
Web.Admin.GroupUsers.User = 用户
Web.Admin.HolidayDetail = {0}
Web.Admin.HolidayDetailDV.AllZones = 适用于所有区域
Web.Admin.HolidayDetailDV.Country = 国家/地区
Web.Admin.HolidayDetailDV.Date = {LV.Admin.Holidays.Date}
Web.Admin.HolidayDetailDV.Name = {LV.Admin.Holidays.Name}
Web.Admin.HolidayDetailDV.Tags = {LV.Admin.Holidays.Tags}
Web.Admin.HolidayDetailDV.ZoneType = 区域类型
Web.Admin.HolidayDetailDV.Zones = {LV.Admin.Holidays.Zones}
Web.Admin.Holidays = {JSP.HolidayList.Holidays.Title}
Web.Admin.HolidaysLV.Zones = 区域
Web.Admin.ImportData = 导入管理数据
Web.Admin.ImportDataDV.File = 文件
Web.Admin.ImportDataDV.ImportButton = 导入
Web.Admin.ImportExport = 导入/导出数据
Web.Admin.ImportResults = 导入结果
Web.Admin.ImportResultsDV.Canceled = 数据导入已取消。
Web.Admin.ImportResultsDV.Failure = 数据导入失败： {0}
Web.Admin.ImportResultsDV.Success = 数据已成功导入。已插入{0}个记录，已更新{1}个记录。
Web.Admin.ImportResultsDV.SuccessWithDelete = 数据已成功导入。已插入{0}个记录，已更新{1}个记录，已删除{2}个记录。
Web.Admin.ImportTab = 导入数据
Web.Admin.ImportWizard.ArrayDiffPopup.AddedElements = 导入过程中将添加以下元素：
Web.Admin.ImportWizard.ArrayDiffPopup.NoAddedElements = 导入过程中将不添加新元素
Web.Admin.ImportWizard.ArrayDiffPopup.NoRemovedElements = 导入过程中将不移除现有元素
Web.Admin.ImportWizard.ArrayDiffPopup.RemovedElements = 导入过程中将移除以下元素：
Web.Admin.ImportWizard.ArrayDiffPopup.Title = 数组差异
Web.Admin.ImportWizard.ConflictDV.Conflict = 冲突的记录
Web.Admin.ImportWizard.ConflictDV.ConflictNumber = {0} / {1}
Web.Admin.ImportWizard.ConflictDV.DisplayName = 显示名称
Web.Admin.ImportWizard.ConflictDV.ExistingValue = 现有值
Web.Admin.ImportWizard.ConflictDV.FieldConflicts = 冲突的字段
Web.Admin.ImportWizard.ConflictDV.FieldName = 字段名称
Web.Admin.ImportWizard.ConflictDV.ImportValue = 导入文件值
Web.Admin.ImportWizard.ConflictDV.Overwrite = 是否用导入记录覆盖？
Web.Admin.ImportWizard.ConflictDV.PublicID = 记录公共ID
Web.Admin.ImportWizard.ConflictDV.Type = 记录类型
Web.Admin.ImportWizard.ConflictStep = 现有记录解决
Web.Admin.ImportWizard.OptionsDV.FileName = 文件
Web.Admin.ImportWizard.OptionsDV.Message = 找到{0}个与现有记录匹配的记录。请选择解决这些记录的方式：
Web.Admin.ImportWizard.OptionsStep = 现有记录解决
Web.Admin.ImportWizard.UploadDV.ConflictsMessage = 找到{0}个与现有记录匹配的记录。请选择解决这些记录的方式：
Web.Admin.ImportWizard.UploadDV.ErrorsFoundMessage = 文件中发现错误： {0}
Web.Admin.ImportWizard.UploadDV.FileInput = 文件
Web.Admin.ImportWizard.UploadDV.FileNotSpecifiedMessage = 未指定任何数据文件。
Web.Admin.ImportWizard.UploadDV.Message = 请浏览要上传的管理数据文件
Web.Admin.ImportWizard.UploadDV.NoConflictsMessage = 未发现与现有记录存在冲突。单击“结束”可完成导入。
Web.Admin.ImportWizard.UploadDV.ResolutionStrategy = 现有记录解决方式
Web.Admin.ImportWizard.UploadStep = 导入管理数据
Web.Admin.JurisdictionExists = 管辖权“{0}”已存在
Web.Admin.LocalizedValuesDV.Language = 语言
Web.Admin.LocalizedValuesDV.Localization = 本地化
Web.Admin.LocalizedValuesLV.Default = - 默认
Web.Admin.LocalizedValuesLV.ValuesCopiedMessage = 本地化：将“{0}”值复制到没有值的语言
Web.Admin.LocationGroup.Title = 管理
Web.Admin.MessageControlForDestinationList = 目标： {0} （ID： {1}）
Web.Admin.MessageControlForDestinationList.DetailedStatistics = 详细统计数据
Web.Admin.MessageControlForDestinationList.ResyncConfirm = 是否跳过选定账户的所有消息并发起重新同步事件？
Web.Admin.MessageControlForDestinationList.RetryConfirm = 是否重试选定账户的失败消息？
Web.Admin.MessageControlForDestinationList.Search = 账号
Web.Admin.MessageControlForDestinationList.SkipConfirm = 是否跳过选定账户的失败消息并重新开始发送其它待处理消息？
Web.Admin.MessageControlForDestinationList.TotalStatistics = 全部统计
Web.Admin.MessageControlForDestinationListLV.Error = 错误消息
Web.Admin.MessageControlForDestinationListLV.Failed = 失败
Web.Admin.MessageControlForDestinationListLV.InFlight = 正在传输
Web.Admin.MessageControlForDestinationListLV.Retry = 可重试错误
Web.Admin.MessageControlForDestinationListLV.SOOName = 账户
Web.Admin.MessageControlForDestinationListLV.SendTime = 发送时间
Web.Admin.MessageControlForDestinationListLV.Unsent = 未发送
Web.Admin.MessageControlForSOOList = 账号：{0}
Web.Admin.MessageControlForSOOList.RetryConfirm = 是否重试可重试的选定消息？
Web.Admin.MessageControlForSOOList.Search = 账号
Web.Admin.MessageControlForSOOList.SkipConfirm = 是否跳过选定的消息？
Web.Admin.MessageControlForSOOListLV.Description = 说明
Web.Admin.MessageControlForSOOListLV.DestinationName = 目标
Web.Admin.MessageControlForSOOListLV.MessageName = 事件名称
Web.Admin.MessageControlForSOOListLV.Order = 顺序
Web.Admin.MessageControlForSOOListLV.Response = 响应
Web.Admin.MessageControlForSOOListLV.RetryCount = 重试次数
Web.Admin.MessageControlForSOOListLV.SendTime = 发送时间
Web.Admin.MessageControlForSOOListLV.SenderRef = 发送者资料
Web.Admin.MessageControlForSOOListLV.Status = 状态
Web.Admin.MessageDestinationStatisticsDV.AwaitingRetry = 等待重试
Web.Admin.MessageDestinationStatisticsDV.Batched = 批处理完成
Web.Admin.MessageDestinationStatisticsDV.Failed = 失败
Web.Admin.MessageDestinationStatisticsDV.InFlight = 正在传输
Web.Admin.MessageDestinationStatisticsDV.Retry = 可重试错误
Web.Admin.MessageDestinationStatisticsDV.Status = 状态
Web.Admin.MessageDestinationStatisticsDV.Unsent = 未发送
Web.Admin.MessagePayload = 消息负载
Web.Admin.MessageSearch = 消息
Web.Admin.MessageSearch.AccountNumber = 账号
Web.Admin.MessageSearch.Destination = 目标
Web.Admin.MessageSearch.ErrorDescription = 错误说明
Web.Admin.MessageSearch.JobNumber = 交易号
Web.Admin.MessageSearch.JobType = 交易类型
Web.Admin.MessageSearch.MessageStatus = 消息状态
Web.Admin.MessageSearch.PolicyNumber = 保单号
Web.Admin.MessageSearch.PrimaryNamedInsured = 主要列名被保险人
Web.Admin.MessageSearch.Product = 保险产品
Web.Admin.MessageSearch.Results = 结果
Web.Admin.MessageSearch.RetryConfirm = 是否重试选定保单的失败消息？
Web.Admin.MessageSearch.SkipConfirm = 跳过失败消息？
Web.Admin.MessagingDestinationControl.ConfirmRestart = 是否确定要重新启动消息引擎？
Web.Admin.MessagingDestinationControlLV.DestinationID = ID
Web.Admin.MessagingDestinationControlLV.DestinationName = 目标
Web.Admin.MessagingDestinationControlLV.Resumeinbound = 恢复入站
Web.Admin.MessagingDestinationControlLV.Resumeoutbound = 恢复出站
Web.Admin.MessagingDestinationControlLV.ServerId = 服务器ID
Web.Admin.MessagingDestinationControlLV.Status = 状态
Web.Admin.MessagingDestinationControlLV.Suspendinbound = 暂停入站
Web.Admin.MessagingDestinationControlLV.Suspendoutbound = 暂停出站
Web.Admin.MessagingDestinationControlList = 目标
Web.Admin.MessagingDestinationControlLists = 消息队列
Web.Admin.Monitoring = 监控
Web.Admin.Monitoring.MessageQueues = 消息队列
Web.Admin.Monitoring.Messages = 消息
Web.Admin.Monitoring.WorkflowStatistics = 工作流统计
Web.Admin.Monitoring.Workflows = 工作流
Web.Admin.NewActivityPattern = 新建活动模式
Web.Admin.NewAffinityGroup = 新建亲和组
Web.Admin.NewAttribute = 新建属性
Web.Admin.NewBusinessWeek = 新建工作周
Web.Admin.NewDataFlowMask = 新建
Web.Admin.NewFormPattern = 新建保单表格模式
Web.Admin.NewGroup = 新建组
Web.Admin.NewHoliday = {JSP.NewHoliday.Admin.NewHolidayName}
Web.Admin.NewMask = 新建导出掩码
Web.Admin.NewOrganization = 新建机构
Web.Admin.NewProducerCode = 新建经理人代码
Web.Admin.NewRegion = 添加地区
Web.Admin.NewRole = 新建角色
Web.Admin.NewScriptParameter = 新建脚本参数
Web.Admin.NewUWAuthorityProfile.Title = 新建权限配置文件
Web.Admin.NewUser = 新建用户
Web.Admin.Organization = 机构
Web.Admin.Organization.AdminForZone = 管理区域
Web.Admin.OrganizationDetail = 机构： {0}
Web.Admin.OrganizationDetail.AgencyBill = 代理缴费
Web.Admin.OrganizationDetail.AgencyBillPlans = 代理缴费计划
Web.Admin.OrganizationDetail.AgencyBillPlans.Currencies = 货币 - {0}
Web.Admin.OrganizationDetail.AgencyBillPlans.NoPlansFound = 在BillingCenter中找不到以下代理缴费计划：{0}
Web.Admin.OrganizationDetail.AgencyBillPlans.PlanID = PlanId - {0}：
Web.Admin.OrganizationDetail.AgencyBillPlans.SelectPlanButton = 选择一个计划
Web.Admin.OrganizationDetail.Basic = 基本情况
Web.Admin.OrganizationDetail.BasicDV.AgencyBillPlan = 代理缴费计划
Web.Admin.OrganizationDetail.BasicDV.ProducerStatus = 代理状态
Web.Admin.OrganizationDetail.BasicDV.Tier = 层级
Web.Admin.OrganizationDetail.BasicDV.Type = 类型
Web.Admin.OrganizationDetail.CurrenciesDV.AgencyBillPlans = 代理缴费计划
Web.Admin.OrganizationDetail.CurrenciesDV.PleaseSelect = <请选择>
Web.Admin.OrganizationDetail.DeleteConfirm = 是否确定要删除该机构？
Web.Admin.OrganizationDetail.ProducerCodes = 经理人代码
Web.Admin.OrganizationDetail.ProducerCodesLV.Available = 可用
Web.Admin.OrganizationDetail.ProducerCodesLV.Branch = 分支
Web.Admin.OrganizationDetail.ProducerCodesLV.Code = 代码
Web.Admin.OrganizationDetail.ProducerCodesLV.Description = 说明
Web.Admin.OrganizationDetail.ProducerCodesLV.PreferredUnderwriter = 首选核保人
Web.Admin.OrganizationDetail.ProducerCodesLV.Status = 状态
Web.Admin.OrganizationDetail.ProducerCodesLabel = 可以通过“操作”菜单添加经理人代码
Web.Admin.OrganizationSearch = 机构
Web.Admin.OrganizationSearch.AccountNumber = 账号
Web.Admin.OrganizationSearch.BranchCode = 分支机构代码
Web.Admin.OrganizationSearch.ContactCity = 联系人所在城市
Web.Admin.OrganizationSearch.ContactPostal = 联系人邮政编码
Web.Admin.OrganizationSearch.ContactState = 联系人所在省/直辖市
Web.Admin.OrganizationSearch.Name = 机构名称
Web.Admin.OrganizationSearch.NamePhonetic = 机构名称（拼音）
Web.Admin.OrganizationSearch.PolicyNumber = 保单号
Web.Admin.OrganizationSearch.ProducerCode = 经理人代码
Web.Admin.OrganizationSearch.ProducerStatus = 经理人状态
Web.Admin.OrganizationSearch.Tier = 经理人等级
Web.Admin.OrganizationSearch.Type = 机构类型
Web.Admin.OrganizationUsers.User = 用户
Web.Admin.Permissions = 权限
Web.Admin.Plan.Name = 名称
Web.Admin.PolicyHold.AddHoldRegion = 添加搁置地区
Web.Admin.PolicyHold.AddSelectedRegions = 添加选定地区
Web.Admin.PolicyHold.ByCity = 按城市
Web.Admin.PolicyHold.ByCounty = 按区/县
Web.Admin.PolicyHold.ByZIP = 按邮政编码
Web.Admin.PolicyHold.Code = 代码
Web.Admin.PolicyHold.CodeCopy = {0}复制
Web.Admin.PolicyHold.Copy = {0}复制
Web.Admin.PolicyHold.Country = 国家/地区
Web.Admin.PolicyHold.CountryNotDefined = 请创建特定于您所在国家/地区的模态PolicyHoldZonesInputSet.XX.pcf。这需要在“区域类型”字段中提供有效的国家/地区。
Web.Admin.PolicyHold.Coverage = 承保范围
Web.Admin.PolicyHold.CoverageSearch = 搜索承保范围
Web.Admin.PolicyHold.CreateTime = 创建时间
Web.Admin.PolicyHold.CreatedBy = 创建人
Web.Admin.PolicyHold.Description = 说明
Web.Admin.PolicyHold.EndDate = 搁置结束日期
Web.Admin.PolicyHold.HoldDetails = 搁置详细信息
Web.Admin.PolicyHold.HoldRegions = 搁置地区
Web.Admin.PolicyHold.HoldRules = 搁置规则
Web.Admin.PolicyHold.HoldType = 搁置类型
Web.Admin.PolicyHold.Job = 保单交易类型
Web.Admin.PolicyHold.JobDateType = 交易日期类型
Web.Admin.PolicyHold.LastUpdateTime = 上次更新时间
Web.Admin.PolicyHold.LastUpdatedBy = 上次更新人员
Web.Admin.PolicyHold.LongDesc = 详细说明
Web.Admin.PolicyHold.NewPolicyHold = 新建保单搁置
Web.Admin.PolicyHold.NonStateRegionRequiresState = 地区类型不是省/直辖市时，必须选择省代码
Web.Admin.PolicyHold.PolicyHoldDetail = 保单搁置：{0}
Web.Admin.PolicyHold.PolicyHolds = 保单搁置
Web.Admin.PolicyHold.PolicyLine = 险种
Web.Admin.PolicyHold.Province = 省
Web.Admin.PolicyHold.RegionCode = 地区代码
Web.Admin.PolicyHold.RegionType = 地区类型
Web.Admin.PolicyHold.RegionTypeMustBeSelected = 必须选择地区类型
Web.Admin.PolicyHold.Regions = 地区
Web.Admin.PolicyHold.RegionsAndRules = 地区和规则
Web.Admin.PolicyHold.Rules = 规则
Web.Admin.PolicyHold.SearchCriteria = 搜索条件
Web.Admin.PolicyHold.SearchForRegions = 搜索地区
Web.Admin.PolicyHold.StartDate = 暂停开始日期
Web.Admin.PolicyHold.State = 省/直辖市
Web.Admin.PolicyHold.UWIssueInfo = 核保项信息
Web.Admin.PolicyHold.UWIssueType = 核保项类型
Web.Admin.PolicyHold.ZoneCode = 地区代码
Web.Admin.ProducerCodeDetail.AppointmentDate = 预约日期
Web.Admin.ProducerCodeDetail.Basic = 基本情况
Web.Admin.ProducerCodeDetail.Branch = 分支
Web.Admin.ProducerCodeDetail.Code = 代码
Web.Admin.ProducerCodeDetail.CommissionPlan = 佣金计划
Web.Admin.ProducerCodeDetail.CommissionPlans = 佣金计划
Web.Admin.ProducerCodeDetail.CommissionPlans.Currencies = 货币 - {0}
Web.Admin.ProducerCodeDetail.CommissionPlans.NoOrganizationSelected = 要想添加佣金计划，必须在“基本信息”选项卡上选择组织
Web.Admin.ProducerCodeDetail.CommissionPlans.NoPlansFound = 在BillingCenter中找不到以下佣金计划：{0}
Web.Admin.ProducerCodeDetail.CommissionPlans.PlanID = PlanId - {0}：
Web.Admin.ProducerCodeDetail.CommittedPlansCannotBeRemoved = 无法移除已提交的佣金计划
Web.Admin.ProducerCodeDetail.Currency = 货币
Web.Admin.ProducerCodeDetail.DeleteConfirm = 是否确定要删除此经理人代码？
Web.Admin.ProducerCodeDetail.Description = 说明
Web.Admin.ProducerCodeDetail.Error.MultipleBranchesFound = 多个分支与名称“{0}”匹配
Web.Admin.ProducerCodeDetail.Error.NoBranchFound = 未找到名称为{0}的分支
Web.Admin.ProducerCodeDetail.Error.NoCommissionPlan = 无法在计费系统中找到层级{0}的任何佣金计划。请选择具有不同层级的经理人。
Web.Admin.ProducerCodeDetail.Group = 组
Web.Admin.ProducerCodeDetail.Groups = 组
Web.Admin.ProducerCodeDetail.IncorrectProducerStatus = 类型为“{0}”的机构不使用经理人代码
Web.Admin.ProducerCodeDetail.Organization = 机构
Web.Admin.ProducerCodeDetail.ParentCode = 父代码
Web.Admin.ProducerCodeDetail.ParticipantsAssignmentLogic = 参与人分配逻辑
Web.Admin.ProducerCodeDetail.PreferredUnderwriter = 首选核保人
Web.Admin.ProducerCodeDetail.Roles = 角色
Web.Admin.ProducerCodeDetail.Roles.Description = 说明
Web.Admin.ProducerCodeDetail.Roles.Name = 名称
Web.Admin.ProducerCodeDetail.Status = 状态
Web.Admin.ProducerCodeDetail.TerminationDate = 终止日期
Web.Admin.ProducerCodeDetail.User = 用户
Web.Admin.ProducerCodeDetail.UserGroupLabel = 与组相关的经理人代码一般通过将经理人代码分配到特定组进行管理，而不必直接编辑该列表。
Web.Admin.ProducerCodeDetail.UserLabel = 在用户的“访问”选项卡上为特定用户授予用户级访问权限。
Web.Admin.ProducerCodeDetail.Users = 用户
Web.Admin.ProducerCodeExists = 经理人代码“{0}”已存在。
Web.Admin.ProducerCodeLocalizedLV.Description = 说明
Web.Admin.ProducerCodeRequired = 如果组类型为“已关闭”，则必须至少输入一个亲和组经理人代码
Web.Admin.ProducerCodesNotMatchingOrganization = 经理人代码({0})属于与当前亲和组的组织（{1}）不匹配的组织
Web.Admin.RegionDetail = {0}
Web.Admin.RegionDetailDV.Country = 国家/地区
Web.Admin.RegionDetailDV.Name = 名称
Web.Admin.RegionDetailDV.Organization = 机构
Web.Admin.RegionDetailDV.Region = 地区
Web.Admin.RegionDetailDV.RegionType = 类型
Web.Admin.RegionDetailDV.Zones = 覆盖区域
Web.Admin.RegionSearch = 搜索地区
Web.Admin.RegionSearch.Code = 代码
Web.Admin.RegionSearch.Name = 地区名称
Web.Admin.RegionSearch.ZoneType = 区域类型
Web.Admin.RegionZonesLV.Code = 区域代码
Web.Admin.RegionZonesLV.Zones = 区域
Web.Admin.Regions = {JSP.RegionList.Regions.Title}
Web.Admin.RegionsLV.Name = 地区名称
Web.Admin.RegionsLV.RegionType = 地区类型
Web.Admin.RegionsLV.Zones = 地区区域
Web.Admin.RoleDetail = 角色： {0}
Web.Admin.RoleDetail.Error.DuplicatePermissions = 发现代码为“{1}”的重复权限“{0}”。请确保每个权限仅列出一次。
Web.Admin.RoleDetail.Permissions = 权限
Web.Admin.RoleDetail.ProducerCodes = 经理人代码
Web.Admin.RoleDetail.Roles = 基本情况
Web.Admin.RoleDetail.Users = 用户
Web.Admin.RoleDetailDV.CarrierInternalRole = 仅内部角色
Web.Admin.RoleDetailDV.CarrierInternalRole.SwitchToInternalConfirm = 是否确定要切换到内部角色？此角色将从任何外部用户移除。
Web.Admin.RoleDetailDV.Description = 说明
Web.Admin.RoleDetailDV.Name = 姓名
Web.Admin.RoleDetailDV.Role = 角色
Web.Admin.RoleDetailDV.RoleType = 类型
Web.Admin.RolePrivileges.Permission = 权限
Web.Admin.RolePrivileges.Permission.Code = 代码
Web.Admin.RolePrivileges.Permission.Description = 说明
Web.Admin.RoleProducerCodes.Organization = 机构
Web.Admin.RoleProducerCodes.ProducerCode = 经理人代码
Web.Admin.RoleUsers.FullName = 姓名
Web.Admin.Roles = 角色
Web.Admin.RolesLV.Description = 说明
Web.Admin.RolesLV.Name = 姓名
Web.Admin.RolesLV.Type = 类型
Web.Admin.ScriptParameter = {0}
Web.Admin.ScriptParameterDetailDV.Description = 说明
Web.Admin.ScriptParameterDetailDV.Name = 形式参数名称
Web.Admin.ScriptParameterDetailDV.ScriptParameter = 脚本形式参数
Web.Admin.ScriptParameterDetailDV.Type = 形式参数类型
Web.Admin.ScriptParameters = {JSP.ScriptParametersList.Title}
Web.Admin.ScriptParametersLV.Name = 名称
Web.Admin.ScriptParametersLV.Type = 类型
Web.Admin.ScriptParametersLV.Value = 值
Web.Admin.SearchOnlyAvailableGroups = 仅搜索可用组
Web.Admin.SecurityDictionaryDV.ExportButton = 导出
Web.Admin.SecurityDictionaryDV.OutputFormat = 输出格式
Web.Admin.SecurityDictionaryDV.Title = 导出安全字典
Web.Admin.SyncReports = 同步
Web.Admin.ToggleDocReport = 切换文档报告状态
Web.Admin.UWAuthorityProfileDetailPage.Title = 权限配置文件： {0}
Web.Admin.UWAuthorityProfileDetailScreen.AuthorityGrants = 权限授予
Web.Admin.UWAuthorityProfileDetailScreen.Comparison = 比较
Web.Admin.UWAuthorityProfileDetailScreen.Currency = 货币
Web.Admin.UWAuthorityProfileDetailScreen.Description = 说明
Web.Admin.UWAuthorityProfileDetailScreen.Name = 名称
Web.Admin.UWAuthorityProfileDetailScreen.Profile = 配置文件
Web.Admin.UWAuthorityProfileDetailScreen.ProfileDescription = 说明
Web.Admin.UWAuthorityProfileDetailScreen.Type = 类型
Web.Admin.UWAuthorityProfileDetailScreen.Value = 值
Web.Admin.UWIssueTypeSearchPopup.Code = 代码
Web.Admin.UWIssueTypeSearchPopup.Description = 说明
Web.Admin.UWIssueTypeSearchPopup.Name = 名称
Web.Admin.UWIssueTypeSearchPopup.Title = 问题类型搜索
Web.Admin.UserAccessDV.Actions = 操作
Web.Admin.UserAccessDV.AdditionalProducerCodes = 其它经理人代码
Web.Admin.UserAccessDV.InheritFromGroup = 组
Web.Admin.UserAccessDV.ModifyRoles.Available = 可用
Web.Admin.UserAccessDV.ModifyRoles.Role = 角色
Web.Admin.UserAccessDV.ModifyRoles.Title = 为{0}{1}选择的角色：
Web.Admin.UserAccessDV.ModifyRolesButton = 修改角色
Web.Admin.UserAccessDV.ProducerCodeCode = 代码
Web.Admin.UserAccessDV.ProducerCodeDescription = 说明
Web.Admin.UserAccessDV.ProducerCodeStatus = 状态
Web.Admin.UserAccessDV.ProducerCodesFromGroups = 组中的经理人代码
Web.Admin.UserAccessDV.SwitchFromProducerCodeSecurity = 切换用户经理人代码安全标志将会从用户移除所有经理人代码。是否继续？
Web.Admin.UserAccessDV.UseProducerCodeSecurity = 使用经理人代码安全性
Web.Admin.UserAccessDV.ViewRolesButton = 查看角色
Web.Admin.UserAttributes.Description = 说明
Web.Admin.UserAttributes.DuplicateName = 现有属性“{0}”已存在。
Web.Admin.UserAttributes.Name = 名称
Web.Admin.UserAttributes.Type = 类型
Web.Admin.UserAttributesSearch.Name = 名称
Web.Admin.UserAttributesSearch.Type = 类型
Web.Admin.UserDetail = 用户：{0}
Web.Admin.UserDetail.Attributes = 属性
Web.Admin.UserDetail.Basic = 基本情况
Web.Admin.UserDetail.DeleteConfirm = 分配到此用户的所有活动都必须手动重新分配。是否确定要删除此用户？
Web.Admin.UserDetail.Locked = 此用户已锁定。
Web.Admin.UserDetail.Profile = 配置文件
Web.Admin.UserDetail.Region = 地区
Web.Admin.UserDetail.SwitchIntAndExtMsg = 在内部与外部之间切换此用户将会移除所有组和机构信息。是否继续？
Web.Admin.UserDetail.UWAuthority = 核保人权限
Web.Admin.UserDetailDV.AccountLocked = 已锁定
Web.Admin.UserDetailDV.Active = 活动
Web.Admin.UserDetailDV.BackupUser = 备份用户
Web.Admin.UserDetailDV.ConfirmPassword = 确认密码
Web.Admin.UserDetailDV.ContactInformation = 联系人信息
Web.Admin.UserDetailDV.ExternalUser = 外部用户
Web.Admin.UserDetailDV.FirstName = 名字
Web.Admin.UserDetailDV.Groups = 组
Web.Admin.UserDetailDV.LastName = 姓氏
Web.Admin.UserDetailDV.Locked = 此用户已锁定。
Web.Admin.UserDetailDV.Organization = 机构
Web.Admin.UserDetailDV.Password = 密码
Web.Admin.UserDetailDV.ProducerGroupsAndCode = 访问
Web.Admin.UserDetailDV.Roles = 角色
Web.Admin.UserDetailDV.SessionTimeoutSecs = 会话超时（秒）
Web.Admin.UserDetailDV.SessionTimeoutSecs.Validation = 必须在 5 分钟到 1 周之间（按秒计）
Web.Admin.UserDetailDV.UseOrganizationAddress = 使用机构地址
Web.Admin.UserDetailDV.UserType = 用户类型
Web.Admin.UserDetailDV.Username = 用户名
Web.Admin.UserDetailDV.VacationStatus = 休假状态
Web.Admin.UserProfile.AdminUserDetails.Language = 语言
Web.Admin.UserProfileDV.CellPhone = 移动电话
Web.Admin.UserProfileDV.EmailAddress1 = 主要电子邮件地址
Web.Admin.UserProfileDV.EmailAddress2 = 备用电子邮件地址
Web.Admin.UserProfileDV.EmployeeNumber = 雇员ID
Web.Admin.UserProfileDV.FaxPhone = 传真电话
Web.Admin.UserProfileDV.HomePhone = 住宅电话
Web.Admin.UserProfileDV.PrimaryPhone = 主要电话
Web.Admin.UserProfileDV.UserProfile = 用户配置文件
Web.Admin.UserProfileDV.WorkPhone = 办公电话
Web.Admin.UserSearch = 用户
Web.Admin.UserSearchPopup = 搜索用户
Web.Admin.UserSelectPopup = 选择用户
Web.Admin.UsersAndSecurity = 用户与安全性
Web.Admin.UsersAndSecurity.Attributes = 属性
Web.Admin.UsersAndSecurity.Authority = 权限
Web.Admin.UsersAndSecurity.GroupSearch = 组
Web.Admin.UsersAndSecurity.Roles = 角色
Web.Admin.UsersAndSecurity.SecurityZones = 安全区域
Web.Admin.UsersAndSecurity.UserSearch = 用户
Web.Admin.Utilities = 实用程序
Web.Admin.Utilities.ExportData = 导出数据
Web.Admin.Utilities.ImportData = 导入数据
Web.Admin.Utilities.ScriptParameters = 脚本形式参数
Web.Admin.Validate = 校验
Web.Admin.ValidateFormPatterns = 检查保单表格模式是否有错误
Web.Admin.Workflow.Manage.Cancel = 取消
Web.Admin.Workflow.Manage.EditCount = 您正在管理{0}个合格的工作流
Web.Admin.Workflow.Manage.Execute = 执行
Web.Admin.Workflow.Manage.TimeoutBranch = 超时分支
Web.Admin.Workflow.Manage.Title = 管理工作流
Web.Admin.Workflow.Manage.Wait = 等待 - 最长时间(秒)
Web.Admin.Workflow.WorkItem.AvailableAt = 可用
Web.Admin.Workflow.WorkItem.CheckedOutBy = 检出者
Web.Admin.Workflow.WorkItem.CreationTime = 创建时间
Web.Admin.Workflow.WorkItem.LastUpdate = 更新时间
Web.Admin.Workflow.WorkItem.NumRetries = 重试次数
Web.Admin.Workflow.WorkItem.Status = 状态
Web.Admin.Workflow.WorkItems = 工作项
Web.Admin.WorkflowDetail = 工作流详细信息
Web.Admin.WorkflowDetail.ActiveState = 活动状态
Web.Admin.WorkflowDetail.Activities = 活动
Web.Admin.WorkflowDetail.Activities.AssignedTo = 负责人
Web.Admin.WorkflowDetail.Activities.Due = 到期
Web.Admin.WorkflowDetail.Activities.Escalated = 过期
Web.Admin.WorkflowDetail.Activities.New = 新建
Web.Admin.WorkflowDetail.Activities.Priority = 优先级
Web.Admin.WorkflowDetail.Activities.Status = 状态
Web.Admin.WorkflowDetail.Activities.Subject = 主题
Web.Admin.WorkflowDetail.ActivityPattern = 模式
Web.Admin.WorkflowDetail.ConfirmSuspend = 是否确定要暂停该工作流？（您可以稍后恢复）
Web.Admin.WorkflowDetail.CurrentAction = 当前操作
Web.Admin.WorkflowDetail.CurrentStep = 当前步骤
Web.Admin.WorkflowDetail.ForceTimeout = 超时强制分支
Web.Admin.WorkflowDetail.Handler = 处理程序
Web.Admin.WorkflowDetail.Log = 日志
Web.Admin.WorkflowDetail.NextPollTime = 下次轮询时间
Web.Admin.WorkflowDetail.NumRetries = 重试次数
Web.Admin.WorkflowDetail.Parent = 父工作流
Web.Admin.WorkflowDetail.PreviousStep = 上一步
Web.Admin.WorkflowDetail.ProcessVersion = 流程版本
Web.Admin.WorkflowDetail.Status = 状态
Web.Admin.WorkflowDetail.SubFlows = 子工作流
Web.Admin.WorkflowDetail.SuspendButton = 暂停工作流
Web.Admin.WorkflowDetail.TimeoutTime = 超时时间
Web.Admin.WorkflowDetail.Timeouts = 超时次数
Web.Admin.WorkflowDetail.Triggers = 触发器
Web.Admin.WorkflowDetail.Type = 工作流类型
Web.Admin.WorkflowDetail.WorkItems = 工作项
Web.Admin.WorkflowLogEntryDetail = 日志条目
Web.Admin.WorkflowLogEntryDetailDV.Action = 操作
Web.Admin.WorkflowLogEntryDetailDV.Description = 说明
Web.Admin.WorkflowLogEntryDetailDV.LogDate = 日期
Web.Admin.WorkflowLogEntryDetailDV.LogStep = 步骤
Web.Admin.WorkflowLogEntryDetailDV.Summary = 摘要
Web.Admin.WorkflowLogLV.Action = 操作
Web.Admin.WorkflowLogLV.LogDate = 日期
Web.Admin.WorkflowLogLV.Step = 步骤
Web.Admin.WorkflowLogLV.Summary = 摘要
Web.Admin.WorkflowSearch.ActiveState = 活动状态
Web.Admin.WorkflowSearch.CheckedOut = 活动项过滤条件
Web.Admin.WorkflowSearch.CheckedOut.Any = 无过滤器
Web.Admin.WorkflowSearch.CheckedOut.Only = 仅已检出
Web.Admin.WorkflowSearch.CurrentStep = 当前步骤
Web.Admin.WorkflowSearch.Handler = 处理程序
Web.Admin.WorkflowSearch.JobNumber = 保单交易
Web.Admin.WorkflowSearch.JobType = 交易类型
Web.Admin.WorkflowSearch.Manage = 管理选定项...
Web.Admin.WorkflowSearch.ManageAll = 管理全部...
Web.Admin.WorkflowSearch.PolicyNumber = 保单
Web.Admin.WorkflowSearch.Product = 保险产品
Web.Admin.WorkflowSearch.StartDateFrom = 开始日期范围 - 自
Web.Admin.WorkflowSearch.StartDateTo = 开始日期范围 - 至
Web.Admin.WorkflowSearch.State = 状态
Web.Admin.WorkflowSearch.Title = 工作流
Web.Admin.WorkflowSearch.Type = 工作流类型
Web.Admin.WorkflowSearch.UpdateDateFrom = 更新日期范围 - 自
Web.Admin.WorkflowSearch.UpdateDateTo = 更新日期范围 - 至
Web.Admin.WorkflowSearch.Version = 版本
Web.Admin.WorkflowStats.ElapsedMax = 已用时间最大值
Web.Admin.WorkflowStats.ElapsedMean = 已用时间平均值
Web.Admin.WorkflowStats.ElapsedMin = 已用时间最小值
Web.Admin.WorkflowStats.ElapsedStdDev = 已用时间标准差
Web.Admin.WorkflowStats.EndTime = 结束时间
Web.Admin.WorkflowStats.ExecMax = 执行时间最大值
Web.Admin.WorkflowStats.ExecMean = 执行时间平均值
Web.Admin.WorkflowStats.ExecMin = 执行时间最小值
Web.Admin.WorkflowStats.ExecStdDev = 执行时间标准差
Web.Admin.WorkflowStats.Executions = 执行次数
Web.Admin.WorkflowStats.Results = 工作流统计
Web.Admin.WorkflowStats.StartTime = 开始时间
Web.Admin.WorkflowStats.StepName = 步骤
Web.Admin.WorkflowStats.Title = 工作流统计
Web.Admin.WorkflowStats.Type = 工作流类型
Web.Admin.WorkflowStatsSearch.From = 自
Web.Admin.WorkflowStatsSearch.To = 至
Web.Admin.WorkflowStatsSearch.Type = 工作流类型
Web.Admin.Workflows = 工作流
Web.Admin.Workflows.ActiveState = 活动状态
Web.Admin.Workflows.Children = 子项
Web.Admin.Workflows.ConfirmRestartAll = 是否确定要重新启动所有“出错”工作流？
Web.Admin.Workflows.Handler = 处理程序
Web.Admin.Workflows.Insured = 主要联系人
Web.Admin.Workflows.JobNumber = 交易
Web.Admin.Workflows.JobType = 交易类型
Web.Admin.Workflows.Manager.CheckedOutWarning = 选定工作流当前已检出。任何修改都将导致该工作流出现异常。
Web.Admin.Workflows.Parent = 上级组
Web.Admin.Workflows.PolicyNumber = 保单
Web.Admin.Workflows.ProcessVersion = 版本
Web.Admin.Workflows.Product = 保险产品
Web.Admin.Workflows.Results = 工作流
Web.Admin.Workflows.StartTime = 开始时间
Web.Admin.Workflows.Status = 状态
Web.Admin.Workflows.Step = 步骤
Web.Admin.Workflows.TimeoutTime = 超时
Web.Admin.Workflows.Type = 工作流类型
Web.Admin.Workflows.UpdateTime = 更新时间
Web.Admin.Workflows.Version = 版本
Web.Admin.Workflows.WorkItem = 工作项
Web.Admin.Zones.Code = 代码
Web.Admin.Zones.Country = 国家/地区
Web.Admin.Zones.Name = 姓名
Web.Admin.Zones.ZoneType = 区域类型
Web.ApplyToRenewal.Message = 保单交易{0}已开始将您的更改应用到续保期间。
Web.ApplyToRenewal.Title = 应用更改到承保的续保
Web.ApplyToRenewal.ViewCurrentJob = 返回到当前保单交易
Web.ApplyToRenewal.ViewNewJob = 查看新保单交易{0}
Web.ApplyToRenewal.ViewPolicy = 查看您的保单（#{0}）
Web.Archive.Archive = 存档
Web.Archive.Archived = 已存档
Web.Archive.ArchivingIsDisabled = 无法对此保单进行存档
Web.Archive.ArchivingIsEnabled = 对此保单进行存档
Web.Archive.CurrentArchivedTermsWarning = 具有已存档的附加责任。禁用存档不会检索过去的附加责任。
Web.Archive.DisableArchiving = 禁用存档？
Web.Archive.HistoryEventComment = 注释
Web.Archive.HistoryEventDate = 日期
Web.Archive.HistoryEventType = 操作
Web.Archive.HistoryEventUser = 用户
Web.Archive.HistoryEventsHeading = 历史记录
Web.Archive.InternalTools.ArchivePolicyByJobNumber = 按保单交易号存档附加责任。
Web.Archive.InternalTools.ArchivePolicyByNumberAndTerm = 按保单号和附加责任存档附加责任。
Web.Archive.InternalTools.ArchivePolicyTerms = 运行存档批处理。
Web.Archive.InternalTools.ArchiveSuccessful = 存档成功
Web.Archive.InternalTools.ClearWorkItems = 尝试存档前请清除此期限的工作项；上一个勾选项：${0}
Web.Archive.InternalTools.FlushOtherWorkQueues = 刷新其它工作队列（清除工作流等）
Web.Archive.InternalTools.JobDoesNotExist = 作业ID：${0}不存在
Web.Archive.InternalTools.JobIdIsMandatory = 您必须提供作业ID
Web.Archive.InternalTools.JobToArchive = 作业ID：
Web.Archive.InternalTools.Obfuscation = 混淆
Web.Archive.InternalTools.PCArchive = 存档测试
Web.Archive.InternalTools.PolicyAndTermNumberAreMandatory = 您必须提供保单和期限数
Web.Archive.InternalTools.PolicyDoesNotExist = 保单：${0}不存在
Web.Archive.InternalTools.PolicyToArchive = 保单号：
Web.Archive.InternalTools.Purge = 清除
Web.Archive.InternalTools.SkipValidation = 跳过校验（即使作业未完成仍存档，等等）
Web.Archive.InternalTools.TermToArchive = 期限数：
Web.Archive.Locations.Title = 存档
Web.Archive.PolicyPeriodLandingPage.Issue = {0}- {1} 生效的保单期限已存档。某些数据不可用，比如账单和财务信息。
Web.Archive.PolicyPeriodLandingPage.Title = 摘要（已存档）
Web.Archive.RequestRestoreButton = 请求检索
Web.Archive.RequestRestorePopup.RestoreButtonLabel = 请求检索
Web.Archive.RequestRestorePopup.RestoreReasonLabel = 原因
Web.Archive.RequestRestorePopup.Title = 从存档中请求检索
Web.Archive.ResumeArchiving = 恢复存档？
Web.Archive.RunBatchProcess = 运行
Web.Archive.Title = 启用/禁用存档
Web.Aria.Label.DateValueDate = 日期输入
Web.Aria.Label.DateValueEra = 日本皇历
Web.Aria.Label.DateValueMeridian = 子午线
Web.Aria.Label.DateValueTime = 时间输入
Web.Aria.Label.DateValueToggleDatePicker = 切换日期选取器
Web.Aria.Label.ListViewCustomizeMenuToggle = 列表视图自定义菜单
Web.Aria.Label.ListViewFilterToolbar = 列表视图工具栏过滤器
Web.Aria.Label.PickerClear = 清除选取器
Web.Aria.Label.ToggleTreeViewRow = 切换树视图行
Web.AssigneePicker.Title = 搜索分配
Web.Assignment.Popup.AssignTo = 分配到
Web.Assignment.Popup.Button = 分配
Web.Assignment.Popup.Errors = 分配错误：
Web.Assignment.Popup.SelectFromList = 从列表中选择：
Web.Assignment.Popup.SelectMethod = 选择分配的执行方式
Web.Assignment.Popup.Unassigned = 未分配项
Web.Assignment.Search.Description = 说明
Web.Assignment.Search.FirstName = 名字
Web.Assignment.Search.Group = 组
Web.Assignment.Search.GroupName = 组名称
Web.Assignment.Search.GroupNamePhonetic = 组名称（拼音）
Web.Assignment.Search.LastName = 姓氏
Web.Assignment.Search.Name = 名称
Web.Assignment.Search.Organization = 机构
Web.Assignment.Search.ParentGroup = 上级组
Web.Assignment.Search.QueueName = 队列名称
Web.Assignment.Search.SearchFor = 搜索
Web.Assignment.Search.User = 用户
Web.Assignment.Search.Username = 用户名
Web.Assignment.UserRoleOwner.DisplayNameLabel = 交易或保单号
Web.Assignment.UserRoleOwner.TypeLabel = 类型
Web.AuditComplete.ViewAudit = 查看您的{0} （#{1}）
Web.AuditWizard.AuditFee = 审计费
Web.AuditWizard.Audited = 已审计
Web.AuditWizard.AuditedBasis = 已审计基本信息
Web.AuditWizard.AuditedPayroll = 已审计的工资
Web.AuditWizard.Auditor = 审计员
Web.AuditWizard.Basis = 基础
Web.AuditWizard.Confirmation.Reverse = 是否确定要反转此{0}？
Web.AuditWizard.Confirmation.Waive = 是否确定要放弃此{0}？
Web.AuditWizard.DaysReported = 报告的天数
Web.AuditWizard.Details.Basis.End = 至
Web.AuditWizard.Details.Basis.Start = 开始日期
Web.AuditWizard.Details.ClassCode = 分类代码
Web.AuditWizard.Details.Description = 说明
Web.AuditWizard.Details.Location = 地点
Web.AuditWizard.Details.NullAmountsError = 必须填写所有审计的金额以计算保费。
Web.AuditWizard.Details.PeriodLabel = {0} - {1}
Web.AuditWizard.DueDate = 到期日期
Web.AuditWizard.EditAudit = 编辑审计
Web.AuditWizard.EditReport = 编辑报告
Web.AuditWizard.EstAmount = 预估金额
Web.AuditWizard.EstBasis = 预计基本金额
Web.AuditWizard.EstPayroll = 预计工资
Web.AuditWizard.Estimated = 预计
Web.AuditWizard.InfoBar.AuditEnd = 结束日期：{0}
Web.AuditWizard.InfoBar.AuditStart = 开始日期：{0}
Web.AuditWizard.NoEditPermission = 您无权编辑此审计交易；审计员“{0}”需要处理此优先权。
Web.AuditWizard.PaymentReceived = 已收付款
Web.AuditWizard.Payroll = 工资
Web.AuditWizard.Period.End = 期限结束日期
Web.AuditWizard.Period.Start = 期间开始日期
Web.AuditWizard.Premium = 保费
Web.AuditWizard.PremiumRatio = 比率
Web.AuditWizard.Premiums.Details = 保费详细信息
Web.AuditWizard.Premiums.Details.AuditedRate = 已审计费率
Web.AuditWizard.Premiums.Details.Change = 更改
Web.AuditWizard.Premiums.Details.Premium.Amount = 金额
Web.AuditWizard.Premiums.Details.Premium.Audited = 已审计保费
Web.AuditWizard.Premiums.Details.Premium.AuditedAmount = 审计金额
Web.AuditWizard.Premiums.Details.Premium.Estimated = 预计保费
Web.AuditWizard.Premiums.Details.Premium.Premium = 保费
Web.AuditWizard.Premiums.Details.Premium.PriorAudited = 之前审计的保费
Web.AuditWizard.Premiums.Details.Rate = 费率
Web.AuditWizard.Premiums.Summary = 摘要
Web.AuditWizard.Premiums.Summary.Comments = 注释
Web.AuditWizard.Premiums.Summary.Difference = 差额
Web.AuditWizard.Premiums.Summary.NewCharges = 新建费用
Web.AuditWizard.Premiums.Summary.PreviouslyBilled = 之前已计费
Web.AuditWizard.Premiums.Summary.PreviouslyCharged = 已计费
Web.AuditWizard.Premiums.Summary.Results = {0}个结果
Web.AuditWizard.Premiums.Summary.Results.AdditionalInfo = 附加信息
Web.AuditWizard.Premiums.Summary.Taxes = 税费
Web.AuditWizard.Premiums.Summary.TotalAuditedCost = 总审计成本
Web.AuditWizard.Premiums.Summary.TotalAuditedPremium = 已审计保费总额
Web.AuditWizard.Premiums.Summary.TotalCost = 总成本
Web.AuditWizard.Premiums.Summary.TotalEAP = EAP总计
Web.AuditWizard.Premiums.Summary.TotalEstCost = 总预计成本
Web.AuditWizard.Premiums.Summary.TotalPremium = 保费总额
Web.AuditWizard.Premiums.Summary.TotalPriorAuditedCost = 之前审计的成本总计
Web.AuditWizard.PriorAuditedAmount = 之前审计的金额
Web.AuditWizard.PriorAuditedBasis = 之前审计的基本信息
Web.AuditWizard.PriorAuditedPayroll = 之前审计的工资
Web.AuditWizard.Processing = 处理中
Web.AuditWizard.Quote = 计算保费
Web.AuditWizard.ReceivedDate = 接收日期
Web.AuditWizard.StartDate = 开始日期
Web.AuditWizard.Submit = 提交
Web.AuditWizard.Summary.Audit = 摘要
Web.AuditWizard.Summary.Instructions = 说明
Web.AuditWizard.Summary.MethodActual = 方法（实际）
Web.AuditWizard.Summary.MethodPlanned = 方法（已计划）
Web.AuditWizard.Summary.NullReceivedDate = 必须指定接收日期。
Web.AuditWizard.Summary.Type = 类型
Web.AuditWizard.Title = 审计{0}
Web.AuditWizard.TotalEstimatedPremium = 预计保费总额
Web.AuditWizard.TotalReportedPremium = 报告的保费总计
Web.AuditWizard.TrendAnalysis = 报告趋势分析
Web.AuditWizard.Waive = 免除
Web.AuditWizard.WaiveConfirm = 是否确定要放弃该审计？
Web.AuditWizardMenu.Details = 详细信息
Web.AuditWizardMenu.Premiums = 保费
Web.AuditWizardMenu.Summary = 摘要
Web.Billing.AddPaymentInstrument = 添加
Web.Billing.Amount = 金额
Web.Billing.Balances = 结余
Web.Billing.BilledAmount = 计费金额
Web.Billing.BilledOutstanding = 计费未清费用
Web.Billing.BillingPeriod = 保单期间
Web.Billing.BillingPeriod.Entry = #{0}：{1} - {2}
Web.Billing.Current = 当前
Web.Billing.CurrentDue = 当前应收
Web.Billing.DepositReq = 预缴金要求
Web.Billing.DueDate = 到期日期
Web.Billing.Invoice.Last12Months = 最近12个月
Web.Billing.Invoice.Last3Months = 最近3个月
Web.Billing.Invoice.Last6Months = 最近6个月
Web.Billing.Invoice.PaidStatus = 已付状态
Web.Billing.Invoice.Status = 状态
Web.Billing.InvoiceNumber = 发票编号
Web.Billing.Invoicing = 发票管理
Web.Billing.Paid = 已付
Web.Billing.PastDue = 逾期
Web.Billing.Payment.UnexpectedBillingLevel = 检索到意外的计费级别：{0}
Web.Billing.PaymentSchedule = 付款计划
Web.Billing.Plan = 计划
Web.Billing.PolicyDelinquent = 此保单期限处于欠费状态
Web.Billing.SearchBillingAccounts = 搜索计费账户
Web.Billing.StatementDate = 账单日期
Web.Billing.Status = 状态
Web.Billing.Status.Delinquent = 欠费
Web.Billing.Status.InGoodStanding = 状况良好
Web.Billing.TotalBilled = 计费总额
Web.Billing.TotalCharges = 总费用
Web.Billing.Unbilled = 未开票
Web.Billing.Unpaid = 未付
Web.Billing.ViewAccountBilling = 查看账户计费状态
Web.Billing.WrittenOff = 销账
Web.BillingAdjustmentsDV.Error.RetrieveBillingMethods = 无法从计费系统检索可用的计费方法。
Web.BillingAdjustmentsDV.Error.RetrieveInstallmentsPlanPreview = 无法从计费系统检索选择的分期付款计划预览： {0}
Web.BillingAdjustmentsDV.Error.RetrieveInvoiceStreams = 无法从计费系统检索有效的发票流。
Web.BillingAdjustmentsDV.Error.RetrievePaymentInstruments = 无法从计费系统检索付款方法
Web.BillingAdjustmentsDV.Error.RetrievePaymentPlans = 无法从计费系统检索有效的赔付计划
Web.BillingAdjustmentsDV.Error.RetrieveSubAccounts = 无法从计费系统检索子账户。
Web.BillingAdjustmentsDV.Error.SetInstallmentsPlansDownPaymentInstmntTotal = 无法连接到计费系统以计算所有可用分期付款计划的首付款、分期付款和总额：{0}
Web.BillingAuditDV.Audits = 审计
Web.BillingAuditDV.FinalAudit = 需要最终审计
Web.BindSummaryDV = 保费摘要
Web.BindSummaryDV.ChangeInCost = 成本更改
Web.BindSummaryDV.InstallmentFees = 费用
Web.BindSummaryDV.Invoicing = 发票管理
Web.BindSummaryDV.Payments = 付款
Web.BindSummaryDV.TotalCost = 总成本
Web.BindSummaryDV.TotalTaxesSurcharges = 税费和附加费用
Web.BizRules.AddUWIssueAction.EvalContext = 评估上下文
Web.BizRules.AddUWIssueAction.IssueKey = 问题键值
Web.BizRules.AddUWIssueAction.LongDesc = 详细说明
Web.BizRules.AddUWIssueAction.ShortDesc = 简要说明
Web.BizRules.AddUWIssueAction.Value = 值
Web.BizRules.ApplicationCriteriaInputSet.All = 全部
Web.BizRules.ApplicationCriteriaInputSet.Selected = 选定
Web.BizRules.CreateUWRule.CloneTitle = 克隆规则：{0}
Web.BizRules.CreateUWRule.Title = 创建新规则
Web.BizRules.CreateUWRule.UpdateLabel = 保存
Web.BizRules.LG.Title = 业务规则
Web.BizRules.Lookup.CreateLookupPage.AddLookup = 保存
Web.BizRules.Lookup.CreateLookupPage.AddLookupColumn = 添加列
Web.BizRules.Lookup.CreateLookupPage.DeleteLookupColumn = 移除列
Web.BizRules.Lookup.CreateLookupPage.Input = 输入
Web.BizRules.Lookup.CreateLookupPage.LookupColumns = 列
Web.BizRules.Lookup.CreateLookupPage.LookupType = 类型
Web.BizRules.Lookup.CreateLookupPage.Output = 输出
Web.BizRules.Lookup.CreateLookupPage.Title = 创建新查找
Web.BizRules.Lookup.LookupPage.AddLookup = 添加查找
Web.BizRules.Lookup.LookupPage.DeleteInUseLookupAlert = 无法删除选定的部分/全部查找。有一个或多个规则引用了它们。
Web.BizRules.Lookup.LookupPage.DeleteLookup = 删除查找
Web.BizRules.Lookup.LookupPage.Description = 说明
Web.BizRules.Lookup.LookupPage.Edit = 编辑
Web.BizRules.Lookup.LookupPage.EditInUseLookupAlert = 无法修改“{0}”。修改它将使规则无效：\n{1}
Web.BizRules.Lookup.LookupPage.Existence = 存在性
Web.BizRules.Lookup.LookupPage.ExistenceDesc = 存在性查找的所有列都必须设置为输入。
Web.BizRules.Lookup.LookupPage.ExistenceError = 在定义为存在性查找时，所有的查找列均应设置为输入。
Web.BizRules.Lookup.LookupPage.ExistenceFalse = 否
Web.BizRules.Lookup.LookupPage.ExistenceTrue = 是
Web.BizRules.Lookup.LookupPage.InputColumnError = 至少应当将一个查找列设置为输入。
Web.BizRules.Lookup.LookupPage.Inputs = 输入
Web.BizRules.Lookup.LookupPage.ManageLookupTables = 管理数据查找表
Web.BizRules.Lookup.LookupPage.Name = 名称
Web.BizRules.Lookup.LookupPage.NonExistenceError = 在未定义为存在性查找时，应将一个查找列设置为输入。
Web.BizRules.Lookup.LookupPage.Output = 输出
Web.BizRules.Lookup.LookupPage.OutputType = 输出类型
Web.BizRules.Lookup.LookupPage.RemoveConfirmation = 是否确定要移除选定的查找表？
Web.BizRules.Lookup.LookupPage.SourceTable = 源表
Web.BizRules.Lookup.LookupPage.Update = 更新
Web.BizRules.Lookup.LookupPage.View = 查看
Web.BizRules.Lookup.SelectLookupPage.Description = 说明
Web.BizRules.Lookup.SelectLookupPage.LookupName = 名称
Web.BizRules.Lookup.SelectLookupPage.LookupTable = 源表
Web.BizRules.Lookup.SelectLookupPage.LookupTableCode = 表代码
Web.BizRules.Lookup.SelectLookupPage.Title = 数据查找表：{0}
Web.BizRules.Lookup.SelectLookupPage.Title.EditLookupTable = 编辑查找表
Web.BizRules.Rule.GlobalVersionId = 全局版本ID
Web.BizRules.Rule.RuleDescription = 说明
Web.BizRules.UWRuleDetail.Title = 规则：{0}
Web.BizRules.UWRuleDetail.Version = 版本：
Web.BizRules.UWRulePanelSet.AdvancedInfoTitle = 高级
Web.BizRules.UWRulePanelSet.ApplicabilityCriteriaTitle = 应用到
Web.BizRules.UWRulePanelSet.AutoApprovable = 可自动批准
Web.BizRules.UWRulePanelSet.BlockingPoint = 阻止点
Web.BizRules.UWRulePanelSet.CheckingSet = 检查集
Web.BizRules.UWRulePanelSet.Code = 代码
Web.BizRules.UWRulePanelSet.CodeIsNotUnique = 已存在具有此代码的核保人规则
Web.BizRules.UWRulePanelSet.DefaultApprovalBlockingPoint = 默认审批阻止点
Web.BizRules.UWRulePanelSet.DefaultDurationType = 默认持续时间
Web.BizRules.UWRulePanelSet.DefaultEditBeforeBind = 承保前的默认编辑
Web.BizRules.UWRulePanelSet.DefaultValueAssignmentType = 默认值分配类型
Web.BizRules.UWRulePanelSet.DefaultValueOffsetAmount = 默认值冲销金额
Web.BizRules.UWRulePanelSet.DefaultValueOffsetCurrency = 默认值冲销货币
Web.BizRules.UWRulePanelSet.EndDateBeforeStartDate = 必须晚于开始日期
Web.BizRules.UWRulePanelSet.RuleConditionTitle = 条款
Web.BizRules.UWRulePanelSet.RuleContextTitle = 上下文
Web.BizRules.UWRulePanelSet.RuleDetailsTitle = 规则详细信息
Web.BizRules.UWRulePanelSet.RuleName = 全名
Web.BizRules.UWRulePanelSet.RuleVariableTitle = 变量
Web.BizRules.UWRulePanelSet.UWIssueTitle = 核保项详细信息
Web.BizRules.UWRulePanelSet.ValueComparator = 值比较器
Web.BizRules.UWRulePanelSet.ValueFormatterType = 值格式化程序类型
Web.BizRules.UWRulePopup.Title = 规则：{0}
Web.BizRules.UWRules.All = <全部>
Web.BizRules.UWRules.ApplicabilityCriteria.Jurisdictions = 司法辖区
Web.BizRules.UWRules.ApplicabilityCriteria.PolicyLine = 保单险类
Web.BizRules.UWRules.ApplicabilityCriteria.PolicyTransactions = 保单交易
Web.BizRules.UWRules.ApplicabilityCriteria.RuleEndDate = 结束日期
Web.BizRules.UWRules.ApplicabilityCriteria.RuleStartDate = 开始日期
Web.BizRules.UWRules.BlockingPoint = 阻止点
Web.BizRules.UWRules.CheckingSet = 检查集
Web.BizRules.UWRules.Comparison.ApplicabilityCriteria = 适用性条件
Web.BizRules.UWRules.Comparison.Title = 比较核保人规则
Web.BizRules.UWRules.Error = 错误
Web.BizRules.UWRules.Filter.EditFilter = 编辑过滤器
Web.BizRules.UWRules.Filter.Filter = 过滤器
Web.BizRules.UWRules.Filter.FilteredStatus = （已过滤）
Web.BizRules.UWRules.Filter.HideFilter = 隐藏过滤器
Web.BizRules.UWRules.Filter.ShowFilter = 显示过滤器
Web.BizRules.UWRules.Jurisdiction = 管辖权
Web.BizRules.UWRules.Name = 全名
Web.BizRules.UWRules.PolicyLine = 保单险类
Web.BizRules.UWRules.PolicyTransaction = 保单交易
Web.BizRules.UWRules.Rule.RuleDetails.Availability = 可用性
Web.BizRules.UWRules.Rule.RuleDetails.NameOrDescription = 名称/说明
Web.BizRules.UWRules.Rule.RuleDetails.Status = 状态
Web.BizRules.UWRules.RuleIsNotManagedByBusinessRulesFrameworkAlert = 此规则在外部管理，而不是由业务规则管理。因此，您只能编辑与核保项类型相关的字段，如下所示。
Web.BizRules.UWRules.RuleIsNotManagedByBusinessRulesFrameworkEditAlert = 此规则在外部管理，而不是由业务规则管理。因此，您只能编辑与核保项类型相关的字段，如下所示。
Web.BizRules.UWRules.RuleIsNotManagedByBusinessRulesFrameworkIcon = 这是在外部管理的规则
Web.BizRules.UWRules.State = 省/直辖市
Web.BizRules.UWRules.Title = 核保规则
Web.BranchesSearch.BranchCode = 分支机构代码
Web.BranchesSearch.BranchName = 名称
Web.Button.FromAddressBook = 从通讯簿
Web.Cancellation.Error.AlreadyScheduled = 警告：已为此保单计列另一个取消(#{0})。您可能要撤销该取消才可继续。
Web.Cancellation.Error.CannotStart = 无法取消保单：{0}
Web.Cancellation.Error.NotScheduled = 尚未计列
Web.Cancellation.Error.NotificationsResent = 通知已重新发送
Web.Cancellation.Error.NotificationsSent = 通知已发送
Web.Cancellation.StartCancellation = 启动保单号{0}的取消
Web.Cancellation.Warning.CancellationNotificationDate = 取消通知日期不是最新的。
Web.Cancellation.Warning.FlatCancelMustBeOnPeriodStart = 完全取消必须在期限的开始日期生效。
Web.CancellationSetup.Error.DateFormatString = MM/dd/yyyy hh\:mm\:ss a
Web.CancellationSetup.Error.EffectiveDateTooEarly = 日期{0}在{1}的最早有效生效日期之前。
Web.CancellationWizard.CalcMethod = 退款方式
Web.CancellationWizard.CancelDate = 取消生效日期
Web.CancellationWizard.QuoteScreen.Cumulative = 保单保费
Web.CancellationWizard.QuoteScreen.Transaction = 成本更改详细信息
Web.CancellationWizard.Reason = 原因
Web.CancellationWizard.ReasonDescription = 原因说明
Web.CancellationWizard.Source = 来源
Web.CancellationWizard.Title = 取消{0}
Web.CancellationWizardMenu.Confirm = 确认
Web.CancellationWizardMenu.Entry = 条目
Web.Charts.NoData = 无数据
Web.Claims.Archived = {0}“已存档”
Web.Claims.ClaimNumber = 赔案编号
Web.Claims.ClaimSecurityType = 理赔类型
Web.Claims.ClaimSystem.Error.GeneralException = 从理赔系统检索信息时遇到问题：{0}。
Web.Claims.Description = 说明
Web.Claims.DetailsTitle = 理赔详细信息
Web.Claims.Fraud = 欺诈
Web.Claims.Indicator = 指标
Web.Claims.Injuries = 人伤
Web.Claims.Insured = 被保险人
Web.Claims.LargeLoss = 大额损失
Web.Claims.Litigation = 诉讼
Web.Claims.LossCause = 损失原因
Web.Claims.LossDate = 出险日期
Web.Claims.NoPolicyPeriod = 无生效保单
Web.Claims.PaidToDate = 迄今赔付
Web.Claims.PolicyNumber = 保单号
Web.Claims.PolicyPeriod = 保单期间
Web.Claims.PolicyPeriodEnd = 保单期限结束
Web.Claims.PolicyPeriodFilter = 保单期间
Web.Claims.PolicyPeriodStart = 保单期限开始日期
Web.Claims.PolicyStartDate = 保单开始日期
Web.Claims.Product = 保险产品
Web.Claims.ProductFilter = 保险产品
Web.Claims.Recoveries = 追偿
Web.Claims.Reserves = 剩余准备金
Web.Claims.RestrictedClaim = 限制的理赔
Web.Claims.Status = 状态
Web.Claims.TotalIncurred = 总发生额
Web.Claims.ViewInCC = 在理赔系统中查看理赔
Web.ClassCodeSearch = 分类代码搜索
Web.ClassCodeSearch.Classification = 分类
Web.ClassCodeSearch.Code = 代码
Web.Client.AdminAlertPrompt = 输入一条要通过警报栏广播的消息。
Web.Client.AjaxRequestServerError = 处理请求时出错：{0}
Web.Client.AjaxRequestSessionExpired = 您的会话已过期。现在您将进入登录页面。
Web.Client.Alert.MissingIdForDiff = 从服务器收到意外响应。这通常是从多个浏览器选项卡或窗口访问应用程序所导致的。请尝试刷新页面；如果不起作用，请与系统管理员联系。
Web.Client.ChartZeroSumValue = 无数据
Web.Client.ConfirmNavigateAway = 您的一个或多个地点当前处于“编辑”模式。您的部分工作可能无法保存。
Web.Client.ConfirmPasteBadCurrency = 已阻止粘贴“{0}”，因为这不是正确格式的币种值。
Web.Client.ConfirmPrefPanelWithDirtyForm = 您已经对应用程序中的数据进行了本地更改。更新首选项将导致调用服务器。是否确定要继续？
Web.Client.DatePicker.Close = 关闭日历
Web.Client.DatePicker.DayMinus = 减少日历日
Web.Client.DatePicker.DayPlus = 增加日历日
Web.Client.DatePicker.GoToToday = 转到今天
Web.Client.DatePicker.MonthMinus = 减少日历月
Web.Client.DatePicker.MonthPlus = 增加日历月
Web.Client.DatePicker.SelectDay = 选择日期
Web.Client.DatePicker.SelectedDay = 选定日期
Web.Client.DatePicker.Today = 今天
Web.Client.DatePicker.WeekMinus = 减少日历周
Web.Client.DatePicker.WeekPlus = 增加日历周
Web.Client.DatePicker.YearMinus = 减少日历年
Web.Client.DatePicker.YearPlus = 增加日历年
Web.Client.Event.ThrottleWarning = 应用程序同时向服务器发送了太多请求。可能是键被卡住，或者连续按了很多次。要继续，请在文本框中键入以下数字，然后单击“确定”：
Web.Client.HTTPRequestBadResponse = 服务器响应中包含错误数据。HTTP状态：{0}，错误代码：{1}
Web.Client.HTTPRequestFailed = 联系服务器时出错。HTTP状态：{0}，错误消息：{1}
Web.Client.HTTPRequestTimedOut = 您的服务器请求已超出超时阈值。请刷新页面重试。如果仍然收到此错误，请与系统管理员联系。
Web.Client.ListView.Column.ToggleGroup = 分组/取消分组
Web.Client.ListView.Column.ToggleHidden = 隐藏/显示
Web.Client.MediaUploader.InvalidFiles = 尝试导入的是非法文件类型
Web.Client.PrefPanelConfirmCancel = 是否确定要取消？所有未保存的更改都将丢失。
Web.Client.PrefPanelConfirmReset = 是否确定要还原默认设置？所有更改都将丢失。
Web.Client.Upload.DropFilesHere = 拖动文件以上载
Web.Client.Upload.PasteFilesHere = 将文件粘贴至此处
Web.Client.Upload.PasteFilesHereSubtitle = 将光标放置在字段中，然后粘贴
Web.CommercialPackage.LineEnabled = 已启用
Web.CommercialPackage.LineReview.DateQuoteNeeded = 需报价日期
Web.CommercialPackage.LineReview.EffectiveDate = 生效日期
Web.CommercialPackage.LineReview.ExpirationDate = 到期日期
Web.CommercialPackage.LineReview.Insured = 主要列名被保险人
Web.CommercialPackage.LineReview.PolicyLine = 险类
Web.CommercialPackage.LineReview.Product = 保险产品
Web.CommercialPackage.LineType = 险类
Web.CommercialPackage.PackageRiskType = 综合险风险类型
Web.CommercialPackage.PreferredCoverageCurrency = 首选承保范围货币
Web.CommercialPackage.SelectedLines = 选定险类
Web.CommercialPackage.Warning.ConfirmLine = 请确认为此保单选择了正确的行。
Web.CommissionPlanSearchPopup.CannotAddDuplicateCommissionPlan = 无法添加重复的佣金计划
Web.CommissionPlanSearchPopup.CommissionPlanDoesNotExist = 佣金计划不存在
Web.CommissionPlanSearchPopup.Currency = 支持的货币
Web.CommissionPlanSearchPopup.Name = 计划名称
Web.CommissionPlanSearchPopup.Title = 搜索佣金计划
Web.Common.LineEnabled = 已启用
Web.Common.LineType = 险类
Web.Common.PreferredCoverageCurrency = 首选承保范围货币
Web.Common.SelectedLines = 选定险类
Web.Common.Warning.ConfirmLine = 请确认为此保单选择了正确的险类。
Web.ComparisonPanelSet.Item = 项目
Web.ComparisonPanelSet.SliceChanges = 比较{0}和{1}
Web.Component.ListView.Column.ToggleSort = 排序
Web.Component.ListView.Filters = 过滤器
Web.Component.ListView.ResetTablePreferences = 重置自定义列
Web.Component.Quickjump.Placeholder = 转到(Alt+{0})
Web.Component.TabBar.Preferences = 设置...
Web.Component.TabBar.ReloadPCFs = 重新加载PCF
Web.Component.TabBar.Settings = 选项
Web.Component.TreeView.CyclicReference = （循环引用）
Web.ConsistencyCheck.CheckName = 检查名称
Web.ConsistencyCheck.Desc = 说明
Web.ConsistencyCheck.Download = 下载
Web.ConsistencyCheck.DownloadAll = 下载全部
Web.ConsistencyCheck.PageTitle = 一致性检查
Web.ConsistencyCheck.ResetButton = 重置
Web.ConsistencyCheck.Run = 运行检查
Web.ConsistencyCheck.SQLString = 命令
Web.ConsistencyCheck.Search = 搜索
Web.ConsistencyCheck.TableName = 表名称
Web.ConsistencyCheck.TableNameSearch = 表名称碎片
Web.Contact.Activity.UpdateContactInformation.ChangeField = 已在{1}上将{0}从“{2}”更改为“{3}”。
Web.Contact.Activity.UpdateContactInformation.Description = 您已在从前日期的更改中更新了{0}的联系人信息。除保单外，这些更改尚未应用在任何地方。如果要将这些更改应用于该联系人的其它实例，则必须更改账户级联系人。请参阅备注以查看所有的更改。
Web.Contact.Activity.UpdateContactInformation.Note.SubjectText = {0}的联系人更改
Web.Contact.Activity.UpdateContactInformation.RemoveField = 已在{1}上移除值为“{2}”的{0}。
Web.Contact.Activity.UpdateContactInformation.SetField = 在{1}上将{0}设置为“{2}”。
Web.Contact.Activity.UpdateContactInformation.SubjectText = 联系人{0}已更改
Web.Contact.Add = 添加
Web.Contact.AddNewOfType = 新建{0}
Web.Contact.Addresses.Title = 地址
Web.Contact.Associations.Address = 地址
Web.Contact.Associations.CreateDate = 创建日期
Web.Contact.Associations.CurrentEffectiveDate = 当前生效日期
Web.Contact.Associations.CurrentExpirationDate = 当前失效日期
Web.Contact.Associations.Email = 电子邮件
Web.Contact.Associations.Name = 名称
Web.Contact.Associations.OfficialIDs = 公务员ID
Web.Contact.Associations.Phone = 电话
Web.Contact.Associations.PolicyNumber = 保单号
Web.Contact.Associations.PolicyType = 产品
Web.Contact.Associations.Roles = 角色
Web.Contact.Associations.Status = 状态
Web.Contact.Associations.Underwriter = 核保人
Web.Contact.Associations.WorkOrderNumber = 交易号
Web.Contact.Associations.WorkOrderStatus = 状态
Web.Contact.Associations.WorkOrderType = 类型
Web.Contact.CheckForDuplicates = 检查重复项
Web.Contact.CheckForDuplicates.Error.MissingRequiredFields = 缺少必填字段：{0}
Web.Contact.CheckForDuplicates.Error.NoResults = 未找到潜在的重复联系人。
Web.Contact.DuplicatePolicyContactRoleError = 保单联系人“{0}”已存在。
Web.Contact.Error.AlreadyExist = 联系人“{0}”已存在。
Web.Contact.Error.CannotRetrieveContactWhenAutoSyncDisallowed = 无法检索ABUID为{0}的联系人，因为“自动同步”值为“不允许”。
Web.Contact.Error.ResetPrimaryNamedInsured = 设置主要列名被保险人时出错。
Web.Contact.Error.UnknownProductAccountType = 未知的保险产品账户类型“{0}”
Web.Contact.LaborClient = 劳工委托人
Web.Contact.LaborContractor = 劳工承包商
Web.Contact.NewContact = 新建{0}
Web.Contact.NewContact2 = 新建{0} - {1}
Web.Contact.PolicyAddlInsured.Error.AlreadyExists = 保单其他被保险人“{0}”已存在。
Web.Contact.PolicyOwnerOfficer.Error.AlreadyExists = 保单所有者/雇员“{0}”已存在。
Web.ContactCriteria.CompanyName = 公司名称
Web.ContactCriteria.CompanyNamePhonetic = 公司名称（拼音）
Web.ContactDetail = 联系人详细信息
Web.ContactDetail.AdditionalInfo = 附加信息
Web.ContactDetail.AdditionalInfo.DateOfBirth = 出生日期
Web.ContactDetail.AdditionalInfo.EmployeeNumber = 雇员编号
Web.ContactDetail.AdditionalInfo.Gender = 性别
Web.ContactDetail.AdditionalInfo.Guardian = 监护人
Web.ContactDetail.AdditionalInfo.IsPreferredVendor = 首选供应商？
Web.ContactDetail.AdditionalInfo.MaritalStatus = 婚姻状况
Web.ContactDetail.AdditionalInfo.TaxFilingStatus = 纳税申报状态
Web.ContactDetail.AdditionalInfo.TaxID = 税务代码 (SSN)
Web.ContactDetail.AdditionalInfo.VendorType = 经销商类型
Web.ContactDetail.Address = 地址
Web.ContactDetail.AddressDetail = 地址详细信息
Web.ContactDetail.AddressDetail.AddressLine1 = 地址行 1
Web.ContactDetail.AddressDetail.AddressLine2 = 地址行 2
Web.ContactDetail.AddressDetail.AddressLine3 = 地址行 3
Web.ContactDetail.AddressDetail.AddressType = 地址类型
Web.ContactDetail.AddressDetail.City = 市
Web.ContactDetail.AddressDetail.CityAutofill = 根据省和市自动填充区/县和邮政编码
Web.ContactDetail.AddressDetail.Country = 国家/地区
Web.ContactDetail.AddressDetail.County = 区/县
Web.ContactDetail.AddressDetail.Description = 地址说明
Web.ContactDetail.AddressDetail.PostalCodeAutofill = 根据邮政编码自动填充省、市、区/县
Web.ContactDetail.AddressDetail.Postalcode = 邮政编码
Web.ContactDetail.AddressDetail.ProximitySearchStatus = 邻近搜索状态
Web.ContactDetail.AddressDetail.State = 省/直辖市
Web.ContactDetail.AddressDetail.ValidUntil = 有效期截止日期
Web.ContactDetail.AddressDetail.ZipCode = 邮政编码
Web.ContactDetail.AddressTools = 地址工具
Web.ContactDetail.AddressTools.MergeAddress = 合并地址
Web.ContactDetail.AddressTools.MergeAddress.Confirm = 是否要合并地址：\n{1}\n到地址：\n{0}？
Web.ContactDetail.AddressTools.MergeAddressInto = 合并到
Web.ContactDetail.Adjudicator.AdjudicativeDomain = 审判范围
Web.ContactDetail.Adjudicator.AdjudicatorLicense = 审判员执照
Web.ContactDetail.Agency = 代理
Web.ContactDetail.Agency.AgencyName = 代理名称
Web.ContactDetail.Agency.AgentID = 代理人ID
Web.ContactDetail.Attorney = 律师
Web.ContactDetail.Attorney.AttorneyLicense = 律师执照
Web.ContactDetail.Attorney.AttorneySpecialty = 受理类型
Web.ContactDetail.AutoRepairShop = 汽车修理厂
Web.ContactDetail.AutoRepairShop.BusinessLicense = 营业执照
Web.ContactDetail.Company = 公司
Web.ContactDetail.Company.CompanyName = 公司名称
Web.ContactDetail.Company.CompanyNamePhonetic = 公司名称（拼音）
Web.ContactDetail.Company.EmailAddress1 = 主要电子邮件
Web.ContactDetail.Company.EmailAddress2 = 次要电子邮件
Web.ContactDetail.Company.FaxPhone = 传真
Web.ContactDetail.Company.Occupation = 行业
Web.ContactDetail.Company.Organization = 机构
Web.ContactDetail.Company.PreferredVendor = 首选？
Web.ContactDetail.Company.VendorType = 类型
Web.ContactDetail.Company.WorkPhone = 办公电话
Web.ContactDetail.ContactInfo = 联系人信息
Web.ContactDetail.Delete = 删除
Web.ContactDetail.Delete.Warning = 是否确定要删除该联系人？
Web.ContactDetail.Doctor = 医生
Web.ContactDetail.Doctor.DoctorSpecialty = 医学专长
Web.ContactDetail.Doctor.MedicalLicense = 行医执照
Web.ContactDetail.Documents.DocumentManagementSystem.ContentPlugin.Disabled = 单证内容插件未启用。请联系您的管理员。
Web.ContactDetail.Documents.DocumentManagementSystem.ContentPlugin.Unavailable = 单证内容服务器不可用，因此与内容相关的操作目前已禁用。请联系您的管理员。
Web.ContactDetail.Documents.DocumentManagementSystem.MetadataPlugin.Unavailable = 单证属性服务器不可用，因此查看或编辑属性的操作目前已禁用。请联系您的管理员。
Web.ContactDetail.DriversLicense = 司机的驾驶证
Web.ContactDetail.DriversLicense.LicenseNumber = 编号
Web.ContactDetail.DriversLicense.LicenseState = 省/市
Web.ContactDetail.Email = 电子邮件
Web.ContactDetail.Email.Primary = 首选
Web.ContactDetail.Email.Secondary = 备选
Web.ContactDetail.LawFirm = 律师事务所
Web.ContactDetail.LawFirm.LawFirmSpecialty = 受理类型
Web.ContactDetail.LinkedAddress.AlreadyLinkedMessage = 此地址会链接到其它地址
Web.ContactDetail.LinkedAddress.DisplayLabel = {0} ({1})
Web.ContactDetail.LinkedAddress.Edit.Address = 地址
Web.ContactDetail.LinkedAddress.Edit.Contacts = 使用此地址的联系人
Web.ContactDetail.LinkedAddress.Edit.Contacts.Email = 电子邮件
Web.ContactDetail.LinkedAddress.Edit.Contacts.Name = 名称
Web.ContactDetail.LinkedAddress.Edit.Contacts.Phone = 电话
Web.ContactDetail.LinkedAddress.Edit.Contacts.PrimaryAddress = 首选
Web.ContactDetail.LinkedAddress.Edit.Title = 地址详细信息
Web.ContactDetail.LinkedAddress.Edit.UpdateAll = 更新所有链接的地址
Web.ContactDetail.LinkedAddress.Edit.UpdateAndUnlink = 仅更新此地址并取消链接
Web.ContactDetail.LinkedAddress.EditAddress = 编辑地址
Web.ContactDetail.LinkedAddress.Label.Linked = 更改为：
Web.ContactDetail.LinkedAddress.Label.Unlinked = 地址等同于：
Web.ContactDetail.Location = 地址
Web.ContactDetail.MedicalCareOrg.MedicalSpecialty = 医学专长
Web.ContactDetail.MoreUser = 更多...
Web.ContactDetail.Name = 名称
Web.ContactDetail.Name.FirstName = 名字
Web.ContactDetail.Name.FirstNamePhonetic = 名字（拼音）
Web.ContactDetail.Name.FormerName = 曾用名
Web.ContactDetail.Name.LastName = 姓氏
Web.ContactDetail.Name.LastNamePhonetic = 姓氏（拼音）
Web.ContactDetail.Name.MiddleName = 中间名
Web.ContactDetail.Name.OrganizationName = 名称
Web.ContactDetail.Name.OrganizationNamePhonetic = 名称（拼音）
Web.ContactDetail.Name.Particle = 粒子
Web.ContactDetail.Name.PersonName = 全名
Web.ContactDetail.Name.Prefix = 称谓
Web.ContactDetail.Name.Suffix = 后缀
Web.ContactDetail.Name.TaxID.EIN = 税务代码 (EIN)
Web.ContactDetail.Name.TaxID.SSN = 税务代码(SSN)
Web.ContactDetail.NewCompany = 新建公司
Web.ContactDetail.NewPerson = 新建个人
Web.ContactDetail.NewUser = 新建用户
Web.ContactDetail.Notes = 备注
Web.ContactDetail.NullType = 不为不存在的联系人定义“基本情况”DetailView页面
Web.ContactDetail.PageLinks.Addresses = 地址
Web.ContactDetail.PageLinks.Basics = 基本情况
Web.ContactDetail.PageLinks.RelatedContacts = 相关联系人
Web.ContactDetail.Person = 个人
Web.ContactDetail.Person.CellPhone = 移动电话
Web.ContactDetail.Person.ContactClass = 类
Web.ContactDetail.Person.DateOfBirth = 出生日期
Web.ContactDetail.Person.EmailAddress1 = 主要电子邮件
Web.ContactDetail.Person.EmailAddress2 = 次要电子邮件
Web.ContactDetail.Person.FaxPhone = 传真电话
Web.ContactDetail.Person.FirstName = 名字
Web.ContactDetail.Person.HomePhone = 住宅电话
Web.ContactDetail.Person.LastName = 姓氏
Web.ContactDetail.Person.MaritalStatus = 婚姻状况
Web.ContactDetail.Person.PrimaryPhone = 主要电话
Web.ContactDetail.Person.TaxID = 社会保障号
Web.ContactDetail.Person.WorkPhone = 办公电话
Web.ContactDetail.Phone = 电话
Web.ContactDetail.Phone.Cell = 移动电话
Web.ContactDetail.Phone.Extension = 扩展
Web.ContactDetail.Phone.Fax = 传真
Web.ContactDetail.Phone.Generic = 电话
Web.ContactDetail.Phone.Home = 住宅电话
Web.ContactDetail.Phone.MultiField.Extension = {0}：扩展
Web.ContactDetail.Phone.MultiField.PhoneNumber = {0}：电话号码
Web.ContactDetail.Phone.MultiField.RegionCode = {0}：地区代码
Web.ContactDetail.Phone.PhoneNumber = 电话号码
Web.ContactDetail.Phone.PrimaryPhone = 主要电话
Web.ContactDetail.Phone.PrimaryPhone.Error = 必须为选定的主要电话类型指定值。
Web.ContactDetail.Phone.RegionCode = 地区代码
Web.ContactDetail.Phone.Work = 办公电话
Web.ContactDetail.PreferredSettlementCurrency = 首选货币
Web.ContactDetail.PrimaryContact = 主要联系人
Web.ContactDetail.PrimaryContact.Email1 = 主要电子邮件
Web.ContactDetail.PrimaryContact.Email2 = 备用电子邮件
Web.ContactDetail.RetiredMessage = 此联系人已删除！
Web.ContactDetail.TaxInfo = 税务信息
Web.ContactDetail.TaxInfo.TaxStatus = 纳税状态
Web.ContactDetail.TaxInfo.W9ValidFrom = W-9表有效期起始日期
Web.ContactDetail.TaxInfo.W9ValidTo = W-9表有效期截止日期
Web.ContactDetail.TaxInfo.W9ValidToDateMustBeAfterValidFromDate = 必须晚于有效期起始日期
Web.ContactDetail.TaxInfo.W9received = 是否已收到W-9表？
Web.ContactDetail.TaxInfo.W9receivedDate = W-9表接收日期
Web.ContactDetail.Title = {0}
Web.ContactDetail.Type = 类型
Web.ContactDetail.UndefinedType = 不为联系人子类型“{0}”定义“基本情况”DetailView页面
Web.ContactFile.Account.ServiceTier = 服务层级
Web.ContactFile.AccountHolder = 账户所有者信息
Web.ContactFile.AccountHolder.Account = 账户
Web.ContactFile.AccountHolder.AccountServiceTiers = 账户服务层级
Web.ContactFile.AccountHolder.AccountsHeld = 账户
Web.ContactFile.AccountHolder.Alerts.CancellationsInProgress = 正在处理一个或多个取消
Web.ContactFile.AccountHolder.Alerts.OpenClaims = 未决赔案
Web.ContactFile.AccountHolder.CustomerValueMetrics.ActivePolicies = 有效保单
Web.ContactFile.AccountHolder.CustomerValueMetrics.CanceledByCarrier = 由承保人取消未赔付
Web.ContactFile.AccountHolder.CustomerValueMetrics.CanceledByCustomer = 已被客户取消
Web.ContactFile.AccountHolder.CustomerValueMetrics.FirstPolicyEffectiveYear = 保单生效第一年
Web.ContactFile.AccountHolder.CustomerValueMetrics.LifetimePremium = 人寿保费
Web.ContactFile.AccountHolder.CustomerValueMetrics.NetTotalIncurred = 发生额净值总计
Web.ContactFile.AccountHolder.CustomerValueMetrics.OpenClaimInfo = 未决理赔信息
Web.ContactFile.AccountHolder.CustomerValueMetrics.OpenClaimsCount = 未决理赔计数
Web.ContactFile.AccountHolder.CustomerValueMetrics.OtherCancellations = 其它取消
Web.ContactFile.AccountHolder.CustomerValueMetrics.Title = 客户价值指标
Web.ContactFile.AccountHolder.InForcePremium = 生效保费
Web.ContactFile.AccountHolder.MulticurrencyWarning = 账户所有者使用多币种。计费图表和概述磁贴显示的是以首选货币完成的计算。
Web.ContactFile.AccountHolder.Name = 账户所有者
Web.ContactFile.AccountHolder.NotDirectBillOnly = 存在代理缴费或列表缴费。金额不反映这些值。
Web.ContactFile.AccountHolder.Title = 账户所有者信息
Web.ContactFile.AccountHolder.TotalCurrentlyBilled = 当前缴费总计
Web.ContactFile.AccountHolder.TotalOutstanding = 未清总计
Web.ContactFile.AccountHolder.TotalPastDue = 逾期总计
Web.ContactFile.AccountHolder.TotalUnbilled = 未开票总计
Web.ContactFile.AccountHolderSummary = 摘要
Web.ContactFile.AccountHolderSummary.Title = 账户所有者摘要：{0}
Web.ContactFile.Accounts = 账户
Web.ContactFile.Accounts.Title = 联系人文件 - 账户
Web.ContactFile.Billing = 计费
Web.ContactFile.Billing.Account = 计费账户
Web.ContactFile.Billing.BilledOutstanding = 计费未清费用
Web.ContactFile.Billing.CurrentDue = 当前应收
Web.ContactFile.Billing.PastDue = 逾期
Web.ContactFile.Billing.ReturnLargeNumberOfAccountsWarning = 需要检索大量账户。请单击此消息继续。
Web.ContactFile.Billing.Role = 保单角色
Web.ContactFile.Billing.Status = 状态
Web.ContactFile.Billing.Title = 联系人文件 - 计费
Web.ContactFile.Billing.Unbilled = 未开票
Web.ContactFile.Claims = 理赔
Web.ContactFile.Claims.ClaimSearch.Date = 按出险日期搜索
Web.ContactFile.Claims.Title = 联系人文件 - 赔案
Web.ContactFile.Create = 创建
Web.ContactFile.Details = 详细信息
Web.ContactFile.Details.EditContact = 编辑联系人
Web.ContactFile.Details.Title = 联系人文件 - 详细信息
Web.ContactFile.LocationGroup.Title = 联系人：{0}
Web.ContactFile.Policies = 保单
Web.ContactFile.Policies.Archive.Footer = *所有条款均已存档的保单只对具有“主被保险人姓名”角色的联系人显示
Web.ContactFile.Policies.Filter.Product = 保险产品
Web.ContactFile.Policies.Filter.Status = 状态
Web.ContactFile.Policies.Title = 联系人文件 - 保单
Web.ContactFile.WorkOrders = 保单交易
Web.ContactFile.WorkOrders.Archive.Footer = *请注意，所有附加责任已存档的已完成保单交易仅向主要列名被保险人联系人显示
Web.ContactFile.WorkOrders.CompletionDate = 完成日期
Web.ContactFile.WorkOrders.Filter.JobType = 交易类型
Web.ContactFile.WorkOrders.Filter.Product = 保险产品
Web.ContactFile.WorkOrders.Filter.Status = 状态
Web.ContactFile.WorkOrders.Title = 联系人文件 - 保单交易
Web.ContactFileInfoBar.ContactName = 联系人
Web.ContactInfoBar.ContactDisplayName = 联系人详细信息：
Web.ContactManager.Error.FailToAddContact.Description = 将联系人添加到联系人管理系统时发生意外错误：{0}
Web.ContactManager.Error.FailToAddContact.Subject = 无法将联系人“{0}”添加到CMS
Web.ContactManager.Error.FailToUpdateContact.Description = 尝试更新联系人管理系统中的联系人时发生意外错误：{0}
Web.ContactManager.Error.FailToUpdateContact.Subject = 无法将联系人“{0}”的更新提交到CMS
Web.ContactManager.Error.FailToUpdateContact.Subject.Note = 无法将联系人“{0}”的更新提交到CMS
Web.ContactManager.Error.GeneralException = 与ContactManager通信时遇到问题。错误描述：{0}
Web.ContactManager.Error.TooManyResults = ContactManager返回结果过多，请使用更加具体的搜索条件。
Web.ContactManager.Info.AddArrayElement = 已尝试添加元素到{0}。
Web.ContactManager.Info.AddField = 已尝试将字段{0}设置为“{1}”。
Web.ContactManager.Info.AddForeignKey = 已尝试将外键{0}设置为“{1}”。
Web.ContactManager.Info.NewElement = *新*
Web.ContactManager.Info.OverrideWarning = 此操作将会覆盖您的更改。是否继续？
Web.ContactManager.Info.RemoveArrayElement = 已尝试移除{0}。
Web.ContactManager.Info.RemoveField = 已尝试移除字段{0} “{1}”。
Web.ContactManager.Info.RemoveForeignKey = 已尝试移除外键{0} “{1}”。
Web.ContactManager.Info.UpdateArrayElement = 已尝试更新{0}。
Web.ContactManager.Info.UpdateField = 已尝试将{0}从“{1}”更改为“{2}”。
Web.ContactManager.Info.UpdateForeignKey = 已尝试将外键{0}从“{1}”更改为“{2}”。
Web.ContactManager.Warning.DeleteContact.Description = 外部系统尝试删除此联系人。联系人已从联系人管理器取消链接。
Web.ContactManager.Warning.DeleteContact.Subject = 外部系统尝试删除此联系人{0}
Web.ContactMatchWorksheet.TabLabel.MatchingContacts = 匹配联系人
Web.ContactMatchWorksheet.Title.MatchingContacts = 匹配联系人
Web.ContactSearch.Title = 搜索联系人
Web.Contingency.Action = 操作
Web.Contingency.AddActivity = 添加活动
Web.Contingency.AddNote = 添加备注
Web.Contingency.AddedBy = 添加人
Web.Contingency.ClosedDate = 结案日期
Web.Contingency.ClosedUser = 结案人
Web.Contingency.ClosedWithoutSatisfactoryResolution = 已结案但未得到满意解决
Web.Contingency.CompletedBy = 完成人
Web.Contingency.CompletionDate = 完成日期
Web.Contingency.Contingencies = 事故
Web.Contingency.Contingency = 事故
Web.Contingency.CreatedDate = 创建日期
Web.Contingency.CreatedUser = 创建人
Web.Contingency.Description = 说明
Web.Contingency.Documents = 单证
Web.Contingency.Documents.DocumentManagementSystem.ContentPlugin.Disabled = 单证内容插件未启用。请联系您的管理员。
Web.Contingency.Documents.DocumentManagementSystem.ContentPlugin.Unavailable = 单证内容服务器不可用，因此与内容相关的操作目前已禁用。请联系您的管理员。
Web.Contingency.Documents.DocumentManagementSystem.MetadataPlugin.Unavailable = 单证属性服务器不可用，因此查看或编辑属性的操作目前已禁用。请联系您的管理员。
Web.Contingency.DueDate = 到期日期
Web.Contingency.NewContingency = 新事故
Web.Contingency.Note = {0}备注
Web.Contingency.Note.Author = 作者
Web.Contingency.Note.Date = 日期
Web.Contingency.Note.NoSubject = （未提供主题）
Web.Contingency.Note.Subject = 主题
Web.Contingency.Notes = 备注
Web.Contingency.On = 日期
Web.Contingency.OnJob = 位于{0}编号
Web.Contingency.OnPolicy = 位于保单号
Web.Contingency.OpenActivities = 未决活动
Web.Contingency.Pending = 待定
Web.Contingency.PotentialAction = 可能的操作
Web.Contingency.PreviousActivities = 已完成的活动
Web.Contingency.RelatedTo = 事故：{0}
Web.Contingency.RelatedToContingency = 关联到事故：
Web.Contingency.Resolve = 解决
Web.Contingency.ResolvedWaived = 已解决/已免除
Web.Contingency.Status = 状态
Web.Contingency.Title = 标题
Web.Contingency.Waive = 免除
Web.Contingency.Warning.OutstandingContingency = 此保单具有一个或多个未处理事故。
Web.CopyPolicyData.Card.Title.Notes = 备注
Web.CopyPolicyData.CommercialProperty.Buildings.AllLocations = 所有地点
Web.CopyPolicyData.CommercialProperty.Buildings.ChooseBuilding = 选择建筑物
Web.CopyPolicyData.CommercialProperty.Buildings.CopyCoverages = 复制承保范围
Web.CopyPolicyData.CommercialProperty.Buildings.CopyCoverages.BuildingSearchPopup.Title = 选择建筑物
Web.CopyPolicyData.CommercialProperty.Buildings.CopyCoverages.More = 更多...
Web.CopyPolicyData.CommercialProperty.Buildings.CopyCoverages.NoneSelected = 未选择
Web.CopyPolicyData.CommercialProperty.Buildings.CopyCoverages.SelectedBuilding = 选定建筑物：
Web.CopyPolicyData.CommercialProperty.Buildings.DisplayLocations = 显示
Web.CopyPolicyData.CopyDataSelect.EffectiveDate = 起始日期
Web.CopyPolicyData.CopyDataSelect.LineNotImplemented = 需要为此险种实施用于复制数据的用户界面。
Web.CopyPolicyData.CopyDataSelect.MatchItemsFound = 在目标保单中找到{0}
Web.CopyPolicyData.CopyDataSelect.MatchItemsFoundWarning = 如果继续复制，则进行复制的项目的当前版本将被覆盖。
Web.CopyPolicyData.CopyDataSelect.MergeToWorkOrderButton = 合并至交易
Web.CopyPolicyData.CopyDataSelect.Policy.Title = 选择要从{0}号保单复制的数据
Web.CopyPolicyData.CopyDataSelect.WorkOrder.Title = 选择要从{0}号保单交易复制的数据
Web.CopyPolicyData.NoItems.Job = 没有可从{0}号保单交易复制的项目
Web.CopyPolicyData.NoItems.Policy = 没有可从{0}号保单复制的项目
Web.CopyPolicyData.Notes.AllNotes.Policy = 选择与保单相关的所有备注：{0}
Web.CopyPolicyData.Notes.SelectSpecificNotes = 选择特定备注
Web.CopyPolicyData.PersonalAuto.Conditions.Title = 条款
Web.CopyPolicyData.PersonalAuto.CopyCoverages.CopyFromVehicle = 从车辆复制
Web.CopyPolicyData.PersonalAuto.Coverages.Coverage.Title = 承保范围
Web.CopyPolicyData.PersonalAuto.Coverages.IncludeAllCoverages = 包括所有承保范围
Web.CopyPolicyData.PersonalAuto.Coverages.IncludeIndividualCoverages = 各个承保范围
Web.CopyPolicyData.PersonalAuto.Coverages.Title = 私家车险承保范围
Web.CopyPolicyData.PersonalAuto.Exclusions.Title = 免责项
Web.CopyPolicyData.PersonalAuto.PolicyDrivers.Title = 司机
Web.CopyPolicyData.PersonalAuto.Vehicles.Coverages.Title = 车辆承保范围
Web.CopyPolicyData.PersonalAuto.Vehicles.IncludeAddlInterests = 包含其他权益方
Web.CopyPolicyData.PersonalAuto.Vehicles.Title = 车辆
Web.CopyPolicyData.Search.Result.SelectButtonLabel = 选择
Web.CopyPolicyData.Search.Title = 复制保单搜索保单
Web.Coverage.SearchPage.AddSelectedCoverages = 添加选定承保范围
Web.Coverage.SearchPage.AddSelectedExclusionsAndConditions = 添加选定免责项和条款
Web.Coverage.SearchPage.Category = 类别
Web.Coverage.SearchPage.Coverage = 承保范围
Web.Coverage.SearchPage.Keyword = 关键字
Web.Coverage.SearchPage.NoneSelectedLabel = 所有
Web.Coverage.SearchPage.Title = 搜索{0}的承保范围
Web.Coverage.SearchPage.Type = 类型
Web.CreateAccount = 创建账户
Web.CreateNewAccountFromContact = 新建账户
Web.DBCatStatsCV.Default.ApplicationTablesCard = 应用程序表
Web.DBCatStatsCV.Default.StagingTablesCard = 临时表
Web.DBCatStatsCV.Default.StaleHistogramStatsCard = 失效的直方图统计
Web.DBCatStatsCV.Default.StaleIndexStatsCard = 失效的索引统计
Web.DBCatStatsCV.Default.TypelistTablesCard = 类型列表表格
Web.DBCatStatsCV.Default.UnanalyzedHistogramsCard = 未分析的直方图
Web.DBCatStatsCV.Default.UnanalyzedIndexesCard = 未分析的索引
Web.DBCatStatsDV.Duration = 持续时间
Web.DBCatStatsDV.EndTime = 结束时间
Web.DBCatStatsDV.StaleHistH = 过期的直方图统计
Web.DBCatStatsDV.StaleIndH = 过期的索引统计
Web.DBCatStatsDV.Startime = 开始时间
Web.DBCatStatsDV.UnHistH = 未分析的直方图
Web.DBCatStatsDV.UnInH = 未分析的索引
Web.DBCatalogStatisticsInfo.DBCatalogStatisticsInfo = 数据库目录统计信息
Web.DBStatistics.AVG_CACHED_BLOCKS = AVG_CACHED_BLOCKS
Web.DBStatistics.AVG_CACHE_HIT_RATIO = AVG_CACHE_HIT_RATIO
Web.DBStatistics.CurrentRowCount = 当前行计数
Web.DBStatistics.CurrentRowCountFromDatabase = 行数
Web.DBStatistics.Deletes = 删除次数
Web.DBStatistics.GetStats = 当前行计数
Web.DBStatistics.Inserts = 插入次数
Web.DBStatistics.OutOfDateLV.HistogramName = 直方图名称
Web.DBStatistics.OutOfDateLV.TableName = 表名称
Web.DBStatistics.RowModCtr = RowModCtr
Web.DBStatistics.STALE_STATS = STALE_STATS
Web.DBStatistics.STATTYPE_LOCKED = STATTYPE_LOCKED
Web.DBStatistics.Updates = 更新次数
Web.DBStatistics.ViewCurrentStatistics = 当前统计
Web.DBStatsSubmitDV.CanChoosePointInTime = 可以选定一个特定时间点，查看该时刻的最新统计，也可以留空从而查看所有先前统计
Web.DBStatsSubmitDV.CanChooseTables = 如果选择“否”，可以选择为哪些表显示数据库目录统计
Web.DBStatsSubmitDV.CanShowPreviousStats = 如果选择“是”，将显示系统表中存储的先前统计
Web.DBStatsSubmitDV.CollectStatsOnAllTables = 查看所有表的数据库目录统计
Web.DBStatsSubmitDV.CountAllRows = 如果选择“是”，此过程的运行速度将更快
Web.DBStatsSubmitDV.PreviousStatsTime = 下载在{0}之后的指定时间生效的统计
Web.DBStatsSubmitDV.ShowHistoricalStats = 包括过去的统计
Web.DBStatsSubmitDV.ShowPreviousStats = 包括过去的统计
Web.DBStatsSubmitDV.StatisticsOnly = 仅显示统计（无实际行计数或失效统计）
Web.Dashboard.Tile.AccountDetails = 详细信息
Web.Dashboard.Tile.AccountDetails.AccountHolder = 账户所有者
Web.Dashboard.Tile.AccountDetails.AccountNo = 账号
Web.Dashboard.Tile.AccountDetails.AccountStatus = 状态
Web.Dashboard.Tile.AccountDetails.BusinessDescription = 业务说明
Web.Dashboard.Tile.AccountDetails.Description = 说明
Web.Dashboard.Tile.AccountDetails.FEIN = 雇主税号(FEIN)
Web.Dashboard.Tile.AccountDetails.IndustryCode = 行业代码
Web.Dashboard.Tile.AccountDetails.OfficialIDs = 公务员ID
Web.Dashboard.Tile.AccountDetails.OrganizationType = 机构类型
Web.Dashboard.Tile.AccountDetails.SSN = SSN
Web.Dashboard.Tile.AccountHolderOverview = 概述
Web.Dashboard.Tile.AccountHolderOverview.CustomerServiceTier = 客户服务层级
Web.Dashboard.Tile.AccountHolderOverview.CustomerSince = 账户开立日期
Web.Dashboard.Tile.AccountHolderOverview.DelinquenciesIn12Months = 欠费（过去12个月）
Web.Dashboard.Tile.AccountHolderOverview.InForcePremium = 生效的保费
Web.Dashboard.Tile.AccountHolderOverview.LifetimePremium = 人寿保费
Web.Dashboard.Tile.AccountHolderOverview.NextInvoiceDueInBC = 转到计费
Web.Dashboard.Tile.AccountHolderOverview.NoPayments = 无赔付
Web.Dashboard.Tile.AccountHolderOverview.NonPayCancellationsIn12Months = 未支付取消（过去12个月）
Web.Dashboard.Tile.AccountHolderOverview.OpenClaimsCount = 未决理赔计数
Web.Dashboard.Tile.AccountHolderOverview.PolicyCount = 生效的保单计数
Web.Dashboard.Tile.AccountHolderOverview.RecalculateLossRatio = 重新计算赔付率
Web.Dashboard.Tile.AccountHolderOverview.TotalLossesIn3Yr = 3年内的赔付
Web.Dashboard.Tile.AccountOverview = 概述
Web.Dashboard.Tile.AccountOverview.AccountSince = 账户开立日期
Web.Dashboard.Tile.AccountOverview.CoverageCurrency = 承保范围货币
Web.Dashboard.Tile.AccountOverview.Recalculate = 重新计算
Web.Dashboard.Tile.AccountOverview.SettlementCurrency = 赔付货币
Web.Dashboard.Tile.AccountOverview.ThreeYearLoss = 3年赔付
Web.Dashboard.Tile.AccountOverview.ThreeYearLossRatio = 3年赔付率({0})
Web.Dashboard.Tile.AccountOverview.ThreeYearPremium = 3年保费
Web.Dashboard.Tile.AddressType = {0}地址
Web.Dashboard.Tile.BillingSummary = 计费
Web.Dashboard.Tile.BillingSummary.Billed = 已开票：{0}
Web.Dashboard.Tile.BillingSummary.OpenBilling = 未完成计费
Web.Dashboard.Tile.BillingSummary.Paid = 已付：{0}
Web.Dashboard.Tile.BillingSummary.PastDue = 逾期：{0}
Web.Dashboard.Tile.BillingSummary.Unbilled = 未开票：{0}
Web.Dashboard.Tile.BillingSummary.ViewAccountBilling = 查看账户计费
Web.Dashboard.Tile.BillingSummary.WrittenOff = 销账：{0}
Web.Dashboard.Tile.ChangeRequests = 其它保单交易
Web.Dashboard.Tile.ChangeRequests.EffectiveDate = 生效日期
Web.Dashboard.Tile.ChangeRequests.Policy = 保单号
Web.Dashboard.Tile.ChangeRequests.Premium = 保费
Web.Dashboard.Tile.ChangeRequests.PrimaryInsured = 主被保险人
Web.Dashboard.Tile.ChangeRequests.Producer = 经理人
Web.Dashboard.Tile.ChangeRequests.Product = 产品
Web.Dashboard.Tile.ChangeRequests.Status = 状态
Web.Dashboard.Tile.ChangeRequests.Transaction = 交易号
Web.Dashboard.Tile.ChangeRequests.Type = 类型
Web.Dashboard.Tile.Claims = 理赔
Web.Dashboard.Tile.Claims.Adjuster = 理赔人
Web.Dashboard.Tile.Claims.ClaimNumber = 赔案编号
Web.Dashboard.Tile.Claims.ClaimStatus = 状态
Web.Dashboard.Tile.Claims.Description = 说明
Web.Dashboard.Tile.Claims.Insured = 被保险人
Web.Dashboard.Tile.Claims.LossCause = 出险原因
Web.Dashboard.Tile.Claims.LossDate = 出险日期
Web.Dashboard.Tile.Claims.LossType = 损失类型
Web.Dashboard.Tile.Claims.PolicyNumber = 保单号
Web.Dashboard.Tile.Claims.Product = 产品
Web.Dashboard.Tile.Claims.TotalIncurred = 总发生额
Web.Dashboard.Tile.CompletedPolicyTransactions = 已完成保单交易
Web.Dashboard.Tile.CompletedPolicyTransactions.CloseDate = 结束日期
Web.Dashboard.Tile.CompletedPolicyTransactions.EffectiveDate = 交易生效日期
Web.Dashboard.Tile.CompletedPolicyTransactions.Premium = 保费
Web.Dashboard.Tile.CompletedPolicyTransactions.Term = 期限
Web.Dashboard.Tile.CompletedPolicyTransactions.TransactionNumber = 交易号
Web.Dashboard.Tile.CompletedPolicyTransactions.TransactionType = 类型
Web.Dashboard.Tile.ContactDetails = 详细信息
Web.Dashboard.Tile.ContactDetails.Primary = 首选
Web.Dashboard.Tile.ContactPolices.Account = 账户
Web.Dashboard.Tile.ContactPolices.EffectiveDate = 生效日期
Web.Dashboard.Tile.ContactPolices.EndDate = 结束日期
Web.Dashboard.Tile.ContactPolices.PolicyNumber = 保单号
Web.Dashboard.Tile.ContactPolices.PolicyStarted = 保单开始日期
Web.Dashboard.Tile.ContactPolices.Product = 产品
Web.Dashboard.Tile.ContactPolices.Status = 状态
Web.Dashboard.Tile.Contacts = 联系人
Web.Dashboard.Tile.Contacts.Name = 名称
Web.Dashboard.Tile.Contacts.Roles = 角色
Web.Dashboard.Tile.Contingencies = 事故
Web.Dashboard.Tile.Contingencies.Subject = 主题
Web.Dashboard.Tile.CurrentActivities = 当前活动
Web.Dashboard.Tile.CurrentActivities.Assigned = 已分配
Web.Dashboard.Tile.CurrentActivities.DueDate = 到期日期
Web.Dashboard.Tile.CurrentActivities.Policy = 保单号
Web.Dashboard.Tile.CurrentActivities.Priority = 优先级
Web.Dashboard.Tile.CurrentActivities.Product = 产品
Web.Dashboard.Tile.CurrentActivities.Subject = 主题
Web.Dashboard.Tile.CurrentPolicies = 保单
Web.Dashboard.Tile.CurrentPolicies.Cancel = 取消
Web.Dashboard.Tile.CurrentPolicies.Change = 更改
Web.Dashboard.Tile.CurrentPolicies.EffectiveDate = 生效日期
Web.Dashboard.Tile.CurrentPolicies.EndDate = 结束日期
Web.Dashboard.Tile.CurrentPolicies.FileClaim = 提出理赔
Web.Dashboard.Tile.CurrentPolicies.Policy = 保单号
Web.Dashboard.Tile.CurrentPolicies.Product = 产品
Web.Dashboard.Tile.CurrentPolicies.Renew = 续保
Web.Dashboard.Tile.CurrentPolicies.Status = 状态
Web.Dashboard.Tile.CurrentPolicyTerms = 保单期限
Web.Dashboard.Tile.CurrentPolicyTerms.Cancel = 取消
Web.Dashboard.Tile.CurrentPolicyTerms.Change = 更改
Web.Dashboard.Tile.CurrentPolicyTerms.DatesEffective = 生效日期
Web.Dashboard.Tile.CurrentPolicyTerms.EffectiveDate = 生效日期
Web.Dashboard.Tile.CurrentPolicyTerms.EndDate = 结束日期
Web.Dashboard.Tile.CurrentPolicyTerms.ExpirationDate = 到期日期
Web.Dashboard.Tile.CurrentPolicyTerms.FileClaim = 提出理赔
Web.Dashboard.Tile.CurrentPolicyTerms.LossRatio = 赔付率
Web.Dashboard.Tile.CurrentPolicyTerms.OpenBilling = 未完成计费
Web.Dashboard.Tile.CurrentPolicyTerms.OpenClaims = 未决赔案
Web.Dashboard.Tile.CurrentPolicyTerms.OpenTransactions = 未决交易
Web.Dashboard.Tile.CurrentPolicyTerms.Policy = 保单号
Web.Dashboard.Tile.CurrentPolicyTerms.Premium = 保费
Web.Dashboard.Tile.CurrentPolicyTerms.Product = 保险产品
Web.Dashboard.Tile.CurrentPolicyTerms.RecalculateLossRatio = 重新计算赔付率
Web.Dashboard.Tile.CurrentPolicyTerms.Reinstate = 复效
Web.Dashboard.Tile.CurrentPolicyTerms.Renew = 续保
Web.Dashboard.Tile.CurrentPolicyTerms.Status = 状态
Web.Dashboard.Tile.Locations = 地点
Web.Dashboard.Tile.Locations.Address = 地址
Web.Dashboard.Tile.Locations.Name = 名称
Web.Dashboard.Tile.Locations.Primary = 首选
Web.Dashboard.Tile.MyRenewals = 我的续保
Web.Dashboard.Tile.MyRenewals.EffectiveDate = 生效日期
Web.Dashboard.Tile.MyRenewals.Premium = 保费
Web.Dashboard.Tile.MyRenewals.PrimaryInsured = 主被保险人
Web.Dashboard.Tile.MyRenewals.Producer = 经理人
Web.Dashboard.Tile.MyRenewals.Product = 产品
Web.Dashboard.Tile.MyRenewals.Status = 状态
Web.Dashboard.Tile.MyRenewals.Transaction = 交易号
Web.Dashboard.Tile.MySubmissions = 我的投保单
Web.Dashboard.Tile.MySubmissions.EffectiveDate = 生效日期
Web.Dashboard.Tile.MySubmissions.Premium = 保费
Web.Dashboard.Tile.MySubmissions.PrimaryInsured = 主被保险人
Web.Dashboard.Tile.MySubmissions.Producer = 经理人
Web.Dashboard.Tile.MySubmissions.Product = 产品
Web.Dashboard.Tile.MySubmissions.QuoteNeeded = 所需报价
Web.Dashboard.Tile.MySubmissions.Status = 状态
Web.Dashboard.Tile.MySubmissions.Transaction = 交易号
Web.Dashboard.Tile.Notes = 备注
Web.Dashboard.Tile.Notes.NewNote = 新建备注
Web.Dashboard.Tile.Notes.RelatedTo = 关联到{0}
Web.Dashboard.Tile.OpenPolicyTransactions = 未决保单交易
Web.Dashboard.Tile.OpenPolicyTransactions.CreateDate = 创建日期
Web.Dashboard.Tile.OpenPolicyTransactions.EffectiveDate = 交易生效日期
Web.Dashboard.Tile.OpenPolicyTransactions.NamedInsured = 列名被保险人
Web.Dashboard.Tile.OpenPolicyTransactions.NewSubmission = 新建投保单
Web.Dashboard.Tile.OpenPolicyTransactions.PolicyNumber = 保单号
Web.Dashboard.Tile.OpenPolicyTransactions.Product = 产品
Web.Dashboard.Tile.OpenPolicyTransactions.Status = 状态
Web.Dashboard.Tile.OpenPolicyTransactions.Transaction = 交易号
Web.Dashboard.Tile.OpenPolicyTransactions.Type = 类型
Web.Dashboard.Tile.Overview.Activities = 活动
Web.Dashboard.Tile.Overview.Cancellations = 取消
Web.Dashboard.Tile.Overview.ChangeRequests = 更改请求
Web.Dashboard.Tile.Overview.Overdue = {0}过期
Web.Dashboard.Tile.Overview.Renewals = 续保
Web.Dashboard.Tile.Overview.Submissions = 投保单
Web.Dashboard.Tile.Overview.Title = 概述
Web.Dashboard.Tile.PaymentSchedule = 付款计划
Web.Dashboard.Tile.PaymentSchedule.Amount = 金额
Web.Dashboard.Tile.PaymentSchedule.DueDate = 到期日期
Web.Dashboard.Tile.PaymentSchedule.StatementDate = 账单日期
Web.Dashboard.Tile.Payments = 赔付
Web.Dashboard.Tile.Payments.LastPayment = 上次付款
Web.Dashboard.Tile.Payments.NextInvoice = 下次发票到期
Web.Dashboard.Tile.Payments.NextInvoiceMultiple = 多个({0})
Web.Dashboard.Tile.Payments.NoPaymentsReceived = 未收到付款
Web.Dashboard.Tile.PendingPolicyTransactions.PeriodEffDate = 期间生效日期
Web.Dashboard.Tile.PendingPolicyTransactions.Status = 状态
Web.Dashboard.Tile.PendingPolicyTransactions.TransEffDate = 交易生效日期
Web.Dashboard.Tile.PendingPolicyTransactions.Transaction = 交易号
Web.Dashboard.Tile.PendingPolicyTransactions.Type = 类型
Web.Dashboard.Tile.PolicyAccount = 账户
Web.Dashboard.Tile.PolicyAccount.AccountName = 账户名称
Web.Dashboard.Tile.PolicyAccount.AccountNumber = 账号
Web.Dashboard.Tile.PolicyAccount.InForcePolicyCount = 生效的保单计数
Web.Dashboard.Tile.PolicyAccount.InForcePremium = 生效的保费
Web.Dashboard.Tile.PolicyAccount.OpenClaimsCount = 未决理赔计数
Web.Dashboard.Tile.PolicyClaims = 理赔
Web.Dashboard.Tile.PolicyClaims.ClaimNumber = 赔案编号
Web.Dashboard.Tile.PolicyClaims.ClaimStatus = 状态
Web.Dashboard.Tile.PolicyClaims.LossDate = 出险日期
Web.Dashboard.Tile.PolicyClaims.LossType = 损失类型
Web.Dashboard.Tile.PolicyDetails = 详细信息
Web.Dashboard.Tile.PolicyDetails.CancellationEffDate = 取消生效日期
Web.Dashboard.Tile.PolicyDetails.CancellationReason = 取消原因
Web.Dashboard.Tile.PolicyDetails.DividedSourcePolicy = 拆分源保单
Web.Dashboard.Tile.PolicyDetails.EffectiveDate = 生效日期
Web.Dashboard.Tile.PolicyDetails.ExpirationDate = 到期日期
Web.Dashboard.Tile.PolicyDetails.FirstIssuedDate = 首次开具日期
Web.Dashboard.Tile.PolicyDetails.NewTransaction = 新建交易
Web.Dashboard.Tile.PolicyDetails.Offering = 保障组合
Web.Dashboard.Tile.PolicyDetails.PolicyNumOnAccount = {0}（位于账户 {1}）
Web.Dashboard.Tile.PolicyDetails.PolicyNumber = 保单号
Web.Dashboard.Tile.PolicyDetails.PreRenewal = 此保单具有续保前说明
Web.Dashboard.Tile.PolicyDetails.PreRenewalDirection = 续保前说明
Web.Dashboard.Tile.PolicyDetails.PrimaryNamedInsured = 主要列名被保险人
Web.Dashboard.Tile.PolicyDetails.Product = 产品
Web.Dashboard.Tile.PolicyDetails.RewrittenPolicy = 已重新填写保单
Web.Dashboard.Tile.PolicyDetails.SourceAccount = 源账户
Web.Dashboard.Tile.PolicyDetails.SourcePolicy = 源保单
Web.Dashboard.Tile.PolicyDetails.TermNumber = 期限数
Web.Dashboard.Tile.PolicyDetails.Underwriter = 核保人
Web.Dashboard.Tile.PolicyDetails.UnderwritingCompany = 核保公司
Web.Dashboard.Tile.Producer = 经理人
Web.Dashboard.Tile.Producer.ProducerOfRecord = 有记录的经理人
Web.Dashboard.Tile.Producer.ProducerOfService = 服务经理人
Web.Dashboard.Tile.Producers = 经理人
Web.Dashboard.Tile.Producers.Code = 代码
Web.Dashboard.Tile.Producers.Name = 姓名
Web.Dashboard.Tile.RelatedAccounts = 相关账户
Web.Dashboard.Tile.RelatedAccounts.Name = 名称
Web.Dashboard.Tile.RelatedAccounts.Number = 编号
Web.Dashboard.Tile.SplitPolicies = 分割保单
Web.Dashboard.Tile.TermFinancials = 当期财务情况
Web.Dashboard.Tile.TermFinancials.EarnedPremium = 已赚保费
Web.Dashboard.Tile.TermFinancials.EarnedPremiumFinalAuditComplete = 已赚保费\n最终审计完成
Web.Dashboard.Tile.TermFinancials.IncludeEarnedButUnreported.False = 否
Web.Dashboard.Tile.TermFinancials.IncludeEarnedButUnreported.True = 是
Web.Dashboard.Tile.TermFinancials.LossRatio = 赔付率({0})
Web.Dashboard.Tile.TermFinancials.RecalculateLossRatio = 重新计算赔付率
Web.Dashboard.Tile.TermFinancials.TaxesAndFees = 税费
Web.Dashboard.Tile.TermFinancials.TotalIncurred = 总发生额
Web.Dashboard.Tile.TermFinancials.TotalPremium = 保费总额
Web.Dashboard.Underwriter.LocationGroup.Title = 摘要
Web.Dashboard.Underwriter.MyActivities.AccountHolder = 账户所有者
Web.Dashboard.Underwriter.MyActivities.Complete = 完成
Web.Dashboard.Underwriter.MyActivities.DueDate = 到期日期
Web.Dashboard.Underwriter.MyActivities.EscalationDate = 升级日期
Web.Dashboard.Underwriter.MyActivities.Priority = 优先级
Web.Dashboard.Underwriter.MyActivities.Product = 产品
Web.Dashboard.Underwriter.MyActivities.Status = 状态
Web.Dashboard.Underwriter.MyActivities.Subject = 主题
Web.Dashboard.Underwriter.MyActivities.Title = 我的活动
Web.Dashboard.Underwriter.Title = 我的摘要
Web.Dashboard.Underwriter.Transaction = 交易
Web.DataDistSubmitDV.AnalyzeAllTables = 收集所有表的分布
Web.DataDistSubmitDV.CollectLabel = 对每个表，收集此项的分布：
Web.DataDistSubmitDV.Description = 说明
Web.DeclinedReasonPopup = 投保单已被拒
Web.DeclinedReasonPopup.EmptyReasonError = 需要原因代码。
Web.Default.Mode = 此PCF元素用于模式\=“{0}”的版本尚未实施。
Web.DefaultErrorPage.Title = 错误
Web.Demo.Billing.EveryOtherWeekDemo = 隔周一次
Web.Demo.Billing.FullPay = 全额付款
Web.Demo.Billing.MonthlyDemo = 每月一次
Web.Demo.Billing.NoBillDateOrDueDateBilling = 缺少缴费日期或缴费到期日期
Web.Demo.Billing.QuarterlyDemo = 每季度一次
Web.Demo.Billing.SendInvoiceNotAllowed = 不允许手动支付
Web.Demo.Billing.SixPaymentsDemo = 分6次支付
Web.Demo.Billing.StandardAgencyBillPlan = 标准代理缴费计划
Web.Demo.Billing.StandardCommissionPlan = 标准佣金计划
Web.Demo.Billing.ThreePaymentsDemo = 分3次支付
Web.Demo.Billing.TwicePerMonthDemo = 每月两次
Web.Demo.PaymentSystem = 演示支付系统
Web.Demo.PaymentSystem.JobNumber = 保单交易编号
Web.Demo.PaymentSystem.PaymentMethod = 付款方法
Web.Demo.PaymentSystem.PaymentMethod.AccountNumber = 账号
Web.Demo.PaymentSystem.PaymentMethod.BankAccountType = 银行账户类型
Web.Demo.PaymentSystem.PaymentMethod.CardHolderName = 持卡人姓名
Web.Demo.PaymentSystem.PaymentMethod.CardType = 卡片类型
Web.Demo.PaymentSystem.PaymentMethod.CreditCardNumber = 信用卡号
Web.Demo.PaymentSystem.PaymentMethod.ExpiredDate = 到期日期
Web.Demo.PaymentSystem.PaymentMethod.Notes = 备注
Web.Demo.PaymentSystem.PaymentMethod.RoutingNumber = 银行代码
Web.Demo.PaymentSystem.Toolbar.Cancel = 取消
Web.Demo.PaymentSystem.Toolbar.OK = 确定
Web.Desktop.LocationGroup.Title = 桌面
Web.DesktopAccounts = 我的账户
Web.DesktopAccounts.AccountNumber = 账号
Web.DesktopAccounts.AccountStatus = 账户状态
Web.DesktopAccounts.Address = 地址
Web.DesktopAccounts.Name = 名称
Web.DesktopActivities = 我的活动
Web.DesktopActivities.CanceledActivitiesAlert = 某些活动已取消。单击此处查看已取消的活动。
Web.DesktopActivitiesLV.Account = 账户
Web.DesktopActivitiesLV.AccountHolder = 账户所有者
Web.DesktopActivitiesLV.AssignedBy = 分配人
Web.DesktopActivitiesLV.AssignedTo = 负责人
Web.DesktopActivitiesLV.CompletionDate = 完成日期
Web.DesktopActivitiesLV.DueDate = 到期日期
Web.DesktopActivitiesLV.EscalatedActivityTooltip = 已升级活动
Web.DesktopActivitiesLV.EscalationDate = 升级日期
Web.DesktopActivitiesLV.ID = ID
Web.DesktopActivitiesLV.NewActivityTooltip = 新建或更新的活动
Web.DesktopActivitiesLV.Priority = 优先级
Web.DesktopActivitiesLV.Product = 产品
Web.DesktopActivitiesLV.State = 省/直辖市
Web.DesktopActivitiesLV.Status = 状态
Web.DesktopActivitiesLV.Subject = 主题
Web.DesktopAssignableQueues = 我的队列
Web.DesktopAssignableQueues.AssignFirstToMe = 将第一项分配给我
Web.DesktopAssignableQueues.AssignSelectedToMe = 将选定项分配给我
Web.DesktopAssignableQueues.Filter.All = 所有队列
Web.DesktopJobsLV.CreateDate = 创建日期
Web.DesktopJobsLV.EffectiveDate = 生效日期
Web.DesktopJobsLV.Insured = 主被保险人
Web.DesktopJobsLV.Producer = 经理人
Web.DesktopJobsLV.Product = 产品
Web.DesktopJobsLV.Status = 状态
Web.DesktopJobsLV.Type = 类型
Web.DesktopJobsLV.Underwriter = 核保人
Web.DesktopJobsLV.WorkOrderNumber = 交易号
Web.DesktopMenuActions.Create = 创建
Web.DesktopMenuActions.NewSubmission = 新建投保单
Web.DesktopRenewals = 我的续保
Web.DesktopSubmissions = 我的投保单
Web.DesktopSubmissionsLV.EffectiveDate = 生效日期
Web.DesktopSubmissionsLV.Insured = 主被保险人
Web.DesktopSubmissionsLV.Issued = 已签发
Web.DesktopSubmissionsLV.Producer = 经理人
Web.DesktopSubmissionsLV.Product = 产品
Web.DesktopSubmissionsLV.QuoteNeeded = 所需报价
Web.DesktopSubmissionsLV.SubmissionNumber = 交易号
Web.DesktopSubmissionsLV.SubmissionStatus = 状态
Web.DesktopSubmissionsLV.Underwriter = 核保人
Web.DesktopWorkOrders = 更改请求
Web.DesktopWorkOrders.WorkOrderNumber = 交易号
Web.Dictionary = 实体字典
Web.Dictionary.Details.Attributes = 属性
Web.Dictionary.Details.Description = 说明
Web.Dictionary.Details.Supertype = 超类型
Web.Dictionary.Details.TableName = 数据库表名称
Web.Dictionary.Entities.Attributes.Assignable = 可分配
Web.Dictionary.Entities.Attributes.Extendable = 可扩展
Web.Dictionary.Entities.Attributes.Extension = 扩展
Web.Dictionary.Entities.Attributes.Keyable = 可定义键
Web.Dictionary.Entities.Attributes.NonPersistent = 非永久
Web.Dictionary.Entities.Attributes.Purgeable = 可清除
Web.Dictionary.Entities.Attributes.Retireable = 可撤消
Web.Dictionary.Entities.Attributes.RevisionDependent = 修订相关
Web.Dictionary.Entities.Attributes.Validatable = 可校验
Web.Dictionary.Entities.Attributes.ViewEntity = 查看实体
Web.Dictionary.Entities.Name = 名称
Web.Dictionary.EntityDetail = {0}
Web.Dictionary.EntityDictionary = 实体
Web.Dictionary.Filters.AllProps = 所有属性
Web.Dictionary.Filters.ArraysOnly = 仅数组
Web.Dictionary.Filters.ColumnsOnly = 仅列
Web.Dictionary.Filters.DatabaseOnly = 仅数据库
Web.Dictionary.Filters.InheritedOnly = 仅继承
Web.Dictionary.Filters.LinksOnly = 仅外键
Web.Dictionary.Filters.LocalOnly = 仅本地
Web.Dictionary.Filters.NonArraysOnly = 无数组
Web.Dictionary.Filters.NonDatabaseOnly = 仅非数据库
Web.Dictionary.Filters.TypeKeysOnly = 仅类型键
Web.Dictionary.Filters.ViewColumnsOnly = 仅视图列
Web.Dictionary.MainMenu = {Global.AppName}字典
Web.Dictionary.NonPersistentEntity.Warning = n/a （非永久性实体，无数据库表）
Web.Dictionary.Properties.Attributes.Deprecated = 已不建议使用
Web.Dictionary.Properties.Attributes.Exportable = 可导出
Web.Dictionary.Properties.Attributes.Extension = 扩展
Web.Dictionary.Properties.Attributes.Importable = 可导入
Web.Dictionary.Properties.Attributes.No = 否
Web.Dictionary.Properties.Attributes.NonNullable = 不可为空值
Web.Dictionary.Properties.Attributes.NotApplicable = -
Web.Dictionary.Properties.Attributes.Nullable = 可为空值
Web.Dictionary.Properties.Attributes.Readable = 可读
Web.Dictionary.Properties.Attributes.RevisionDependent = 修订相关
Web.Dictionary.Properties.Attributes.Searchable = 可搜索
Web.Dictionary.Properties.Attributes.Writable = 可写
Web.Dictionary.Properties.Attributes.Yes = 是
Web.Dictionary.Properties.Types.Array = 数组
Web.Dictionary.Properties.Types.Column = 列
Web.Dictionary.Properties.Types.ForeignKey = 外键
Web.Dictionary.Properties.Types.Method = 方法
Web.Dictionary.Properties.Types.PrimaryKey = 主键
Web.Dictionary.Properties.Types.TypeKey = 类型键
Web.Dictionary.Properties.Types.ViewColumn = 视图列
Web.Dictionary.Properties.Types.VirtualArray = 数组（虚拟）
Web.Dictionary.PropertyDetails.Attributes = 属性
Web.Dictionary.PropertyDetails.DefaultValue = 默认值
Web.Dictionary.PropertyDetails.Description = 说明
Web.Dictionary.PropertyDetails.GenericType = 泛型类型
Web.Dictionary.PropertyDetails.InDatabase = 在数据库中？
Web.Dictionary.PropertyDetails.Inherited = 已继承
Web.Dictionary.PropertyDetails.Name = 名称
Web.Dictionary.PropertyDetails.Size = 大小
Web.Dictionary.PropertyDetails.SpecificType = 特定类型
Web.Dictionary.TableDetail = 表详细信息： {0}
Web.Dictionary.TableDictionary = 表
Web.Dictionary.Tables.Name = 名称
Web.Dictionary.TypeListDetail = {0}
Web.Dictionary.Welcome = 欢迎使用{Global.AppName}字典
Web.Differences.DiffItemDisplay.Address = {0}地址
Web.Differences.DiffItemDisplay.AircraftSeats = 雇主责任险选项： 飞机座椅
Web.Differences.DiffItemDisplay.AnniversaryDate = 周年日期
Web.Differences.DiffItemDisplay.Answer = {0}的答案
Web.Differences.DiffItemDisplay.AssignedDriver = 已分配司机： {0}
Web.Differences.DiffItemDisplay.BAJurisdiction = 管辖权（{0}）
Web.Differences.DiffItemDisplay.BAStateCov = {0} ({1})
Web.Differences.DiffItemDisplay.BaseState = 基本省/直辖市
Web.Differences.DiffItemDisplay.BillingContact = 账单联系人：{0}
Web.Differences.DiffItemDisplay.BlanketWaivers = 雇主责任险选项： 统括放弃代位追偿
Web.Differences.DiffItemDisplay.Building = 建筑物编号{0} - 地点{1}
Web.Differences.DiffItemDisplay.ClassCode = 分类代码：{0}
Web.Differences.DiffItemDisplay.Condition = {0}条件
Web.Differences.DiffItemDisplay.Coverage = {0}承保范围
Web.Differences.DiffItemDisplay.DefaultName = {0}\: {1}
Web.Differences.DiffItemDisplay.Driver = 司机： {0}
Web.Differences.DiffItemDisplay.Exclusion = {0}免责项
Web.Differences.DiffItemDisplay.FederalEmployee = 雇主责任险选项： 联邦雇员类代码
Web.Differences.DiffItemDisplay.GarageLocation = 车库位置
Web.Differences.DiffItemDisplay.Individuals = 雇主责任险选项： 包含/排除个人
Web.Differences.DiffItemDisplay.Jurisdiction = 管辖权： {0}
Web.Differences.DiffItemDisplay.LaborClient = 雇主责任险选项：劳工委托人：{0}
Web.Differences.DiffItemDisplay.LaborContact = 劳工联系人： {0}
Web.Differences.DiffItemDisplay.LaborContractor = 雇主责任险选项：劳工承包商：{0}
Web.Differences.DiffItemDisplay.Location = 地点： {0}
Web.Differences.DiffItemDisplay.LocationNamedInsured = 地点列名被保险人： {0}
Web.Differences.DiffItemDisplay.Modifier = 调整系数{0}
Web.Differences.DiffItemDisplay.OwnersOfficers = 雇主责任险选项： 所有者和雇员：
Web.Differences.DiffItemDisplay.PolicyAddlInterest = 其他权益方：{0}
Web.Differences.DiffItemDisplay.PrimaryNamedInsured = 主要列名被保险人：{0}
Web.Differences.DiffItemDisplay.PrimaryPolicyLocation = 主要保单地点： {0}
Web.Differences.DiffItemDisplay.RateFactor = 费率因子：{0}
Web.Differences.DiffItemDisplay.RiskClass = 风险类
Web.Differences.DiffItemDisplay.SecondaryNamedInsured = 次要列名被保险人： {0}
Web.Differences.DiffItemDisplay.SpecificWaivers = 雇主责任险选项：特定放弃代位追偿
Web.Differences.DiffItemDisplay.TerritoryCode = 地区代码
Web.Differences.DiffItemDisplay.Vin = 车辆识别号码： {0}
Web.Differences.DiffItemDisplay.WorkplaceExclusions = 雇主责任险选项： 工作场所免责项
Web.Differences.DiffItemTreeNode.ConflictLabel = {0}（来自{1}）
Web.Differences.LOB.BA.Clauses = 承保范围、免责项、条款
Web.Differences.LOB.BA.CoveredVehicles = 承保车辆
Web.Differences.LOB.BA.Drivers = 司机
Web.Differences.LOB.BA.HiredAuto = 租用汽车险
Web.Differences.LOB.BA.Jurisdictions = 管辖权
Web.Differences.LOB.BA.NonOwned = 非自有
Web.Differences.LOB.BA.Vehicles = 车辆
Web.Differences.LOB.BOP.Clauses = 承保范围、免责项、条款
Web.Differences.LOB.CP.Blanket = 统括
Web.Differences.LOB.CP.BlanketCov = 统括承保范围
Web.Differences.LOB.CP.BuildingCov = 建筑物险承保范围
Web.Differences.LOB.CP.CommercialProperty = 企业财产险类
Web.Differences.LOB.Common.AddedWindowChange = {0}（已添加{1}）
Web.Differences.LOB.Common.BuildingImprovements = 上次更新年份 - {0}
Web.Differences.LOB.Common.BuildingSides = {0}赔付明细
Web.Differences.LOB.Common.CoverageSymbol = {0} ({1})
Web.Differences.LOB.Common.Coverages = 承保范围
Web.Differences.LOB.Common.DescriptionWithDates = {0} ({1} - {2})
Web.Differences.LOB.Common.DiffTreeBasedOnValueHeader = 现有保单
Web.Differences.LOB.Common.DiffTreePreemptionLabel = 优先权：{0}
Web.Differences.LOB.Common.LineConditions = 行条件
Web.Differences.LOB.Common.LineCoverages = 险种承保范围
Web.Differences.LOB.Common.LineExclusions = 行排除项
Web.Differences.LOB.Common.Locations = 地点
Web.Differences.LOB.Common.LocationsAndBuildings = 地点和建筑物
Web.Differences.LOB.Common.Modifiers = 调整系数
Web.Differences.LOB.Common.PolicyAddlInsured = 附加被保险人： {0}
Web.Differences.LOB.Common.PolicyAddlInsuredDetail = 附加被保险人： {0} （{1}）
Web.Differences.LOB.Common.PolicyAddlInterest = 其他权益方：{0}
Web.Differences.LOB.Common.PolicyAddlInterestDetail = 其他权益方： {0} （{1}）
Web.Differences.LOB.Common.PolicyAddlNamedInsured = 附加列名被保险人： {0}
Web.Differences.LOB.Common.PolicyAddress = 保单地址（{0}）
Web.Differences.LOB.Common.PolicyBillingContact = 账单联系人：{0}
Web.Differences.LOB.Common.PolicyDriver = 司机： {0}
Web.Differences.LOB.Common.PolicyInfo = 保单信息
Web.Differences.LOB.Common.PolicyLines = 保单险类
Web.Differences.LOB.Common.PolicyPriNamedInsured = 主要列名被保险人：{0}
Web.Differences.LOB.Common.PolicySecNamedInsured = 次要列名被保险人： {0}
Web.Differences.LOB.Common.RemovedWindowChange = {0}（已移除{1}）
Web.Differences.LOB.GL.Basis = 基本金额
Web.Differences.LOB.GL.BasisValue = {0} ({1} - {2})
Web.Differences.LOB.GL.Clauses = 承保范围、免责项、条件、附加被保险人
Web.Differences.LOB.GL.Exposure = {0} \: {1}
Web.Differences.LOB.GL.ExposureDisplay = {0}\: {1} ({2} - {3})
Web.Differences.LOB.GL.Exposures = 赔付明细
Web.Differences.LOB.HOP.CovPartConditions = CoveragePart条件
Web.Differences.LOB.HOP.CovPartCoverages = CoveragePart承保范围
Web.Differences.LOB.HOP.CovPartExclusions = CoveragePart免责项
Web.Differences.LOB.HOP.CoverageParts = 承保范围部分
Web.Differences.LOB.HOP.DwellingConditions = 住宅条件
Web.Differences.LOB.HOP.DwellingCoverages = 住宅承保范围
Web.Differences.LOB.HOP.DwellingExclusions = 住宅免责项
Web.Differences.LOB.HOP.Dwellings = 住宅
Web.Differences.LOB.IM.CoverageParts = 承保范围部分
Web.Differences.LOB.IM.ExcludedAccounts = 排除的账户
Web.Differences.LOB.IM.IMAccountsReceivable = {0}, {1} ({2})
Web.Differences.LOB.IM.ScheduledEquipments = 计列设备
Web.Differences.LOB.IM.ScheduledItems = 计划项目
Web.Differences.LOB.PA.AssignedDriver = 已分配司机： {0}
Web.Differences.LOB.PA.CostChange = {0}成本
Web.Differences.LOB.PA.Coverage = {0}承保范围
Web.Differences.LOB.PA.Drivers = 司机
Web.Differences.LOB.PA.ExcludedLabel = 已排除
Web.Differences.LOB.PA.Vehicles = 车辆
Web.Differences.LOB.ScheduleItem = 计划项目
Web.Differences.LOB.WC.AircraftSeat = 飞机座椅
Web.Differences.LOB.WC.AnniversaryDate = 周年日期
Web.Differences.LOB.WC.Basis = 基本金额
Web.Differences.LOB.WC.BooleanModifier = 布尔值修饰符
Web.Differences.LOB.WC.BooleanModifierValue = {0} ({1} - {2})
Web.Differences.LOB.WC.Clauses = 承保范围、免责项、条款
Web.Differences.LOB.WC.CoveredEmpValue = {0} ({1} - {2})
Web.Differences.LOB.WC.CoveredEmployee = {0} ({1} - {2})
Web.Differences.LOB.WC.CoveredEmployees = 承保雇员
Web.Differences.LOB.WC.DateModifier = 日期调整系数
Web.Differences.LOB.WC.DateModifierValue = {0} ({1} - {2})
Web.Differences.LOB.WC.Deductible = 免赔额
Web.Differences.LOB.WC.DeductibleValue = {0} ({1} - {2})
Web.Differences.LOB.WC.EmployeeLeasing = 雇员租赁
Web.Differences.LOB.WC.ExcludedWorkplace = 排除的工作场所
Web.Differences.LOB.WC.FederalLiability = 联邦责任险
Web.Differences.LOB.WC.GovLaw = 适用法律
Web.Differences.LOB.WC.IfAny = 如有
Web.Differences.LOB.WC.InclusionPerson = 包括人员：{0}
Web.Differences.LOB.WC.Jurisdictions = 管辖权
Web.Differences.LOB.WC.LaborClient = 劳工委托人：{0}
Web.Differences.LOB.WC.LaborContractor = 劳工承包商：{0}
Web.Differences.LOB.WC.LocationNamedInsured = 地点列名被保险人： {0}
Web.Differences.LOB.WC.ModifierError = 无法获取修饰符属性名称，因为找不到匹配的修饰符数据类型
Web.Differences.LOB.WC.NumEmployees = 雇员数量
Web.Differences.LOB.WC.OwnerOfficer = 所有者/雇员： {0}
Web.Differences.LOB.WC.ParticipatingPlan = 参与计划： {0}
Web.Differences.LOB.WC.RateModifier = 费率调整系数
Web.Differences.LOB.WC.RateModifierValue = {0} ({1} - {2})
Web.Differences.LOB.WC.RetrospectiveRating = 回顾保费计算：{0}
Web.Differences.LOB.WC.TypeKeyModifier = 类型键值修饰符
Web.Differences.LOB.WC.TypeKeyModifierValue = {0} ({1} - {2})
Web.Differences.LOB.WC.ValueFinal = 最终值
Web.Differences.LOB.WC.ValueFinalValue = {0} ({1} - {2})
Web.Differences.LOB.WC.WCModifier = {0} ({1} - {2})
Web.Differences.LOB.WC.WCOptions = 雇主责任险选项
Web.Differences.LOB.WC.WCStateCov = {0} ({1} - {2})
Web.Differences.LOB.WC.WaiverSubro = 放弃代位追偿
Web.DifferencesPanelSet.CannotCalculate = 无法确定差异。“依据”期间（{0}至{1}有效）已存档
Web.DifferencesPanelSet.GoToRestoreOptions = 转到检索选项
Web.DifferencesPanelSet.NoDifference = 版本之间无差异
Web.DisplayBean.Title = 显示Bean “{0}”
Web.DividePolicy.LandingPage.Message.Spin = 您的保单（#{0}）已拆分。
Web.DividePolicy.LandingPage.Message.Split = 您的保单（#{0}）已拆分。
Web.DividePolicy.LandingPage.Title.Spin = 分拆保单完成
Web.DividePolicy.LandingPage.Title.Split = 拆分保单完成
Web.DividePolicy.LandingPage.ViewSubmission = 在账户(#{1})上查看您的投保单(#{0})
Web.Document.FileValue.Browse = 浏览...
Web.Document.Integration.ActivityDetail.Button.CreateDocumentFromTemplate = 通过模板创建单证
Web.Document.Integration.CreateDocument.Button.Cancel = 取消
Web.Document.Integration.CreateDocument.Button.CreateDocument = 创建单证
Web.Document.Integration.CreateDocument.Message.Confirm = 如果继续，所有的更改都将丢失。
Web.Document.Integration.CreateDocument.Message.Warning = 一些单证无法进行编辑。
Web.Document.Integration.CreateDraft.Button.CreateDraft = 创建草案
Web.Document.Integration.CreateDraft.DocumentName = 单证名称
Web.Document.Integration.DocumentCreation = 单证创建
Web.Document.Integration.DocumentCreation.Title.Account = 账户：{0}
Web.Document.Integration.DocumentCreation.Title.Contingency = 事故：{0}
Web.Document.Integration.DocumentCreation.Title.Policy = 保单：{0}
Web.Document.Integration.DocumentCreation.Title.Template = 模板：{0}| {1}
Web.DocumentCreation.DocumentContents.Header = 单证内容
Web.DocumentCreation.Title = 上传单证
Web.DocumentDetail.ListLabel = 编辑将应用于以下所有选定文件：
Web.DocumentDetail.Name = 全名
Web.DocumentDetails.ContentActionsDisabled = 此单证内容未存储在单证服务器上，因此与该内容相关的操作不可用。
Web.DocumentDetails.DateCreated = 创建日期
Web.DocumentDetails.DocumentContents.AddFiles = 添加文件
Web.DocumentDetails.DocumentContents.Attachment = 附件
Web.DocumentDetails.DocumentContents.DropzoneAlert = 将其它文件放置在该工作表上的任意位置
Web.DocumentDetails.DocumentContents.DropzoneLabel = 拖放文件进行上传
Web.DocumentDetails.DocumentContents.EditDetails = 编辑详细信息
Web.DocumentDetails.DocumentInfo = 单证信息
Web.DocumentDetails.DocumentMetadata.Author = 作者
Web.DocumentDetails.DocumentMetadata.Description = 说明
Web.DocumentDetails.DocumentMetadata.DocumentName = 名称
Web.DocumentDetails.DocumentMetadata.Edit = 编辑
Web.DocumentDetails.DocumentMetadata.MimeType = 文件类型
Web.DocumentDetails.DocumentMetadata.Obsolete = 隐藏
Web.DocumentDetails.DocumentMetadata.Recipient = 收件人
Web.DocumentDetails.DocumentMetadata.Section = 单证分类
Web.DocumentDetails.DocumentMetadata.SecurityType = 安全类型
Web.DocumentDetails.DocumentMetadata.Status = 状态
Web.DocumentDetails.DocumentMetadata.Type = 单证类型
Web.DocumentDetails.EmailSent = 发出的电子邮件
Web.DocumentDetails.From = 自
Web.DocumentDetails.Language = 语言
Web.DocumentDetails.Subject = 主题
Web.DocumentDetails.Title = 单证属性
Web.DocumentDetails.To = 至
Web.DocumentSearch.Author = 作者
Web.DocumentSearch.DateFrom = 日期范围 - 自
Web.DocumentSearch.DateTo = 日期范围 - 至
Web.DocumentSearch.Documents = 单证
Web.DocumentSearch.DocumentsLV.Author = 作者
Web.DocumentSearch.DocumentsLV.Name = 名称
Web.DocumentSearch.DocumentsLV.Status = 状态
Web.DocumentSearch.DocumentsLV.Type = 类型
Web.DocumentSearch.IncludeObsoletes = 包括隐藏单证
Web.DocumentSearch.Language = 语言
Web.DocumentSearch.Name = 单证名称
Web.DocumentSearch.RelatedTo = 相关项
Web.DocumentSearch.Status = 状态
Web.DocumentSearch.Title = 搜索单证
Web.DocumentTemplateSearch.DateModified = 修改日期
Web.DocumentTemplateSearch.DocumentType = 单证类型
Web.DocumentTemplateSearch.EffectiveDate = 生效日期
Web.DocumentTemplateSearch.ExpirationDate = 到期日期
Web.DocumentTemplateSearch.Keywords = 关键字
Web.DocumentTemplateSearch.Language = 语言
Web.DocumentTemplateSearch.Name = 名称
Web.DocumentTemplateSearch.TemplateID = 模板ID
Web.DocumentsLV.Actions = 操作
Web.DocumentsLV.Author = 作者
Web.DocumentsLV.Button.Asynchronous.DocumentStoreDisabled = 新单证内容正在等待上传，因为单证服务器当前已禁用。请联系您的管理员。
Web.DocumentsLV.Button.AsynchronousRefresh = 刷新
Web.DocumentsLV.Button.AsynchronousRefresh.Tooltip = 刷新关联的单证列表
Web.DocumentsLV.Button.Delete.Confirm = 这将从PolicyCenter中永久删除单证。是否确定？
Web.DocumentsLV.Button.DeleteSelected = 删除所选内容
Web.DocumentsLV.Button.DeleteSelected.Tooltip = 删除所选单证
Web.DocumentsLV.Button.DownloadNotAllowed.Tooltip = 无法下载单证内容，因为没有配置此文件类型。请联系您的管理员，为该类型的单证配置MIME类型。
Web.DocumentsLV.Button.HideHidden = 隐藏已经隐藏的内容
Web.DocumentsLV.Button.NewDocument = 新建单证
Web.DocumentsLV.Button.Remove = 移除
Web.DocumentsLV.Button.ShowHidden = 显示已隐藏的内容
Web.DocumentsLV.Button.Update = 上传
Web.DocumentsLV.Date = 已上传
Web.DocumentsLV.Name = 名称
Web.DocumentsLV.Status = 状态
Web.DocumentsLV.Type = 类型
Web.DuplicateContactsPopup.DateOfBirth = 出生日期
Web.DuplicateContactsPopup.FirstAndLastName = {0} {1}
Web.DuplicateContactsPopup.Instructions = 该联系人可能与以下联系人匹配。请选择一个匹配项（如有）。
Web.DuplicateContactsPopup.MatchType.Exact = 精确
Web.DuplicateContactsPopup.MatchType.Potential = 可能
Web.DuplicateContactsPopup.MatchType.Title = 匹配类型
Web.DuplicateContactsPopup.Name = 姓名
Web.DuplicateContactsPopup.PrimaryAddress = 主要地址
Web.DuplicateContactsPopup.PrimaryPhoneNumber = 主要电话
Web.DuplicateContactsPopup.SearchCriteria = 搜索条件
Web.DuplicateContactsPopup.Select = 选择
Web.DuplicateContactsPopup.TaxID = 税号
Web.DuplicateContactsPopup.Title = 匹配联系人
Web.DuplicateContactsPopup.Warning.ExactNotSelected = 精确匹配可用时，您选择了潜在匹配。要继续，请重新选择。
Web.DuplicateContactsPopup.Warning.NoSelection = 您没有选择有效的精确匹配。单击“更新”继续，或单击“检查重复项”选择精确匹配。
Web.DuplicateContactsPopup.Warning.Overwrite = 请注意，已输入的任何联系人将被检索到的联系人的信息覆盖。
Web.EditAccount = 编辑账户
Web.EditAccount.DescriptionOfBusiness = 业务说明
Web.EditAccount.IndustryCode = 行业代码
Web.EditAccount.Nickname = 账户昵称
Web.EditAccount.OrgType = 机构类型
Web.EditAccount.PrimaryLanguage = 首选语言
Web.EditAccount.ServiceTier = 服务层级
Web.EditPolicyContactRolePopup.Title = {0} {1}
Web.EditableABAddresses.AddressLine1 = 地址
Web.EditableABAddresses.AddressLine2 = 行 2
Web.EditableABAddresses.City = 市
Web.EditableABAddresses.Country = 国家/地区
Web.EditableABAddresses.County = 区/县
Web.EditableABAddresses.Description = 说明
Web.EditableABAddresses.IsPrimary = 设为首要项
Web.EditableABAddresses.PostalCode = 邮政编码
Web.EditableABAddresses.State = 省/直辖市
Web.EditableABAddresses.Type = 类型
Web.EditableABAddresses.ValidUntil = 有效期截止日期
Web.ElapsedTimeFormatUtil.TimeSince.LastMonth = 上个月
Web.ElapsedTimeFormatUtil.TimeSince.MonthPlural = {0}个月
Web.ElapsedTimeFormatUtil.TimeSince.MonthSingle = {0}个月
Web.ElapsedTimeFormatUtil.TimeSince.ThisMonth = 本月
Web.ElapsedTimeFormatUtil.TimeSince.YearPlural = {0}年
Web.ElapsedTimeFormatUtil.TimeSince.YearSingle = {0}年
Web.Email.AddBCCRecipients = 添加密送收件人
Web.Email.AddCCRecipients = 添加抄送收件人
Web.Email.AddDocument = 添加单证
Web.Email.AttachedDocuments = 附加单证
Web.Email.BCCRecipients = 密送收件人
Web.Email.Body = 正文
Web.Email.CCRecipients = 抄送收件人
Web.Email.Cancel = 取消
Web.Email.DocumentName = 单证名称
Web.Email.EmailAddress = 电子邮件地址
Web.Email.Error.AddressForRecipientRequried = 需要地址
Web.Email.Error.BodyRequired = 所需正文
Web.Email.Error.SubjectRequired = 需要主题
Web.Email.Name = 名称
Web.Email.SaveAsDocument = 保存为文档
Web.Email.Search = 搜索通讯簿
Web.Email.SendEmail = 发送
Web.Email.SendEmail.Unavailable = “发送”不可用，因为单证生成已禁用或者不可用。请联系您的管理员。
Web.Email.SenderEmail = 发件人电子邮件
Web.Email.SenderName = 发件人姓名
Web.Email.Subject = 主题
Web.Email.Template.NotFound = 无法在当前区域设置中找到{0}。
Web.Email.ToRecipients = 收件人
Web.Email.UseTemplate = 使用模板
Web.EmailTemplateSearch.Keywords = 关键字
Web.EmailTemplateSearch.Language = 语言
Web.EmailTemplateSearch.Template = 模板
Web.EmailTemplateSearch.Title = 电子邮件模板
Web.EmailTemplateSearch.Topic = 题目
Web.Error = 错误
Web.Error.CannotChangeSelectedRow = 正在编辑当前选定行，无法更改行选择。
Web.Error.Typed = 错误： {0}
Web.Errors.BillingSystem.AgencyPlans = 无法联系代理缴费计划的缴费服务。请稍后重试。
Web.Errors.BillingSystem.CommissionPlans = 无法联系佣金计划的缴费服务。请稍后重试。
Web.Errors.BillingSystem.OrganizationSyncFailed = 无法将机构与缴费服务同步。请稍后重试。
Web.Errors.ContactMissingFromSystem = 找不到联系人。它可能已从系统中清除。
Web.Errors.InvalidUrlParameter = 无效的{0} URL形式参数： {1}。
Web.Errors.MissingFromSystem = 找不到{0}{1}。它可能已从系统中清除。
Web.Errors.MissingUrlParameter = 缺少URL形式参数： {0}。
Web.Errors.NoPolicyFound = 未找到保单号为{0}的保单
Web.Errors.NoPolicyInForce = {0}无生效保单
Web.ExcelExport.AllFormat = 全部可用
Web.ExcelExport.DownloadExcelFile = 下载电子表格
Web.ExcelExport.DownloadHelpText = 如果已更改该页面上的值，请在下载前单击“导出到电子表格”。
Web.ExcelExport.Export = 导出到电子表格
Web.ExcelExport.ExportMenu = 导出...
Web.ExcelExport.FileName.Policy = 保单
Web.ExcelExport.FileName.Template = 模板
Web.ExcelExport.ImportMenu = 导入...
Web.ExcelExport.InProgressMessage = 正在导出行：
Web.ExcelExport.MaskSelection.All = 全部来自此版本
Web.ExcelExport.MaskSelection.Export = 导出
Web.ExcelExport.MaskSelection.Format = 格式
Web.ExcelExport.MaskSelection.Language = 语言
Web.ExcelExport.MaskSelection.Locale = 区域设置
Web.ExcelExport.MaskSelection.Template = 任意保单交易的模版
Web.ExcelExport.Title = 导出到电子表格
Web.ExcelImport.ConfirmImportOverwrite = 导入该电子表格可能覆盖之前来自其它保单交易的更改。是否要继续？
Web.ExcelImport.DifferentSourceImportWarning = 已导入的数据并非从该保单更改中导出。
Web.ExcelImport.Import = 导入
Web.ExcelImport.Imported = 已导入
Web.ExcelImport.InProgressMessage = 正在导入行：
Web.ExcelImport.Log.AcceptChanges = 接受更改
Web.ExcelImport.Log.SaveLog = 保存日志
Web.ExcelImport.Log.SummaryLog.ErrorRowCountLabel = 出错行数：
Web.ExcelImport.Log.SummaryLog.Label = 导入摘要：
Web.ExcelImport.Log.SummaryLog.ReportBeanAction = {1}实体数量{0}：
Web.ExcelImport.Log.Validation.Errors = 错误：
Web.ExcelImport.Log.Validation.FatalErrors = 严重错误：
Web.ExcelImport.Log.Validation.Warnings = 警告：
Web.ExcelImport.NoDifferencesFound = 未找到差异
Web.ExcelImport.Previous = 上一步
Web.ExcelImport.ShowChanges = 显示更改
Web.ExcelImport.Title = 从电子表格导入
Web.ExcelImport.ValidationErrors = 校验错误
Web.Filter.All = 所有
Web.Financials.BOP.AdditionalInsuredFlatCharge = 附加被保险人费用：{0}
Web.Financials.BOP.BOPMoneySecCovCost.OffPremises = {1}的经营场所之外的{0}承保范围
Web.Financials.BOP.BOPMoneySecCovCost.OnPremises = {1}处经营场所的{0}承保范围
Web.Financials.CP.CPBuildingCovBroadCost = {0}宽泛
Web.Financials.CP.CPBuildingCovGrp1Cost = {0}基本组I
Web.Financials.CP.CPBuildingCovGrp2Cost = {0}基本组II
Web.Financials.CP.CPBuildingCovSpecCost = {0}特殊
Web.Financials.CostDisplayName.CoverageFor = {1}的{0}承保范围
Web.Financials.CostDisplayName.CoverageOn = {1}的{0}承保范围
Web.Financials.CostDisplayName.GLAddlInsuredCost = 附加被保险人的保费
Web.Financials.MinimumPremiumAdjustment = 最低保费调整
Web.Financials.PA.MultiPolicyDiscount = 多保单折扣
Web.Financials.PremiumSubtotal = 保费小计
Web.Financials.ShortRatePenalty = 短期费率罚款
Web.Financials.StateTax = {0}税
Web.Financials.Subtotal = 小计
Web.FormPatternSearch.AtLeastThreeCharactersFormName = 请至少指定表格名称的前三个字符。
Web.FormPatternSearch.AtLeastThreeCharactersFormNumber = 请至少指定表格编号的前三个字符。
Web.FormPatternSearch.AtLeastThreeCharactersGroupCode = 请至少指定组代码的前三个字符。
Web.FormPatternSearch.FormName = 表格名称
Web.FormPatternSearch.FormNumber = 表格编号
Web.FormPatternSearch.GroupCode = 组代码
Web.FormPatternSearch.MinimumSearchCriteriaRequirement = 请指定表格编号、表格名称、保险产品或组代码。
Web.FormPatternSearch.Product = 保险产品
Web.FormPatternSearch.ProductName = {0} [{1}]
Web.FreeTextPolicySearch.Source = 来源
Web.FreeTextPolicySearch.Title = 使用SOLR搜索保单
Web.Generic.Add = 添加
Web.Generic.Remove = 移除
Web.GoogleSearch.Guidewire = Guidewire
Web.GroupSearch.AdditionalRestrictions = 更多限制
Web.GroupSearch.Any = 任意
Web.GroupSearch.GroupName = 组名称
Web.GroupSearch.GroupNamePhonetic = 组名称（拼音）
Web.GroupSearch.GroupType = 组类型
Web.GroupSearch.NotEnoughInfo = 请输入组名称或特定组类型。
Web.GroupSearch.Organization = 机构
Web.GroupSearch.ProducerCode = 可用的经理人代码
Web.GroupSearch.Title = 搜索组
Web.GroupSearchResults.Name = 名称
Web.GroupSearchResults.Organization = 机构
Web.GroupSearchResults.ParentGroup = 上级组
Web.GroupSearchResults.Relationship = 关系
Web.GroupSearchResults.Relationship.ChildOfCurrent = 下级组
Web.GroupSearchResults.Relationship.Current = 当前组
Web.GroupSearchResults.Type = 类型
Web.GroupUserPicker.Title = 用户搜索
Web.HVQAccountSearch.Title = 投保单账户
Web.HVQSearch.CompanyName = 公司名称
Web.HVQSearch.EmailAddress = 电子邮件地址
Web.HVQSearch.FirstName = 名字
Web.HVQSearch.HVQFilter = 仅搜索报价存储
Web.HVQSearch.LastName = 姓氏
Web.HVQSearch.Phone = 办公电话
Web.HVQSearch.QuoteIdentifier = 报价ID
Web.HVQSearch.Results.ConvertToSubmission = 转换为投保单
Web.HVQSearch.Results.CreateNewAccount = 新建账户
Web.HVQSearch.Results.CreateNewAccount.Tooltip = 如果无匹配结果，则创建新账户
Web.HVQSearch.Results.EmailAddress = 电子邮件地址
Web.HVQSearch.Results.GoToQuote = 导航到记录系统上的报价
Web.HVQSearch.Results.Origin.QuoteOrigin = 报价来源
Web.HVQSearch.Results.Origin.QuoteStore = 报价存储
Web.HVQSearch.Results.Phone = 办公电话
Web.HVQSearch.Results.PrimaryNamedInsured = 主要列名被保险人
Web.HVQSearch.Results.QuoteId = 报价ID
Web.HVQSearch.Results.SelectAccount = 选择
Web.HVQSearch.Results.SubmissionNumber = 投保单编号
Web.HVQSearch.Title = 搜索报价
Web.HandlePreemption.ApplyChanges = 应用所有更改
Web.HandlePreemption.DecideLater = 以后决定
Web.HandlePreemption.Message = 您的{0}已被{1}占先。请在下面查看比您的交易占先的更改。您可以应用所有占先更改或选择撤消。
Web.HandlePreemption.MessageNoWithdraw = 您的{0}已由下列交易占先。
Web.HandlePreemption.Title = 处理优先权
Web.HandlePreemption.Withdraw = 撤消
Web.Header.AppName = {Global.AppName}
Web.HeatMap.BrowserDoesntSupportIframes = BrowserDoesntSupportIframes
Web.HeatMap.CantLoadBingMaps = CantLoadBingMaps
Web.HeatMap.LoadingBingMaps = LoadingBingMaps
Web.History.AccountLevelNote = 账户： {0}
Web.History.Description = 说明
Web.History.EventTimeStamp = 事件时间戳
Web.History.FromDate = 开始日期
Web.History.FromDateNotBeforeUntilDate = 开始日期必须早于结束日期。
Web.History.Job = 保单交易
Web.History.JobLevel = ---- {0} \: {1} ({2})
Web.History.NewValue = 新值
Web.History.OriginalValue = 原始值
Web.History.Policy = 保单
Web.History.PolicyLevel = -- 保单： {0} {1}
Web.History.PreRenewal.AssignmentUser = 保单已分配到{0}。
Web.History.PreRenewal.NonRenewAddExplanation = 非续保附加解释已更改。
Web.History.PreRenewal.NonRenewReason = 非续保原因已从{0}改为{1}。
Web.History.PreRenewal.NonRenewReasonSet = 非续保原因已设置为{0}。
Web.History.PreRenewal.NonRenewalExplanations.Add = 非续保解释已添加。
Web.History.PreRenewal.NonRenewalExplanations.Remove = 非续保解释已移除。
Web.History.PreRenewal.PreRenewalDirection = 续保前说明已从{0}改为{1}。
Web.History.PreRenewal.PreRenewalDirectionSet = 续保前说明已设置为{0}。
Web.History.Product = 保险产品
Web.History.RelatedTo = 相关项
Web.History.RelatedToIsNull = 未设置“关联到”。
Web.History.RelatedToTypeNotSupported = 不支持与字段相关的类型。
Web.History.TimestampLabel = 时间戳
Web.History.ToDate = 截止日期
Web.History.Type = 类型
Web.History.UnknownLevel = 未知的历史记录类型
Web.History.User = 用户
Web.IndustryCodeSearch = 行业代码搜索
Web.IndustryCodeSearch.Classification = 分类
Web.IndustryCodeSearch.Code = 代码
Web.InfoPages = Guidewire信息页面
Web.InfoPages.ConsistencyChecks = 一致性检查
Web.InfoPages.ConsistencyChecks.DownloadText = 下载所有一致性检查
Web.InfoPages.ConsistencyChecks.HeaderText = 此页面用于提交和查看数据库一致性检查。
Web.InfoPages.ConsistencyChecks.Run = 运行一致性检查
Web.InfoPages.ConsistencyChecks.RunText = 可在此处提交和下载数据库一致性检查批处理作业的运行结果。使用“查看一致性检查定义”了解将要运行的检查。
Web.InfoPages.ConsistencyChecks.Title = 一致性检查
Web.InfoPages.ConsistencyChecks.UseRunText = 使用“运行一致性检查”来提交批处理作业，以运行这些检查
Web.InfoPages.ConsistencyChecks.View = 查看一致性检查定义
Web.InfoPages.ConsistencyChecks.ViewText = 查看选定数据库一致性检查的详细信息
Web.InfoPagesTabBar.DB = 数据库统计
Web.InfoPagesTabBar.Load = 加载错误
Web.InternalTools = Guidewire服务器工具
Web.InternalTools.AdditionalSampleData = 其它示例数据
Web.InternalTools.BatchProcessInfo.ActiveStatus = 状态
Web.InternalTools.BatchProcessInfo.BatchProcess = 批处理
Web.InternalTools.BatchProcessInfo.Button.ToSafe = 安全模式
Web.InternalTools.BatchProcessInfo.Button.ToUnSafe = 尝试通信
Web.InternalTools.BatchProcessInfo.Change.Button = 更改
Web.InternalTools.BatchProcessInfo.Change.CronString = Cron字符串
Web.InternalTools.BatchProcessInfo.Change.DayOfMonth = 日1-31 (,/*?L)
Web.InternalTools.BatchProcessInfo.Change.DayOfWeek = 星期 1-7 (,/*?L)
Web.InternalTools.BatchProcessInfo.Change.Hour = 小时0-23 (,/*)
Web.InternalTools.BatchProcessInfo.Change.Minute = 分钟 0-59 (,/*)
Web.InternalTools.BatchProcessInfo.Change.Month = 月份1-12 (,/*)
Web.InternalTools.BatchProcessInfo.Change.Process = 此项的更改：
Web.InternalTools.BatchProcessInfo.Change.Second = 秒0-59 (,/*)
Web.InternalTools.BatchProcessInfo.Change.Title = 更改计划
Web.InternalTools.BatchProcessInfo.ChangedScheduleTemplate = {0}，scheduler-config.xml：{1}
Web.InternalTools.BatchProcessInfo.Chart.ExecutionTime = 执行时间（秒）
Web.InternalTools.BatchProcessInfo.Chart.OpsPerformed = 所执行的操作
Web.InternalTools.BatchProcessInfo.Chart.Time = 时间
Web.InternalTools.BatchProcessInfo.ChartTab.AxisLabel = 所执行的操作
Web.InternalTools.BatchProcessInfo.ChartTab.Title = 图表
Web.InternalTools.BatchProcessInfo.Description = 说明
Web.InternalTools.BatchProcessInfo.Download.Completed = 已完成
Web.InternalTools.BatchProcessInfo.Download.Configure = 配置下载
Web.InternalTools.BatchProcessInfo.Download.Description = 说明
Web.InternalTools.BatchProcessInfo.Download.End.Date = 结束日期
Web.InternalTools.BatchProcessInfo.Download.Failed = 失败
Web.InternalTools.BatchProcessInfo.Download.History = 下载历史记录
Web.InternalTools.BatchProcessInfo.Download.History.BatchProcessInfo = 批处理流程的历史记录：
Web.InternalTools.BatchProcessInfo.Download.InternalFailure = 内部故障
Web.InternalTools.BatchProcessInfo.Download.Ops = 操作
Web.InternalTools.BatchProcessInfo.Download.Reason = 失败原因
Web.InternalTools.BatchProcessInfo.Download.Return.BatchProcessInfo = 返回到批处理流程信息
Web.InternalTools.BatchProcessInfo.Download.Select.Date = 选择下载记录的日期范围
Web.InternalTools.BatchProcessInfo.Download.Server = 服务器
Web.InternalTools.BatchProcessInfo.Download.Start.Date = 开始日期
Web.InternalTools.BatchProcessInfo.Download.StartRequested = 已请求开始
Web.InternalTools.BatchProcessInfo.Download.Started = 已启动
Web.InternalTools.BatchProcessInfo.Filter.All = 所有
Web.InternalTools.BatchProcessInfo.Filter.Failed = 失败
Web.InternalTools.BatchProcessInfo.HistoryTab.Title = 历史记录
Web.InternalTools.BatchProcessInfo.LastRun = 上次运行
Web.InternalTools.BatchProcessInfo.LastRunStatus.Executing = 在{0}执行
Web.InternalTools.BatchProcessInfo.LastRunStatus.Na = 无效
Web.InternalTools.BatchProcessInfo.LastRunStatus.NotOk = 失败/中断
Web.InternalTools.BatchProcessInfo.LastRunStatus.Ok = 已完成
Web.InternalTools.BatchProcessInfo.LastRunStatus.Starting = 正在启动
Web.InternalTools.BatchProcessInfo.LastRunStatus.Unknown = 未知
Web.InternalTools.BatchProcessInfo.Message.AlreadyRunningError = 批处理流程已经在运行
Web.InternalTools.BatchProcessInfo.Message.Failed = 批处理流程{0}已启动并完成，但包含失败项
Web.InternalTools.BatchProcessInfo.Message.Finished = 批处理流程{0}已启动并已完成
Web.InternalTools.BatchProcessInfo.Message.StartAttempted = 已请求启动批处理流程{0}。
Web.InternalTools.BatchProcessInfo.Message.Started = 批处理流程{0}已启动但 5 秒钟内未完成。流程仍在运行。请稍后再检查状态。
Web.InternalTools.BatchProcessInfo.NextScheduledRun = 下次计划运行
Web.InternalTools.BatchProcessInfo.PrevStatus = 上次运行状态
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.CompleteDate = 已完成
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.Description = 说明
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.FailedOps = 失败
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.FailedReason = 失败原因
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.OpsPerformed = 操作
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.RanToCompletion = 成功
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.Scheduled = 已计划
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.Server = 服务器
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.StartDate = 已启动
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.StartRequested = 已请求开始
Web.InternalTools.BatchProcessInfo.ProcessHistoryLV.Title = 流程历史记录
Web.InternalTools.BatchProcessInfo.Processes = 流程
Web.InternalTools.BatchProcessInfo.RequestTermination = 请求终止
Web.InternalTools.BatchProcessInfo.ResumeScheduler = 恢复计划程序
Web.InternalTools.BatchProcessInfo.Run = 操作
Web.InternalTools.BatchProcessInfo.RunWriterOnly = 运行
Web.InternalTools.BatchProcessInfo.Schedule = Cron - S M H DOM M DOW
Web.InternalTools.BatchProcessInfo.ScheduleAction = 计划
Web.InternalTools.BatchProcessInfo.Start = 开始
Web.InternalTools.BatchProcessInfo.Status.Inactive = 不活动
Web.InternalTools.BatchProcessInfo.Status.Running = 正在运行
Web.InternalTools.BatchProcessInfo.Stop = 停止
Web.InternalTools.BatchProcessInfo.SuspendScheduler = 暂停计划程序
Web.InternalTools.BatchProcessInfo.SyncSchedule = 同步
Web.InternalTools.BatchProcessInfo.SyncSchedule.Tooltip = 将计划与scheduler-config.xml同步
Web.InternalTools.BatchProcessInfo.Terminate = 停止
Web.InternalTools.BatchProcessInfo.Title = 批处理流程信息
Web.InternalTools.BatchProcessInfo.UsageFilter.All = 任意
Web.InternalTools.BatchProcessInfo.UsageFilter.Default = 默认
Web.InternalTools.BatchProcessInfo.UsageFilter.Runable = 可运行
Web.InternalTools.BatchProcessInfo.UsageFilter.Schedulable = 可计划
Web.InternalTools.ClusterComponentHistoryPopup.Title = {0}历史记录
Web.InternalTools.ClusterComponents.FilterByComponent = 按组件过滤
Web.InternalTools.ClusterComponents.FilterByComponent.WithHidden = 按组件过滤（{0}个已隐藏）
Web.InternalTools.ClusterComponents.LV.Actions = 操作
Web.InternalTools.ClusterComponents.LV.Actions.CompleteFailedFailover = 完成故障转移
Web.InternalTools.ClusterComponents.LV.Actions.CompleteFailedFailover.Confirm = 是否确定要完成故障转移？
Web.InternalTools.ClusterComponents.LV.Actions.CompleteFailedFailover.Done = 故障转移已完成。您可以打开故障转移历史记录进行查看。
Web.InternalTools.ClusterComponents.LV.LeaseExpiration = 租约到期
Web.InternalTools.ClusterComponents.LV.Name = 全名
Web.InternalTools.ClusterComponents.LV.Owner = 所有者
Web.InternalTools.ClusterComponents.LV.RetryFailover = 重试故障转移
Web.InternalTools.ClusterComponents.LV.StartRequested = 已请求开始
Web.InternalTools.ClusterComponents.LV.Started = 已启动
Web.InternalTools.ClusterComponents.LV.State = 省/直辖市
Web.InternalTools.ClusterComponents.LV.Stopped = 已停用
Web.InternalTools.ClusterComponents.LV.TerminateRequested = 已请求终止
Web.InternalTools.ClusterComponents.LV.TransferRequested = 已请求转移
Web.InternalTools.ClusterComponents.LV.TransferTarget = 转移目标
Web.InternalTools.ClusterComponents.LV.Type = 类型
Web.InternalTools.ClusterComponents.State.Assigned = 已分配
Web.InternalTools.ClusterComponents.State.Completed = 已完成
Web.InternalTools.ClusterComponents.State.Ended = 结束
Web.InternalTools.ClusterComponents.State.Failed = 失败
Web.InternalTools.ClusterComponents.State.FailedFailoverCompleted = 失败的故障转移已完成
Web.InternalTools.ClusterComponents.State.FailoverInProgress = 故障转移正在进行中
Web.InternalTools.ClusterComponents.State.FailoverPostponed = 故障转移已推迟
Web.InternalTools.ClusterComponents.State.LeaseExpired = 租约已到期
Web.InternalTools.ClusterComponents.State.RequiresManualIntervention = 需要手动干预
Web.InternalTools.ClusterComponents.State.RestartPostponed = 重新启动已推迟
Web.InternalTools.ClusterComponents.State.Stopped = 已停用
Web.InternalTools.ClusterComponents.State.TerminatedByAutomaticFailover = 因自动故障转移而终止
Web.InternalTools.ClusterComponents.State.TerminatedByManualFailover = 因手动故障转移而终止
Web.InternalTools.ClusterComponents.State.TerminatedByServerRestart = 因服务器重新启动而终止
Web.InternalTools.ClusterComponents.State.Transferred = 已转移
Web.InternalTools.ClusterComponents.State.Unassigned = 未分配
Web.InternalTools.ClusterComponents.StateFilter.AllActive = 所有活动项
Web.InternalTools.ClusterComponents.StateFilter.AllActive.CurrentFailovers = └─ 当前故障转移
Web.InternalTools.ClusterComponents.StateFilter.AllHistory = 所有历史记录
Web.InternalTools.ClusterComponents.StateFilter.AllHistory.Failed = └─ 失败
Web.InternalTools.ClusterComponents.Title = 组件
Web.InternalTools.ClusterComponents.Type.BatchProcess = 批处理
Web.InternalTools.ClusterComponents.Type.MessageDestination = 消息目标
Web.InternalTools.ClusterComponents.Type.MessagePreprocessor = 消息请求处理器
Web.InternalTools.ClusterComponents.Type.StartablePlugin = 可启动服务
Web.InternalTools.ClusterComponents.Type.System = 系统
Web.InternalTools.ClusterComponents.Type.WorkQueue = 工作队列
Web.InternalTools.ClusterComponents.Types = 类型
Web.InternalTools.ClusterComponentsDownloadConfigurePopup.MaxDaysInHistory = 历史记录的最大天数
Web.InternalTools.ClusterComponentsDownloadConfigurePopup.Title = 为报告指定记录限额
Web.InternalTools.ClusterComponentsFilterByComponentPopup.Apply = 应用
Web.InternalTools.ClusterComponentsFilterByComponentPopup.Clear = 清除
Web.InternalTools.ClusterComponentsFilterByComponentPopup.Name = 全名
Web.InternalTools.ClusterComponentsFilterByComponentPopup.SelectAll = 全部选择
Web.InternalTools.ClusterComponentsFilterByComponentPopup.Title = 选择组件
Web.InternalTools.ClusterComponentsFilterByComponentPopup.Type = 类型
Web.InternalTools.ClusterMemberUserSessionsPopup.LV.DisplayName = 全名
Web.InternalTools.ClusterMemberUserSessionsPopup.LV.InactiveFor = 处于不活动状态的时间
Web.InternalTools.ClusterMemberUserSessionsPopup.LV.LastActivity = 上次活动
Web.InternalTools.ClusterMemberUserSessionsPopup.LV.Sessions = 会话
Web.InternalTools.ClusterMemberUserSessionsPopup.LV.Username = 用户名
Web.InternalTools.ClusterMemberUserSessionsPopup.MarkAsInactive = 标记为非活动
Web.InternalTools.ClusterMemberUserSessionsPopup.MarkAsInactive.Confirm = 是否确定要将选定的用户会话标记为不活动？此操作无法撤消。
Web.InternalTools.ClusterMemberUserSessionsPopup.Title = {0}的用户会话
Web.InternalTools.ClusterMembers = 群集成员
Web.InternalTools.ClusterMembers.AppServerInstance = 此应用服务器实例
Web.InternalTools.ClusterMembers.ClusterAddress = 群集地址
Web.InternalTools.ClusterMembers.ClusterException = 与{0}服务器通信时遇到问题。请检查日志了解详细信息。
Web.InternalTools.ClusterMembers.Components = 组件
Web.InternalTools.ClusterMembers.Disabled = 已禁用群集
Web.InternalTools.ClusterMembers.Enabled = 已启用群集
Web.InternalTools.ClusterMembers.History = 历史记录
Web.InternalTools.ClusterMembers.Host = 主机
Web.InternalTools.ClusterMembers.LocalAddress = 本地地址
Web.InternalTools.ClusterMembers.Members = 群集成员（应用服务器实例）
Web.InternalTools.ClusterMembers.MembersLV.Actions = 操作
Web.InternalTools.ClusterMembers.MembersLV.CancelPlannedShutdown = 取消计划的关闭
Web.InternalTools.ClusterMembers.MembersLV.CancelPlannedShutdown.Confirmation = 是否确定要取消计划的{0}关闭？
Web.InternalTools.ClusterMembers.MembersLV.ConnectonStarted = 已启动连接
Web.InternalTools.ClusterMembers.MembersLV.Coordinator = 协调器
Web.InternalTools.ClusterMembers.MembersLV.Env = 环境
Web.InternalTools.ClusterMembers.MembersLV.Host = 主机
Web.InternalTools.ClusterMembers.MembersLV.LastClusterJoined = 上次加入的群集
Web.InternalTools.ClusterMembers.MembersLV.LastRunLevel = 上次运行级别
Web.InternalTools.ClusterMembers.MembersLV.LastUpdate = 上次更新
Web.InternalTools.ClusterMembers.MembersLV.NodeFailed = 节点失败
Web.InternalTools.ClusterMembers.MembersLV.NodeFailed.Confirmation = 将释放{0}成员拥有的所有资源。是否确定此成员已失败？
Web.InternalTools.ClusterMembers.MembersLV.PlannedShutdown = 计划的关闭
Web.InternalTools.ClusterMembers.MembersLV.PlannedShutdown.BgTasksStopped = bg.任务停止于{0}
Web.InternalTools.ClusterMembers.MembersLV.PlannedShutdown.Initiated = 在{0}启动，已为{1}计划
Web.InternalTools.ClusterMembers.MembersLV.RunLevel = 运行级别
Web.InternalTools.ClusterMembers.MembersLV.ServerId = 服务器ID
Web.InternalTools.ClusterMembers.MembersLV.ServerStarted = 服务器已启动
Web.InternalTools.ClusterMembers.MembersLV.ServerStopped = 服务器已停用
Web.InternalTools.ClusterMembers.MembersLV.StartPlannedShutdown = 开始计划的关闭
Web.InternalTools.ClusterMembers.MembersLV.Status = 状态
Web.InternalTools.ClusterMembers.MembersLV.Status.Running = 正在运行
Web.InternalTools.ClusterMembers.MembersLV.Status.Stopped = 已停用
Web.InternalTools.ClusterMembers.MembersLV.Status.Unknown = 未知
Web.InternalTools.ClusterMembers.MembersLV.UserSessions = 用户会话
Web.InternalTools.ClusterMembers.MembersLV.Uuid = UUID
Web.InternalTools.ClusterMembers.MembersLV.Version = 版本
Web.InternalTools.ClusterMembers.Reconnect = 刷新群集成员
Web.InternalTools.ClusterMembers.ReconnectInfo = 如果看起来缺少某个群集成员，请单击“刷新群集成员”按钮。这将尝试重新建立与缺少成员的通信。
Web.InternalTools.ClusterMembers.ServerId = 服务器ID
Web.InternalTools.ClusterMembers.ServerRoles = 服务器角色
Web.InternalTools.ClusterMembers.UnusedServerRoles = 未使用的服务器角色（{0}）
Web.InternalTools.ClusterMembers.Uuid = UUID
Web.InternalTools.ClusterMembersDownloadConfigure = 配置群集成员报告
Web.InternalTools.ClusterMembersDownloadConfigure.IncludeHistory = 在报告中包括服务器历史记录
Web.InternalTools.ClusterMembersDownloadConfigure.MaxHistoryRecords = 最大历史记录数（针对每个服务器）
Web.InternalTools.ClusterPages.MainMenu = 群集
Web.InternalTools.ClusterPages.Members = 成员
Web.InternalTools.DBConsistCheckRun.All = 所有
Web.InternalTools.DBConsistCheckRun.AllTables = 所有表
Web.InternalTools.DBConsistCheckRun.AvailCheckTypes = 有效检查类型
Web.InternalTools.DBConsistCheckRun.AvailTableGroups = 有效表组
Web.InternalTools.DBConsistCheckRun.AvailTables = 有效表
Web.InternalTools.DBConsistCheckRun.CancelRun = 取消一致性检查
Web.InternalTools.DBConsistCheckRun.CheckAllTables = 是否检查所有表？
Web.InternalTools.DBConsistCheckRun.CheckAllTypes = 是否检查所有类型？
Web.InternalTools.DBConsistCheckRun.CheckName = 检查名称
Web.InternalTools.DBConsistCheckRun.Checks = 检查
Web.InternalTools.DBConsistCheckRun.ChecksFinished = 已完成
Web.InternalTools.DBConsistCheckRun.ChecksInProgress = 进行中
Web.InternalTools.DBConsistCheckRun.ChecksNotStarted = 未启动
Web.InternalTools.DBConsistCheckRun.ConsistCheckRunID = 一致性检查运行{0}
Web.InternalTools.DBConsistCheckRun.ConsistencyCheckExecutionsforRun = 为运行执行的一致性检查次数
Web.InternalTools.DBConsistCheckRun.Count = 计数
Web.InternalTools.DBConsistCheckRun.CurrentlyCanceling = 当前正在取消一致性检查
Web.InternalTools.DBConsistCheckRun.CurrentlyNotRunning = 当前未运行一致性检查
Web.InternalTools.DBConsistCheckRun.CurrentlyPaused = 当前已暂停一致性检查
Web.InternalTools.DBConsistCheckRun.CurrentlyRunning = 当前正在运行一致性检查
Web.InternalTools.DBConsistCheckRun.CurrentlyStarting = 当前正在启用一致性检查
Web.InternalTools.DBConsistCheckRun.CurrentlyStuck = 一致性检查似乎被卡住。请取消。
Web.InternalTools.DBConsistCheckRun.DBConsistCheckRuns = 一致性检查运行次数
Web.InternalTools.DBConsistCheckRun.DBConsistCheckRunsErrorsOnly = 仅一致性检查运行错误
Web.InternalTools.DBConsistCheckRun.Delete = 删除
Web.InternalTools.DBConsistCheckRun.DeleteAllSelected = 删除所有选定项
Web.InternalTools.DBConsistCheckRun.Description = 说明
Web.InternalTools.DBConsistCheckRun.Details = 详细信息
Web.InternalTools.DBConsistCheckRun.Download = 下载
Web.InternalTools.DBConsistCheckRun.Download.Errors = 下载错误
Web.InternalTools.DBConsistCheckRun.DownloadMultiple = 下载所有选定项
Web.InternalTools.DBConsistCheckRun.ElapsedTimeByCheckType = 实耗时间（按检查类型）
Web.InternalTools.DBConsistCheckRun.ElapsedTimeByTable = 实耗时间（按表）
Web.InternalTools.DBConsistCheckRun.EndTime = 结束时间
Web.InternalTools.DBConsistCheckRun.Error = 错误
Web.InternalTools.DBConsistCheckRun.ExecutorActive.Unknown = 未知
Web.InternalTools.DBConsistCheckRun.ExecutorActive.Yes = 是
Web.InternalTools.DBConsistCheckRun.Fingerprint = 指纹
Web.InternalTools.DBConsistCheckRun.For = 针对
Web.InternalTools.DBConsistCheckRun.ID = ID
Web.InternalTools.DBConsistCheckRun.NotAllTables = 指定表
Web.InternalTools.DBConsistCheckRun.NotAllTypes = 指定类型
Web.InternalTools.DBConsistCheckRun.NumErrors = 出错
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers = 工人数量：{0}
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Active = 活动
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Actual = 当前的工人数量
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Apply = 应用
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Change = 更改
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Changing.Refresh = 更改工作线程数量可能需要一些时间。请等待几分钟，然后单击“刷新”。
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.ClusterStatus = 群集状态
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Desired = 需要的工人数量
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Desired.MustBePositive = 工人数量必须为正数
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.NoServer = 群集中目前没有正在处理的服务器。
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.OneServer = 群集中当前只有一个服务器在处理{0}工作队列，此配置不可靠。
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.PopupTitle = 更改工人数量
Web.InternalTools.DBConsistCheckRun.NumberOfWorkers.Used = 工作线程
Web.InternalTools.DBConsistCheckRun.PauseRun = 暂停一致性检查
Web.InternalTools.DBConsistCheckRun.QueryToCountRows = 行计数查询
Web.InternalTools.DBConsistCheckRun.QueryToIdentifyRows = 查询以确定行数
Web.InternalTools.DBConsistCheckRun.QueueStopped = {0}工作队列已停止。
Web.InternalTools.DBConsistCheckRun.Refresh = 刷新
Web.InternalTools.DBConsistCheckRun.Rerun = 重新运行
Web.InternalTools.DBConsistCheckRun.RerunTooltip = 在单线程批处理作业中重新运行SQL错误检查
Web.InternalTools.DBConsistCheckRun.ResumeRun = 恢复一致性检查
Web.InternalTools.DBConsistCheckRun.RowsWithErrors = 错误行
Web.InternalTools.DBConsistCheckRun.SQLErrorStackTrace = 堆栈跟踪
Web.InternalTools.DBConsistCheckRun.SQLString = SQL字符串
Web.InternalTools.DBConsistCheckRun.SelectedCheckTypes = 选定的检查类型
Web.InternalTools.DBConsistCheckRun.SelectedTableGroups = 选定的表组
Web.InternalTools.DBConsistCheckRun.SelectedTables = 选定的表
Web.InternalTools.DBConsistCheckRun.SpecifyTablegroups = 指定表组
Web.InternalTools.DBConsistCheckRun.SpecifyTables = 指定表
Web.InternalTools.DBConsistCheckRun.StartTime = 开始时间
Web.InternalTools.DBConsistCheckRun.SubmitRun = 运行一致性检查
Web.InternalTools.DBConsistCheckRun.Summaries = 摘要
Web.InternalTools.DBConsistCheckRun.TableName = 表名称
Web.InternalTools.DBConsistCheckRun.TotalChecks = 检查总数
Web.InternalTools.DBConsistCheckRun.UpToList = 向上返回到列表
Web.InternalTools.DBConsistCheckRun.UpToRuns = 最大运行次数
Web.InternalTools.DBConsistCheckRun.Version = 版本(应用程序主要版本、应用程序次要版本、平台主要版本、平台次要版本、扩展版本)
Web.InternalTools.DBConsistCheckRun.View = 查看
Web.InternalTools.DatabaseStorage = 数据库存储
Web.InternalTools.Description = 说明
Web.InternalTools.Dictionary = 字典
Web.InternalTools.InfoPages.Archive = 存档
Web.InternalTools.InfoPages.ArchiveInfo = 存档信息
Web.InternalTools.InfoPages.ArchivingInfo = 域图信息
Web.InternalTools.InfoPages.ArchivingInfo.AdminGraphInDotFormat = dot格式的管理图
Web.InternalTools.InfoPages.ArchivingInfo.DomainGraphInDotFormat = dot格式的域图
Web.InternalTools.InfoPages.ArchivingInfo.DomainGraphInPdfFormat = pdf格式的域图
Web.InternalTools.InfoPages.ArchivingInfo.DomainGraphPdfNotGenerated = 无法生成域图PDF
Web.InternalTools.InfoPages.ArchivingInfo.DotFormatInstructions = 要查看图，请执行以下步骤：\n1.  将下面的有向图保存到文件。\n2.  在命令外壳中运行命令“dot.exe -Tpdf -o<file>.pdf <file>”。\n3.  在浏览器中查看 <file>.pdf。
Web.InternalTools.InfoPages.ArchivingInfo.EntitiesExcludedFromDomainGraph = 从域图中排除的实体
Web.InternalTools.InfoPages.ArchivingInfo.EntityDiff = 已排除的实体
Web.InternalTools.InfoPages.ArchivingInfo.GraphLegend = 图注：头有箭头的实边表示外键。头有箭头、尾有眼角纹的实边表示数组；箭头指向包含数组属性的实体，眼角纹连接到包含数组中的行的表。头有箭头的虚边表示自有\=真的外键；边尾的实体是自有实体。颜色为白色且相对的两角之间有对角线的实体表示图的根；颜色为蓝色的箭头或实体表示客户扩展。带有从一个实体指向自身的箭头的粗边表示边外键。
Web.InternalTools.InfoPages.ArchivingInfo.GraphName = 图名称
Web.InternalTools.InfoPages.ArchivingInfo.Graphs = 图
Web.InternalTools.InfoPages.ArchivingInfo.ValidateNoEntityOutsideOfDomainGraphShouldPointToDomainGraph = 可能导致域图对象之间相互连接的情况
Web.InternalTools.InfoPages.ArchivingInfo.ValidateNullLinksCannotMakeNodeUnreachable = 可能导致子图彼此孤立的情况
Web.InternalTools.InfoPages.ArchivingInfo.Warnings = 警告
Web.InternalTools.InfoPages.ArchivingInfo.WarningsNone = 无
Web.InternalTools.InfoPages.ArchivingInfo.validateDomainGraphTablesShouldReferOnlyToAdminAndDomainTables = 校验域图实体是否指向域图和管理图外部
Web.InternalTools.InfoPages.CacheInfo = 缓存信息
Web.InternalTools.InfoPages.CacheInfo.Age = 年限
Web.InternalTools.InfoPages.CacheInfo.AgeDistribution = {0}分钟以前的年限分布
Web.InternalTools.InfoPages.CacheInfo.AgeDistributionByTime = 年限分布（按时间顺序，较新者在前）
Web.InternalTools.InfoPages.CacheInfo.AgeDistributionTime0 = 当前年限分布
Web.InternalTools.InfoPages.CacheInfo.AgeDistributionTitle = 年限分布（按时间顺序）
Web.InternalTools.InfoPages.CacheInfo.AreYouSureYouWantToClearTheCache = 是否确定要清除缓存？
Web.InternalTools.InfoPages.CacheInfo.ArrayTotals = 数组总计
Web.InternalTools.InfoPages.CacheInfo.AutoRefresh = 自动刷新
Web.InternalTools.InfoPages.CacheInfo.CacheFullInfo = 缓存完整信息
Web.InternalTools.InfoPages.CacheInfo.CacheSize = 缓存大小
Web.InternalTools.InfoPages.CacheInfo.Count = 计数
Web.InternalTools.InfoPages.CacheInfo.CsvOutputTitle = 缓存快照
Web.InternalTools.InfoPages.CacheInfo.CumulativeHitPercentage = 累计命中百分比
Web.InternalTools.InfoPages.CacheInfo.CumulativeMissPercentage = 累计未命中百分比
Web.InternalTools.InfoPages.CacheInfo.CumulativeNumHits = 累计命中次数
Web.InternalTools.InfoPages.CacheInfo.CumulativeNumMisses = 累计未命中次数
Web.InternalTools.InfoPages.CacheInfo.Details = 缓存详细信息
Web.InternalTools.InfoPages.CacheInfo.Entities = 全局缓存详细信息（按实体）（当前在缓存中的{0}唯一类型的实体）
Web.InternalTools.InfoPages.CacheInfo.Entity = 实体
Web.InternalTools.InfoPages.CacheInfo.EvictInformation = 逐出信息
Web.InternalTools.InfoPages.CacheInfo.EvictTimeDistributionDueToReap = 由于回收而将条目逐出的时间与请求而未命中该条目的时间构成的期间
Web.InternalTools.InfoPages.CacheInfo.EvictTimeDistributionWhenCacheFull = 由于缓存已满而将条目逐出的时间与请求而未命中该条目的时间构成的期间
Web.InternalTools.InfoPages.CacheInfo.Evictions = 逐出
Web.InternalTools.InfoPages.CacheInfo.Frequency = 频率
Web.InternalTools.InfoPages.CacheInfo.HistoricalPerformance = 历史性能
Web.InternalTools.InfoPages.CacheInfo.HitPercentage = 命中%
Web.InternalTools.InfoPages.CacheInfo.Hits = 命中
Web.InternalTools.InfoPages.CacheInfo.HitsAndMisses = 命中和未命中（已堆栈）
Web.InternalTools.InfoPages.CacheInfo.InCache = 在缓存中
Web.InternalTools.InfoPages.CacheInfo.LastWeekDays = 过去{0}天
Web.InternalTools.InfoPages.CacheInfo.MaxCacheSpace = 最大缓存空间(KB)
Web.InternalTools.InfoPages.CacheInfo.MedianAge = 年限中间值
Web.InternalTools.InfoPages.CacheInfo.MissInformation = 缓存未命中类型
Web.InternalTools.InfoPages.CacheInfo.MissPercentage = 未命中%
Web.InternalTools.InfoPages.CacheInfo.Misses = 未命中
Web.InternalTools.InfoPages.CacheInfo.Now = 立即
Web.InternalTools.InfoPages.CacheInfo.NumAsPartAndPercentage = {0} ({1})
Web.InternalTools.InfoPages.CacheInfo.NumEvictsDueToCacheFull = 缓存已满时的逐出次数
Web.InternalTools.InfoPages.CacheInfo.NumEvictsDueToReaping = 由于回收而导致的逐出次数
Web.InternalTools.InfoPages.CacheInfo.NumEvictsWithinActiveTime = 缓存已满时活动时间内的逐出次数
Web.InternalTools.InfoPages.CacheInfo.NumHits = 命中次数
Web.InternalTools.InfoPages.CacheInfo.NumInsertsWhenCacheIsFull = 缓存已满时的插入次数
Web.InternalTools.InfoPages.CacheInfo.NumMisses = 未命中次数
Web.InternalTools.InfoPages.CacheInfo.NumMissesBecauseEvictedDueToReap = 由于回收而将项目逐出所导致的未命中的次数
Web.InternalTools.InfoPages.CacheInfo.NumMissesBecauseEvictedWhenCacheFull = 缓存已满时将项目逐出所导致的未命中的次数
Web.InternalTools.InfoPages.CacheInfo.NumTimesNoneToEvictWhenFull = 缓存已满时未发现要逐出的条目的次数
Web.InternalTools.InfoPages.CacheInfo.PageLoadedAt = 页面加载于
Web.InternalTools.InfoPages.CacheInfo.Percentage = 百分比
Web.InternalTools.InfoPages.CacheInfo.Requests = 请求
Web.InternalTools.InfoPages.CacheInfo.ReturnToGlobalView = 返回到全局视图
Web.InternalTools.InfoPages.CacheInfo.Size = 大小
Web.InternalTools.InfoPages.CacheInfo.SpaceRetained = 预留空间(KB)
Web.InternalTools.InfoPages.CacheInfo.StaleTime = 失效时间（分钟）
Web.InternalTools.InfoPages.CacheInfo.Summary = 缓存摘要
Web.InternalTools.InfoPages.CacheInfo.Time = 时间（分钟）
Web.InternalTools.InfoPages.CacheInfo.TimeOfDay = 当日时间
Web.InternalTools.InfoPages.CacheInfo.Timestamp = 时间戳(yyyy/mm/dd hh\:mm)
Web.InternalTools.InfoPages.CacheInfo.TodayRollup = 今天
Web.InternalTools.InfoPages.CacheInfo.TotalEvictions = 总逐出次数
Web.InternalTools.InfoPages.CacheInfo.TotalInCache = 缓存中的总数
Web.InternalTools.InfoPages.CacheInfo.TotalMisses = 未命中总数
Web.InternalTools.InfoPages.CacheInfo.Totals = 总计
Web.InternalTools.InfoPages.CacheInfo.Trace = 跟踪
Web.InternalTools.InfoPages.CacheInfo.UserCacheRowLabel = 缓存
Web.InternalTools.InfoPages.CacheInfo.UserCaches = 用户缓存
Web.InternalTools.InfoPages.CacheInfo.UserGroupCache = 用户组缓存
Web.InternalTools.InfoPages.CacheInfo.UserVisibleQueueCache = 用户可见队列缓存
Web.InternalTools.InfoPages.CacheInfo.WhatIsInTheCache = 年限{0}的当前缓存内容（总计 \= {1}）
Web.InternalTools.InfoPages.CacheInfo.WhatIsInTheCacheTitle = 当前缓存内容（按时限）
Web.InternalTools.InfoPages.CacheInfo.Yesterday = 昨天
Web.InternalTools.InfoPages.CacheInfoDetail = 实体{0}的缓存信息
Web.InternalTools.InfoPages.Configuration.ConfigParameters = 配置参数
Web.InternalTools.InfoPages.Configuration.InfoPage = 配置
Web.InternalTools.InfoPages.Configuration.Name = 名称
Web.InternalTools.InfoPages.Configuration.Value = 值
Web.InternalTools.InfoPages.DBCatalogStatistics.AllDensitiesStepCatalogStatistics = 索引{0}的所有密度
Web.InternalTools.InfoPages.DBCatalogStatistics.HistogramName = 直方图名称
Web.InternalTools.InfoPages.DBCatalogStatistics.HistogramStepCatalogStatistics = 直方图{0}的步骤
Web.InternalTools.InfoPages.DBCatalogStatistics.IndexStepCatalogStatistics = 索引{0}的步骤
Web.InternalTools.InfoPages.DBCatalogStatistics.OutOfDateHistogramsOnStagingTables = 临时表中的过时直方图
Web.InternalTools.InfoPages.DBCatalogStatistics.OutOfDateHistogramsOnTypelistTables = 类型列表表格中的过时直方图
Web.InternalTools.InfoPages.DBCatalogStatistics.OutOfDateIndexesOnStagingTables = 临时表中的过时索引
Web.InternalTools.InfoPages.DBCatalogStatistics.OutOfDateIndexesOnTypelistTables = 类型列表表格中的过时索引
Web.InternalTools.InfoPages.DBCatalogStatistics.TableNameAndCount = {0} ({1})
Web.InternalTools.InfoPages.DBCatalogStatistics.ViewStatistics = 查看统计
Web.InternalTools.InfoPages.DBInfo = 数据库信息
Web.InternalTools.InfoPages.DBParameters = 数据库形式参数
Web.InternalTools.InfoPages.DBTableInfo = 数据库表信息
Web.InternalTools.InfoPages.DDInfo = 数据分布
Web.InternalTools.InfoPages.DMVInfo.EndTime = 间隔结束时间
Web.InternalTools.InfoPages.DMVInfo.GenerateAndDownload = 生成和下载
Web.InternalTools.InfoPages.DMVInfo.ID = 间隔ID
Web.InternalTools.InfoPages.DMVInfo.Instructions = 选择选项，然后按“生成性能报告”
Web.InternalTools.InfoPages.DMVInfo.StartTime = 间隔开始时间
Web.InternalTools.InfoPages.DMVInfo.SubmitBatch = 提交SQL Server性能报告批处理作业
Web.InternalTools.InfoPages.DMVInfo.Title = SQL Server性能报告
Web.InternalTools.InfoPages.DataDistribution.AdHoc = 特殊分布
Web.InternalTools.InfoPages.DataDistribution.AdHocDataDistValidationError = 验证特殊数据分布请求时出现异常
Web.InternalTools.InfoPages.DataDistribution.Add = 添加
Web.InternalTools.InfoPages.DataDistribution.AllTables = 收集所有表的分布
Web.InternalTools.InfoPages.DataDistribution.AppSpecific = 应用程序特定
Web.InternalTools.InfoPages.DataDistribution.AvailDists = 有效数据分布
Web.InternalTools.InfoPages.DataDistribution.AvailableTables = 有效表
Web.InternalTools.InfoPages.DataDistribution.BatchParams = 数据分布批处理作业形式参数
Web.InternalTools.InfoPages.DataDistribution.CollectAdHoc = 收集特殊分布
Web.InternalTools.InfoPages.DataDistribution.CollectAppSpecific = 收集应用程序特定分布
Web.InternalTools.InfoPages.DataDistribution.CollectArrays = 引用行的数组
Web.InternalTools.InfoPages.DataDistribution.CollectAssignForKeys = 可分配的外键
Web.InternalTools.InfoPages.DataDistribution.CollectAssignables = 可按日期分配
Web.InternalTools.InfoPages.DataDistribution.CollectBeanVersions = Bean版本
Web.InternalTools.InfoPages.DataDistribution.CollectBlobs = BLOB
Web.InternalTools.InfoPages.DataDistribution.CollectBooleans = 布尔值
Web.InternalTools.InfoPages.DataDistribution.CollectClobs = CLOB
Web.InternalTools.InfoPages.DataDistribution.CollectDateAnalysisDistributions = 日期分析
Web.InternalTools.InfoPages.DataDistribution.CollectForKeys = 外键
Web.InternalTools.InfoPages.DataDistribution.CollectGenericGroups = 通用组
Web.InternalTools.InfoPages.DataDistribution.CollectMinAndMaxDates = 收集所有日期列的最小和最大日期
Web.InternalTools.InfoPages.DataDistribution.CollectNullableColumns = 可为null的列
Web.InternalTools.InfoPages.DataDistribution.CollectRevisions = 修订
Web.InternalTools.InfoPages.DataDistribution.CollectStagingTables = 收集临时表数据的分布
Web.InternalTools.InfoPages.DataDistribution.CollectTypeKeys = 类型键值
Web.InternalTools.InfoPages.DataDistribution.CollectTypeLists = 收集所有类型列表表格的分布
Web.InternalTools.InfoPages.DataDistribution.Delete = 删除
Web.InternalTools.InfoPages.DataDistribution.DeleteConfirmation = 是否确定要删除该数据分布报告?
Web.InternalTools.InfoPages.DataDistribution.Description = 说明
Web.InternalTools.InfoPages.DataDistribution.Download = 下载
Web.InternalTools.InfoPages.DataDistribution.DownloadCombinedZip = 下载组合Zip文件
Web.InternalTools.InfoPages.DataDistribution.DownloadComparisonZip = 下载比较Zip文件
Web.InternalTools.InfoPages.DataDistribution.DownloadZip = 下载Zip文件
Web.InternalTools.InfoPages.DataDistribution.EndTime = 结束时间
Web.InternalTools.InfoPages.DataDistribution.MainTable = 主表分布
Web.InternalTools.InfoPages.DataDistribution.MinMaxDates = 最小和最大日期
Web.InternalTools.InfoPages.DataDistribution.NoMinMaxDates = 无
Web.InternalTools.InfoPages.DataDistribution.NotAdHoc = 无
Web.InternalTools.InfoPages.DataDistribution.NotAllTables = 指定表
Web.InternalTools.InfoPages.DataDistribution.NotTypeListTables = 无
Web.InternalTools.InfoPages.DataDistribution.NumberThreads = 线程数
Web.InternalTools.InfoPages.DataDistribution.NumberThreadsHelp = 为 1 时对系统的影响最小，较高时执行时间最短。
Web.InternalTools.InfoPages.DataDistribution.PLOnly = 无
Web.InternalTools.InfoPages.DataDistribution.Remove = 移除
Web.InternalTools.InfoPages.DataDistribution.RunDescription = 输入公司名称、目的及其它标识信息
Web.InternalTools.InfoPages.DataDistribution.RunningBatchProcess = 批处理流程正在运行...
Web.InternalTools.InfoPages.DataDistribution.SelectedTables = 选定的表
Web.InternalTools.InfoPages.DataDistribution.StagingTable = 相关临时表
Web.InternalTools.InfoPages.DataDistribution.StartTime = 开始时间
Web.InternalTools.InfoPages.DataDistribution.SubmitJob = 提交数据分布批处理作业
Web.InternalTools.InfoPages.DataDistribution.TableChosen = 已选表
Web.InternalTools.InfoPages.DataDistribution.TablesToAnalyze = 要分析的表
Web.InternalTools.InfoPages.DataDistributionInfo = 数据分布信息
Web.InternalTools.InfoPages.DatabaseParameters = 数据库形式参数
Web.InternalTools.InfoPages.DatabaseParameters.Download = 下载数据库形式参数信息
Web.InternalTools.InfoPages.DatabaseParameters.Parameters = 数据库形式参数信息
Web.InternalTools.InfoPages.DatabaseParameters.ParametersNotAvailable = 基础数据库中尚不支持数据库形式参数功能
Web.InternalTools.InfoPages.DatabaseParameters.RefreshParameters = 加载/重新加载数据库形式参数信息
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.DeleteConfirmation = 是否确定要删除该数据库统计报告?
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory = 执行历史记录
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.Description = 说明
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.EndTime = 结束时间
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.Incremental = 递增
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.Refresh = 刷新
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.RunFullDevOnly = 运行完全统计数据批处理(仅开发模式)
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.RunIncrementalDevOnly = 运行增量统计数据批处理(仅开发模式)
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.ExecutionHistory.StartTime = 开始时间
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences = Oracle统计数据首选项
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Config.Generate = 生成配置以匹配实际值
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Config.MethodOptNotGuidewire = METHOD_OPT的实际值与支持的Guidewire功能不匹配。此配置将尝试最佳匹配：{0}。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Config.MultipleIncrementalUpdateThresholdPercent = “失效百分比”存在多个实际值。其中最小值将用于配置：{0}。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Config.SomeColumnsRemoved = 不能在以下列的配置中禁用统计数据收集：{0}。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Config.Title = 配置实际匹配首选项
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Delete = 删除所有统计数据
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Delete.Confirm = 是否确定要删除数据库中的所有统计数据？此操作无法撤消。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Delete.UILog = 用户{0}的请求：删除所有统计数据
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.DevModeOnly = 仅开发模式
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Download = 下载
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Filter.All = 所有
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Filter.Changed = 已更改
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Filter.DifferentFromConfiguration = 与配置值不同
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Filter.DifferentFromDatamodel = 与默认值不同
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Gather.Confirm = 是否确定要立即收集统计数据？此操作无法撤消。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Gather.UILog = 用户{0}的请求：收集统计数据
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.GatherFull = 立即收集完全统计数据
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.GatherIncremental = 立即收集增量统计数据
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Reapply = 重新应用配置
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Reapply.Confirm = 是否确定要重新应用该配置？此操作无法撤消。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Reapply.UILog = 用户{0}的请求：重新应用表统计数据首选项配置
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Reapply.UILog.End = 用户{0}的请求：已完成表统计数据首选项配置的重新应用
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Refresh = 刷新
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Report.AdditionalInfo = 附加信息
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Report.Differences = 差异
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Report.SnapshotCapturedAt = 于{0}捕获快照。
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.Report.Title = Oracle表状态首选项
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.Action = Guidewire操作
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.Actual = 实际
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.Configured = 已配置
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.Datamodel = 默认
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.OtherParameters = 其他参数
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.OracleStatsPreferences.TablePreferences.TableName = 表名称
Web.InternalTools.InfoPages.DatabaseStatisticsInfo.StatisticsInfo = DatabaseStatisticsInfo
Web.InternalTools.InfoPages.DatabaseStorage = 数据库存储信息
Web.InternalTools.InfoPages.DatabaseStorage.AllTables = 收集所有表的索引物理统计
Web.InternalTools.InfoPages.DatabaseStorage.AnalysisLevels = 选择索引物理统计收集模式
Web.InternalTools.InfoPages.DatabaseStorage.CompressionIncludeWithReport = 包括其它报告
Web.InternalTools.InfoPages.DatabaseStorage.CompressionLevels = 选择压缩级别以预计节省量
Web.InternalTools.InfoPages.DatabaseStorage.CompressionRatio = 选择介于 1-99 的压缩比以预计节省量
Web.InternalTools.InfoPages.DatabaseStorage.CompressionSamplingPercentage = 选择采样百分比(%)
Web.InternalTools.InfoPages.DatabaseStorage.DataCompressionAllTables = 针对所有表
Web.InternalTools.InfoPages.DatabaseStorage.Display = 显示数据库存储信息
Web.InternalTools.InfoPages.DatabaseStorage.Download = 下载数据库存储信息
Web.InternalTools.InfoPages.DatabaseStorage.EstimateCompression = 包括表和索引的压缩节省量估算
Web.InternalTools.InfoPages.DatabaseStorage.EstimateCompressionRunAlone = 仅运行此报告
Web.InternalTools.InfoPages.DatabaseStorage.IncludeCompressionReport = 包括压缩报告
Web.InternalTools.InfoPages.DatabaseStorage.NotAllTables = 指定表
Web.InternalTools.InfoPages.DatabaseStorage.PickerLabel = 显示表的存储信息
Web.InternalTools.InfoPages.DatabaseStorage.SelectStorageSetToDisplay = 选择要显示的存储集
Web.InternalTools.InfoPages.DatabaseStorageDV.Attribute = 属性
Web.InternalTools.InfoPages.DatabaseStorageDV.Value = 值
Web.InternalTools.InfoPages.DatabaseTableInfo = 数据库表信息
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.Download = 下载数据库架构验证问题
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.ErrorMessage = 数据库架构验证问题
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.NoErrors = 未发现问题。
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.NotYetVerified = 尚未验证
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.SequenceMissingInDataModel = 顺序{0}存在于数据库中，但不存在于数据模型中。
Web.InternalTools.InfoPages.DatabaseTableInfo.DatabaseSchemaVerification.Verify = 验证
Web.InternalTools.InfoPages.DatabaseTableInfo.Download = 下载数据库表信息
Web.InternalTools.InfoPages.DatabaseTableInfo.FKConstraint.Constraint = 约束名称
Web.InternalTools.InfoPages.DatabaseTableInfo.FKConstraint.ForeignKeyColumn = 外键列
Web.InternalTools.InfoPages.DatabaseTableInfo.FKConstraint.ReferencedTableColumn = 引用的表列
Web.InternalTools.InfoPages.DatabaseTableInfo.FKConstraint.Table = 表名称
Web.InternalTools.InfoPages.DatabaseTableInfo.FKConstraints = 外键约束，按表
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Clustered = 已聚集
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Column = 列名称
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Description = 说明
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.ExpectedToBeCovering = 要求承保
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Extension = 扩展
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Index = 索引名称
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.KeyColumns = 键值列
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.NumKeyColumns = 键值列数
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Parameters = 索引参数
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Table = 表名称
Web.InternalTools.InfoPages.DatabaseTableInfo.Index.Unique = 唯一
Web.InternalTools.InfoPages.DatabaseTableInfo.Indexes = 索引，按表
Web.InternalTools.InfoPages.DatabaseTableInfo.IndexesWithSharedPrefixes = 含共享前缀的索引
Web.InternalTools.InfoPages.DatabaseTableInfo.IndexesWithSharedPrefixes.ColumnName = 列名
Web.InternalTools.InfoPages.DatabaseTableInfo.IndexesWithSharedPrefixes.TableNameFilter = 表名称过滤器
Web.InternalTools.InfoPages.DatabaseTableInfo.NoPartitionedIndexesFound = 未找到已分区索引
Web.InternalTools.InfoPages.DatabaseTableInfo.PKConstraint.Constraint = 约束名称
Web.InternalTools.InfoPages.DatabaseTableInfo.PKConstraint.KeyColumn = 键值列
Web.InternalTools.InfoPages.DatabaseTableInfo.PKConstraint.ReferencingColumns = 引用列
Web.InternalTools.InfoPages.DatabaseTableInfo.PKConstraint.Table = 表名称
Web.InternalTools.InfoPages.DatabaseTableInfo.PKConstraints = 主键约束，按表
Web.InternalTools.InfoPages.DatabaseTableInfo.PartitionedIndexes = 已分区索引，按表
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex = 可能有冗余备份FK索引
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex.BackingIndex = 备份索引
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex.CandidateReplacement = 候选项替换
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex.FilterBy = 表过滤依据（标出）
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex.ReferencedPK = 引用的PK
Web.InternalTools.InfoPages.DatabaseTableInfo.PossiblyRedundantBackingFKIndex.ReferencingColumn = 引用列
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows = 最大行长度
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.AndMinMaxRowLengths = 和最小/最大行长度
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.MaxLength = 最大长度
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.MinLength = 最小长度
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.NumColumns = 列数
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.NumNullableColumns = 可为null的列数
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.NumberOfColumns = 列数
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.SubType = 子类型
Web.InternalTools.InfoPages.DatabaseTableInfo.Rows.Table = 表名称
Web.InternalTools.InfoPages.DatabaseTableInfo.RowsNotAvailable = 基础数据库中尚不支持行长度函数
Web.InternalTools.InfoPages.DatabaseTableInfo.SelectTable = 选择表
Web.InternalTools.InfoPages.DatabaseTableInfo.TablesWithUnusedColumns = 含有未使用列的表
Web.InternalTools.InfoPages.DatabaseTableInfo.TablesWithUnusedColumns.DropUnusedColumnsSQL = 删除未使用列的SQL
Web.InternalTools.InfoPages.DatabaseTableInfo.TablesWithUnusedColumns.NumberOfUnusedColumns = 未使用的列数
Web.InternalTools.InfoPages.DatabaseTableInfo.TablesWithUnusedColumns.TableName = 表名称
Web.InternalTools.InfoPages.DatabaseTableInfo.ViewDatabaseInfo = 查看数据库表信息：
Web.InternalTools.InfoPages.DisablePaging = 禁用分页
Web.InternalTools.InfoPages.EnablePaging = 启用分页
Web.InternalTools.InfoPages.InstrumentationInfo = 检测信息
Web.InternalTools.InfoPages.InstrumentationInfo.AWRSnapshots = AWR快照
Web.InternalTools.InfoPages.InstrumentationInfo.AppServerName = 应用服务器名称
Web.InternalTools.InfoPages.InstrumentationInfo.AppServers = 应用服务器
Web.InternalTools.InfoPages.InstrumentationInfo.Description = 说明
Web.InternalTools.InfoPages.InstrumentationInfo.Download = 下载
Web.InternalTools.InfoPages.InstrumentationInfo.DownloadAll = 下载全部
Web.InternalTools.InfoPages.InstrumentationInfo.EndTime = 结束时间
Web.InternalTools.InfoPages.InstrumentationInfo.ExecDuration = 执行持续时间
Web.InternalTools.InfoPages.InstrumentationInfo.FailedOps = 失败的操作
Web.InternalTools.InfoPages.InstrumentationInfo.ID = ID
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJavaTask = 已检测的Java任务
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJob = 已检测的作业
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobAppServer = 已检测的作业应用服务器
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobAppServerCard = 已检测的作业应用服务器
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobCard = 已检测的作业
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobID = 已检测的作业
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobTask = 已检测的作业任务
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedJobThread = 已检测的作业线程
Web.InternalTools.InfoPages.InstrumentationInfo.InstrumentedSQLTask = 已检测的SQL任务
Web.InternalTools.InfoPages.InstrumentationInfo.OpsPerformed = 所执行的操作
Web.InternalTools.InfoPages.InstrumentationInfo.ProcessHistoryID = 流程类型
Web.InternalTools.InfoPages.InstrumentationInfo.StartTime = 开始时间
Web.InternalTools.InfoPages.InstrumentationInfo.Subtype = 子类型
Web.InternalTools.InfoPages.InstrumentationInfo.TotalNumberOfTasks = 任务总数
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.AffectedRowCount = 受影响的行计数
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.AppServerID = 应用服务器
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.Description = 说明
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.EndTime = 结束时间
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.ExecDuration = 执行持续时间（秒）
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.ExecutionOrder = 执行顺序
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.FiftiethPercentile = 50%
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.ID = ID
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.Mean = 平均值（秒）
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.NinetiethPercentile = 90%
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.NinetyNinthPercentile = 99%
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.Requests = 请求
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.RequestsPerSecond = 每秒的请求数
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.SQLText = SQL文本
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.StartTime = 开始时间
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.StatementType = 语句类型
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.Subtype = 子类型
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.TableName = 表名称
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.TestName = 名称
Web.InternalTools.InfoPages.InstrumentedJobTaskLV.Thread = 线程
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.AppServerID = 应用服务器
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.Description = 说明
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.EndTime = 结束时间
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.ExecDuration = 执行持续时间（秒）
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.InstrumentedJobTask = 已检测的作业任务
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.InstrumentedJobThread = 已检测的作业线程
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.NumberOfTasks = 任务总数
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.StartTime = 开始时间
Web.InternalTools.InfoPages.InstrumentedJobThreadLV.Thread = 线程
Web.InternalTools.InfoPages.LoadCallbackResultsInfo = 加载回调结果信息
Web.InternalTools.InfoPages.LoadHistory = 加载历史记录
Web.InternalTools.InfoPages.LoadHistory.AffectedRowCount = 受影响的行计数
Web.InternalTools.InfoPages.LoadHistory.CallbackName = 回调名称
Web.InternalTools.InfoPages.LoadHistory.CallbackResultName = 回调结果名称
Web.InternalTools.InfoPages.LoadHistory.CallbackResultsDetails = 回调{0}的回调结果详细信息
Web.InternalTools.InfoPages.LoadHistory.Callbacks = 回调({0})
Web.InternalTools.InfoPages.LoadHistory.CallbacksNoCount = 回调
Web.InternalTools.InfoPages.LoadHistory.CallingUser = 调用用户
Web.InternalTools.InfoPages.LoadHistory.ColumnsEncrypted = 已加密的列
Web.InternalTools.InfoPages.LoadHistory.Delete.Warning = 是否确定要删除此加载历史记录？
Web.InternalTools.InfoPages.LoadHistory.Description = 说明
Web.InternalTools.InfoPages.LoadHistory.Duration = 持续时间(秒)
Web.InternalTools.InfoPages.LoadHistory.EditLoadHistoryRow = 编辑加载历史记录行
Web.InternalTools.InfoPages.LoadHistory.EndTime = 结束时间
Web.InternalTools.InfoPages.LoadHistory.ErrorCount = 错误计数
Web.InternalTools.InfoPages.LoadHistory.ExecutionOrder = 执行顺序
Web.InternalTools.InfoPages.LoadHistory.FKEnablingDuration = （重新）启用外键约束
Web.InternalTools.InfoPages.LoadHistory.HighestID = 最高ID
Web.InternalTools.InfoPages.LoadHistory.InsertSelectsNoCount = 插入选择
Web.InternalTools.InfoPages.LoadHistory.Inserts = 插入({0})
Web.InternalTools.InfoPages.LoadHistory.IntegrityChecks = 完整性检查({0})
Web.InternalTools.InfoPages.LoadHistory.IntegrityChecksNoCount = 完整性检查
Web.InternalTools.InfoPages.LoadHistory.LoadIntegrityCheckType = 检查类型
Web.InternalTools.InfoPages.LoadHistory.LowestID = 最低ID
Web.InternalTools.InfoPages.LoadHistory.NumResults = 结果数
Web.InternalTools.InfoPages.LoadHistory.NumberCallbacks = 回调
Web.InternalTools.InfoPages.LoadHistory.NumberInsertSelects = 插入选择
Web.InternalTools.InfoPages.LoadHistory.NumberIntegrityChecks = 完整性检查
Web.InternalTools.InfoPages.LoadHistory.NumberOps = 操作数
Web.InternalTools.InfoPages.LoadHistory.OperationDetails = 表{0}的步骤{1}中的操作详细信息
Web.InternalTools.InfoPages.LoadHistory.OperationType = 加载操作类型
Web.InternalTools.InfoPages.LoadHistory.Operations = 步骤{0}的操作
Web.InternalTools.InfoPages.LoadHistory.ParameterName = 形式参数名称
Web.InternalTools.InfoPages.LoadHistory.ParameterValue = 形式参数值
Web.InternalTools.InfoPages.LoadHistory.Parameters = 形式参数({0})
Web.InternalTools.InfoPages.LoadHistory.PickStep = 选取某个步骤以显示操作：
Web.InternalTools.InfoPages.LoadHistory.Query = 查询
Web.InternalTools.InfoPages.LoadHistory.RowCounts = 行计数({0})
Web.InternalTools.InfoPages.LoadHistory.SQLCommand = SQL命令
Web.InternalTools.InfoPages.LoadHistory.SelectStmt = 选择语句
Web.InternalTools.InfoPages.LoadHistory.SizeofTimedChunk = 定时区块大小
Web.InternalTools.InfoPages.LoadHistory.SourceTableBlockCount = 源表块计数
Web.InternalTools.InfoPages.LoadHistory.SourceTableName = 源表名称
Web.InternalTools.InfoPages.LoadHistory.SourceTableRowCount = 源表行计数
Web.InternalTools.InfoPages.LoadHistory.StagingTableBlockCount = 临时表块计数
Web.InternalTools.InfoPages.LoadHistory.StagingTableName = 临时表名称
Web.InternalTools.InfoPages.LoadHistory.StagingTableRowCount = 临时表行计数
Web.InternalTools.InfoPages.LoadHistory.StartTime = 开始时间
Web.InternalTools.InfoPages.LoadHistory.StatisticsCmds = 统计命令({0})
Web.InternalTools.InfoPages.LoadHistory.StepType = 步骤类型
Web.InternalTools.InfoPages.LoadHistory.Steps = 步骤({0})
Web.InternalTools.InfoPages.LoadHistory.StepsAndOps = 步骤和操作
Web.InternalTools.InfoPages.LoadHistory.TableEncrypt = 表加密({0})
Web.InternalTools.InfoPages.LoadHistory.TableEncryptDetails = 表{0}的表加密结果详细信息
Web.InternalTools.InfoPages.LoadHistory.TableName = 表名称
Web.InternalTools.InfoPages.LoadHistory.ThreadName = 线程名称
Web.InternalTools.InfoPages.LoadHistory.TimeType = 回调时间类型
Web.InternalTools.InfoPages.LoadHistory.UpdateStmt = 更新语句
Web.InternalTools.InfoPages.LoadHistory.View = 查看
Web.InternalTools.InfoPages.LoadHistoryDetail = 加载历史记录详细信息
Web.InternalTools.InfoPages.LoadHistoryInfo = 加载历史记录信息
Web.InternalTools.InfoPages.LoadHistoryOpInfo = 加载历史记录操作信息
Web.InternalTools.InfoPages.LoadIntegrityChecks = 加载完整性检查
Web.InternalTools.InfoPages.LoadIntegrityChecks.AllowReferencesToNonAdminRows = 允许非管理引用
Web.InternalTools.InfoPages.LoadIntegrityChecks.CompoundQuery = 复合查询： SELECT COUNT(*) ...
Web.InternalTools.InfoPages.LoadIntegrityChecks.CompoundQueryTooltip = 单击可逐一查看各查询
Web.InternalTools.InfoPages.LoadIntegrityChecks.Description = 说明
Web.InternalTools.InfoPages.LoadIntegrityChecks.LoadErrorType = 加载错误类型
Web.InternalTools.InfoPages.LoadIntegrityChecks.Query = 查询： SELECT COUNT(*) ...
Web.InternalTools.InfoPages.LoadIntegrityChecks.SimpleQuery = 简单查询： SELECT COUNT(*) ...
Web.InternalTools.InfoPages.LoadIntegrityChecks.StagingTable = 临时表
Web.InternalTools.InfoPages.LoadIntegrityChecks.ViewByStagingTable = 按临时表查看
Web.InternalTools.InfoPages.LoadedGosuClasses = 加载的Gosu文件
Web.InternalTools.InfoPages.LoadedGosuClassesNoLongerSupported = 不再支持此功能
Web.InternalTools.InfoPages.MainMenu = 信息页面
Web.InternalTools.InfoPages.MicrosoftDriverLogging = Microsoft JDBC驱动程序日志记录
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LogFileLocation = 日志文件位置
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LogFormatHelp = 易于用户读取，或易于使用XML（如果需要）。
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LogLevelsHelp = FINE显示语句。\nFINER显示更多方法。\nFINEST显示输入和输出的数据缓冲区。\nALL快速创建千兆字节的数据；请务必谨慎使用。\nOFF停止所有驱动程序日志记录。
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LogLocationHelp = 模式由包含以下特殊组成部分（这些组成部分将在运行时被替换）的字符串组成：\n  “/”表示本地路径名称分隔符\n  “%t”表示系统临时目录\n  “%h”表示"user.home"系统属性的值\n “%u”表示用于解决冲突的唯一编号
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LogResult = 命令结果
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LoggingFormat = 日志记录格式
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LoggingLevel = 日志记录级别
Web.InternalTools.InfoPages.MicrosoftDriverLogging.LoggingWarning = 警告： 记录Microsoft JDBC驱动程序中的跟踪消息将明显减慢系统速度。
Web.InternalTools.InfoPages.MicrosoftDriverLogging.SetLoggingLevel = 设置日志记录级别
Web.InternalTools.InfoPages.OracleAWR = Oracle AWR
Web.InternalTools.InfoPages.OracleAWR.CapturePeakedBindVariables = ...捕获峰值承保变量
Web.InternalTools.InfoPages.OracleAWR.CapturePeakedBindVariablesFromAWR = 从AWR捕获峰值承保变量
Web.InternalTools.InfoPages.OracleAWR.ConcurrentBatchProcessAndWorkerAnalysis = 并发批处理和工作线程分析
Web.InternalTools.InfoPages.OracleAWR.ConcurrentHistoryAnalysis = 并发历史记录分析
Web.InternalTools.InfoPages.OracleAWR.ConcurrentMessagingAnalysis = 并发消息传递分析
Web.InternalTools.InfoPages.OracleAWR.ExperimentalRawDataOutput = 作为原始数据输出（试验）
Web.InternalTools.InfoPages.OracleAWR.FromTo = 自{1}处获得的快照ID{0}至{3}处获得的快照ID{2}
Web.InternalTools.InfoPages.OracleAWR.FromTo.NoDateTime = 从快照ID {0}到ID {1}
Web.InternalTools.InfoPages.OracleAWR.GenerateCallsToASHScripts = 生成对ASH脚本的调用
Web.InternalTools.InfoPages.OracleAWR.IncludeDatabaseStatistics = 包含数据库统计
Web.InternalTools.InfoPages.OracleAWR.IncludeInstrumentationTables = 包括检测表
Web.InternalTools.InfoPages.OracleAWR.IncludeMetadataForInstrumentationTables = 包含仪器表的元数据
Web.InternalTools.InfoPages.OracleAWR.IncludeNativeOracleAWRReport = 包括本地Oracle AWR报告
Web.InternalTools.InfoPages.OracleAWR.IncludeNativeOracleAWRReport.HelpText = 必须拥有DBMS_WORKLOAD_REPOSITORY的EXECUTE权限才能生成报告。请参阅《系统管理指南》。
Web.InternalTools.InfoPages.OracleAWR.IncludeStagingTables = 包括临时表
Web.InternalTools.InfoPages.OracleAWR.IncludeTempTables = 包括临时表
Web.InternalTools.InfoPages.OracleAWR.IncludeTypelistTables = 包括类型列表表格
Web.InternalTools.InfoPages.OracleAWR.Instructions = 基于同一实例启动时间选择对应选项以及两个快照，然后按“生成性能报告”
Web.InternalTools.InfoPages.OracleAWR.InvalidSnapshots = 基于同一实例启动时间选择两个快照({0}和{1})
Web.InternalTools.InfoPages.OracleAWR.NumberOfQueriesToGraph = 图的查询数
Web.InternalTools.InfoPages.OracleAWR.ProbeInMemorySQLMonitor = ...探测内存SQL监视
Web.InternalTools.InfoPages.OracleAWR.ProbeInMemorySQLMonitor.Required = 必须选中“探测内存SQL监视”才能选择此选项
Web.InternalTools.InfoPages.OracleAWR.ProbeInMemorySQLMonitorIncludeAllExecutions = ......包括所有执行
Web.InternalTools.InfoPages.OracleAWR.ProbeOnDiskSQLMonitor = 探测磁盘SQL监视
Web.InternalTools.InfoPages.OracleAWR.ProbeOnDiskSQLMonitor.Required = 必须选中“探测磁盘SQL监视”才能选择此选项
Web.InternalTools.InfoPages.OracleAWR.ProbeOnDiskSQLMonitorIncludeAllExecutions = ...包括所有执行
Web.InternalTools.InfoPages.OracleAWR.ProbeVDollarTables = 探测V$表
Web.InternalTools.InfoPages.OracleAWR.ProbeVDollarTables.Required = 必须选择探测 V$ 表以选择该选项
Web.InternalTools.InfoPages.OracleAWR.ProbeVDollarTables.Required2 = 必须选择探测 V$ 表以选{0}或{1}
Web.InternalTools.InfoPages.OracleAWR.RefreshReportList = 刷新报告列表
Web.InternalTools.InfoPages.OracleAWR.Report = Oracle AWR报告
Web.InternalTools.InfoPages.OracleAWR.SearchForQueriesOnlyInFirstSnapshot = 搜索在开始快照中（而不是在结束快照中）显示的查询
Web.InternalTools.InfoPages.OracleAWR.SearchForQueriesOnlyInLastSnapshot = 搜索在结束快照中（而不是在开始快照中）显示的查询
Web.InternalTools.InfoPages.OracleAWR.SearchForQueriesWithMultiplePlans = 搜索含多个历史计划的查询
Web.InternalTools.InfoPages.OracleAWR.SnapshotNotFound = 未找到AWR快照：{0}
Web.InternalTools.InfoPages.OracleAWR.Status = 状态
Web.InternalTools.InfoPages.OracleAWR.SubmitBatchJob = 提交AWR报告批处理作业
Web.InternalTools.InfoPages.OracleAWR.UnusedIndexesInstructions = 选择对应选项以及两个快照，然后按“下载”
Web.InternalTools.InfoPages.OracleAWRInfo = Oracle AWR信息
Web.InternalTools.InfoPages.OracleAWRUnusedIndexesInfo = Oracle AWR未使用的索引信息
Web.InternalTools.InfoPages.OracleOutline = Oracle大纲
Web.InternalTools.InfoPages.OracleOutline.Category = 类别
Web.InternalTools.InfoPages.OracleOutline.Compatible = 兼容
Web.InternalTools.InfoPages.OracleOutline.Enabled = 已启用
Web.InternalTools.InfoPages.OracleOutline.Name = 名称
Web.InternalTools.InfoPages.OracleOutline.SQLText = SQL
Web.InternalTools.InfoPages.OracleOutline.Signature = 签名
Web.InternalTools.InfoPages.OracleOutline.TimeStamp = 时间戳
Web.InternalTools.InfoPages.OracleOutline.Used = 已用
Web.InternalTools.InfoPages.OracleOutline.Version = 版本
Web.InternalTools.InfoPages.OracleOutlineDetails = 大纲详细信息
Web.InternalTools.InfoPages.OracleOutlineHint.Hint = 提示
Web.InternalTools.InfoPages.OracleOutlineHint.Hints = 提示
Web.InternalTools.InfoPages.OracleOutlineHint.JoinPos = 连接位置
Web.InternalTools.InfoPages.OracleOutlineHint.Node = 节点
Web.InternalTools.InfoPages.OracleOutlineHint.Stage = 阶段
Web.InternalTools.InfoPages.OracleOutlineInfo = Oracle大纲信息
Web.InternalTools.InfoPages.OracleStatspack = Oracle Statspack
Web.InternalTools.InfoPages.OracleStatspack.Description = 说明
Web.InternalTools.InfoPages.OracleStatspack.ID = ID
Web.InternalTools.InfoPages.OracleStatspack.Instructions = 请基于同一实例启动时间选择两个快照，然后按下载
Web.InternalTools.InfoPages.OracleStatspack.SnaphshotChosen = 瞬态选取
Web.InternalTools.InfoPages.OracleStatspack.StartTime = 瞬态时间
Web.InternalTools.InfoPages.OracleStatspack.StartupTime = 实例启动
Web.InternalTools.InfoPages.OracleStatspackInfo = Oracle Statspack 信息
Web.InternalTools.InfoPages.PerfDownload.AvailDownloads = 可用的性能报告
Web.InternalTools.InfoPages.PerfDownload.CancelGeneration = 取消报告生成
Web.InternalTools.InfoPages.PerfDownload.Description = 说明
Web.InternalTools.InfoPages.PerfDownload.DownloadErrorMessages = 下载错误消息
Web.InternalTools.InfoPages.PerfDownload.DownloadPerfReport = 下载性能报告
Web.InternalTools.InfoPages.PerfDownload.EndTime = 结束时间
Web.InternalTools.InfoPages.PerfDownload.GenerateReport = 生成性能报告
Web.InternalTools.InfoPages.PerfDownload.Options = 选项
Web.InternalTools.InfoPages.PerfDownload.RunningBatchProcess = 批处理流程正在运行：{0}；进度：{1}
Web.InternalTools.InfoPages.PerfDownload.StartTime = 开始时间
Web.InternalTools.InfoPages.PostgreSQLPerfInfo.CannotReadAutoExplain.FdwNotAvailable = 无法读取Auto Explain计划，因为未安装fdw扩展
Web.InternalTools.InfoPages.PostgreSQLPerfInfo.PerfDownloadDescription = 在{0}启动了性能统计收集，统计为：{1}
Web.InternalTools.InfoPages.PostgreSQLPerfInfo.ReadAutoExplainPlans = 读取日志中的Auto Explain计划
Web.InternalTools.InfoPages.PostgreSQLPerfInfo.Title = PostgreSQL性能报告
Web.InternalTools.InfoPages.RuntimeEnvironment.EnvironmentVariables = 环境变量
Web.InternalTools.InfoPages.RuntimeEnvironment.InfoPage = 运行时环境信息
Web.InternalTools.InfoPages.RuntimeEnvironment.Key = 键值
Web.InternalTools.InfoPages.RuntimeEnvironment.SystemDetails = 系统详细信息
Web.InternalTools.InfoPages.RuntimeEnvironment.SystemProperties = 系统属性
Web.InternalTools.InfoPages.RuntimeEnvironment.Value = 值
Web.InternalTools.InfoPages.RuntimeEnvironment.VersionProperties = Guidewire版本
Web.InternalTools.InfoPages.SafePersistingOrder.Name = 实体
Web.InternalTools.InfoPages.SafePersistingOrder.Order = 顺序
Web.InternalTools.InfoPages.SafePersistingOrder.PreUpdateRules = 更新前
Web.InternalTools.InfoPages.SafePersistingOrder.Table = 表
Web.InternalTools.InfoPages.SafePersistingOrderInfo = 安全保持顺序
Web.InternalTools.InfoPages.SerializationInfo.DeserializedClasses = 反序列化的类
Web.InternalTools.InfoPages.SerializationInfo.IncludingWhitelistedClasses = 包括序列化白名单类中所列的项
Web.InternalTools.InfoPages.SerializationInfo.Title = 序列化信息
Web.InternalTools.InfoPages.ServerPerformance.Browser = 浏览器平均时间(ms)
Web.InternalTools.InfoPages.ServerPerformance.BrowserRequest = 准备请求
Web.InternalTools.InfoPages.ServerPerformance.BrowserResponse = 处理响应
Web.InternalTools.InfoPages.ServerPerformance.BrowserTotal = 总计
Web.InternalTools.InfoPages.ServerPerformance.ClearResults = 清除结果
Web.InternalTools.InfoPages.ServerPerformance.Disable = 禁用
Web.InternalTools.InfoPages.ServerPerformance.Enable = 启用
Web.InternalTools.InfoPages.ServerPerformance.EndToEnd = 总平均时间(ms)
Web.InternalTools.InfoPages.ServerPerformance.EndToEndDescription = 端到端
Web.InternalTools.InfoPages.ServerPerformance.ExportRaw = 将原始数据导出到CSV
Web.InternalTools.InfoPages.ServerPerformance.ExportSummary = 将摘要导出到CSV
Web.InternalTools.InfoPages.ServerPerformance.Page = 页面
Web.InternalTools.InfoPages.ServerPerformance.Requests = 请求
Web.InternalTools.InfoPages.ServerPerformance.Server = 服务器平均时间(ms)
Web.InternalTools.InfoPages.ServerPerformance.ServerSeenOnClient = 在客户端上可见
Web.InternalTools.InfoPages.ServerPerformance.ServerSeenOnServer = 在服务器上可见
Web.InternalTools.InfoPages.ServerPerformance.Title = 服务器性能
Web.InternalTools.InfoPages.ServerPerformanceDetailsWorksheet.ClientRendering = 客户端渲染
Web.InternalTools.InfoPages.ServerPerformanceDetailsWorksheet.RequestNumber = 请求编号
Web.InternalTools.InfoPages.ServerPerformanceDetailsWorksheet.RequestTime = 请求时间(ms)
Web.InternalTools.InfoPages.ServerPerformanceDetailsWorksheet.Server = 服务器
Web.InternalTools.InfoPages.ServerPerformanceDetailsWorksheet.Title = {2}上每次请求{1}页面的时间为{0}
Web.InternalTools.InfoPages.UpdateStatistics = 更新统计
Web.InternalTools.InfoPages.UpdateStatistics.AvailableUpdateStatisticsRuns = 有效更新统计运行
Web.InternalTools.InfoPages.UpdateStatistics.BatchParams = 更新统计批处理作业形式参数
Web.InternalTools.InfoPages.UpdateStatistics.Incremental = 递增
Web.InternalTools.InfoPages.UpdateStatistics.IncrementalUpdateStats = 递增更新统计
Web.InternalTools.InfoPages.UpgradeInfo = 升级和版本
Web.InternalTools.InfoPages.UpgradeInfo.AWRSnapshots = AWR快照
Web.InternalTools.InfoPages.UpgradeInfo.AffectedRowCount = 受影响的行计数
Web.InternalTools.InfoPages.UpgradeInfo.Applicable = 适用
Web.InternalTools.InfoPages.UpgradeInfo.BackOutCannotStartAnotherBackOutInProgress = 回退已在进行中。
Web.InternalTools.InfoPages.UpgradeInfo.BackOutCannotStartMigrationInProgress = 数据库升级完成前无法启动回退。请过几分钟后再试。
Web.InternalTools.InfoPages.UpgradeInfo.BackOutProgress = 回退进度：
Web.InternalTools.InfoPages.UpgradeInfo.BeginIntervalTime = 开始间隔时间
Web.InternalTools.InfoPages.UpgradeInfo.ChunkSize = 区块大小
Web.InternalTools.InfoPages.UpgradeInfo.ColumnName = 列
Web.InternalTools.InfoPages.UpgradeInfo.ColumnsToDecrypt = 需解密的列
Web.InternalTools.InfoPages.UpgradeInfo.ColumnsToEncrypt = 需加密的列
Web.InternalTools.InfoPages.UpgradeInfo.Completed = 已完成
Web.InternalTools.InfoPages.UpgradeInfo.ConfirmBackout.Confirm = 在回退之前，务必关闭所有具有新配置的节点。
Web.InternalTools.InfoPages.UpgradeInfo.ConfirmBackout.Continue = 继续
Web.InternalTools.InfoPages.UpgradeInfo.ConfirmBackout.HasActiveTargetServers = 检测到以下包含新配置的活动服务器。请确保它们已正常关闭。
Web.InternalTools.InfoPages.UpgradeInfo.ConfirmBackout.NoActiveTargetServers = 未检测到包含新配置的活动服务器。
Web.InternalTools.InfoPages.UpgradeInfo.ConfirmBackout.Title = 关闭新节点
Web.InternalTools.InfoPages.UpgradeInfo.CurrentVersion = 当前版本：{0}
Web.InternalTools.InfoPages.UpgradeInfo.DBID = DBID
Web.InternalTools.InfoPages.UpgradeInfo.Database = 数据库
Web.InternalTools.InfoPages.UpgradeInfo.DeferredUpgrade = 延迟升级任务的状态
Web.InternalTools.InfoPages.UpgradeInfo.DeleteDetails = 删除详细信息
Web.InternalTools.InfoPages.UpgradeInfo.DeleteWarning = 是否确定要删除此次升级的所有详细信息？
Web.InternalTools.InfoPages.UpgradeInfo.Description = 说明
Web.InternalTools.InfoPages.UpgradeInfo.DetailedInfo = 详细信息
Web.InternalTools.InfoPages.UpgradeInfo.Details = 升级详细信息
Web.InternalTools.InfoPages.UpgradeInfo.Download = 下载
Web.InternalTools.InfoPages.UpgradeInfo.DownloadAWR = 下载AWR
Web.InternalTools.InfoPages.UpgradeInfo.DownloadDetails = 下载详细信息
Web.InternalTools.InfoPages.UpgradeInfo.Duration = 持续时间（hh\:mm\:ss）
Web.InternalTools.InfoPages.UpgradeInfo.DurationDelta = 持续时间增量（秒）
Web.InternalTools.InfoPages.UpgradeInfo.EncryptChunks = 加密更新区块
Web.InternalTools.InfoPages.UpgradeInfo.EncryptSteps = 加密步骤
Web.InternalTools.InfoPages.UpgradeInfo.EndIntervalTime = 结束间隔时间
Web.InternalTools.InfoPages.UpgradeInfo.EndTime = 结束时间
Web.InternalTools.InfoPages.UpgradeInfo.ForceBackout.Button = 强制回退
Web.InternalTools.InfoPages.UpgradeInfo.ForceBackout.Confirm = 下面列出的节点已启动滚动升级。在强制回退之前，请确认它处于不活动状态。
Web.InternalTools.InfoPages.UpgradeInfo.ForceBackout.Continue = 继续
Web.InternalTools.InfoPages.UpgradeInfo.ForceBackout.ServerId = 服务器ID
Web.InternalTools.InfoPages.UpgradeInfo.ForceBackout.Title = 强制回退
Web.InternalTools.InfoPages.UpgradeInfo.IDNameAfterUpgrade = 升级后的ID名称
Web.InternalTools.InfoPages.UpgradeInfo.IDNameBeforeUpgrade = 升级前的ID名称
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.AllRowsFixed = 所有行均已修复。请单击“再次运行”验证您的更改。
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Column = 列
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Count = 计数
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Fixed = 固定
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Message = 消息
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.NoBatchRoleInCluster = 验证类型键值是批处理，但目前没有群集成员可以执行它。
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.NoProblems = 没有孤立的类型键值：单击“确定”继续回退。在所有服务器上部署以前版本的WAR文件，然后单击此处的“关闭”和主屏幕上的“完成回退”。
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.RunAgain = 再次运行
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.StartProcess = 开始回退过程
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Table = 表
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.ToBackOut = 要回退此滚动升级，您需要验证没有孤立的类型键值。请单击执行验证，然后修复任何错误。
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Typelist = 类型列表
Web.InternalTools.InfoPages.UpgradeInfo.InitiateBackout.Unfixed = {0}个未修复的行（共{1}行）
Web.InternalTools.InfoPages.UpgradeInfo.InstanceNumber = 实例编号
Web.InternalTools.InfoPages.UpgradeInfo.Name = 名称
Web.InternalTools.InfoPages.UpgradeInfo.PhaseType = 阶段类型
Web.InternalTools.InfoPages.UpgradeInfo.Phases = 升级阶段
Web.InternalTools.InfoPages.UpgradeInfo.PostUpgrade = 升级后
Web.InternalTools.InfoPages.UpgradeInfo.Priority = 优先级
Web.InternalTools.InfoPages.UpgradeInfo.Query = 查询
Web.InternalTools.InfoPages.UpgradeInfo.RemoveDetailData = 移除明细数据
Web.InternalTools.InfoPages.UpgradeInfo.RollingInProgress = 升级正在进行中。请刷新浏览器以查看当前状态。
Web.InternalTools.InfoPages.UpgradeInfo.RowCountAfterUpgrade = 升级后的行计数
Web.InternalTools.InfoPages.UpgradeInfo.RowCountBeforeUpgrade = 升级前的行计数
Web.InternalTools.InfoPages.UpgradeInfo.RowCountChange = 行计数更改
Web.InternalTools.InfoPages.UpgradeInfo.RowCounts = 行计数
Web.InternalTools.InfoPages.UpgradeInfo.RowsUpdated = 已更新的行
Web.InternalTools.InfoPages.UpgradeInfo.SelectStmt = 选择语句
Web.InternalTools.InfoPages.UpgradeInfo.SnapshotID = 快照ID
Web.InternalTools.InfoPages.UpgradeInfo.SnapshotLevel = 快照级别
Web.InternalTools.InfoPages.UpgradeInfo.SourceMajorVersion = 源主版本
Web.InternalTools.InfoPages.UpgradeInfo.SourceMinorVersion = 源次版本
Web.InternalTools.InfoPages.UpgradeInfo.SourcePlMinorVersion = 源平台次要版本
Web.InternalTools.InfoPages.UpgradeInfo.SourcePlatformVersion = 源平台主要版本
Web.InternalTools.InfoPages.UpgradeInfo.SourceVersion = 源版本
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line1 = 要继续进行完整升级，您应该：
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line2 = 1.关闭所有节点
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line3 = 2.备份您的数据库
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line4 = 3.将新配置部署到任何具有批处理角色的节点
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line5 = 4.启动该节点并等待初始数据库升级完成
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line6 = 5.部署并启动其他所有节点
Web.InternalTools.InfoPages.UpgradeInfo.StartFull.Line7 = 升级将在服务器成功启动后完成。是否确定要继续？
Web.InternalTools.InfoPages.UpgradeInfo.StartTime = 开始时间
Web.InternalTools.InfoPages.UpgradeInfo.StartupTime = 启动时间
Web.InternalTools.InfoPages.UpgradeInfo.StatementType = 语句类型
Web.InternalTools.InfoPages.UpgradeInfo.Statements = 账单
Web.InternalTools.InfoPages.UpgradeInfo.StatsNotUpdatedNoRecentRuns = 升级期间未更新任何统计数据且最近没有运行过更新统计数据批处理。
Web.InternalTools.InfoPages.UpgradeInfo.StatsNotUpdatedRecentRuns = 升级期间未更新统计数据，最近已运行了更新统计数据批处理。（请参阅屏幕下方的统计表。）
Web.InternalTools.InfoPages.UpgradeInfo.StatsUpdated = 统计数据已在升级期间更新
Web.InternalTools.InfoPages.UpgradeInfo.Status = 状态
Web.InternalTools.InfoPages.UpgradeInfo.StepName = 名称
Web.InternalTools.InfoPages.UpgradeInfo.StepNumber = 编号
Web.InternalTools.InfoPages.UpgradeInfo.StmtType = 语句类型
Web.InternalTools.InfoPages.UpgradeInfo.StorageInfo = 存储信息
Web.InternalTools.InfoPages.UpgradeInfo.TableName = 表名称
Web.InternalTools.InfoPages.UpgradeInfo.TableRegistry = 表注册表
Web.InternalTools.InfoPages.UpgradeInfo.TargetChunkSize = 目标区块大小
Web.InternalTools.InfoPages.UpgradeInfo.TargetMajorVersion = 目标主版本
Web.InternalTools.InfoPages.UpgradeInfo.TargetMinorVersion = 目标次版本
Web.InternalTools.InfoPages.UpgradeInfo.TargetPlMinorVersion = 目标平台次要版本
Web.InternalTools.InfoPages.UpgradeInfo.TargetPlatformVersion = 目标平台主要版本
Web.InternalTools.InfoPages.UpgradeInfo.TargetVersion = 目标版本
Web.InternalTools.InfoPages.UpgradeInfo.TopDescription = 版本格式：Guidewire内部版本.客户内部版本（平台主要版本、平台次要版本、应用程序主要版本、应用程序次要版本、扩展版本）。
Web.InternalTools.InfoPages.UpgradeInfo.Total = 总计
Web.InternalTools.InfoPages.UpgradeInfo.Type = 类型
Web.InternalTools.InfoPages.UpgradeInfo.UpdateStmt = 更新语句
Web.InternalTools.InfoPages.UpgradeInfo.UpgradeDatabaseStorageInfo = 升级数据库存储信息
Web.InternalTools.InfoPages.UpgradeInfo.UpgradeRowCounts = 升级行计数
Web.InternalTools.InfoPages.UpgradeInfo.UpgradeSteps = 步骤
Web.InternalTools.InfoPages.UpgradeInfo.Version = 版本
Web.InternalTools.InfoPages.UpgradeInfo.VersionTrigger = 版本触发器
Web.InternalTools.InfoPages.UpgradeInfo.VersionTriggerStatements = 版本触发器语句
Web.InternalTools.InfoPages.UpgradeInfo.VersionTriggers = 版本触发器
Web.InternalTools.InfoPages.UpgradeInfo.VersionTriggersAndStatements = 版本触发器和语句
Web.InternalTools.InfoPages.UpgradeInfo.ViewDetails = 查看详细信息
Web.InternalTools.InfoPages.Welcome = 欢迎来到信息页面。选择要显示的信息页面。
Web.InternalTools.InfoPaqes.OracleAWR.DeleteConfirmation = 是否确定要删除 ID 为 {0} 的报告?
Web.InternalTools.IntentionalLogging = 有意日志记录
Web.InternalTools.IntentionalLogging.Action = 操作
Web.InternalTools.IntentionalLogging.Description = 单击“全局禁用”按钮将禁用所有可用的功能。\n单击“全局启用”按钮可将功能恢复到前一状态。
Web.InternalTools.IntentionalLogging.Name = 元素名称
Web.InternalTools.IntentionalLogging.PerTagSettings = 按元素设置
Web.InternalTools.IntentionalLogging.Status = 状态
Web.InternalTools.IntentionalLogging.StatusOff = 已禁用
Web.InternalTools.IntentionalLogging.StatusOn = 已启用
Web.InternalTools.IntentionalLogging.TabDescription = 在此选项卡中，您可以更改有意日志记录的日志记录设置。您可以为特定的有意日志记录元素开启或关闭日志记录，或者（在顶部栏中）启用/禁用整个功能。
Web.InternalTools.IntentionalLogging.TooltipDisable = 将记住特定标记的状态
Web.InternalTools.IntentionalLogging.TooltipEnable = 将恢复特定标记的状态
Web.InternalTools.IntentionalLogging.TurnAllOff = 关闭有意日志记录
Web.InternalTools.IntentionalLogging.TurnAllOn = 打开有意日志记录
Web.InternalTools.IntentionalLogging.TurnOff = 禁用
Web.InternalTools.IntentionalLogging.TurnOn = 启用
Web.InternalTools.JProfiler = JProfiler
Web.InternalTools.JProfiler.dump = 转储剖析数据
Web.InternalTools.JProfiler.startcpu = 启动CPU剖析
Web.InternalTools.JProfiler.startmemory = 启动内存剖析
Web.InternalTools.JProfiler.startthread = 启动线程剖析
Web.InternalTools.JProfiler.stop = 停止剖析
Web.InternalTools.JProfiler.stopAndRestartCPUAndThread = 停止并重新启动CPU和线程剖析
Web.InternalTools.JProfiler.unavailable = JProfiler 无效。请在命令行使用 JProfiler 代理启动服务器，以启用配置文件集合并从此页转储。
Web.InternalTools.Link = 服务器工具
Web.InternalTools.LoadCatastropheSampleCPPolicies = 加载巨灾示例保单（企业财产险）
Web.InternalTools.LocationsAccessed = 已访问的地点
Web.InternalTools.LocationsAccessed.ID = ID
Web.InternalTools.LocationsAccessed.Locations = 按地点统计的使用情况（{0}位置总计）：
Web.InternalTools.LocationsAccessed.NumVisits = 访问次数
Web.InternalTools.LocationsAccessed.Sections = 按扇区统计的使用情况（{0}扇区总计）：
Web.InternalTools.LocationsAccessed.Type = 类型
Web.InternalTools.LogDisplay = 日志输出
Web.InternalTools.MBean.Back = 返回到管理bean
Web.InternalTools.MBean.BeanName = Bean名称
Web.InternalTools.MBean.MBean = Guidewire托管Bean属性
Web.InternalTools.MBean.MBeans = MBean
Web.InternalTools.MBean.PropertyName = MBean属性名称
Web.InternalTools.MBean.Result = 结果
Web.InternalTools.MBean.Value = 值
Web.InternalTools.ObjectGraph.From = 自表
Web.InternalTools.ObjectGraph.LinkName = 财产名称
Web.InternalTools.ObjectGraph.Menu = 对象图
Web.InternalTools.ObjectGraph.Name = 名称
Web.InternalTools.ObjectGraph.Parent = 上级组
Web.InternalTools.ObjectGraph.Refresh = 加载引用
Web.InternalTools.ObjectGraph.Root = 根
Web.InternalTools.ObjectGraph.To = 至表
Web.InternalTools.PCSampleData = PC示例数据
Web.InternalTools.PlannedShutdownPopup.DateTime = 关闭日期和时间
Web.InternalTools.PlannedShutdownPopup.ScheduleShutdown = 安排关闭
Web.InternalTools.PlannedShutdownPopup.ScheduleShutdown.Confirmation = 是否确定要开始计划的{0}关闭？
Web.InternalTools.PlannedShutdownPopup.TerminateBatchProcesses = 终止批处理
Web.InternalTools.PlannedShutdownPopup.Title = 安排计划的关闭
Web.InternalTools.PlannedShutdownStatusPopup.BgTaskComponents = 后台任务组件
Web.InternalTools.PlannedShutdownStatusPopup.LV.Name = 全名
Web.InternalTools.PlannedShutdownStatusPopup.LV.StopRequested = 已请求停用
Web.InternalTools.PlannedShutdownStatusPopup.LV.Stopped = 已停用
Web.InternalTools.PlannedShutdownStatusPopup.PlannedShutdownNotScheduled = 此节点没有安排计划的关闭。
Web.InternalTools.PlannedShutdownStatusPopup.Title = {0}关闭状态
Web.InternalTools.Plugin.Distributed = 已分摊
Web.InternalTools.Plugin.Started = 已启动
Web.InternalTools.Plugin.Stopped = 已停用
Web.InternalTools.Plugin.Unknown = 未知
Web.InternalTools.PotentialMembersOfCluster = 群集外部可能的活动节点
Web.InternalTools.Profiler.ViewType.AggregatedQueries = 累计查询
Web.InternalTools.Profiler.ViewType.Chrono = 长期
Web.InternalTools.Profiler.ViewType.Elapsed = 实耗时间
Web.InternalTools.Profiler.ViewType.GroupFrames = 组框架
Web.InternalTools.Profiler.ViewType.GroupStacks = 组堆栈
Web.InternalTools.Profiler.ViewType.RuleExecution = 规则执行
Web.InternalTools.Profiler.ViewType.SearchByQuery = 按查询搜索
Web.InternalTools.Profiler.ViewType.StackQuerySummary = 堆栈查询
Web.InternalTools.Profiler.ViewType.StacksGrouped = 已分组堆栈
Web.InternalTools.Reload = 重新加载
Web.InternalTools.Reload.ClearGosuTemplateCache = 清除Gosu模板缓存
Web.InternalTools.Reload.DisplayNames = 重新加载显示名称
Web.InternalTools.Reload.GSTemplates = 重新加载Web模板
Web.InternalTools.Reload.PCF = 重新加载PCF文件
Web.InternalTools.Reload.WorkflowEngine = 重新加载工作流引擎
Web.InternalTools.ReloadUI = 重新加载用户界面
Web.InternalTools.ReloadUI.Message = 单击该按钮以重新加载用户界面：
Web.InternalTools.ReloadUI.Reload = 重新加载
Web.InternalTools.SampleData = 示例数据
Web.InternalTools.SampleData.ClickToCreate = 单击某方法以创建数据
Web.InternalTools.SampleData.Created = 已创建新的{0}数据： {1}
Web.InternalTools.SampleDataParams = 方法形式参数
Web.InternalTools.SampleDataParams.GenData = 生成数据
Web.InternalTools.ServerToolsDisclaimer = Guidewire提供这些不受支持的工具是为了帮助您执行某些管理任务。\n在《{Global.AppName}系统设置管理指南》中，会对这些工具进行必要的介绍。
Web.InternalTools.SetLogLevel = 设置日志级别
Web.InternalTools.SetLogLevel.CurLevel.Actual = 当前实际级别
Web.InternalTools.SetLogLevel.CurLevel.Configured = 当前配置的级别
Web.InternalTools.SetLogLevel.Loggers = 记录器
Web.InternalTools.SetLogLevel.NewLevel.Configured = 新配置的级别
Web.InternalTools.SetLogLevel.NoneLevel = 无（使用父记录器）
Web.InternalTools.SetLogLevel.SetLevel = 设置级别
Web.InternalTools.SmokeTests = 初步测试
Web.InternalTools.SmokeTests.Delay = 延误
Web.InternalTools.SmokeTests.Loops = 重复
Web.InternalTools.SmokeTests.Message = 单击一个测试名称开始：
Web.InternalTools.SmokeTests.OfferToStop = 提供用于停止
Web.InternalTools.SmokeTests.Run = 运行
Web.InternalTools.SmokeTests.RunAll = 运行所有测试
Web.InternalTools.SmokeTests.RunChecked = 已检查运行
Web.InternalTools.SmokeTests.RunScratchScript = 运行Scratch冒烟测试
Web.InternalTools.SmokeTests.ScratchPage = 初始页面
Web.InternalTools.SmokeTests.ScratchScript = Scratch初步测试表
Web.InternalTools.SmokeTests.Search = 搜索
Web.InternalTools.SmokeTests.SearchString = 搜索字符串：
Web.InternalTools.SmokeTests.TreeView = 树视图
Web.InternalTools.UnsupportedToolsDisclaimer = 这些工具仅用于开发，不支持在生产系统中使用。\n有关详细信息，请咨询Guidewire支持代表。
Web.InternalTools.UnusedServerRoles = 未使用的服务器角色
Web.InternalTools.UnusedServerRoles.Description = 以下服务器角色在任何正在运行的服务器上均未启用，因此某些服务可能不可用：
Web.InternalTools.UnusedServerRoles.ServerRole = 服务器角色
Web.InternalTools.UpLink = 返回
Web.InternalTools.Verification = 验证
Web.InternalTools.Verification.Failed = 验证失败
Web.InternalTools.Verification.Message = 单击该按钮以验证PCF文件：
Web.InternalTools.Verification.Succeeded = 验证成功
Web.InternalTools.Verification.VerifyAll = 全部验证
Web.InternalTools.ViewLogs = 查看日志
Web.InternalTools.ViewLogs.LogFile = 日志文件：
Web.InternalTools.ViewLogs.LogFilterRegex = 过滤器(grep)
Web.InternalTools.ViewLogs.MaxLines = 要显示的最大行数(tail)
Web.InternalTools.ViewLogs.MaxLinesNotSpecifiedMsg = 请指定一个值
Web.InternalTools.ViewLogs.MaxLinesTooBigMsg = 显示的行不能超过 10000 行
Web.InternalTools.ViewLogs.MaxLinesTooSmallMsg = 至少必须显示 1 行
Web.InternalTools.ViewLogs.ViewLogs = 查看日志
Web.InternalTools.WorkQueueInfo.ActiveThreads = 活动线程计数
Web.InternalTools.WorkQueueInfo.DownloadQueueInfo.MaxHoursInItemDist = 生成项目分配的最后小时数
Web.InternalTools.WorkQueueInfo.DownloadQueueInfo.MaxNumberOfBatches = 批处理最大数（针对每个工人）
Web.InternalTools.WorkQueueInfo.DownloadQueueInfo.MaxNumberOfExecutors = 可显示的最大执行人数
Web.InternalTools.WorkQueueInfo.DownloadQueueInfo.MaxNumberOfWriterRuns = 可显示的编写程序最大运行数
Web.InternalTools.WorkQueueInfo.DownloadQueueInfoConfigure = 为报告指定记录限额
Web.InternalTools.WorkQueueInfo.DownloadRawData = 下载原始数据
Web.InternalTools.WorkQueueInfo.MaximumPoolSize = 最大池大小
Web.InternalTools.WorkQueueInfo.OnlyActiveExecutorsAreShown = 仅显示活动的执行人
Web.InternalTools.WorkQueueInfo.OnlyActiveWorkersAreShown = 仅显示活动的工作线程
Web.InternalTools.WorkQueueInfo.OnlyLastNRecordsAreShown = 只显示最近的{0}个记录
Web.InternalTools.WorkQueueInfo.PoolSize = 池大小
Web.InternalTools.WorkQueueInfo.StatisticsTitle = 项目统计
Web.InternalTools.WorkQueueInfo.Status.Running = 正在运行
Web.InternalTools.WorkQueueInfo.Status.Stopped = 已停用
Web.InternalTools.WorkQueueInfo.Status.Stopping = 正在停用
Web.InternalTools.WorkQueueInfo.Title = 工作队列信息
Web.InternalTools.WorkQueueLv.Action = 操作
Web.InternalTools.WorkQueueLv.AvailableCount = 有效
Web.InternalTools.WorkQueueLv.CheckedOutCount = 已检出
Web.InternalTools.WorkQueueLv.DownloadHistory = 下载历史记录
Web.InternalTools.WorkQueueLv.DownloadHistory.EndDate = 结束日期
Web.InternalTools.WorkQueueLv.DownloadHistory.NoHistory = 未曾执行该工作队列的写入程序，因此其历史记录为空。
Web.InternalTools.WorkQueueLv.DownloadHistory.StartDate = 开始日期
Web.InternalTools.WorkQueueLv.DownloadHistory.StartDateCannotBeGreaterThanEndDate = 开始日期不能大于结束日期。
Web.InternalTools.WorkQueueLv.DownloadHistoryConfigure = {0}，选择下载记录的日期范围
Web.InternalTools.WorkQueueLv.ExecutorsRunningCount = 执行人正在运行
Web.InternalTools.WorkQueueLv.FailedCount = 失败
Web.InternalTools.WorkQueueLv.NotifyExecutor = 通知
Web.InternalTools.WorkQueueLv.RawDataDownloadConfigure = 选择下载记录的日期时间范围
Web.InternalTools.WorkQueueLv.RawDataDownloadConfigure.EndDate = 结束日期和时间
Web.InternalTools.WorkQueueLv.RawDataDownloadConfigure.StartDate = 开始日期和时间
Web.InternalTools.WorkQueueLv.RawDataDownloadConfigure.StartDateCannotBeGreaterThanEndDate = 开始日期不能大于结束日期。
Web.InternalTools.WorkQueueLv.Restart = 重新启动工作线程
Web.InternalTools.WorkQueueLv.RestartExecutor = 重新启动
Web.InternalTools.WorkQueueLv.RunWriter = 运行编写程序
Web.InternalTools.WorkQueueLv.Stop = 停止工作线程
Web.InternalTools.WorkQueueLv.StopExecutor = 停用
Web.InternalTools.WorkQueueLv.Waken = 通知工作线程
Web.InternalTools.WorkQueueLv.WorkQueueName = 工作队列
Web.InternalTools.WorkQueueLv.WorkersRunningCount = 工作线程正在运行
Web.InternalTools.WorkQueueLv.WriterStatus = 编写程序状态
Web.InternalTools.WorkQueueLv.WriterStatus.Executing = 在{0}执行（自{1}起）
Web.InternalTools.WorkQueueLv.WriterStatus.LastExecuted = 上次执行于{0}
Web.InternalTools.WorkQueueLv.WriterStatus.Message = {0}时间{1}
Web.InternalTools.WorkQueueLv.WriterStatus.NeverExecuted = 从未执行
Web.InternalTools.WorkQueueLv.WriterStatus.Starting = 启动开始于{0}
Web.InternalTools.WorkflowTriggerTool = 工作流触发工具
Web.InternalTools.WorkflowTriggerTool.BranchNumber = 分支编号
Web.InternalTools.WorkflowTriggerTool.JobNumber = 交易号
Web.InternalTools.WorkflowTriggerTool.SubmitTrigger = 提交触发器
Web.InternalTools.WorkflowTriggerTool.TriggerInfo = 例如：FinishExtSubmitting或FinishExtDeclining。字符串必须为tl_pc_policy.xml中的类型代码
Web.InternalTools.WorkflowTriggerTool.TriggerToCall = 要调用的触发器
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.BeforeBeginning = 在开始升级前，请确认已完成以下步骤：
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.Condition1 = 所有类型列表已由开发人员编制文档
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.Condition2 = Guidewire建议在customer-build.properties中更新建筑物说明
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.Condition3 = 已确认符合滚动升级条件，正在比较开发环境的WAR文件与生产环境的WAR文件
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.RecommendSchemaVerifier = 如果要部署的更改会影响数据库架构，Guidewire建议您在滚动升级之前先运行架构验证程序。
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.RecommendSchemaVerifier.GoTo = 转到“{Web.InternalTools.InfoPages.DatabaseTableInfo}”页面
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.Recommendation = 建议
Web.InternalTools.infoPages.UpgradeInfo.StartRolling.UpgradeEachInstance = 通过部署适当的WAR文件升级每个实例
Web.InvolvedParty.Error.AlreadyExists = 相关方“{0}”已存在。
Web.IssuanceComplete.ViewIssuance = 查看您已出单的保单(#{0})
Web.IssuanceWizard.Title = 开具支票{0}
Web.Job.APDProductDefinition.Title = 保险产品定义
Web.Job.Assign.Title = 分配交易
Web.Job.BillingSystem.Archived.Warning = 此保单的计费信息已存档。无法承保或签发保单交易。
Web.Job.Cancellation.Quoting = 您的取消正在报价。
Web.Job.ChangeNonIssuedPolicy = 您正在更改未签发的保单
Web.Job.ChangeRewriteNewAccountPolicy = 您正在更改已重新填写至新账户的保单。该待处理交易中的更改不会应用到重新填写的{0}号保单。
Web.Job.CloseDate = 结束日期
Web.Job.Conflict.ConflictDate = 冲突的生效日期
Web.Job.Conflict.ConflictValue = 冲突
Web.Job.Conflict.Description = 项目
Web.Job.Conflict.Done = 提交
Web.Job.Conflict.Done.Confirm = 警告： 无法撤销已提交的更改。是否确定要继续？
Web.Job.Conflict.Instructions = 此保单交易中指定的某些值与未来生效日期的更改冲突。请指定要覆盖的未来冲突，然后单击“提交”。\n\n警告：无法撤销已提交的更改。
Web.Job.Conflict.NewValue = {0}生效{1}
Web.Job.Conflict.None = 没有要解决的冲突。
Web.Job.Conflict.OverrideAll = 覆盖所有
Web.Job.Conflict.OverrideNone = 不覆盖
Web.Job.Conflict.ShouldOverride = 是否覆盖未来的冲突？
Web.Job.Conflict.Unresolved = 具有报价之前必须解决的无序冲突。请访问“保单复核”步骤以解决冲突。
Web.Job.Coverable.EffectiveDate = 生效日期
Web.Job.Coverable.ExpirationDate = 到期日期
Web.Job.Coverable.Split = 拆分
Web.Job.CreateDate = 创建日期
Web.Job.Description = 说明
Web.Job.DetailsTitle = {0}详细信息
Web.Job.EffectiveDate = 生效日期
Web.Job.Exposure.EffectiveDate = 生效日期
Web.Job.Exposure.ExpirationDate = 到期日期
Web.Job.Exposure.Split = 拆分
Web.Job.FileLinks.Title = 关联的文件
Web.Job.Filter.All = 所有
Web.Job.Filter.Status.Complete = 完成
Web.Job.Filter.Status.Open = 未完成
Web.Job.FinalAuditCompleted = 最终审计已完成。如果此更改已绑定，审计产生的所有费用都将反转而需要新的审计。是否确定要继续？
Web.Job.FinalAuditCompletedCancellation = 最终审计已完成。如果继续此取消操作，审计产生的所有费用都将冲销而需要新的审计。是否确定要继续？
Web.Job.FinalAuditCompletedFlatCancellation = 最终审计已完成。如果继续此取消操作，审计中的所有更改都将冲销。是否确定要继续？
Web.Job.FinalAuditCompletedReinstatement = 取消最终审计已完成。如果继续此复效操作，审计中的所有更改都将冲销。是否确定要继续？
Web.Job.FuturePeriod.Conflicts.Bound.Tab = {0}个冲突的更改
Web.Job.FuturePeriod.Conflicts.Bound.Title = 您做出的某些更改与绑定更改有冲突。这些更改如下所列。
Web.Job.FuturePeriod.Conflicts.Unbound.Tab = {0}个冲突的更改
Web.Job.FuturePeriod.Conflicts.Unbound.Title = 您做出的某些更改与当前续保有冲突。这些更改如下所列。
Web.Job.FuturePeriodExists = 未来一定期间内此保单交易不会更新该保单。
Web.Job.JobFile = 查看保单交易
Web.Job.JobType = 交易类型
Web.Job.NotAllowed.Message = 无法对保险产品类型“{1}”的保单启动{0}，因为未对向导流程启用该保险产品。
Web.Job.NotAllowed.ReturnLink = 返回摘要
Web.Job.NotAllowed.Title = 不允许
Web.Job.Number = 交易号
Web.Job.NumberHash = 交易号
Web.Job.OOS.CancelWarning = {0}是无序交易。该保单取消生效{1}。
Web.Job.OOS.OOSEEvaluationWarning = 具有核保项，在未来必须检查。
Web.Job.OOS.OOSEValidationWarning = 具有校验错误，在未来必须修正。
Web.Job.OOS.VerifyOOSChange = 这是无序交易。是否确定要继续？
Web.Job.OOS.Warning = {0}是无序交易。{1}有未来交易。
Web.Job.OOSEPanelSet.NextBlockedSliceButton = 下一个阻止的日期
Web.Job.Offering.Selection = 保障组合选择
Web.Job.PeriodDisplayStatus = 当前状态
Web.Job.Policy.Dates = 保单日期
Web.Job.Policy.Period = 最终保单期间
Web.Job.Policy.Period.EffectiveDate = 生效日期
Web.Job.Policy.Period.ExpirationDate = 到期日期
Web.Job.Policy.Period.PolicyPeriod = 保单期间
Web.Job.Policy.Period.Status = 状态
Web.Job.Policy.Period.TermNumber = 期限数
Web.Job.Policy.RiskAnalysis = 风险分析
Web.Job.PolicyIsCanceledAsOf = 此保单自{0}起取消
Web.Job.Preempted.Conflicts.Tab = 冲突的更改
Web.Job.Preempted.Conflicts.Title = 您做出的某些更改与绑定的更改有冲突。这些更改如下所列。
Web.Job.Preempted.Warning = 您的{0}已被{1}占先。继续之前，需要首先处理这些优先权。
Web.Job.SideBySide.ActionButtonsLabel = 操作
Web.Job.SideBySide.AddSideBySide = 添加并行版本
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PACollisionCov = 车辆损失险
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAComprehensiveCov = 综合险
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PALiabilityCov = 责任险
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PALimitedMexicoCov = 墨西哥
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAMedPayCov = 医疗费
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PARentalCov = 租赁
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PATowingLaborCov = 拖车
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAUIMBICov = UIM-BI
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAUIMPDCov = UIM-PD
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAUMBICov = UIM - 人身伤害
Web.Job.SideBySide.CoveragePattern.PersonalAutoLine.PAUMPDCov = UM-PD
Web.Job.SideBySide.DeletePeriod = 删除期间
Web.Job.SideBySide.DuplicatePeriod = 重复期间
Web.Job.SideBySide.DuplicatePeriod.ConfirmationMsg = 是否确定要重复期间{0}？
Web.Job.SideBySide.Errors.FailedOOSEValidation = 未处理的未来校验错误
Web.Job.SideBySide.Errors.InvalidQuote = 无效报价
Web.Job.SideBySide.Errors.InvalidRate = 费率无效
Web.Job.SideBySide.Errors.QuoteException = 无法对下列期间报价：
Web.Job.SideBySide.Errors.QuoteHidden = 客服代表(CSR)看不到的报价信息
Web.Job.SideBySide.Errors.RequiredCovTerm = 需要{0}。
Web.Job.SideBySide.Errors.ResolveUnhandledOOSConflicts = 具有并行运行之前必须解决的无序冲突。请访问“保单复核”步骤以解决冲突。
Web.Job.SideBySide.Errors.ResolveUnhandledPreemption = 请在并排运行之前解决所有未处理的优先权。
Web.Job.SideBySide.Errors.UWIssuesBlockBind = 核保人审批需要绑定
Web.Job.SideBySide.Errors.UWIssuesBlockIssuance = 签发需要核保人批准
Web.Job.SideBySide.Errors.UWIssuesBlockOther = 存在其它核保项
Web.Job.SideBySide.Errors.UWIssuesBlockQuote = 核保项阻止报价
Web.Job.SideBySide.Errors.UWIssuesBlockRate = 核保项阻止保费计算
Web.Job.SideBySide.Errors.UnexpectedException = 报价时遇到意外的异常
Web.Job.SideBySide.Errors.UnhandledOOSConflict = 未处理的无序(OOS)冲突
Web.Job.SideBySide.Errors.UnhandledPreemption = 未处理的优先权
Web.Job.SideBySide.Errors.ValidationErrors = 校验错误
Web.Job.SideBySide.Errors.ValidationWarnings = 校验警告
Web.Job.SideBySide.ForceSync = 重置
Web.Job.SideBySide.Go = 启动并行比较
Web.Job.SideBySide.LineCoveragesLabel = 所有车辆的承保范围
Web.Job.SideBySide.OptionCovTermPattern.PersonalAutoLine.PAMedLimit = 限额
Web.Job.SideBySide.OptionCovTermPattern.PersonalAutoLine.PAUIMPDLimit = 限额
Web.Job.SideBySide.OptionCovTermPattern.PersonalAutoLine.PAUMPDLimit = 限额
Web.Job.SideBySide.PackageCovTermPattern.PersonalAutoLine.PALiability = 包
Web.Job.SideBySide.PackageCovTermPattern.PersonalAutoLine.PAUIMBI = 人身伤害限额
Web.Job.SideBySide.PackageCovTermPattern.PersonalAutoLine.PAUMBI = 人身伤害限额
Web.Job.SideBySide.PersonalAuto.PageTitle = 个人自动报价比较
Web.Job.SideBySide.PersonalAuto.VehicleCoverageTitle = 按车辆分类的承保范围
Web.Job.SideBySide.PolicyPeriodBranchName = 名称
Web.Job.SideBySide.PolicyPremium = 保单保费
Web.Job.SideBySide.QuoteAll = 全部报价
Web.Job.SideBySide.RateAll = 全部进行保费计算
Web.Job.SideBySide.ResolveButton = 解决
Web.Job.SideBySide.ResolveConflicts = 请解决并排保单交易的所有冲突。
Web.Job.SideBySide.SelectPeriod = 选择
Web.Job.SideBySide.Title = 并行报价
Web.Job.SideBySide.TypekeyCovTermPattern.PersonalAutoLine.PAFullLimitedTort = 侵权
Web.Job.SideBySide.ValidateAll = 全部校验
Web.Job.SideBySide.ValidationIssueMessageForBranch = 遇到分支的校验问题：{0}
Web.Job.SideBySide.ViewPeriodDetails = 查看期间详细信息
Web.Job.SideBySide.ViewSideBySide = 查看并行版本
Web.Job.SplitRiskPopup.Date = 日期
Web.Job.SplitRiskPopup.Split = 拆分
Web.Job.SplitRiskPopup.Title = 拆分风险
Web.Job.Status = 交易状态
Web.Job.Type = 类型
Web.Job.Warning.AlreadyComplete = 保单交易{0}已完成。
Web.Job.Warning.ArchivedFutureTerm = 如果要在{0}启动保单交易，必须检索未来存档期限。
Web.Job.Warning.ArchivedTerm = 如果要在{0}启动保单交易，必须检索此存档期限。
Web.Job.Warning.BranchLocked = 分支{0}已锁定。
Web.Job.Warning.CancellationTooSoon = 无法安排取消，请求的日期{0}在{1}允许的最早日期之前
Web.Job.Warning.CannotAddToNonSideBySideJob = 无法将并排版本添加到非并排保单交易。
Web.Job.Warning.CannotBeOneOfStatuses = 分支{0}不能为以下状态中的任何一个：{1}。
Web.Job.Warning.CannotBeStatus = 分支{0}的状态不得为“{1}”。
Web.Job.Warning.CannotCEEDIfSplitsEdited = 无法更改编辑生效日期，因为拆分已更改
Web.Job.Warning.CannotChangeEditEffectiveDate = 无法更改生效日期，因为：{0}
Web.Job.Warning.CannotTakeAction = 因下列原因而无法采取措施“{0}”：{1}
Web.Job.Warning.DateNotWithinPeriod = 日期{0}不能落在{1}或之后以及{2}或之前
Web.Job.Warning.DateNotWithinPolicyTerm = 日期{0}不在开始于{1}、结束于{2}的保单期限内
Web.Job.Warning.HasActivePeriods = 保单交易{0}仍有有效期间。
Web.Job.Warning.HasQuote = 分支{0}有报价。
Web.Job.Warning.HasRate = 分支{0}有费率。
Web.Job.Warning.HasUnhandledPreemptions = 分支{0}有优先权。
Web.Job.Warning.InsufficientPermission = 权限不足。
Web.Job.Warning.LacksAdvancePermission = 缺少高级权限。
Web.Job.Warning.LacksEditPermission = 缺少编辑权限。
Web.Job.Warning.LacksEditPermissionForVersion = 版本“{0}”已锁定。
Web.Job.Warning.LacksQuotePermission = 缺少报价和/或编辑权限。
Web.Job.Warning.LacksWithdrawPermission = 缺少撤消权限。
Web.Job.Warning.MaxQuotes = 保单交易{0}具有最大的报价数。
Web.Job.Warning.MaxSideBySideQuotes = 保单交易{0}具有最大的并排比价数。
Web.Job.Warning.MultiplePendingPeriods = 分支上的多个待定期限：{0}。
Web.Job.Warning.NoPermissionsToAccessPage = 您无权访问该页面。可以尝试其它操作。
Web.Job.Warning.NoQuote = 分支{0}没有报价。
Web.Job.Warning.NoRate = 分支{0}无费率。
Web.Job.Warning.NoUnhandledPreemptions = 分支{0}没有未处理的优先权。
Web.Job.Warning.NotAvailableQuickQuote = 无法通过快速报价获取。
Web.Job.Warning.NotFullApp = 非完全应用。
Web.Job.Warning.NotOneOfStatuses = 分支{0}状态为“{1}”，但必须是下列状态之一： {2}。
Web.Job.Warning.NotOnlyActivePeriod = 分支{0}不是唯一的活动期间。
Web.Job.Warning.NotQuickQuote = 并非快速报价。
Web.Job.Warning.PromotedBranch = 分支{0}已升级。
Web.Job.Warning.UWIssue.ApprovalRequired = 需要审批
Web.Job.Warning.UWIssue.Details = 详细信息
Web.Job.Warning.UWIssue.PreBindIssues = 阻止绑定的问题
Web.Job.Warning.UWIssue.PreBindIssues.Description = 阻止承保的核保项
Web.Job.Warning.UWIssue.PreIssuanceIssues = 阻止出单的问题
Web.Job.Warning.UWIssue.PreIssuanceIssues.Description = 阻止出单的核保项
Web.Job.Warning.UWIssue.PreQuoteIssues = 报价前问题
Web.Job.Warning.UWIssue.PreQuoteIssues.Description = 阻止报价的核保项
Web.Job.Warning.UWIssue.PreQuoteRejectIssues.Description = 报价被阻止，因为出现被拒绝的核保项：“报价有手动覆盖”。
Web.Job.Warning.UWIssue.UserNoAuthorityRefValue = 当前用户没有权限为具有参考值“{1}”的问题“{0}”创建审批。\n
Web.Job.Warning.UWLocked = 分支{0}已锁定。
Web.Job.Warning.WrongStatus = 分支{0}为“{1}”，而非“{2}”。
Web.JobComplete.Binder.Print = 打印暂保单
Web.JobComplete.Message.AuditComplete = 您的{0} (#{1})已完成。
Web.JobComplete.Message.AuditWaived = 您的审计(#{0})已放弃。
Web.JobComplete.Message.Binding = 您的{0} (#{1})正在绑定中。
Web.JobComplete.Message.Bound = {0} (#{1})已承保。
Web.JobComplete.Message.Declined = 您的{0} (#{1})已被拒绝。
Web.JobComplete.Message.Draft = 您的{0} (#{1})已升级。
Web.JobComplete.Message.NonRenewed = 续保(#{0})未续保。
Web.JobComplete.Message.NonRenewing = 您的续保（#{0}）正处于未续保过程中。
Web.JobComplete.Message.NotTaken = 您的{0} （#{1}）已不接受。
Web.JobComplete.Message.NotTaking = 正在对您的续保(#{0})进行未接受处理。
Web.JobComplete.Message.Quoted = 您的{0} (#{1})已升级。
Web.JobComplete.Message.Rated = 您的{0}(#{1})已升级。
Web.JobComplete.Message.Reinstating = 您的{0} (#{1})正在绑定中。
Web.JobComplete.Message.Renewing = 您的续保（#{0}）正处于续保过程中。
Web.JobComplete.Message.Rescinded = 您的取消(#{0})已撤销。
Web.JobComplete.Message.ScheduledCancellation = 您的取消（#{0}）已计划用于{1}。
Web.JobComplete.Message.UnknownStatus = 未知保单状态{0}
Web.JobComplete.Message.Withdrawn = 您的{0} (#{1})已撤消。
Web.JobComplete.PreemptedMessage = 您的{0}优先于{1} #{2}，请查看保单交易
Web.JobComplete.ResolveWithFutureBoundPeriods = 之后会有一段承保期间。启动保单交易将此{0}应用到该期间并查看新的保单交易。
Web.JobComplete.ResolveWithFutureUnboundPeriods = 有一个后来取消绑定的续保。将此{0}应用到该续保并查看续保。
Web.JobComplete.Title = {0} {1}
Web.JobComplete.Title.Canceling = 已计列{0}
Web.JobComplete.Title.Reinstating = {0}承保
Web.JobRoles.AssignedUser = 已分配用户
Web.JobRoles.Role = 角色
Web.JobWizard.Archive.EnableDisable = 启用/禁用
Web.JobWizard.Archive.Title = 存档
Web.JobWizard.ChangeEffDate = 生效日期
Web.JobWizard.CopyPolicyData = 复制数据
Web.JobWizard.CopySubmission = 复制投保单
Web.JobWizard.Create = 创建
Web.JobWizard.DiagnosticData = 诊断数据
Web.JobWizard.Edit = 编辑
Web.JobWizard.GoTo = 转到...
Web.JobWizard.InfoBar.AccountNumber = 账户：
Web.JobWizard.InfoBar.PrimaryNamedInsured = 首选：
Web.JobWizard.JobGroup = 组
Web.JobWizard.JobGroup.JobName = {0}： #{1}
Web.JobWizard.ManageBranches.Branches = 版本
Web.JobWizard.ManageBranches.Diff = 差异比较
Web.JobWizard.ManageBranches.MultiVersionLabel = 此保单交易正在使用多个平行版本（不是并行）
Web.JobWizard.ManageBranches.PromptBranchName = 保单版本名称（仅供参考）：
Web.JobWizard.ManageBranches.Rename = 重命名
Web.JobWizard.ManageBranches.SelectBranch = 选择
Web.JobWizard.ManageBranches.Selected = 选定
Web.JobWizard.ManageBranches.SideBySideVersionLabel = 此保单交易正在使用并行版本
Web.JobWizard.ManageBranches.Withdraw = 撤消
Web.JobWizard.ManageBranchesLV.CreateTime = 创建时间
Web.JobWizard.ManageBranchesLV.EffectiveDate = 生效日期
Web.JobWizard.ManageBranchesLV.IsSelected = 选定版本
Web.JobWizard.ManageBranchesLV.PeriodStatus = 版本状态
Web.JobWizard.ManageBranchesLV.PremiumTotals = 保费总计
Web.JobWizard.ManageBranchesLV.VersionName = 版本名称
Web.JobWizard.NewActivity = 新建活动
Web.JobWizard.NewDocument = 新建单证
Web.JobWizard.NewNote = 新建备注
Web.JobWizard.PreferredCurrency.Coverage = 承保范围
Web.JobWizard.PreferredCurrency.Settlement = 赔付
Web.JobWizard.PreferredCurrency.Title = 首选货币
Web.JobWizard.ProductModelSync.MissingCovTermAdded = {0}（位于{1}上）已添加。
Web.JobWizard.ProductModelSync.MissingCovTermNotAdded = {0}（位于{1}上）现在有效，其值必须由用户验证。
Web.JobWizard.ProductModelSync.MissingPolicyLineAdded = {0}有效，可以添加。
Web.JobWizard.ProductModelSync.MissingRequiredClauseAdded = {0}为必填，已经添加。
Web.JobWizard.ProductModelSync.MissingRequiredClauseNotAdded = {0}为必填，必须添加。
Web.JobWizard.ProductModelSync.MonetaryDirectCovTermRemoved = {0} {1}（位于{2}上）已删除。请输入新值。
Web.JobWizard.ProductModelSync.NoMessageConfigured = 未配置消息
Web.JobWizard.ProductModelSync.RetiredTypekeyValue = {1}中的{0}已撤消。请选择新的值。
Web.JobWizard.ProductModelSync.SelectedPolicyTermModified = 保单期限“{0}”不再有效且已默认使用“{1}”。
Web.JobWizard.ProductModelSync.UnavailableClauseRemoved = {0}不再有效且已移除。
Web.JobWizard.ProductModelSync.UnavailableCovTermRemoved = {0}（位于{1}上）不再有效且已删除。请输入新值。
Web.JobWizard.ProductModelSync.UnavailableModifierRemoved = {0}不再有效且已移除。
Web.JobWizard.ProductModelSync.UnavailableOffering = 保障组合“{0}”不再有效，必须由用户更改。
Web.JobWizard.ProductModelSync.UnavailableOfferingRemoved = 保障组合“{0}”不再有效且已移除。
Web.JobWizard.ProductModelSync.UnavailableOptionValue = {0} {1}（位于{2}上）不再有效且已删除。请输入新值。
Web.JobWizard.ProductModelSync.UnavailablePackageValue = {0} {1}（位于{2}上）不再有效且已删除。请输入新值。
Web.JobWizard.ProductModelSync.UnavailablePolicyLineRemoved = {0}不再有效且已移除。
Web.JobWizard.ProductModelSync.UnavailablePolicyLineWillBeRemoved1 = {0}不再有效，将在您离开该页面或保存草案更改时被移除。
Web.JobWizard.ProductModelSync.UnavailablePolicyLineWillBeRemoved2 = {0}不再有效，在您离开该页面或保存草案更改时将被移除。
Web.JobWizard.ProductModelSync.UnavailableRateFactorRemoved = {0}（位于{1}上）不再有效且已删除。
Web.JobWizard.QuoteInProgressAlert = 费率/报价请求正在处理中。
Web.JobWizard.ShowPartialWorksheet = 显示部分工作表...
Web.JobWizard.ToAccountFile = 账户文件
Web.JobWizard.ToAudits = 审计
Web.JobWizard.ToPolicyFile = 保单文件
Web.JobWizard.ToSubmissionManager = 投保单管理器
Web.LineWizard.AdditionalCoverages = 附加承保范围
Web.LineWizard.AdditionalInsured = 附加被保险人
Web.LineWizard.AdditionalInsured.AdditionalInformation = 附加信息
Web.LineWizard.AdditionalInsured.AdditionalInformationRequired = 需要信息
Web.LineWizard.AdditionalInsured.Name = 姓名
Web.LineWizard.AdditionalInsured.Type = 类型
Web.LineWizard.AdditionalInterests = 其他权益方
Web.LineWizard.ExclusionsAndConditions = 免责项和条款
Web.LineWizard.IncludedCoverages = 包含的承保范围
Web.LineWizard.StandardCoverages = 标准承保范围
Web.LineWizardMenu.APD.LineSelection = 险类选择
Web.LineWizardMenu.APDPricing = 定价
Web.LineWizardMenu.APDRiskDetails = 风险详细信息
Web.LineWizardMenu.Blankets = 统括
Web.LineWizardMenu.Buildings = 建筑物
Web.LineWizardMenu.BuildingsandLocations = 建筑物和地点
Web.LineWizardMenu.CommercialAutoLine = 商用车保险险种
Web.LineWizardMenu.CommercialPackage.CommercialProperty = 企业财产险
Web.LineWizardMenu.CommercialPackage.GeneralLiability = 一般责任险
Web.LineWizardMenu.CommercialPackage.InlandMarine = 其它财产险类
Web.LineWizardMenu.CommercialPackage.LineReview = 险类审查
Web.LineWizardMenu.CommercialPackage.LineSelection = 险类选择
Web.LineWizardMenu.CommercialPackage.Modifiers = 调整系数
Web.LineWizardMenu.Common.LineSelection = 险类选择
Web.LineWizardMenu.Drivers = 司机
Web.LineWizardMenu.HOP.HOPCoveragesScreen = 承保范围
Web.LineWizardMenu.HOP.HOPDwellingConstructionScreen = 住宅建筑
Web.LineWizardMenu.HOP.HOPDwellingScreen = 住宅
Web.LineWizardMenu.Locations = 地点
Web.LineWizardMenu.PolicyLines.Supplemental = 补充
Web.LineWizardMenu.QuickQuote.Info = 快速报价信息
Web.LineWizardMenu.StateInfo = 省/直辖市信息
Web.LineWizardMenu.Vehicles = 车辆
Web.LineWizardMenu.Vehicles.CreateVehicle = 创建车辆
Web.LineWizardMenu.Vehicles.RemoveVehicle = 移除车辆
Web.LoadAndVacation = 组工作量
Web.LoadAndVacation.EditableLoadFactorsLV.LoadFactor = 工作量系数
Web.LoadAndVacation.EditableLoadFactorsLV.User = 用户
Web.LoadAndVacation.GroupDetails.Title = 组工作量：{0}
Web.LoadAndVacation.GroupName = 组名称
Web.LoadAndVacation.LoadFactorDV.GroupLoadFactor = 组工作量系数
Web.LoadAndVacation.LoadFactorDV.GroupLoadFactor.OutOfRange = 工作量系数必须为介于 0 和 100 之间的整数。
Web.LoadAndVacation.LoadFactorDV.GroupUserLoadFactor = 用户工作量系数
Web.LoadErrorRowsLV.LoadErrorRowsLV = 加载某错误的错误行
Web.LoadErrorRowsLV.Luwid = LUWID
Web.LoadErrorRowsLV.RowNumber = 行编号
Web.LoadErrorsInfo.Count = 计数
Web.LoadErrorsInfo.Errormessage = 错误消息
Web.LoadErrorsInfo.Errortype = 加载错误类型
Web.LoadErrorsInfo.LUWID = LUWID
Web.LoadErrorsInfo.LoadErrorsInfo = 加载错误
Web.LoadErrorsInfo.Query = 查询
Web.LoadErrorsInfo.Tablename = 表名称
Web.LoadIntegrityChecks.ViewbyLoadErrorTypeCard = 通过加载错误类型查看
Web.LoadIntegrityChecksByLoadErrorTypeLV.Expand = +
Web.LoadIntegrityChecksByLoadErrorTypeLV.Multi = *
Web.LoadIntegrityChecksByStagingTableLV.Expand = +
Web.LoadIntegrityChecksByStagingTableLV.Multi = *
Web.LoadIntegrityChecksCompoundLV.LoadIntegrityChecksCompoundLV = 显示一个复合查询的简单查询
Web.LocalTesting = 本地测试
Web.LocalTesting.Amount = 总计
Web.LocalTesting.Recalculate = 重新计算
Web.Login = Guidewire {Global.AppName}
Web.Login.LoginBtn = 登录
Web.Login.Password = 密码
Web.Login.Username = 用户名
Web.LossHistoryDV.NoLossHistory = 无损失历史记录
Web.MBean.BackToMBeans = 返回到MBean
Web.MBean.Operation = 操作
Web.MBean.Title = MBean
Web.MBeans.Cache = 缓存信息Bean
Web.MBeans.Cluster = 群集成员Bean
Web.MBeans.Configuration = 配置Bean
Web.MBeans.Monitor = 监视器Bean
Web.MBeans.Title = 管理Bean
Web.Modifier.Validation.InvalidModifierCode = 修饰符{0}使用无效的代码设置：{1}
Web.ModifiersScreen.Modifier = 调整系数
Web.ModifiersScreen.RatingInputs = 费率输入
Web.MultiCurrency.ChangePreferredCoverageCurrencyWarning = 更改承保范围货币将重置之前设置的费率覆盖值
Web.MultiCurrency.ChangePreferredSettlementCurrencyWarning = 更改赔付货币将重置之前设置的费率覆盖值，如果当前存在任何选定付款计划，也将会取消设置。
Web.MultiCurrency.ChangePreferredSettlementCurrencyWithPayment.Error = 存在使用其他货币的现有付款时无法更改赔付货币
Web.MultiCurrency.CurrencyDoesNotApply = 不适用
Web.MultiQuoteWizardMenu.ManageBranches = 保单版本
Web.MultiQuoteWizardToolbar.AddNewVersion = 新增版本
Web.MultiQuoteWizardToolbar.NewVersion = 启动多版本
Web.MultiQuoteWizardToolbar.Versions = 版本
Web.NewActivity.Description = 说明
Web.NewActivity.EscalationDate = 升级日期
Web.NewActivity.Mandatory = 强制
Web.NewActivity.Priority = 优先级
Web.NewActivity.Recurring = 按周期反复
Web.NewActivity.Subject = 主题
Web.NewActivity.TargetDate = 到期日期
Web.NewActivity.Title = 新建活动
Web.NewContact.Title = 新建{0}
Web.NewContact.Title.Company = 新建公司
Web.NewContact.Title.Contact = 新建联系人
Web.NewContact.Title.Person = 新建个人
Web.NewContact.Title.Place = 新建地点
Web.NewContactMenu.Adjudicator = 审判员
Web.NewContactMenu.Attorney = 律师
Web.NewContactMenu.AutoRepairShop = 车身修理厂
Web.NewContactMenu.CompanyVendor = 经销商
Web.NewContactMenu.Doctor = 医生
Web.NewContactMenu.LawFirm = 律师事务所
Web.NewContactMenu.LegalVenue = 司法机构
Web.NewContactMenu.MedicalCareOrg = 医疗护理机构
Web.NewContactMenu.NewCompany = 新建公司
Web.NewContactMenu.NewPerson = 新建个人
Web.NewContactMenu.NewPlace = 新建地点
Web.NewContactMenu.OtherCompany = 其它
Web.NewContactMenu.OtherCompanyVendor = 其它
Web.NewContactMenu.OtherPerson = 其他
Web.NewContactMenu.OtherPersonVendor = 其他
Web.NewContactMenu.OtherPlace = 其它
Web.NewContactMenu.PersonVendor = 经销商
Web.NewContactMenu.PolicyCompany = 保单公司
Web.NewContactMenu.PolicyPerson = 保单人员
Web.NewContactMenu.UserContact = 用户联系人
Web.NewEmail.Email = 电子邮件
Web.NewNote.Button.Cancel = 取消备注
Web.NewNote.Button.Update = 更新
Web.NewNote.RelatedTo = 相关项
Web.NewNote.SecurityLevel = 安全级别
Web.NewNote.Subject = 主题
Web.NewNote.Tab = 新建备注
Web.NewNote.Text = 文本
Web.NewNote.Title = 新建备注
Web.NewNote.Topic = 题目
Web.NewSubmission.APD.AddNewProductButton.FromTemplate = 从模板
Web.NewSubmission.APD.AddNewProductButton.FromXmind = 从XMind
Web.NewSubmission.APD.AddNewProductButton.NewProduct = 新建
Web.NewSubmission.APD.AddProductButton = 添加保险产品
Web.NewSubmission.APD.InstalledProducts = 已安装的保险产品
Web.NewSubmission.APD.UpdateProductButton = 更新保险产品
Web.NewSubmission.APD.VisualizedProducts = 已可视化的保险产品
Web.NewSubmission.AccountSelection = 选择账户
Web.NewSubmission.DefaultBaseState = 默认省/直辖市
Web.NewSubmission.DefaultPPEffDate = 默认生效日期
Web.NewSubmission.Error.InvalidAccountNumber = 账户{0}未找到或不可用。
Web.NewSubmission.ProducerSelection = 选择经理人
Web.NewSubmission.ProductOffers = 保障组合
Web.NewSubmission.ProductsNotSelectable = 部分产品不可用，因为未在“账户地点”中指定“省/直辖市”。必须有省/直辖市才能执行地区代码查找。
Web.NewSubmission.Title = 新建投保单
Web.NewSubmissionAccount = 输入账户信息
Web.NewSubmissionAccount.Company = 公司
Web.NewSubmissionAccount.FromContactSearch = 从通讯簿
Web.NewSubmissionAccount.NewAccount = 新建账户
Web.NewSubmissionAccount.Person = 个人
Web.NewSubmissionAccount.SearchMessage = 请输入基本的账户所有者信息，然后单击“搜索”以搜索匹配的账户。
Web.NewSubmissionAccount.SearchResultsMessage = 如果在下面的列表中未找到匹配的账户，则请单击“新建账户”以创建一个新账户，使用输入的信息创建新联系人或在通讯簿中搜索匹配的联系人。
Web.NewSubmissionAccountDetail.ConfirmMessage = 请确认账户信息
Web.NewSubmissionAccountDetail.PrimaryLanguage = 首选语言
Web.NonRenewalExplanationPattern.Add = 添加
Web.NonRenewalExplanationPattern.Cancel = 取消
Web.NonRenewalExplanationPattern.Remove = 移除
Web.NotTakenReasonPopup = 不投保原因
Web.NotTakenReasonPopup.EmptyReasonError = 需要原因代码。
Web.Note.FindNoteTemplate = 选取备注模板
Web.Note.UseTemplate = 使用备注模板
Web.NoteSearch.Any = 任意
Web.NoteSearch.Author = 作者
Web.NoteSearch.CurrentActivity = 当前活动({0})
Web.NoteSearch.DateFrom = 日期范围 - 自
Web.NoteSearch.DateTo = 日期范围 - 至
Web.NoteSearch.Language = 语言
Web.NoteSearch.RelatedTo = 相关项
Web.NoteSearch.SortAscending = 升序
Web.NoteSearch.SortBy = 排序方式
Web.NoteSearch.SortDescending = 降序
Web.NoteSearch.SortOrder = 排序顺序
Web.NoteSearch.TextSearch = 文本搜索
Web.NoteSearch.Topic = 题目
Web.NoteTemplate.By = 创建者：
Web.NoteTemplate.Confidential = 机密：
Web.NoteTemplate.RelatedTo = 相关项：
Web.NoteTemplate.Subject = 主题：
Web.NoteTemplate.Topic = 题目：
Web.NoteTemplateSearch.Keywords = 关键字
Web.NoteTemplateSearch.Language = 语言
Web.NoteTemplateSearch.Lob = 保险产品
Web.NoteTemplateSearch.Topic = 题目
Web.NoteTemplateSearch.Type = 类型
Web.NoteTemplateSearchResult.Language = 语言
Web.NoteTemplateSearchResult.Topic = 题目
Web.NoteTemplateSearchResult.Type = 类型
Web.NoteTemplateSearchResults.LOB = 保险产品
Web.NoteTemplateSearchResults.Template = 模板
Web.Notes.Delete = 删除
Web.Notes.Edit = 编辑
Web.Notes.EditNotePopup = 编辑备注
Web.NotesPopup.Title = 备注
Web.OfficialID.DuplicateFEIN = 雇主税号(FEIN)不能与现有条目重复
Web.OfficialID.DuplicateSSN = SSN不能重复现有条目
Web.Organization.EditContact = 联系人
Web.Organization.PrimaryContact = 主要联系人
Web.OrganizationBranchSearch.BranchCode = 分支ID
Web.OrganizationBranchSearch.BranchName = 分支名称
Web.OrganizationSearch.NotEnoughInfo = 请输入机构名称的三个字符中的一个
Web.OutOfDateHistogramStatisticsDV.Description = 说明
Web.OutOfDateIndexStatisticsDV.Description = 说明
Web.PersonalAuto.MotorVehicleRecord = 汽车驾驶记录
Web.PersonalAuto.MotorVehicleRecord.AccidentInvolved = 涉及的事故
Web.PersonalAuto.MotorVehicleRecord.AdditionalDrivers = 其他司机
Web.PersonalAuto.MotorVehicleRecord.AdditionalInfo = 附加信息
Web.PersonalAuto.MotorVehicleRecord.Address = 地址
Web.PersonalAuto.MotorVehicleRecord.Age = 年龄
Web.PersonalAuto.MotorVehicleRecord.CarrierViolationCode = 承保人违章代码
Web.PersonalAuto.MotorVehicleRecord.Checkbox = √
Web.PersonalAuto.MotorVehicleRecord.Clear = \ 清除
Web.PersonalAuto.MotorVehicleRecord.ConvictionDate = 更换/复效日期
Web.PersonalAuto.MotorVehicleRecord.Court = 法院或机构
Web.PersonalAuto.MotorVehicleRecord.DOB = 出生日期
Web.PersonalAuto.MotorVehicleRecord.Description = 说明
Web.PersonalAuto.MotorVehicleRecord.Disposition = 处理
Web.PersonalAuto.MotorVehicleRecord.Donor = 捐赠者
Web.PersonalAuto.MotorVehicleRecord.EligibleDate = 合格日期
Web.PersonalAuto.MotorVehicleRecord.Eyes = 眼
Web.PersonalAuto.MotorVehicleRecord.Gender = 性别
Web.PersonalAuto.MotorVehicleRecord.Hair = 头发
Web.PersonalAuto.MotorVehicleRecord.Height = 身高
Web.PersonalAuto.MotorVehicleRecord.IncidentDetails = 事件详细信息
Web.PersonalAuto.MotorVehicleRecord.Incidents = 事故
Web.PersonalAuto.MotorVehicleRecord.License.LicenseClass = 驾驶证类
Web.PersonalAuto.MotorVehicleRecord.License.LicenseCurrentIssuance = 驾驶证当前签发日期
Web.PersonalAuto.MotorVehicleRecord.License.LicenseExpiration = 驾驶证到期日期
Web.PersonalAuto.MotorVehicleRecord.License.LicenseNumber = 驾驶证编号
Web.PersonalAuto.MotorVehicleRecord.License.LicenseOriginalIssuance = 驾驶证初次签发日期
Web.PersonalAuto.MotorVehicleRecord.License.LicenseReinstatement = 驾驶证复效日期
Web.PersonalAuto.MotorVehicleRecord.License.LicenseState = 驾照所属省/直辖市
Web.PersonalAuto.MotorVehicleRecord.License.LicenseStatus = 驾驶证状态
Web.PersonalAuto.MotorVehicleRecord.LicenseState = 驾照所属省/直辖市
Web.PersonalAuto.MotorVehicleRecord.Location = 地点
Web.PersonalAuto.MotorVehicleRecord.MVRReportDetails = 汽车驾驶记录报告详细信息
Web.PersonalAuto.MotorVehicleRecord.MVRsNotFound = 未找到机动车辆记录
Web.PersonalAuto.MotorVehicleRecord.MVRsReceived = 已接收所有预定汽车驾驶记录
Web.PersonalAuto.MotorVehicleRecord.MotorVehicleRecords = 汽车驾驶记录
Web.PersonalAuto.MotorVehicleRecord.Name = 姓名
Web.PersonalAuto.MotorVehicleRecord.NoRecordsOnFile = 文件中没有汽车驾驶记录
Web.PersonalAuto.MotorVehicleRecord.NotClear = \ - 并非重置全部条件
Web.PersonalAuto.MotorVehicleRecord.NumberOfAccidents = 事故数
Web.PersonalAuto.MotorVehicleRecord.NumberOfViolations = 违章数
Web.PersonalAuto.MotorVehicleRecord.Points = 扣分
Web.PersonalAuto.MotorVehicleRecord.Race = 种族
Web.PersonalAuto.MotorVehicleRecord.RecordType = 类型
Web.PersonalAuto.MotorVehicleRecord.ReportDate = 报告日期
Web.PersonalAuto.MotorVehicleRecord.RequestedDate = 请求日期
Web.PersonalAuto.MotorVehicleRecord.ReviewRiskAnalysisPage = \ - 审查风险分析页面
Web.PersonalAuto.MotorVehicleRecord.SSN = SSN
Web.PersonalAuto.MotorVehicleRecord.SpecificInformation = 其它信息及省/直辖市特定信息
Web.PersonalAuto.MotorVehicleRecord.SpeedZone = 速度区域
Web.PersonalAuto.MotorVehicleRecord.State = 省/直辖市（市）/区（县）
Web.PersonalAuto.MotorVehicleRecord.VehicleSpeed = 车速
Web.PersonalAuto.MotorVehicleRecord.ViolationCode = 违章代码
Web.PersonalAuto.MotorVehicleRecord.ViolationDate = 违章/暂停日期
Web.PersonalAuto.MotorVehicleRecord.ViolationNumber = 命令/违章编号
Web.PersonalAuto.MotorVehicleRecord.WaitingForMVRs = 正在等待机动车辆记录
Web.PersonalAuto.MotorVehicleRecord.Weight = 体重
Web.PersonalAuto.MotorVehicleRecord.YearsRequested = 请求的年限
Web.PersonalAuto.QuickQuote.AddNewVehicle = 新建车辆
Web.PersonalAuto.QuickQuote.Button.Driver = 司机{0}
Web.PersonalAuto.QuickQuote.DriversDetails = 司机
Web.PersonalAuto.QuickQuote.PolicyDetails = 保单信息
Web.PersonalAuto.QuickQuote.VehiclesDetails = 车辆
Web.PersonalData.InternalTools.AccountNumber = 账号：
Web.PersonalData.InternalTools.AccountNumberNotFound = 无法找到账号为{0}的账户
Web.PersonalData.InternalTools.ContactPublicID = 联系人PublicID：
Web.PersonalData.InternalTools.ContactPublicIDNotFound = 找不到publicID为{0}的联系人
Web.PersonalData.InternalTools.ContactRootsInHierarchy = 层次结构中的Contact根
Web.PersonalData.InternalTools.Disposition = 处理
Web.PersonalData.InternalTools.FieldName = 字段名称
Web.PersonalData.InternalTools.LoadUser = 加载用户
Web.PersonalData.InternalTools.LoadUserContact = 加载UserContact
Web.PersonalData.InternalTools.ObfuscateUser = 混淆用户
Web.PersonalData.InternalTools.ObfuscateUserContact = 混淆UserContact
Web.PersonalData.InternalTools.ObfuscatedValue = 混淆的值
Web.PersonalData.InternalTools.ObfuscationForUser = 混淆 - 用户
Web.PersonalData.InternalTools.ObfuscationForUserContact = 用户名
Web.PersonalData.InternalTools.ObfuscationMessage = 仅当User或UserContact可以销毁/修改时，才会显示完整的实体链信息
Web.PersonalData.InternalTools.OriginalValue = 原始值
Web.PersonalData.InternalTools.PCPersonalDataDestruction = 个人数据销毁测试
Web.PersonalData.InternalTools.PersonalData = （个人数据）
Web.PersonalData.InternalTools.PolicyNumber = 保单号：
Web.PersonalData.InternalTools.PolicyPublicID = 保单PublicID：
Web.PersonalData.InternalTools.PurgeAccount = 账户的PersonalData清除
Web.PersonalData.InternalTools.PurgeAccountButton = 清除账户
Web.PersonalData.InternalTools.PurgeContact = 联系人的PersonalData清除
Web.PersonalData.InternalTools.PurgeContactButton = 清除联系人
Web.PersonalData.InternalTools.PurgeErrors = (MUST_DESTROY)清除错误
Web.PersonalData.InternalTools.PurgePolicy = 保单的PersonalData清除
Web.PersonalData.InternalTools.PurgePolicyButton = 清除保单
Web.PersonalData.InternalTools.PurgePreview = 预览清除
Web.PersonalData.InternalTools.PurgeReasons = 导致无法清除的所有原因
Web.PersonalData.InternalTools.PurgeRoots = 待清除的域图中的DestructionRootPinnable根
Web.PersonalData.InternalTools.Purged = （已清除）
Web.PersonalData.InternalTools.UserName = 用户名
Web.PersonalDataDestruction.Purge.Account = 账户
Web.PersonalDataDestruction.Purge.Contact = 联系人
Web.PersonalDataDestruction.Purge.ErrorCode = 错误代码
Web.PersonalDataDestruction.Purge.Hierarchy = 层次结构
Web.PersonalDataDestruction.Purge.Message = 消息
Web.PersonalDataDestruction.Purge.Root = 根
Web.PleaseBePatientPopup.Title = 操作正在处理...
Web.Plugin.Host = 主机
Web.Plugin.Name = 名称
Web.Plugin.NotAvailableBecauseOfRunlevel = 非分布式可启动服务仅在运行级别DAEMONS或更高级别可用
Web.Plugin.Resume = 恢复
Web.Plugin.Start = 开始
Web.Plugin.Status = 状态
Web.Plugin.Stop = 停止
Web.Plugin.Suspend = 暂停
Web.Plugin.Title = 可启动的服务
Web.Policy.APD.Financials.Description = 说明
Web.Policy.APD.Financials.EffDate = 生效日期
Web.Policy.APD.Financials.ExpDate = 到期日期
Web.Policy.APD.Financials.LineLevelPremiums = 险种级保费
Web.Policy.APDRiskCoverable.AdditionalCover = 其它承保库
Web.Policy.APDRiskCoverable.ConditionsAndExclusions = 条件和免责项库
Web.Policy.APDRiskCoverable.Details = 风险详细信息
Web.Policy.Account.Applicant.Name = 姓名
Web.Policy.Account.OrganizationType = 机构类型
Web.Policy.Account.OrganizationTypeOtherDescription = 说明
Web.Policy.Account.PrimaryInsured = 主要列名被保险人
Web.Policy.Account.PrimaryInsured.ChangeTo = 更改为：
Web.Policy.Account.SecondaryInsured = 次要列名被保险人
Web.Policy.Account.WC.AssignedRisk = 分派风险？
Web.Policy.Account.WC.BusOps = 业务运营\n说明
Web.Policy.Account.WC.BusinessDescription = 业务运营
Web.Policy.Account.WC.YearBusinessStarted = 业务开始年份
Web.Policy.AddNewContingency = 添加事故
Web.Policy.AdditionalInsured = 附加被保险人
Web.Policy.AdditionalInsured.Schedule.CannotDelete.HasCurrentAndFutureSchedules = 新选择的PNI {0}当前正被以下计划中的项目引用：{1}、{2}。更改主要列名被保险人(PNI)之前必须移除这些项目，更改之后再将其添加回计划。
Web.Policy.AdditionalInsured.Schedule.CannotDelete.HasCurrentOrFutureSchedules = 新选择的PNI {0}当前正被以下计划中的项目引用：{1}。更改主要列名被保险人(PNI)之前必须移除这些项目，更改之后再将其添加回计划。
Web.Policy.AdditionalInterest.CertificateRequired = 要求提供证书
Web.Policy.AdditionalInterest.ContractNumber = 合同编号
Web.Policy.AdditionalInterest.Name = 名称
Web.Policy.AdditionalInterest.Type = 权益方类型
Web.Policy.Address = 保单地址
Web.Policy.Address.SelectionIsPolicyAddress = 这是当前的保单地址
Web.Policy.Address.Validation.MustRequote = 已更改保单地址。在保单承保之前必须重新报价。
Web.Policy.Address.Validation.Orphaned = {0}号保单的地址没有相应的联系人地址
Web.Policy.Address.Validation.StateNotChangeable = 在此页面中不可更改省/直辖市和国家/地区
Web.Policy.AffinityGroup.MultipleAffinityGroupsFound = 找到多个具有名称“{0}”的亲和组
Web.Policy.AffinityGroup.NoAffinityGroupFound = 未找到名称为“{0}”的亲和组
Web.Policy.BA.AddState = 添加省/直辖市
Web.Policy.BA.AdditionalCoverages = 附加承保范围
Web.Policy.BA.AutoSymbols = 承保车辆
Web.Policy.BA.CloneVehicle = 克隆选定项
Web.Policy.BA.Collision = 车辆损失险免赔额
Web.Policy.BA.Comprehensive = 综合险免赔额
Web.Policy.BA.CostHire = 租用成本
Web.Policy.BA.CostHireRequired = 必填。请输入值。
Web.Policy.BA.Declined = 承保范围被拒绝
Web.Policy.BA.Fleet = 车队
Web.Policy.BA.HiredAutoStates = 租用汽车所在省/直辖市
Web.Policy.BA.IfAnyExposure = 是否有
Web.Policy.BA.LineLevelCoverages = 险种级承保范围
Web.Policy.BA.LineLevelPremiums = 险种级保费
Web.Policy.BA.LineLevelTransactions = 险种级交易
Web.Policy.BA.Locations = 地点
Web.Policy.BA.Modifier = 省/直辖市费率厘定
Web.Policy.BA.Modifiers = 调整系数
Web.Policy.BA.NonownedStates = 非自有责任险所在省/直辖市
Web.Policy.BA.NumEmployees = 雇员数量
Web.Policy.BA.PolicyType = 产品
Web.Policy.BA.Premium = 保费
Web.Policy.BA.RemoveState = 移除省/直辖市
Web.Policy.BA.Review.VehicleNumber = 车辆{0}
Web.Policy.BA.Review.VehicleSchedule = 车辆时间表
Web.Policy.BA.SelectState = 选择省/直辖市
Web.Policy.BA.Selected = 选定
Web.Policy.BA.Specified = 指定的原因免赔额
Web.Policy.BA.State = 省/直辖市
Web.Policy.BA.StateCoverages = {0}省/直辖市级承保范围
Web.Policy.BA.StateInfo = 省/直辖市信息
Web.Policy.BA.StateLevelCoverages = 省/直辖市级承保范围
Web.Policy.BA.StateLocationSummary = 省/直辖市地点摘要
Web.Policy.BA.StateLocations = {0}个地点
Web.Policy.BA.Subtotal = 小计
Web.Policy.BA.SummaryTotals = 摘要总计
Web.Policy.BA.TerritoryCode = 地区代码
Web.Policy.BA.Total.PrivatePassenger = 私人乘客总计
Web.Policy.BA.Total.Trucks = 卡车、拖拉机、拖车数总计
Web.Policy.BA.Total.Vehicles = 车辆总数
Web.Policy.BA.TotalPartners = 全部合伙人
Web.Policy.BA.TotalVolunteers = 志愿者总数
Web.Policy.BA.Towing = 拖车和人工
Web.Policy.BA.VIN = 车辆识别号码
Web.Policy.BA.Validation.AtLeastOneHiredAutoCov = 租用汽车管辖权已添加。请添加租用汽车承保范围或移除租用汽车管辖权。
Web.Policy.BA.Validation.AtLeastOneHiredAutoState = 租用汽车承保范围已添加。请移除该承保范围或至少添加一个租用汽车管辖权。
Web.Policy.BA.Validation.AtLeastOneNonownedCov = 已添加非自有汽车管辖权。请添加非自有汽车承保范围或移除非自有汽车管辖权。
Web.Policy.BA.Validation.AtLeastOneNonownedState = 已添加非自有承保范围。请移除该承保范围，或者添加至少一个非自有管辖权。
Web.Policy.BA.Validation.ClassCode = 车辆{1}的分类代码{0}与车队类型{2}不匹配。请选择其它分类代码。
Web.Policy.BA.Validation.LengthOfLeaseRequired = 如果租赁或租用车辆，则需要租期。（车辆编号{0}）
Web.Policy.BA.Validation.LiabilityPackageInvalid = 自有责任综合保险值{0}仅在部分车辆所在省/直辖市内有效
Web.Policy.BA.Validation.LiabilityRequired = 需要责任险承保范围，因为保单中涉及车辆
Web.Policy.BA.Validation.NoVin = 地点{1}的车辆{0}未定义车辆识别号码
Web.Policy.BA.Validation.NonOwnedBasisSumGreaterThanZero = 所有非自有省/直辖市必须具有大于零的基础合计。
Web.Policy.BA.Validation.NumberOfVehicles = 车队类型为{0}，但车辆数量为{1}。
Web.Policy.BA.Validation.VinNumbers = 所有车辆的车辆识别号码必须唯一。
Web.Policy.BA.Validation.fleetType = 必须对车队类型选择值。
Web.Policy.BA.Validation.mutuallyExclusivePhysDamage = 综合与特定原因的损失承保范围互相排斥
Web.Policy.BA.VehiclePremiums = 车辆保费
Web.Policy.BA.VehicleTransactions = 车辆交易
Web.Policy.BA.Vehicles = 车辆
Web.Policy.BOP.BlanketType = 统括
Web.Policy.BOP.Building.YearBuilt = 建造年份
Web.Policy.BOP.Buildings = 中小企业财产责任险 - 建筑物
Web.Policy.BOP.Buildings.AdditionalCoverage = 附加承保范围
Web.Policy.BOP.Buildings.Alarm = 防盗报警
Web.Policy.BOP.Buildings.Alarm.AlarmCertificate = 报警凭证
Web.Policy.BOP.Buildings.Alarm.AlarmCertification = 报警认证
Web.Policy.BOP.Buildings.Alarm.AlarmExpiration = 报警到期
Web.Policy.BOP.Buildings.Alarm.AlarmGrade = 报警级别
Web.Policy.BOP.Buildings.Alarm.BuildingAlarmType = 报警类型
Web.Policy.BOP.Buildings.Construction = 房屋构造
Web.Policy.BOP.Buildings.Details = 详细信息
Web.Policy.BOP.Buildings.Improvement = 建筑物修缮
Web.Policy.BOP.Buildings.Liability = 责任保费计算信息
Web.Policy.BOP.Buildings.Liability.ClassCode = 建筑物分类代码
Web.Policy.BOP.Buildings.Liability.PremiumBasisAmount = 保费基本金额
Web.Policy.BOP.Buildings.Liability.PremiumBasisType = 保费基本类型
Web.Policy.BOP.Buildings.Liability.Search = 搜索
Web.Policy.BOP.Buildings.Update = 更新建筑物
Web.Policy.BOP.Description = 说明
Web.Policy.BOP.EquipmentNumber = #
Web.Policy.BOP.InsuredValue = 保险价值
Web.Policy.BOP.Liability = 责任险承保范围
Web.Policy.BOP.Location = 地点
Web.Policy.BOP.Locations.FireProtectionClass = 公共保护
Web.Policy.BOP.Locations.FireProtectionClass.Title = 公共保护
Web.Policy.BOP.Locations.GeneralInformation.Title = 一般信息
Web.Policy.BOP.Locations.PrincipleOps = 主营业务/房屋
Web.Policy.BOP.OtherIncludedCoverages = 包含的其它承保范围
Web.Policy.BOP.PercentSprinklered = 洒水装置覆盖百分比
Web.Policy.BOP.ProductDescription = 保险产品说明
Web.Policy.BOP.Property = 财产险承保范围
Web.Policy.BOP.Quote.Amount = 金额
Web.Policy.BOP.Quote.Building.Title = 建筑物{0}
Web.Policy.BOP.Quote.Coverages.Building.Title = 建筑物级别承保范围
Web.Policy.BOP.Quote.Coverages.Line.Title = 险种级承保范围
Web.Policy.BOP.Quote.Coverages.Location.Title = 地点级别承保范围
Web.Policy.BOP.Quote.Jurisdiction = 省/直辖市
Web.Policy.BOP.Quote.Location.Title = 地点{0}：{1}
Web.Policy.BOP.Quote.OtherPremiums.Description = 说明
Web.Policy.BOP.Quote.OtherPremiums.Title = 其它费用
Web.Policy.BOP.ScheduledEquipement = 计列设备列表
Web.Policy.BOP.SerialNumber = 序列号
Web.Policy.BOP.SmallBusinessType = 小企业类型
Web.Policy.BOP.Validation.AndCoverage3Limit = \ 和承保范围3限额
Web.Policy.BOP.Validation.AtLeastOneBuildingPerLocation = 必须至少为地点{0}提供一幢建筑物
Web.Policy.BOP.Validation.BuildingDateInFuture = {0}将来不会发生
Web.Policy.BOP.Validation.BuildingImprovementYearPredatesYearBuilt = {0}无法填早日期{1}
Web.Policy.BOP.Validation.BuildingOrBusinessPersonalPropertyCovRequired = 地点{1}的建筑{0}必须具有建筑物险承保范围或商业个人财产险承保范围
Web.Policy.BOP.Validation.Combined23Limit = 地点{1}的建筑物{0} - 2,3组合限额不允许使用{2}
Web.Policy.BOP.Validation.Coverage2Limit = 承保范围2限额
Web.Policy.BOP.Validation.Coverage3Limit = 承保范围3限额
Web.Policy.BOP.Validation.ForgeryAndEmployeeDishonesty = 如果选择{0}，那么必须同时选择“雇员忠诚保险”，并且这两个承保范围必须具有相同的限额值
Web.Policy.BOP.Validation.IncomeExpenseTerm = 地点{1}的建筑物{0} - 如果设置“承保范围2”、“承保范围3”或“合并承保范围”，只能选择“收入/支出”
Web.Policy.BOP.Validation.NoSmallBusinessType = 小企业类型：缺少必要的字段“小企业类型”
Web.Policy.BOP.Validation.OnlyOneCoverageinCategory = 类别{0}中只允许一种承保范围
Web.Policy.BOP.Validation.OrdLawRequiresBuilding = 地点{1}的建筑物{0} - 如果没有建筑物险承保范围，法令或法律险承保范围无效
Web.Policy.BOP.Validation.SmallBusinessTypeRequired = 需要小企业类型
Web.Policy.BOP.Validation.UnavailableClassCode = 地点{0}/建筑物{1}： 类代码{2}无效。请另选一个。
Web.Policy.BOP.Validation.WindHailOnlyOneDeductibleAllowed = 只能选择一个风暴/冰雹免赔额
Web.Policy.BOP.Validation.YearBuildingBuilt = {0}必须是{1}与{2}之间的有效年份
Web.Policy.Billing.AltBillingAccount = 备用计费\n账户
Web.Policy.Billing.Archived = 此保单期间的计费信息已存档。
Web.Policy.Billing.BillingSubAccounts = 计费子账户
Web.Policy.Billing.NoSubAccounts = 无子账户
Web.Policy.BillingContact.Name = 计费联系人
Web.Policy.CP.Blanket.AddBlanket = 添加统括
Web.Policy.CP.Blanket.AddCoverages = 在统括中包含选定项
Web.Policy.CP.Blanket.BlanketDetails = 统括详细信息
Web.Policy.CP.Blanket.BlanketIncluded = 统括编号{0}
Web.Policy.CP.Blanket.BlanketType = 统括类型
Web.Policy.CP.Blanket.Building = 建筑物
Web.Policy.CP.Blanket.BuildingCoverage = 建筑物险承保范围
Web.Policy.CP.Blanket.Coinsurance = 共同保险
Web.Policy.CP.Blanket.Coverage = 承保范围
Web.Policy.CP.Blanket.Deductible = 免赔额
Web.Policy.CP.Blanket.Description = 说明
Web.Policy.CP.Blanket.Details = 详细信息
Web.Policy.CP.Blanket.Display = 统括#{0}： {1}
Web.Policy.CP.Blanket.GroupType = 组类型
Web.Policy.CP.Blanket.Limit = 限额
Web.Policy.CP.Blanket.Location = 地点
Web.Policy.CP.Blanket.None = 无
Web.Policy.CP.Blanket.Number = 编号
Web.Policy.CP.Blanket.RecalculateLimit = 重新计算限额
Web.Policy.CP.Blanket.RemoveCoverages = 从统括中移除选定项
Web.Policy.CP.Blanket.ShowCoverages = 显示承保范围
Web.Policy.CP.Blanket.Status = 包含在统括保险中
Web.Policy.CP.Location.Building = 商业地产建筑物
Web.Policy.CP.Location.Building.BuildingBPPLimit = 商业个人财产限额
Web.Policy.CP.Location.Building.BuildingLimit = 建筑物限额
Web.Policy.CP.Location.Building.BusinessIncomeLimit = 营业收益限额
Web.Policy.CP.Location.Building.CannotRemoveBuildingWithBlanket = 无法移除建筑物，因其具有统括承保范围。
Web.Policy.CP.Location.Building.ExtraExpenseLimit = 额外费用限额
Web.Policy.CP.Location.Building.PrincipleOps = 主营业务/房屋
Web.Policy.CP.Location.CPBuilding.AlarmCertificateNum = 报警凭证编号
Web.Policy.CP.Location.CPBuilding.AlarmClass = 报警类
Web.Policy.CP.Location.CPBuilding.AlarmExpiration = 报警到期日期
Web.Policy.CP.Location.CPBuilding.AlarmGrade = 报警等级
Web.Policy.CP.Location.CPBuilding.AlarmType = 报警类型
Web.Policy.CP.Location.CPBuilding.BasementArea = 地下室面积
Web.Policy.CP.Location.CPBuilding.BoilerInsuredElsewhere = 其它地点的被保险锅炉
Web.Policy.CP.Location.CPBuilding.BoilerOnPremises = 经营场所的锅炉
Web.Policy.CP.Location.CPBuilding.BuildingInfo = 建筑物信息
Web.Policy.CP.Location.CPBuilding.BurglarAlarm = 防盗报警
Web.Policy.CP.Location.CPBuilding.BurglarySafeguard = 防盗
Web.Policy.CP.Location.CPBuilding.ClassCode = 财产类代码
Web.Policy.CP.Location.CPBuilding.ClassDescription = 财产类说明
Web.Policy.CP.Location.CPBuilding.Construction = 建筑工程
Web.Policy.CP.Location.CPBuilding.ConstructionType = 建筑类型
Web.Policy.CP.Location.CPBuilding.CoverageForm = 承保范围形式
Web.Policy.CP.Location.CPBuilding.CoveragesCardTitle = 承保范围
Web.Policy.CP.Location.CPBuilding.Description = 说明
Web.Policy.CP.Location.CPBuilding.Front = 前方
Web.Policy.CP.Location.CPBuilding.HasAlarm = 具有报警装置
Web.Policy.CP.Location.CPBuilding.Improvements = 修缮
Web.Policy.CP.Location.CPBuilding.InterestType = 权益方类型
Web.Policy.CP.Location.CPBuilding.LastUpdateHeating = 上次更新年份 - 供暖系统
Web.Policy.CP.Location.CPBuilding.LastUpdatePlumbing = 上次更新年份 - 管道
Web.Policy.CP.Location.CPBuilding.LastUpdateRoofing = 上次更新年份 - 屋顶
Web.Policy.CP.Location.CPBuilding.LastUpdateWiring = 上次更新年份 - 线路
Web.Policy.CP.Location.CPBuilding.Left = 左侧
Web.Policy.CP.Location.CPBuilding.NumBasements = 地下室数量
Web.Policy.CP.Location.CPBuilding.NumStories = 楼层数
Web.Policy.CP.Location.CPBuilding.Number = 建筑物编号
Web.Policy.CP.Location.CPBuilding.Other = 其它
Web.Policy.CP.Location.CPBuilding.RateType = 费率类型
Web.Policy.CP.Location.CPBuilding.Rating = 保费计算
Web.Policy.CP.Location.CPBuilding.Rear = 后方
Web.Policy.CP.Location.CPBuilding.RentedToOthers = 已租给其他人
Web.Policy.CP.Location.CPBuilding.Right = 右侧
Web.Policy.CP.Location.CPBuilding.RoofType = 屋顶类型
Web.Policy.CP.Location.CPBuilding.Sprinklered = 洒水装置覆盖百分比
Web.Policy.CP.Location.CPBuilding.TotalArea = 总面积（不包括地下室）
Web.Policy.CP.Location.CPBuilding.Vacancy = 空置百分比
Web.Policy.CP.Location.CPBuilding.WindRating = 抗风能力
Web.Policy.CP.Location.CPBuilding.YearBuilt = 建造年份
Web.Policy.CP.Location.CannotRemoveLocationWithBlanketedBuilding = 无法移除地点，因为该地点已统括编号为{0}的建筑物。请先移除这些统括。
Web.Policy.CP.Location.MarkPrimary = {0}（主要）
Web.Policy.CP.Location.SetAsPrimary = 设为主要
Web.Policy.CP.Validation.BasementArea = 必须为正数，因数地下室数目大于 0
Web.Policy.CP.Validation.BlanketLimitDoesNotMatchBlanketedCovLimit = 统括承保范围的限额与统括限额不匹配。
Web.Policy.CP.Validation.BlanketLimitDoesNotMatchTotalLimit = 统括承保范围的限额与{0}的统括限额不匹配。
Web.Policy.CP.Validation.Building = {0} / {1}
Web.Policy.CP.Validation.MustHaveAtLeastTwoBuildingCoverage = 统括#{0}必须至少有两个承保范围。
Web.Policy.CP.Validation.MustHaveAtLeastTwoCoverage = 统括必须至少有两个承保范围
Web.Policy.CP.Validation.MustHaveMatchingDeductibleAndCoinsurance = 统括#{0}的共同保险和免赔值必须与统括承保范围的这些值匹配。
Web.Policy.CP.Validation.UnavailableClassCode = 类代码{0}无效。请另选一个。
Web.Policy.CP.Validation.YearBuilt = 必须在1700年之后、下一年之前
Web.Policy.CP.Validation.YearLastUpdate = 上次更新的年份不能在建造年份之前
Web.Policy.CP.Validation.YearLastUpdateMax = 必须在下一年之前
Web.Policy.CP.Validation.atLeastOneBuilding = 每个地点必须至少有一幢建筑物
Web.Policy.CP.Validation.atLeastOneBusIncLimitRequired = 必须为营业收益至少输入一个限额。
Web.Policy.CP.Validation.atLeastOneCovRequired = 必须至少为地点{1}的{0}选择一个承保范围
Web.Policy.CalculateEarnedAmountAsOfaDifferentDate = 计算自不同日期起的已赚金额
Web.Policy.CallRemoteService.HandleErrors.Message = {0}服务返回了以下错误：{1}
Web.Policy.CallRemoteService.HandleErrors.NoMessage = 调用{0}服务时发生未知错误。HTTP代码{1}
Web.Policy.ChangingCoverageCurrencyResyncs = 更改承保范围货币将会更改可用承保范围选项并清除之前输入的承保范围值。\n\n如果要继续，必须确保已为新货币输入了正确的承保范围。
Web.Policy.Claims = 理赔
Web.Policy.Contact.AddExisting = 现有{0}
Web.Policy.Contact.AddOtherContacts = 其他联系人
Web.Policy.Contact.Existing = 现有{0}
Web.Policy.Contact.ExistingBillingContacts = 现有账单联系人
Web.Policy.Contact.ExistingContact = 现有联系人
Web.Policy.Contact.FromAddressBook = 从通讯簿
Web.Policy.Contact.NamedInsureds = 附加列名被保险人
Web.Policy.Contact.NoMoreThanOneSSNOrFEIN = 同一联系人不能具有多个SSN或雇主税号(FEIN)
Web.Policy.Contact.OtherContacts = 其他联系人
Web.Policy.Contact.OwnerOfficers = 业主/雇员
Web.Policy.Contact.Validation.MustRequote = 已更改一个或多个联系人。在保单承保之前必须重新报价。
Web.Policy.CoverableCurrency = 承保范围货币
Web.Policy.Coverables.AddConditionsAndExclusions = 添加条件和免责项
Web.Policy.Coverages = 承保范围
Web.Policy.Coverages.AddCoverages = 添加承保范围
Web.Policy.Coverages.AddExclusionsOrCondition = 添加免责项或条款
Web.Policy.Coverages.Exclusions = 免责项
Web.Policy.Coverages.LiabilityCoverages = 责任险承保范围
Web.Policy.Coverages.Modifiers = 调整系数
Web.Policy.Coverages.PolicyConditions = 保单条款
Web.Policy.CoveredAutoSymbol.Coverage = 承保范围
Web.Policy.CoveredAutoSymbol.CoveredAutoSymbols = 承保汽车
Web.Policy.CoveredAutoSymbol.Description = 说明
Web.Policy.CoveredAutoSymbol.EditButton = 编辑承保车辆
Web.Policy.CoveredAutoSymbol.EditedMessage = 承保的汽车已被手动编辑。
Web.Policy.CoveredAutoSymbol.Symbol = 车辆组
Web.Policy.CoveredAutoSymbol.Symbols = 车辆组
Web.Policy.CurrentPolicyTerms.Title = 保单期限
Web.Policy.DateOfLastLossRatioCalculation = 上次计算赔付率的日期
Web.Policy.Default.Financials.Amount = 交易金额
Web.Policy.Default.Financials.CurrentTerm = 当前条款项
Web.Policy.Default.Financials.FutureAnnual = 未来年度
Web.Policy.Default.Financials.FutureTerm = 未来条款项
Web.Policy.Default.Financials.Group = 说明
Web.Policy.Default.Financials.SettlementAmount = 赔付金额
Web.Policy.Default.Financials.Type = 费用类型
Web.Policy.Documents.Document.Delete.Tooltip = 删除单证
Web.Policy.Documents.Document.Remove.Tooltip = 移除单证
Web.Policy.Documents.Document.UpdateDocument.Title = 更新单证内容
Web.Policy.Documents.Document.UpdateDocument.UpdateContent = 请选择一个“{0}”类型的文件来替换“{1}”的内容
Web.Policy.Documents.Document.UpdateDocument.UpdateContent.IncorrectMimeType = 您尝试上传的文件的类型（“{0}”）与原始文件的类型（“{1}”）不同。
Web.Policy.Documents.Document.ViewAndEdit.Download.Tooltip = 下载单证
Web.Policy.Documents.Document.ViewAndEdit.Pending = 待定
Web.Policy.Documents.Document.ViewAndEdit.Pending.Refresh = 等待处理，请单击“刷新”
Web.Policy.Documents.Document.ViewAndEdit.Upload.Tooltip = 上传单证
Web.Policy.Documents.Document.ViewAndEdit.ViewContent.MissingMimetype.Tooltip = 无法查看单证内容，因为没有配置此文件类型。请联系您的管理员，为该类型的单证配置MIME类型。
Web.Policy.Documents.Document.ViewAndEdit.ViewContent.MissingViewPermission.Tooltip = 您没有适当的权限查看此单证
Web.Policy.Documents.Document.ViewAndEdit.ViewContent.Tooltip = 查看单证内容
Web.Policy.Documents.Document.ViewAndEdit.ViewProperties.Tooltip = 查看单证属性
Web.Policy.EarnedAsOf = 已赚得自
Web.Policy.EarnedPremium = 已赚保费
Web.Policy.EarnedPremiumExcludesTaxesAndFees = （不包括税费）
Web.Policy.EarnedPremiumIsZeroLossRatioCannotBeCalculated = 已赚保费为零 - 无法计算赔付率
Web.Policy.EditCurrentAddress = 编辑当前地址
Web.Policy.EvaluationIssues = 核保项
Web.Policy.EvaluationIssues.AddManualIssue = 添加核保项
Web.Policy.EvaluationIssues.AlreadyApprovedTitle = 已批准
Web.Policy.EvaluationIssues.AlreadyRejectedTitle = 已拒绝
Web.Policy.EvaluationIssues.Approve = 批准
Web.Policy.EvaluationIssues.AutoApproveTooltip = 自动批准
Web.Policy.EvaluationIssues.BlockingBindTitle = 阻止承保
Web.Policy.EvaluationIssues.BlockingIssuanceTitle = 阻止出单
Web.Policy.EvaluationIssues.BlockingQuoteReleaseTitle = 阻止报价释放
Web.Policy.EvaluationIssues.BlockingQuoteTitle = 阻止报价
Web.Policy.EvaluationIssues.BlockingRateReleaseTitle = 阻止费率发布
Web.Policy.EvaluationIssues.InformationTitle = 信息
Web.Policy.EvaluationIssues.IssueValueVariesInTime = {0} §
Web.Policy.EvaluationIssues.IssueValueVariesInTimeWithoutBlocking = {0} (§)
Web.Policy.EvaluationIssues.LockForReview = 锁定供审查
Web.Policy.EvaluationIssues.MultiLocationRiskEval = 更新风险评估
Web.Policy.EvaluationIssues.MultiLocationRiskEvalInProgressAlert = 正在进行评估。在风险评估完成之前编辑地点信息可能会导致意外结果。完成风险评估时将发出活动。
Web.Policy.EvaluationIssues.MultiLocationRiskEvalInProgressToolTip = 正在进行风险评估。
Web.Policy.EvaluationIssues.MultiLocationRiskEvalToolTip = 请求对保单的所有地点进行新的风险评估。
Web.Policy.EvaluationIssues.NoIssues = 目前未发现核保项。
Web.Policy.EvaluationIssues.Ok = 确定
Web.Policy.EvaluationIssues.Reject = 拒绝
Web.Policy.EvaluationIssues.Reopen = 重新立案
Web.Policy.EvaluationIssues.RequestApproval = 请求审批
Web.Policy.EvaluationIssues.SpecialApprove = 特殊批准
Web.Policy.EvaluationIssues.SpecialApproveConfirmMessage = 您的权限配置文件不允许您批准此问题。如果认为您具有或需要此权限，请通知系统管理员。您还具有特殊的覆盖权限，可强行对其进行批准。是否要使用此覆盖权限进行批准？
Web.Policy.EvaluationIssues.VariesOverTermTooltip = 附加责任内的变化
Web.Policy.EvaluationIssues.ViewIssuesBlocking = 查看核保项阻止
Web.Policy.EvaluationIssues.ViewIssuesBlocking.Me = 我
Web.Policy.EvaluationIssues.ViewIssuesBlocking.ViewAll = 查看全部
Web.Policy.ExistingAddress = 现有地址
Web.Policy.Filter.All = 所有
Web.Policy.Form.Description = 说明
Web.Policy.Form.EffectiveDate = 生效日期
Web.Policy.Form.EndorsementNumber = 批单号
Web.Policy.Form.FormNumber = 表格编号
Web.Policy.Form.FormsLabel = 表格
Web.Policy.Form.InForce = 已生效
Web.Policy.Form.ReplacingEndorsement = 替换编号
Web.Policy.GL.ClaimsMadeOrigEffDate = 提出理赔的原始生效日期
Web.Policy.GL.Coverages = 承保范围
Web.Policy.GL.ExposureUnits = 按地点划分的风险单位值
Web.Policy.GL.ExposureUnits.Basis = 基本金额
Web.Policy.GL.ExposureUnits.BasisType = 基本类型
Web.Policy.GL.ExposureUnits.ClassCode = 分类代码
Web.Policy.GL.ExposureUnits.Confirm.EndExposures = 这将导致一个或多个赔付明细被完全移除。
Web.Policy.GL.ExposureUnits.Confirm.SplitExposures = 拆分日期之后生效或者拆分日期之前到期的赔付明细均不会拆分。
Web.Policy.GL.ExposureUnits.Description = 说明
Web.Policy.GL.ExposureUnits.EffectiveDate = 生效日期
Web.Policy.GL.ExposureUnits.ExpirationDate = 到期日期
Web.Policy.GL.ExposureUnits.ExposureValue = 赔付明细值
Web.Policy.GL.ExposureUnits.Location = 地点名称
Web.Policy.GL.ExposureUnits.ScreenName = 风险单位
Web.Policy.GL.ExposureUnits.Units = 赔付明细类型
Web.Policy.GL.Loc = 地点
Web.Policy.GL.PolicyBasis = 保单基本信息
Web.Policy.GL.Quote.Coverages.Line.Title = 险种级承保范围
Web.Policy.GL.Quote.Jurisdiction = 省/直辖市
Web.Policy.GL.Quote.OtherPremiums.Title = 其它费用
Web.Policy.GL.RetroDate = 追溯日期
Web.Policy.GL.Schedule.Act = 操作
Web.Policy.GL.Schedule.BodilyInjuryExcluded = 已排除人身伤害
Web.Policy.GL.Schedule.Date = 日期
Web.Policy.GL.Schedule.DateOfAct = 操作日期
Web.Policy.GL.Schedule.Description = 说明
Web.Policy.GL.Schedule.DescriptionofOperations = 运营说明
Web.Policy.GL.Schedule.Location = 地点
Web.Policy.GL.Schedule.PropertyDamageExcluded = 已排除财产损失
Web.Policy.GL.Schedule.Type = 类型
Web.Policy.GL.Split = 拆分
Web.Policy.GL.SplitLimits = 拆分人身伤害/财产损失限额
Web.Policy.GL.Subline = 子行
Web.Policy.GL.Type = 类型
Web.Policy.GL.Validation.AtLeastOneExposure = 一般责任险保单必须至少有一项赔付明细。
Web.Policy.GL.Validation.GLCoverageForm = 需要保单基本信息
Web.Policy.GL.Validation.MissingLocation = 一个或多个赔付明细没有地点。
Web.Policy.GL.Validation.RetroDateAfterPeriodStart = “追溯日期”不得在“保单生效日期”之后
Web.Policy.GL.Validation.RetroDateTooEarly = “追溯日期”通常应在“提出理赔的原始生效日期”之后
Web.Policy.GL.Validation.UnavailableClassCode = 类代码{0}无效。请另选一个。
Web.Policy.HOP.CoverageForm = 承保范围形式
Web.Policy.HOP.CoveragePart = 保单类型
Web.Policy.HOP.Financials.Amount = 金额
Web.Policy.HOP.Financials.BasePremium = 基本保费
Web.Policy.HOP.Financials.Description = 说明
Web.Policy.HOP.Financials.EffDate = 生效日期
Web.Policy.HOP.Financials.ExpDate = 到期日期
Web.Policy.HOP.Financials.Premium = 保费
Web.Policy.HOP.Financials.Proration = 按比例分配
Web.Policy.HOP.HOPCoveragesScreen.AdditionalCoverages = 附加承保范围
Web.Policy.HOP.HOPCoveragesScreen.Conditions = 条件
Web.Policy.HOP.HOPCoveragesScreen.ConditionsAndExclusions = 条款和免责项
Web.Policy.HOP.HOPCoveragesScreen.DwellingOptionalCoverages = 住宅承保范围
Web.Policy.HOP.HOPCoveragesScreen.Exclusions = 免责项
Web.Policy.HOP.HOPCoveragesScreen.MainCoverages = 承保范围
Web.Policy.HOP.HOPCoveragesScreen.Modifiers = 调整系数
Web.Policy.HOP.HOPCoveragesScreen.OptionalCoverages = 可选承保范围
Web.Policy.HOP.HOPCoveragesScreen.PolicyLineOptionalCoverages = 保单险类承保范围
Web.Policy.HOP.HOPDwelling.AdditionalInterest.Description = 权益方说明
Web.Policy.HOP.HOPDwelling.AdditionalInterest.EffDate = 生效日期
Web.Policy.HOP.HOPDwelling.AdditionalInterest.ExpDate = 到期日期
Web.Policy.HOP.HOPDwelling.AdditionalInterests = 其他权益方和被保险人
Web.Policy.HOP.HOPDwelling.Details = 详细信息
Web.Policy.HOP.HOPDwelling.EditLocation = 编辑地点
Web.Policy.HOP.HOPDwelling.EstimatedReplacementCost = 预计重置成本
Web.Policy.HOP.HOPDwelling.LocationName = 地点
Web.Policy.HOP.HOPDwelling.LocationType = 地点类型
Web.Policy.HOP.HOPDwelling.Name = 住宅
Web.Policy.HOP.HOPDwelling.NewLocation = 新建地点
Web.Policy.HOP.HOPDwelling.NumberOfInsuredUnits = 被保险人单元的数量
Web.Policy.HOP.HOPDwelling.NumberOfUnitsBetweenFirewall = 防火墙之间的单元数量
Web.Policy.HOP.HOPDwelling.ResidenceType = 住宅
Web.Policy.HOP.HOPDwelling.SectionName = 一般
Web.Policy.HOP.HOPDwellingAnimal.AnimalBiteHistory = 咬伤历史记录
Web.Policy.HOP.HOPDwellingAnimal.AnimalBreed = 种类
Web.Policy.HOP.HOPDwellingAnimal.AnimalType = 类型
Web.Policy.HOP.HOPDwellingAnimals.Name = 动物
Web.Policy.HOP.HOPDwellingConstruction.AnyUpgraded = 下列任何内容已升级？
Web.Policy.HOP.HOPDwellingConstruction.ConstructionType = 建筑工程
Web.Policy.HOP.HOPDwellingConstruction.ConstructionTypeDescription = 建筑类型说明
Web.Policy.HOP.HOPDwellingConstruction.ElectricalSystem = 电力系统
Web.Policy.HOP.HOPDwellingConstruction.FoundationType = 基础
Web.Policy.HOP.HOPDwellingConstruction.FuelLineLocation = 燃油管路
Web.Policy.HOP.HOPDwellingConstruction.FuelStorageTankLocation = 燃料贮存罐
Web.Policy.HOP.HOPDwellingConstruction.GarageType = 车库
Web.Policy.HOP.HOPDwellingConstruction.HeatingTypeDescription = 供暖系统类型说明
Web.Policy.HOP.HOPDwellingConstruction.HeatingUpgradeDate = 供暖系统 - 年份
Web.Policy.HOP.HOPDwellingConstruction.Name = 住宅建筑
Web.Policy.HOP.HOPDwellingConstruction.NumberOfStories = 楼层数
Web.Policy.HOP.HOPDwellingConstruction.Plumbing = 管道
Web.Policy.HOP.HOPDwellingConstruction.PlumbingTypeDescription = 管道类型说明
Web.Policy.HOP.HOPDwellingConstruction.PlumbingUpgradeDate = 管道 - 年份
Web.Policy.HOP.HOPDwellingConstruction.PrimaryHeating = 主要供暖系统
Web.Policy.HOP.HOPDwellingConstruction.RoofType = 屋顶
Web.Policy.HOP.HOPDwellingConstruction.RoofTypeDescription = 屋顶类型说明
Web.Policy.HOP.HOPDwellingConstruction.RoofingUpgradeDate = 屋顶 - 年份
Web.Policy.HOP.HOPDwellingConstruction.SecondaryHeating = 次要供暖系统
Web.Policy.HOP.HOPDwellingConstruction.Wiring = 电线
Web.Policy.HOP.HOPDwellingConstruction.WiringUpgradeDate = 电线 - 年份
Web.Policy.HOP.HOPDwellingConstruction.YearBuilt = 建造年份
Web.Policy.HOP.HOPDwellingHazard.AdditionalInformation = 附加信息
Web.Policy.HOP.HOPDwellingHazard.HazardType = 类型
Web.Policy.HOP.HOPDwellingHazard.SpecificHazard = 特定风险
Web.Policy.HOP.HOPDwellingHazards.Name = 风险级别
Web.Policy.HOP.HOPDwellingModifiers.Dwelling = 住宅
Web.Policy.HOP.HOPDwellingModifiers.Policy = 保单
Web.Policy.HOP.HOPDwellingOccupancy.DwellingOccupancyType = 使用
Web.Policy.HOP.HOPDwellingOccupancy.DwellingUsageType = 使用情况
Web.Policy.HOP.HOPDwellingOccupancy.Name = 使用
Web.Policy.HOP.HOPDwellingOccupancy.NumberOfRoomers = 房客/寄宿者数量
Web.Policy.HOP.HOPDwellingProtection.AutofillProtectionClass = 自动填充保护类
Web.Policy.HOP.HOPDwellingProtection.BurglarAlarmType = 防盗报警
Web.Policy.HOP.HOPDwellingProtection.DistanceToFireHydrant = 到消防栓的距离（英尺）
Web.Policy.HOP.HOPDwellingProtection.DistanceToFireStation = 到消防站的距离（英里）
Web.Policy.HOP.HOPDwellingProtection.DoorsHaveDeadbolts = 所有门都有固定栓
Web.Policy.HOP.HOPDwellingProtection.FireAlarm = 消防报警
Web.Policy.HOP.HOPDwellingProtection.FireProtectionClass = 防火等级
Web.Policy.HOP.HOPDwellingProtection.Name = 保护
Web.Policy.HOP.HOPDwellingProtection.NumberOfFireExtinguishers = 灭火器数量
Web.Policy.HOP.HOPDwellingProtection.SmokeAlarms = 烟雾报警
Web.Policy.HOP.HOPDwellingProtection.SprinklerSystemType = 洒水装置系统
Web.Policy.HOP.HOPDwellingProtection.VisibleToNeighbors = 邻居可以看见住宅
Web.Policy.HOP.HOPQuoteScreen.AdjustmentsToBasePremium = 调整基本保费
Web.Policy.HOP.HOPQuoteScreen.Amount = 金额
Web.Policy.HOP.HOPQuoteScreen.Modifiers = 调整系数
Web.Policy.HOP.HOPQuoteScreen.OtherPremiums = 其它保费
Web.Policy.HOP.HOPQuoteScreen.PeriodEnd = 期间结束
Web.Policy.HOP.HOPQuoteScreen.PeriodStart = 期间开始
Web.Policy.HOP.HOPQuoteScreen.PolicyType = 保单类型 - {0}({1})
Web.Policy.HOP.HOPQuoteScreen.Proration = 按比例分配
Web.Policy.HOP.HOPQuoteScreen.Total = 总计
Web.Policy.HOP.PolicyReview.CoveragePartSelection.Title = 保单承保范围
Web.Policy.HOP.Quote.SectionICoverages.Line.Title = 第一部分承保范围
Web.Policy.HOP.Quote.SectionIICoverages.Line.Title = 第二部分承保范围
Web.Policy.HOP.SwimmingPool.AdditionalInformation = 附加信息
Web.Policy.HOP.SwimmingPool.AlreadyExists = 住宅“{0}”已经有一个游泳池
Web.Policy.HOP.SwimmingPool.ApprovedFence = 经过批准的围栏
Web.Policy.HOP.SwimmingPool.DivingBoard = 跳板
Web.Policy.HOP.SwimmingPool.HasPool = 是否有游泳池？
Web.Policy.HOP.SwimmingPool.Label = 游泳池
Web.Policy.HOP.SwimmingPool.Slide = 滑梯
Web.Policy.HOP.SwimmingPool.Type = 类型
Web.Policy.HOP.Validation.AddlIntExpDateBeforeEffDate = 其他权益方的到期日期({0})等于或早于其生效日期({1})
Web.Policy.HOP.Validation.Animal.DogNotSpecified = 在资格审查期间指出有犬只，但动物清单中未列出
Web.Policy.HOP.Validation.AnimalAddlInfoRequired = 品种为“其它”的动物的“其它信息”字段是必填字段
Web.Policy.HOP.Validation.AssistedLivingCare.FieldsRequired = 对于每个辅助生活护理已计列项目，设施名称和地点均为必需的信息
Web.Policy.HOP.Validation.BaseState.MustMatchDwellingLocation = 保单基本省/直辖市“{0}”必须与住宅地点“{1}”相匹配
Web.Policy.HOP.Validation.CoverageA.LimitExceedsEstimatedReplacementCost = 承保范围A住宅限额不得超过预计重置成本
Web.Policy.HOP.Validation.DwellingLocationChanged = 住宅地点只能在投保单、保险、重新填写或重新填写新账户交易中更改
Web.Policy.HOP.Validation.FireProtectionClass.ValueRequired = 必须指定防火等级
Web.Policy.HOP.Validation.GolfCarts.FieldsRequired = 每个高尔夫球车已计列项目都需要厂牌/型号和序列号
Web.Policy.HOP.Validation.HeatingUpgradeYearTooEarly = {0}早于{1}的建造年份
Web.Policy.HOP.Validation.LandlordsFurnishings.RentalUnitDescriptionRequired = 对于房东的每个用品已计列项目，租赁单元的说明是必需的信息
Web.Policy.HOP.Validation.OwnerOccupant.InvalidOccupancy = 在资格审查期间指出业主自用，但使用用途未指定为业主自用
Web.Policy.HOP.Validation.OwnerOccupant.InvalidUsage = 在资格审查期间指出业主自用，但使用用途指定为租赁财产
Web.Policy.HOP.Validation.ScheduledPersonalProperty.AggregateLimitExceedsCovCTermValue = 已计列个人财产的已计列项目限额超过了承保范围C限额值
Web.Policy.HOP.Validation.SingleCoveragePart = 家庭财产险保单必须仅具有一个承保范围部分
Web.Policy.HOP.Validation.SingleDwelling = 家庭财产险承保范围部分必须仅具有一栋住宅
Web.Policy.HOP.Validation.SwimmingPool.DetailsRequired = 在资格审查期间指出有游泳池，但未指定详细信息
Web.Policy.HOP.Validation.SwimmingPool.HasDivingBoardRequired = 在资格审查期间指出有游泳池，但未指定跳板
Web.Policy.HOP.Validation.SwimmingPool.HasSlideRequired = 在资格审查期间指出有游泳池，但未指定滑梯
Web.Policy.HOP.Validation.SwimmingPool.IsApprovedFenceRequired = 在资格审查期间指出有游泳池，但未指定经过批准的围栏
Web.Policy.HOP.Validation.SwimmingPool.PoolTypeRequired = 在资格审查期间指出有游泳池，但未指定游泳池类型
Web.Policy.HOP.Validation.Trust.TrusteeAddressRequired = 对于信托公司的每个已计列项目，托管人地址是必需的信息
Web.Policy.HOP.Validation.ValuablePersonalProperty.AggregateLimitExceedsCovCTermValue = 贵重个人财产已计列项目的累计限额超过了承保范围C限额值
Web.Policy.HOP.Validation.ValuablePersonalProperty.ItemLimitExceedsAggregateLimit = 每个项目的贵重个人财产已计列项目的限额不允许超过累计限额
Web.Policy.IM.ARScheduledItems = 应收账款计划项目
Web.Policy.IM.AccountsReceivable = 应收账款
Web.Policy.IM.AccountsReceivable.ARNum = 编号
Web.Policy.IM.AccountsReceivable.BusinesClass = 业务类别
Web.Policy.IM.AccountsReceivable.Coinsurance = 共同保险百分比
Web.Policy.IM.AccountsReceivable.EADescription = 客户姓名
Web.Policy.IM.AccountsReceivable.EANumber = 账号
Web.Policy.IM.AccountsReceivable.ExcludedAccounts = 已排除客户
Web.Policy.IM.AccountsReceivable.ForwardedToHomeOffice = 已转发到总部
Web.Policy.IM.AccountsReceivable.Limit = 限额
Web.Policy.IM.AccountsReceivable.LocationBuilding = 地点/建筑物
Web.Policy.IM.AccountsReceivable.PartLevelCoverages = 应收账款部分级承保范围
Web.Policy.IM.AccountsReceivable.PartLevelInformation = 部分级信息
Web.Policy.IM.AccountsReceivable.PercentDuplicated = 重复的百分比
Web.Policy.IM.AccountsReceivable.Receptacle = 贮藏器类型
Web.Policy.IM.AccountsReceivable.Reporting = 报告
Web.Policy.IM.AccountsReceivableCoverages = 应收账款承保范围
Web.Policy.IM.AddCoveragePart = 添加承保范围部分
Web.Policy.IM.AreYouSure = 是否确定要移除此承保范围部分及其所有详细信息？
Web.Policy.IM.Building.ConfirmRemoveBuilding = 移除建筑物将会移除关联的应收账款。
Web.Policy.IM.Coinsurance = 共同保险
Web.Policy.IM.ContactorsEquipmentCoveragePart = 承包商设备
Web.Policy.IM.ContractorsEquipment = 承包商设备
Web.Policy.IM.ContractorsEquipment.Coinsurance = 共同保险
Web.Policy.IM.ContractorsEquipment.ContractorType = 承包商类型
Web.Policy.IM.ContractorsEquipment.ContractorsEquipmentID = 设备ID
Web.Policy.IM.ContractorsEquipment.Coverages = 承保范围
Web.Policy.IM.ContractorsEquipment.Description = 说明
Web.Policy.IM.ContractorsEquipment.EquipmentDetails = 设备详细信息
Web.Policy.IM.ContractorsEquipment.EquipmentID = 设备ID
Web.Policy.IM.ContractorsEquipment.EquipmentNumber = 设备编号
Web.Policy.IM.ContractorsEquipment.EquipmentPartLevelCoverages = 设备部件级承保范围
Web.Policy.IM.ContractorsEquipment.Limit = 限额
Web.Policy.IM.ContractorsEquipment.Manufacturer = 制造商
Web.Policy.IM.ContractorsEquipment.Model = 车型
Web.Policy.IM.ContractorsEquipment.ModelYear = 型号年份
Web.Policy.IM.ContractorsEquipment.PartLevelCoverages = 部分级承保范围
Web.Policy.IM.ContractorsEquipment.PartLevelExclusions = 免责项
Web.Policy.IM.ContractorsEquipment.PartLevelInformation = 部分级信息
Web.Policy.IM.ContractorsEquipment.PerOccurrenceLimit = 每次事故发生限额
Web.Policy.IM.ContractorsEquipment.Reporting = 报告
Web.Policy.IM.ContractorsEquipment.ScheduledEquipment = 计列设备
Web.Policy.IM.ContractorsEquipment.ScheduledEquipment.AdditionalInterest.Error.AdditionalInterestIsWrongType = 计列设备的其他权益方必须属于类型SchedEquipAddnlInterest，但找到类型却是{0}
Web.Policy.IM.ContractorsEquipment.ScheduledEquipment.AdditionalInterest.LVLabel = 设备
Web.Policy.IM.ContractorsEquipment.ScheduledEquipmentCoverages = 计列设备承保范围
Web.Policy.IM.ContractorsEquipment.ScheduledEquipments = 计列设备
Web.Policy.IM.ContractorsEquipment.UWInfo = 核保信息
Web.Policy.IM.ContractorsEquipment.UnscheduledEquipment = 未计列设备
Web.Policy.IM.ContractorsEquipment.YearBought = 购买年份
Web.Policy.IM.ContractorsEquipments = 承包商设备
Web.Policy.IM.CostDetailsFor = {0}的成本详细信息
Web.Policy.IM.CoveragePart = 承保范围部分
Web.Policy.IM.CoveragePartSelection = 承保范围部分选择
Web.Policy.IM.CoveragePartSummary = 承保范围部分摘要
Web.Policy.IM.Deductible = 免赔额
Web.Policy.IM.Description = 说明
Web.Policy.IM.IMSigns = 标志
Web.Policy.IM.Interior = 内饰？
Web.Policy.IM.Limit = 限额
Web.Policy.IM.Location = 地点
Web.Policy.IM.NoScreenDefined = 没有为承保范围部分定义屏幕
Web.Policy.IM.RatingEngine.Exception = 费率{0}中的其它财产险部分子类型未处理
Web.Policy.IM.RatingEngine.Logger.Log = 评定其它财产险{0}的等级
Web.Policy.IM.RatingEngine.Logger.Log.Done = 完成
Web.Policy.IM.RatingEngine.Logger.RateDone = {0} {1}版本评级已完成。
Web.Policy.IM.RatingEngine.Logger.Version = 正在评定{0} {1}版本等级...
Web.Policy.IM.RatingEngine.Logger.isCanceledSlice = 未评定{0} {1}版本等级，因其处于已取消的时间期间中。
Web.Policy.IM.SignNumber = 标志号
Web.Policy.IM.SignType = 标志类型
Web.Policy.IM.Validation.AtLeastOneAccountsReceivableCoverageExists = 至少需要一个应收账款承保范围
Web.Policy.IM.Validation.AtLeastOneEquipmentOrMiscCoverageExists = 在此承保范围部分必须至少包含一个承包商设备或其它未计列承保范围
Web.Policy.IM.Validation.AtLeastOneSign = 此承保范围部分至少必须包含一个标志险
Web.Policy.IM.Validation.SignsMustBeUnique = 标志#{0}具有相同的说明、标志类型和内部值。这些字段用于确定标志的唯一性。
Web.Policy.IM.Validation.UnknownPart = 未知的其它财产险类承保范围部分校验 -
Web.Policy.IM.Validation.limitcannotbelessthandeductible = {0}限额不能小于免赔额
Web.Policy.IncludesEBUR = 包括已赚但未报告
Web.Policy.LOB.ScheduledItem = 计划项目 - {0}
Web.Policy.LocationContainer.AddAllExistingAccountLocations = 添加现有全部
Web.Policy.LocationContainer.AddLocation = 添加地点
Web.Policy.LocationContainer.AddSelectedLocations = 添加选定地点
Web.Policy.LocationContainer.CreateNewLocation = 新建地点
Web.Policy.LocationContainer.ExistingLocation = 现有地点
Web.Policy.LocationContainer.Location = 地点
Web.Policy.LocationContainer.Location.AccountLocations = 账户地点
Web.Policy.LocationContainer.Location.Actions = 操作
Web.Policy.LocationContainer.Location.AddBuilding = 添加建筑物
Web.Policy.LocationContainer.Location.AddExistingAccountLocation = 添加现有地点
Web.Policy.LocationContainer.Location.AddSelectedBuildings = 添加选定的建筑物
Web.Policy.LocationContainer.Location.Address = 地址
Web.Policy.LocationContainer.Location.Building.Alarm = 防盗报警
Web.Policy.LocationContainer.Location.Building.Alarm.AlarmCertificate = 报警凭证
Web.Policy.LocationContainer.Location.Building.Alarm.AlarmCertification = 报警认证
Web.Policy.LocationContainer.Location.Building.Alarm.AlarmExpiration = 报警到期
Web.Policy.LocationContainer.Location.Building.Alarm.AlarmGrade = 报警级
Web.Policy.LocationContainer.Location.Building.Alarm.BuildingAlarmType = 报警类型
Web.Policy.LocationContainer.Location.Building.AnyAreaLeased = 是否租赁任何区域？
Web.Policy.LocationContainer.Location.Building.AreaFinished = 地下室已完成面积（平方英尺）
Web.Policy.LocationContainer.Location.Building.AreaUnfinished = 地下室未完成面积（平方英尺）
Web.Policy.LocationContainer.Location.Building.BuildingNum = 建筑物编号
Web.Policy.LocationContainer.Location.Building.Construction = 房屋构造
Web.Policy.LocationContainer.Location.Building.ConstructionType = 建筑类型
Web.Policy.LocationContainer.Location.Building.Description = 说明
Web.Policy.LocationContainer.Location.Building.Details = 详细信息
Web.Policy.LocationContainer.Location.Building.Error.AlreadyIsALineSpecificBuilding = {0}已经是{1}
Web.Policy.LocationContainer.Location.Building.FrontExposure = 前方
Web.Policy.LocationContainer.Location.Building.Improvement = 建筑物修缮
Web.Policy.LocationContainer.Location.Building.Info = 建筑物信息
Web.Policy.LocationContainer.Location.Building.InterestType = 权益
Web.Policy.LocationContainer.Location.Building.LastUpdateHeating = 上次更新年份 - 供暖系统
Web.Policy.LocationContainer.Location.Building.LastUpdatePlumbing = 上次更新年份 - 管道
Web.Policy.LocationContainer.Location.Building.LastUpdateRoofing = 上次更新年份 - 屋顶
Web.Policy.LocationContainer.Location.Building.LastUpdateWiring = 上次更新年份 - 线路
Web.Policy.LocationContainer.Location.Building.LeftExposure = 左侧
Web.Policy.LocationContainer.Location.Building.List.Title = 建筑物
Web.Policy.LocationContainer.Location.Building.NumBasements = 地下室数量
Web.Policy.LocationContainer.Location.Building.NumStories = 楼层数
Web.Policy.LocationContainer.Location.Building.Number = 建筑物编号
Web.Policy.LocationContainer.Location.Building.PercentOccupied = 使用比例
Web.Policy.LocationContainer.Location.Building.PercentSprinklered = 洒水装置覆盖百分比
Web.Policy.LocationContainer.Location.Building.RearExposure = 后方
Web.Policy.LocationContainer.Location.Building.RightExposure = 右侧
Web.Policy.LocationContainer.Location.Building.Spoilage.BreakContam = 故障或污染
Web.Policy.LocationContainer.Location.Building.Spoilage.FridgeMaintenance = 制冷装置维修协议
Web.Policy.LocationContainer.Location.Building.Spoilage.PowerOutage = 断电
Web.Policy.LocationContainer.Location.Building.Spoilage.RiskClass = 风险级别
Web.Policy.LocationContainer.Location.Building.Spoilage.RiskDescription = 风险说明
Web.Policy.LocationContainer.Location.Building.TotalArea = 总面积
Web.Policy.LocationContainer.Location.Building.YearBuilt = 建造年份
Web.Policy.LocationContainer.Location.BuildingSelection = 更多建筑物选择
Web.Policy.LocationContainer.Location.CompactAddress = 地址
Web.Policy.LocationContainer.Location.CreateNewBuilding = 新建建筑物
Web.Policy.LocationContainer.Location.Description = 说明
Web.Policy.LocationContainer.Location.EditLocation = 编辑地点
Web.Policy.LocationContainer.Location.EmployeeCount = 此地点的雇员数量
Web.Policy.LocationContainer.Location.Error.AccountLocationOnDifferentAccount = {0}是与{1}不同的账户中的地点
Web.Policy.LocationContainer.Location.Error.AlreadyIsALineSpecificLocation = {0}已经是{1}
Web.Policy.LocationContainer.Location.EvaluateInSpotlight = 在Spotlight中计算
Web.Policy.LocationContainer.Location.ExistingBuilding = 现有建筑物
Web.Policy.LocationContainer.Location.ExistingGarageLocations = 现有车库地点
Web.Policy.LocationContainer.Location.GeneralInfoTitle = 一般信息
Web.Policy.LocationContainer.Location.HideRiskAssessmentDetails = 隐藏
Web.Policy.LocationContainer.Location.IndustryCode = SIC代码（如果不同于主要代码）
Web.Policy.LocationContainer.Location.LastSpotlightEvaluation = 上次Spotlight计算
Web.Policy.LocationContainer.Location.Latitude = 纬度
Web.Policy.LocationContainer.Location.List.Title = 地点
Web.Policy.LocationContainer.Location.LocNum = 地点编号
Web.Policy.LocationContainer.Location.LocationCode = 地点代码
Web.Policy.LocationContainer.Location.LocationInformation.Title = 地点信息
Web.Policy.LocationContainer.Location.LocationName = 地点名称
Web.Policy.LocationContainer.Location.Longitude = 经度
Web.Policy.LocationContainer.Location.MoreBuildings = 更多建筑物
Web.Policy.LocationContainer.Location.NamedInsured = 雇主（如果不是“主要列名被保险人”）
Web.Policy.LocationContainer.Location.New = 新建地点
Web.Policy.LocationContainer.Location.NonSpecificLocation = 非特定
Web.Policy.LocationContainer.Location.Panel.AdditionalCoverages.Location.Title = 附加承保范围
Web.Policy.LocationContainer.Location.Panel.GeneralInfo.Title = 详细信息
Web.Policy.LocationContainer.Location.Panel.Questions.Title = 问题
Web.Policy.LocationContainer.Location.Phone = 电话
Web.Policy.LocationContainer.Location.PrimaryLocation = 首选
Web.Policy.LocationContainer.Location.PrimaryLocationError.CanNotRemovePrimaryLocation = 无法移除主要地点
Web.Policy.LocationContainer.Location.PrimaryLocationError.SelectAtleastOne = 必须至少选择一个主要地点
Web.Policy.LocationContainer.Location.RemoveBuildings = 移除建筑物
Web.Policy.LocationContainer.Location.RemoveLocationWarning = 移除此地点将把该地点所有风险的到期日期设置为此日期，并且会移除此日期之后开始的所有风险。是否要继续？
Web.Policy.LocationContainer.Location.RiskAssessment.EvaluationDateSpacer = 　
Web.Policy.LocationContainer.Location.RiskAssessment.NoEvaluationDate = -
Web.Policy.LocationContainer.Location.RiskAssessment.RiskAssessmentResultIsStale = Spotlight的风险评估依据的地点数据与左侧显示的不同。
Web.Policy.LocationContainer.Location.RiskAssessmentDetails.RiskProfile = 风险配置文件：{0}
Web.Policy.LocationContainer.Location.RiskAssessmentResultIsStale = Spotlight的风险评估依据的地点数据与详细信息视图中显示的不同。
Web.Policy.LocationContainer.Location.ShowRiskAssessmentDetails = 显示
Web.Policy.LocationContainer.Location.SpotlightDistanceToFloodZone = 到水灾区的距离
Web.Policy.LocationContainer.Location.SpotlightFloodRisk = 水灾风险
Web.Policy.LocationContainer.Location.State = 省/直辖市
Web.Policy.LocationContainer.Location.TaxLocation = 纳税地点
Web.Policy.LocationContainer.Location.TaxLocationSearchDV.Code = 代码
Web.Policy.LocationContainer.Location.TaxLocationSearchDV.Description = 说明
Web.Policy.LocationContainer.Location.TaxLocationSearchDV.TLPrefix = 纳税地点前缀
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.City = 市/区
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.Code = 代码
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.County = 区/县
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.Description = 说明
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.State = 省/直辖市
Web.Policy.LocationContainer.Location.TaxLocationSearchResultsLV.TLPrefix = 纳税地点前缀
Web.Policy.LocationContainer.Location.TerritoryCode = {0}的地区代码
Web.Policy.LocationContainer.Location.TerritoryCode.Autofill = 自动填充地区代码
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.City = 市/区
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.Code = 代码
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.County = 区/县
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.Description = 说明
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.PageTitle = 地区代码搜索
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.PostalCode = 邮政编码
Web.Policy.LocationContainer.Location.TerritoryCodeSearch.State = 省/直辖市
Web.Policy.LocationContainer.Location.UpdateMap = 更新地图
Web.Policy.LocationContainer.Location.UseThisNewData = 使用此新数据
Web.Policy.LocationContainer.Location.UseThisNewDataInfo = Spotlight返回了新数据
Web.Policy.LocationContainer.Location.Validation.LocationRequiresTerritoryCode = 地点{0}必须设置{1}地区代码
Web.Policy.LocationContainer.Location.Validation.MustRequote = 已更改一个或多个地点。绑定保单之前必须重新报价。
Web.Policy.LocationContainer.Location.Validation.NotActive = 地点{0}无效。请将其设为有效或从保单移除。
Web.Policy.LocationContainer.Location.Validation.TerritoryCodeMismatch = 地区代码{0}对于此省/直辖市和保单险类不存在。
Web.Policy.LocationContainer.Location.Validation.TerritoryCodeMismatchForLocation = 对于地点编号{0} - {1}
Web.Policy.LocationContainer.LocationSelection = 更多地点选择
Web.Policy.LocationContainer.Locations = 地点
Web.Policy.LocationContainer.MoreLocations = 更多地点
Web.Policy.LocationContainer.RemoveLocation = 移除地点
Web.Policy.LocationContainer.RemoveLocationAndSignConfirmMsg = 移除该地点会移除关联的标志、建筑物和应收账款。
Web.Policy.LocationContainer.RemoveLocationConfirmMsg = 移除地点将会移除关联的建筑物。
Web.Policy.LocationContainer.SetAsPrimary = 设为主要
Web.Policy.LocationContainer.Spreadsheet = 电子表格
Web.Policy.LocationNamedInsured.UnexpectedDeletion = 当{0}作为此保单上地点{1}的列名被保险人存在时无法将其移除。
Web.Policy.LossHistory.Attach.NewDocuments = 附加单证
Web.Policy.LossHistory.Attach.NumberOfLosses = 过去5年的损失发生次数
Web.Policy.LossHistory.Attach.TotalIncurred = 总发生额
Web.Policy.LossHistory.Document.Name = 名称
Web.Policy.LossHistory.LossHistoryType = 损失历史记录类型：
Web.Policy.LossHistory.Manual.AmountPaid = 已付金额
Web.Policy.LossHistory.Manual.AmountReserved = 未决准备金
Web.Policy.LossHistory.Manual.Description = 说明
Web.Policy.LossHistory.Manual.List = 输入历史损失：
Web.Policy.LossHistory.Manual.OccurrenceDate = 发生日期
Web.Policy.LossHistory.Manual.PolicyLine = 保单险类
Web.Policy.LossHistory.Manual.Status = 状态
Web.Policy.LossHistory.Manual.TotalIncurred = 总发生额
Web.Policy.LossRatio = 赔付率
Web.Policy.LossRatioCalculationError = 保单号{0}：{1}
Web.Policy.LossRatioCalculationNoPolicies = 没有要重新计算的保单
Web.Policy.LossRatioUnavailableForArchivedPolicies = 赔付率对于已存档保单不可用
Web.Policy.LossRatioUnavailableForMultilinePolicies = 赔付率对于多险类保单不可用
Web.Policy.ManualLine.APDAttribute.Description = 说明
Web.Policy.ManualLine.APDExposureFieldPopup.Title = 赔付明细字段详细信息
Web.Policy.ManualLine.APDField.Jurisdiction = 管辖权
Web.Policy.ManualLine.APDField.Jurisdiction.Disabled = 已禁用
Web.Policy.ManualLine.APDField.Jurisdiction.Enabled = 已启用
Web.Policy.ManualLine.APDField.Type = 类型
Web.Policy.ManualLine.APDNewExposureField.Title = 添加新的赔付明细列
Web.Policy.ManualLine.APDNewScheduleTerm.Title = 添加新的计列条款项
Web.Policy.ManualLine.APDScheduleTermPopup.Title = 计列条款项详细信息
Web.Policy.ManualLine.Clause.Schedule.AddColumn = 添加列
Web.Policy.ManualLine.Clause.Schedule.Term.Edit = 编辑列定义
Web.Policy.ManualLine.Clause.Schedule.Term.GenerateAsClauseTerm = 生成为子句项
Web.Policy.ManualLine.Clause.Schedule.Term.GenerateAsClauseTerm.Help = 选择“是”以指明此属性是链接的子句项。否则，在生成代码时，此属性将变成子句上的计列属性。小数、金额、选项和综合险子句项始终是链接的子句项。
Web.Policy.ManualLine.Clause.Schedule.Term.Move.Down = 右移
Web.Policy.ManualLine.Clause.Schedule.Term.Move.Up = 左移
Web.Policy.ManualLine.Clause.Schedule.Term.Remove = 移除列
Web.Policy.ManualLine.MaximumAmountRuleError = {0}超过了最大值{1}
Web.Policy.ManualLine.MinimumAmountRuleError = {0}小于最小值{1}
Web.Policy.ManualLine.RiskCoverable.Add = 添加
Web.Policy.ManualLine.RiskCoverable.AddCoverable = 添加{0}
Web.Policy.ManualLine.RiskCoverable.AddExposure = 添加{0}
Web.Policy.ManualLine.RiskCoverable.AddNewType = 新的风险对象类型
Web.Policy.ManualLine.RiskCoverable.Coverage.Details = 详细信息
Web.Policy.ManualLine.RiskCoverable.DefaultingRule = 默认值
Web.Policy.ManualLine.RiskCoverable.EffectiveDate = 生效日期
Web.Policy.ManualLine.RiskCoverable.ExpirationDate = 到期日期
Web.Policy.ManualLine.RiskCoverable.Exposure.AddColumn = 添加列
Web.Policy.ManualLine.RiskCoverable.FieldDescription = 说明
Web.Policy.ManualLine.RiskCoverable.FieldType = 类型
Web.Policy.ManualLine.RiskCoverable.FieldValue = 值
Web.Policy.ManualLine.RiskCoverable.Identifier = 标识符
Web.Policy.ManualLine.RiskCoverable.Jurisdiction = 管辖权
Web.Policy.ManualLine.RiskCoverable.Location.MenuItem.JurisdictionDisabled = 已禁用管辖权
Web.Policy.ManualLine.RiskCoverable.Location.MenuItem.JurisdictionEnabled = 已启用管辖权
Web.Policy.ManualLine.RiskCoverable.Location.MenuItem.JurisdictionTurnOff = 禁用
Web.Policy.ManualLine.RiskCoverable.Location.MenuItem.JurisdictionTurnOn = 启用
Web.Policy.ManualLine.RiskCoverable.MaximumAmountRule = 最大值
Web.Policy.ManualLine.RiskCoverable.MinimumAmountRule = 最小值
Web.Policy.ManualLine.RiskCoverable.RemoveExposure = 移除 {0}
Web.Policy.ManualLine.RiskCoverable.RiskField.Move = 移动
Web.Policy.ManualLine.RiskCoverable.RiskField.Move.Down = 向下
Web.Policy.ManualLine.RiskCoverable.RiskField.Move.Up = 向上
Web.Policy.ManualLine.RiskCoverable.RiskName = 风险名称
Web.Policy.ManualLine.RiskCoverable.SplitCoverable = 拆分
Web.Policy.ManualLine.RiskCoverable.SplitExposure = 拆分
Web.Policy.ManualLine.RiskCoverable.Tags = 标记
Web.Policy.ManualLine.RiskExposure.Add = 添加赔付明细类型
Web.Policy.ManualLine.RiskExposure.EffectiveDate = 生效日期
Web.Policy.ManualLine.RiskExposure.ExpirationDate = 到期日期
Web.Policy.ManualLine.RiskExposure.Remove = 移除赔付明细类型
Web.Policy.ManualLine.RiskExposure.RiskField.Edit = 编辑列定义
Web.Policy.ManualLine.RiskExposure.RiskField.Move.Down = 右移
Web.Policy.ManualLine.RiskExposure.RiskField.Move.Up = 左移
Web.Policy.ManualLine.RiskExposure.RiskField.Remove = 移除列
Web.Policy.ManualLine.RiskTerm.FieldDescription = 说明
Web.Policy.ManualLine.RiskTerm.FieldType = 类型
Web.Policy.ManualLine.RiskTerm.FieldValue = 值
Web.Policy.Merge.WorkersCompLine.WCOptions = 雇主责任险选项
Web.Policy.MinimumSearchCriteria = 必须输入姓名、公司名称、官方ID、账号、保单号、电话号码、经理人或经理人代码。此外，如果仅按姓名搜索，必须指定完全匹配。否则，必须指定城市以及省或邮政编码等详细信息。对于模糊搜索，必须输入姓名中的至少三个字母或公司名称中的至少五个字母。
Web.Policy.Modifiers.Eligibility = 合格的{0}
Web.Policy.Modifiers.Eligible = 合格
Web.Policy.Modifiers.ExModFinal = 是否为最终费用调整系数？
Web.Policy.Modifiers.OutOfRange = 值{0}不在范围({1}, {2})内
Web.Policy.Modifiers.ValueFinal = 最终
Web.Policy.NamedInsured.NameOnly = 名称
Web.Policy.NamedInsured.Relationship = 与主要列名被保险人的关系
Web.Policy.NamedInsured.Schedule.CannotDelete.HasCurrentAndFutureSchedules = 以下计划中的项目引用{0}，将其移除后方可移除联系人：{1}、{2}
Web.Policy.NamedInsured.Schedule.CannotDelete.HasCurrentOrFutureSchedules = 以下计划中的项目引用{0}，将其移除后方可移除联系人： {1}
Web.Policy.NewAddress = 新地址
Web.Policy.NewDocument.Template = 从模板创建
Web.Policy.NewDocuments.Linked = 上传单证
Web.Policy.NoClaimsFound = 未找到赔案
Web.Policy.NoDescriptiveColumn = 计划项目未定义说明性财产信息\\：{0}
Web.Policy.Orchestrator.Mapping.IncompatibleType = 转换期间映射到服务响应类型失败：{0}
Web.Policy.OwnerOfficer = 业主/雇员
Web.Policy.PA.AdditionalCoverages = 附加承保范围
Web.Policy.PA.AllVehicleCoveragesTitle = {0}所有车辆承保的承保范围
Web.Policy.PA.AllVehicleCoveragesTitleNoState = 适用于所有车辆的承保范围
Web.Policy.PA.AssignedDrivers = 已分配司机
Web.Policy.PA.Coverages = 承保范围
Web.Policy.PA.ExcludedDrivers = 已排除司机
Web.Policy.PA.ExclusionsAndConditions = 免责项和条款
Web.Policy.PA.Garage = 车库{0}： {1}
Web.Policy.PA.GarageNumber = 车库{0}
Web.Policy.PA.GoodDriverDiscountApplies = 适用优秀司机折扣
Web.Policy.PA.PerVehicleCoveragesTitle = {0}每辆车承保的承保范围
Web.Policy.PA.PerVehicleCoveragesTitleNoState = 每辆车应用的承保范围
Web.Policy.PA.PerVehicleTotal = 车辆总成本
Web.Policy.PA.PolicyInfo.RemoveSecondaryNamedInsured = 移除
Web.Policy.PA.PrimaryDriver = 主要司机
Web.Policy.PA.PrimaryDriverWithName = 主要司机：{0}
Web.Policy.PA.Quote.Coverages.Line = 保单承保险种
Web.Policy.PA.Quote.Coverages.VehicleCoverages = 车辆级承保范围
Web.Policy.PA.SyncButton = 用户默认值
Web.Policy.PA.Title = 私家车险承保范围
Web.Policy.PA.Validation.AccountAccidentsAndViolationsMissing = 角色选项卡： 未对所有司机设置所有“违章和事故的账户级别号码”。
Web.Policy.PA.Validation.Address.AddressLine1 = 缺少必填字段“地址1”
Web.Policy.PA.Validation.Address.AddressType = 缺少必填字段“地址类型”
Web.Policy.PA.Validation.Address.City = 缺少必填字段“市/区”
Web.Policy.PA.Validation.Address.PostalCode = 缺少必填字段“邮政编码”
Web.Policy.PA.Validation.Address.State = 缺少必填字段“省/直辖市”
Web.Policy.PA.Validation.AppliedDriverDiscountError = 优秀司机折扣适用于不具备资格的司机 - {0}
Web.Policy.PA.Validation.AppliedDriverDiscountWarning = 优秀司机折扣应用于不再合格的司机 - {0}
Web.Policy.PA.Validation.AssignedDrivers = 一个或多个司机已分配给车辆。在移除司机之前，必须先移除其分配。
Web.Policy.PA.Validation.AtLeastOneDriver = {0}号车辆没有分配的司机。
Web.Policy.PA.Validation.AtLeastOneVehicle = 保单必须至少指定一辆车。
Web.Policy.PA.Validation.ChangeBaseState = 所有车辆必须停放在保单的默认省/直辖市：{0}。
Web.Policy.PA.Validation.CostNewRequired = 缺少必填字段“新车购置成本”
Web.Policy.PA.Validation.DateOfBirthRequired = 所有司机都需要出生日期
Web.Policy.PA.Validation.DriverPercentageNegative = 司机比例对编号为{0}的车辆有负面影响。
Web.Policy.PA.Validation.DriverPercentages = 司机比例无法100%用于编号为{0}的车辆。
Web.Policy.PA.Validation.ExcludedAssignedDriver = 排除的司机已分配到车辆编号{0}。
Web.Policy.PA.Validation.GarageExpiringEndsVehicleWorkaround = 编号为{0}的车辆的停车地点将于{1}到期，这将导致该车辆也在同一日到期。如果这不是预期行为，作为临时解决办法，您可以在完成报价之前使用与当前停车地点相同的地址为车辆创建一个新的停车地点。
Web.Policy.PA.Validation.GaragesInSameState = 所有车辆必须停在同一省/直辖市。
Web.Policy.PA.Validation.LengthOfLeaseRequired = 如果租赁或租用车辆，则需要租期。
Web.Policy.PA.Validation.LicenseNumberAndStateRequired = 所有司机都需要驾驶证编号和驾驶证所属省/直辖市。
Web.Policy.PA.Validation.LicenseNumberUnique = 驾驶证编号必须唯一。
Web.Policy.PA.Validation.LicenseStateMisMatch = 司机：{0}具有与保单所属省/直辖市({2})不匹配的驾驶证所属省/直辖市({1})
Web.Policy.PA.Validation.LicenseStateRequired = 缺少必填字段“驾驶证所属省/直辖市”
Web.Policy.PA.Validation.MVRNotReceived = 无法绑定保单：尚未收到所有司机的预定汽车驾驶记录，等待搁置记录或选择“不预定”选项。
Web.Policy.PA.Validation.MakeRequired = 缺少必填字段“厂牌”
Web.Policy.PA.Validation.MaxPolicyPeriod = 保单期限必须小于或等于一年。
Web.Policy.PA.Validation.ModelRequired = 缺少必填字段“车型”
Web.Policy.PA.Validation.ModelYearRequired = 缺少必填字段“型号年份”
Web.Policy.PA.Validation.MutuallyExclusiveCollisionCov = {0}：“车辆损失险放宽额”和“车辆损失险 - 有限责任险承保范围”互相排斥。
Web.Policy.PA.Validation.PolicyAccidentsAndViolationsRequired = 角色选项卡： 所有司机需要“违章和事故的保单级别号码”
Web.Policy.PA.Validation.PositiveCostNewRequired = “新车购置成本”的当前值必须大于0。
Web.Policy.PA.Validation.PossibleMissDriverDiscount = 优秀司机折扣不适用于这些合格的好司机 - {0}
Web.Policy.PA.Validation.UnderInsuredLimitsNotToExceedUninsured = 保额不足驾驶人限额不能超过无保险驾驶人限额。
Web.Policy.PA.Validation.UnderInsuredMotoristRequiresUninsured = 若无“驾驶人无保险”承保范围，则不允许“驾驶人保额不足险”。
Web.Policy.PA.Validation.UninsuredMotoristLimits = 驾驶人无保险限额不能超过责任险限额。
Web.Policy.PA.Validation.UninsuredMotoristsRequiredInState = 此省/直辖市需要“驾驶人无保险”承保范围。
Web.Policy.PA.Validation.VINRequired = 缺少必填字段“VIN(车辆识别号码)”
Web.Policy.PA.Validation.VehicleTypeRequired = 缺少必填字段“车辆类型”
Web.Policy.PA.Validation.VinNumbers = 所有车辆的车辆识别号码必须唯一。
Web.Policy.PA.VehicleCoverages = 车辆承保范围
Web.Policy.PA.VehicleRateModifiers = 车辆费率调整系数
Web.Policy.PA.Vehicles = 车辆
Web.Policy.Payment.AccountDefault = 账户默认值
Web.Policy.Payment.AccountUnapplied = 未支配账户
Web.Policy.Payment.AltBillingAccount = 备用计费账户
Web.Policy.Payment.BillingLevel = 计费级别
Web.Policy.Payment.BillingMethod = 计费方法
Web.Policy.Payment.BillingMethodConfirmationMessage = 如果更改计费方法，之前在此屏幕上输入的所有数据（预付款信息除外）都将被丢弃。是否确定要继续？
Web.Policy.Payment.Custom = 自定义缴费选项
Web.Policy.Payment.Deposit = 预缴金
Web.Policy.Payment.DepositAmt = 预缴金
Web.Policy.Payment.DepositChange = 预缴金更改
Web.Policy.Payment.DepositDefault = 报告计划中的预缴金%
Web.Policy.Payment.DepositOverride.OutOfRange = 预缴金覆盖百分比必须介于 0 和 100 之间
Web.Policy.Payment.DepositOverridePct = 预缴金覆盖%
Web.Policy.Payment.DepositReleased = 预缴金已释放
Web.Policy.Payment.Existing = 现有
Web.Policy.Payment.InstallmentsPlansLV.DownPayment = 首付款
Web.Policy.Payment.InstallmentsPlansLV.DownPaymentDetail = {0}保费/{1}税
Web.Policy.Payment.InstallmentsPlansLV.DownPaymentDetailFee = / {0}费用
Web.Policy.Payment.InstallmentsPlansLV.FeeDetail = {0}费用
Web.Policy.Payment.InstallmentsPlansLV.Installment = 分期付款
Web.Policy.Payment.InstallmentsPlansLV.InstallmentDetail = {0}保费/{1}费用
Web.Policy.Payment.InstallmentsPlansLV.Name = 付款计划
Web.Policy.Payment.InstallmentsPlansLV.Notes = 备注
Web.Policy.Payment.InstallmentsPlansLV.PremiumDetail = {0}保费
Web.Policy.Payment.InstallmentsPlansLV.Schedule = 计划
Web.Policy.Payment.InstallmentsPlansLV.Select = 选择
Web.Policy.Payment.InstallmentsPlansLV.TaxDetail = {0}税
Web.Policy.Payment.InstallmentsPlansLV.Total = 总计
Web.Policy.Payment.InstallmentsPlansLV.TotalDetail = {0}保费/{1}税金/{2}费用
Web.Policy.Payment.InstallmentsPlansLV.TotalWOFeesDetail = {0}保费/{1}税
Web.Policy.Payment.InstallmentsPlansLV.TotalWOTaxDetail = {0}保费/{1}费用
Web.Policy.Payment.InvoiceStreamsLV.AccountDefault = 账户默认值
Web.Policy.Payment.InvoiceStreamsLV.Automatic = 自动
Web.Policy.Payment.InvoiceStreamsLV.BillingAccountDefault = 计费账户默认值
Web.Policy.Payment.InvoiceStreamsLV.DayOfMonth = 日
Web.Policy.Payment.InvoiceStreamsLV.DayOfWeek = 星期
Web.Policy.Payment.InvoiceStreamsLV.Days = 天数
Web.Policy.Payment.InvoiceStreamsLV.Description = 说明
Web.Policy.Payment.InvoiceStreamsLV.DueDate = 到期日期
Web.Policy.Payment.InvoiceStreamsLV.FirstPaymentDate = 首次付款日期
Web.Policy.Payment.InvoiceStreamsLV.Invoice = 发票
Web.Policy.Payment.InvoiceStreamsLV.InvoiceDate = 发票日期
Web.Policy.Payment.InvoiceStreamsLV.InvoiceDateOption = 发票日期选项
Web.Policy.Payment.InvoiceStreamsLV.Manual = 手动
Web.Policy.Payment.InvoiceStreamsLV.PayUsing = 支付方式
Web.Policy.Payment.InvoiceStreamsLV.Payment = 付款
Web.Policy.Payment.InvoiceStreamsLV.SecondDayOfMonth = 当月第二天
Web.Policy.Payment.InvoiceStreamsLV.TwiceAMonth.FillBothDates = 选定的付款计划需要同时输入月份的第一天和第二天。
Web.Policy.Payment.Invoicing = 发票管理
Web.Policy.Payment.MidtermChange.AllocationOfRemainder = 剩余分配
Web.Policy.Payment.MidtermChange.BillImmediately = 立即开票
Web.Policy.Payment.MidtermChange.BillingIssuanceOptions = 计费和出单选项
Web.Policy.Payment.MidtermChange.OverrideBillingAllocation = 覆盖计费分配
Web.Policy.Payment.MidtermChange.OverrideChangeInCostBilling = 覆盖成本计费中的更改
Web.Policy.Payment.MidtermChange.SelectSpecialHandlingOptions = 特殊处理
Web.Policy.Payment.MidtermChange.WaiveDepositChange = 免除预缴金更改{0}
Web.Policy.Payment.New = 新建
Web.Policy.Payment.NoInvoiceStreamsLV.CreatedByBilling = 由计费系统创建
Web.Policy.Payment.Overridden = 缴费覆盖：{0}
Web.Policy.Payment.OwningAccount = 拥有账户
Web.Policy.Payment.PaymentInstrumentsLV.Description = 说明
Web.Policy.Payment.PaymentPlan = 付款计划
Web.Policy.Payment.PlanType = 计划类型
Web.Policy.Payment.PremiumReportPlan = 保费报告计划
Web.Policy.Payment.PremiumReportPlans = 保费报告计划
Web.Policy.Payment.PreviewPayments = 预览付款
Web.Policy.Payment.PreviewPayments.ChargeCategory = 类别
Web.Policy.Payment.PreviewPayments.ChargeCategory.fee = 费用
Web.Policy.Payment.PreviewPayments.ChargeCategory.premium = 保费
Web.Policy.Payment.PreviewPayments.ChargeCategory.tax = 税
Web.Policy.Payment.PreviewPayments.ChargesOnInvoices = 显示发票上的所有费用
Web.Policy.Payment.PreviewPayments.CurrentChargesForPolicy = 此保单的当前费用
Web.Policy.Payment.PreviewPayments.DueDate = 到期日期
Web.Policy.Payment.PreviewPayments.Exception = 发生系统错误。<IBillingSummaryPlugin>的当前实施可能与预览付款功能不兼容。请联系您的管理员。
Web.Policy.Payment.PreviewPayments.Incompatibility = IBillingSummaryPlugin的当前实施与预览付款功能不兼容。请联系您的管理员。
Web.Policy.Payment.PreviewPayments.JobType = {0}费用
Web.Policy.Payment.PreviewPayments.NewChargesForPolicyChange = 此更改的费用
Web.Policy.Payment.PreviewPayments.OtherPoliciesOnInvoices = 发票上的其他保单
Web.Policy.Payment.PreviewPayments.StatementDate = 账单日期
Web.Policy.Payment.PreviewPayments.TotalOnInvoice = 发票总额
Web.Policy.Payment.PreviewPayments.Type = 付款
Web.Policy.Payment.PreviewPayments.Type.deposit = 首付款
Web.Policy.Payment.PreviewPayments.Type.installment = 分期付款
Web.Policy.Payment.PreviewPayments.Type.onetime = 一次性
Web.Policy.Payment.PreviousDepositAmount = 之前的预缴金
Web.Policy.Payment.ProposedDepositAmount = 建议的预缴金
Web.Policy.Payment.Schedule = 付款计划
Web.Policy.Payment.Schedule.Title = 付款计划：{0}
Web.Policy.Payment.Title = 计费
Web.Policy.Payment.UnappliedFund = 未支配资金
Web.Policy.Payment.UnappliedFundDescription = 说明
Web.Policy.Payment.UnappliedFundsLV.Select = 选择
Web.Policy.Payment.UnappliedFundsLV.UnappliedFund = 未支配资金
Web.Policy.Payment.WarnNoAltAccountSelected = 必须添加备用计费账户才能显示可用的付款计划。
Web.Policy.PolicyContact.Validation.NotActive = {0}不是活动的联系人
Web.Policy.PolicyDriver = 司机
Web.Policy.PolicyLine.PerState.Modifiers.EffectiveDate = 生效日期
Web.Policy.PolicyLine.PerState.Modifiers.ExpirationDate = 到期日期
Web.Policy.PolicyLine.PerState.Modifiers.Value = 值
Web.Policy.PolicyLine.PerState.OfficialIDs = 省/直辖市ID
Web.Policy.PolicyLine.PerState.Panel.GeneralInfo.Title = 省/直辖市详细信息
Web.Policy.PolicyLine.Summary = 保单险类保费摘要
Web.Policy.PolicyLine.Validation.Duplicate = {0}：{1}在此保单险类有重复项。
Web.Policy.PolicyLine.Validation.PolicyContactRole.DuplicateRole = 联系人{1}具有重复的{0}角色。
Web.Policy.PolicyLocation.FireProtectionClass = 消防
Web.Policy.PolicyPeriod.Validation.AffinityGroup.NonCoveredProducerCode = 关联的亲和组{0}对经理人代码{1}不可用。
Web.Policy.PolicyPeriod.Validation.AffinityGroup.NonCoveredProduct = 关联的亲和组{0}对产品{1}不可用。
Web.Policy.PolicyPeriod.Validation.AltBillingAccountCannotBeOwning = 备用计费账户不能为拥有账户。
Web.Policy.PolicyPeriod.Validation.AltBillingAccountInvalidForBillingMethod = 备用计费账户不支持{0}。
Web.Policy.PolicyPeriod.Validation.AuditCreation.DatesOutOfRange = 指定的审计期间日期不在保单期间的承保范围日期内。
Web.Policy.PolicyPeriod.Validation.AuditCreation.MissingMethod = 无法新建审计，因为未指定审计方法。
Web.Policy.PolicyPeriod.Validation.AuditCreation.NoMoreAudits = 无法将另一{0}添加到此保单。
Web.Policy.PolicyPeriod.Validation.AuditCreation.OverlappingDates = 指定审计期的日期将与现有保费报告重叠。
Web.Policy.PolicyPeriod.Validation.BillingSystemUnavailable = 计费系统当前不可用。
Web.Policy.PolicyPeriod.Validation.CurrencyExchangeUnsupported = FX转换不能用于将{0}转换为{1}
Web.Policy.PolicyPeriod.Validation.DateQuoteNeededHasPassed = 需要报价的日期（{0}）已过
Web.Policy.PolicyPeriod.Validation.InvalidBillingMethod = 此保单不允许使用“{0}”计费方法。
Web.Policy.PolicyPeriod.Validation.InvalidInvoiceStream.Interval = 不允许为选定的付款计划“{0}”开发票。
Web.Policy.PolicyPeriod.Validation.InvalidInvoiceStream.SendInvoice = 不允许为选定的付款计划“{0}”开“手动”发票。
Web.Policy.PolicyPeriod.Validation.InvalidPaymentPlan = “{0}”赔付计划ID在计费系统中不可用。
Web.Policy.PolicyPeriod.Validation.NamedInsured.UnavailableCode = 行业代码{0}在当前环境下不可用。
Web.Policy.PolicyPeriod.Validation.NoAgencyBillsForSettlementCurrency = 保单不能由代理开票，因为没有采用保单的赔付货币{0}的代理缴费计划
Web.Policy.PolicyPeriod.Validation.NoAltBillingAccount = 列表缴费需要备用计费账户。
Web.Policy.PolicyPeriod.Validation.NoBillingPlan = 无法绑定未选择计费方法的保单。
Web.Policy.PolicyPeriod.Validation.NoCoverages = 无法对没有承保范围的{0}保单报价。
Web.Policy.PolicyPeriod.Validation.NoInvoiceStream = 备用计费账户需要发票流。
Web.Policy.PolicyPeriod.Validation.NoLines = 无法对没有险类的保单报价。
Web.Policy.PolicyPeriod.Validation.NoPaymentMethod = 自动付款需要付款方法。您可以在自定义缴费选项部分选择付款方法。
Web.Policy.PolicyPeriod.Validation.NoPaymentPlan = 无法对未选择赔付计划的保单进行承保。
Web.Policy.PolicyPeriod.Validation.NoReportingPlan = 缺少报告计划。
Web.Policy.PolicyPeriod.Validation.NoValidUnderwritingCompany = 尚未为保单设置有效的核保公司。
Web.Policy.PolicyPeriod.Validation.NullBaseState = 必须输入默认省/直辖市
Web.Policy.PolicyPeriod.Validation.OrphanedField = “{0}”上的孤立字段“{1}”
Web.Policy.PolicyPeriod.Validation.PaymentInstrumentNoValid = 此保单期间的支付工具无效。
Web.Policy.PolicyPeriod.Validation.PaymentsInMoreThanOneCurrency = 有使用一种以上货币的付款
Web.Policy.PolicyPeriod.Validation.PolicyContactRole.DuplicateRole = 联系人{1}具有重复的{0}角色。
Web.Policy.PolicyPeriod.Validation.PolicyLocation.UnavailableCode = 行业代码{0}在当前环境下不可用。
Web.Policy.PolicyPeriod.Validation.ProducerCodeOfRecordNotConfiguredForSettlementCurrency = 未授予记录的经理人代码使用赔付货币{0}绑定保单的权限
Web.Policy.PolicyPeriod.Validation.ReportingPolicy.CompleteReport = 无法完成此保费报告，因为未计列最终审计。
Web.Policy.PolicyPeriod.Validation.ReportingPolicy.Create = 未经最终审计，报告保单无法承保或签发。
Web.Policy.PolicyPeriod.Validation.ReportingPolicy.FinalAuditComplete = 无法完成此保费报告，因为最终审计已经完成。
Web.Policy.PolicyPeriod.Validation.ReportingPolicy.FinalAuditQuoted = 此保单期限最终审计的保费已计算。要提交此保费报告期，必须编辑最终审计，以便重新计算最终审计保费，进而包含此保费报告期。
Web.Policy.PolicyPeriod.Validation.RequiredOrganizationType = 必须填写“机构类型”字段。
Web.Policy.PolicyPeriod.Validation.UWCompanyNotValidForAllStates = 选择的核保公司({0})不适用于保单中的所有省/直辖市。
Web.Policy.PolicyPeriod.Validation.UnavailableProduct = 此保险产品[{0}]不再可用。
Web.Policy.PriorHistory.PriorPolicies = 旧保单
Web.Policy.PriorLosses = 之前的损失
Web.Policy.PriorPolicy.AnnualPremium = 年度保费
Web.Policy.PriorPolicy.Carrier = 承保人
Web.Policy.PriorPolicy.EffectiveDate = 生效日期
Web.Policy.PriorPolicy.ExpMod = 费用调整系数
Web.Policy.PriorPolicy.ExpirationDate = 到期日期
Web.Policy.PriorPolicy.LossRatio = 赔付率
Web.Policy.PriorPolicy.NumLosses = 损失次数
Web.Policy.PriorPolicy.PolicyLinePattern = 保单险类
Web.Policy.PriorPolicy.PolicyNumber = 保单号
Web.Policy.PriorPolicy.Sum = 合计：
Web.Policy.PriorPolicy.TotalLosses = 全损
Web.Policy.Quote = 报价
Web.Policy.Quote.MultiLine.NoQuotePage = 没有为这个多险类保险产品创建报价页面
Web.Policy.Quote.PolicyLine = 保单险类
Web.Policy.Quote.Premium = 保费
Web.Policy.RateFactor.OutOfRange = 值{0}不在范围({1}, {2})内
Web.Policy.RatingInputs.Category = 类别
Web.Policy.RatingInputs.CreditDebit = 贷方(-)/借方(+)
Web.Policy.RatingInputs.Justification = 调整
Web.Policy.RatingInputs.Maximum = 最大值
Web.Policy.RatingInputs.Minimum = 最小值
Web.Policy.RatingInputs.None = 没有有效的修饰符。
Web.Policy.RatingInputs.Overall = 整体
Web.Policy.RatingOverride.Actual = 实际
Web.Policy.RatingOverride.AdjustedRate = 调整后的费率
Web.Policy.RatingOverride.Amount = 金额
Web.Policy.RatingOverride.BaseRate = 基本费率
Web.Policy.RatingOverride.Class = 类
Web.Policy.RatingOverride.ClearAll = 全部清除
Web.Policy.RatingOverride.Override = 覆盖
Web.Policy.RatingOverride.PopupTitle = 费率覆盖
Web.Policy.RatingOverride.Reason = 原因
Web.Policy.RatingOverride.Rerate = 重新厘定费率
Web.Policy.RatingOverride.Standard = 标准
Web.Policy.RatingOverride.TermAmount = 附加责任金额
Web.Policy.RatingWorksheet.ConvertedTermAmount = ConvertedTermAmount
Web.Policy.RatingWorksheet.ConvertedTermAmountRounded = ConvertedTermAmountRounded
Web.Policy.RatingWorksheet.DriverAssignment = _司机分配[支持]
Web.Policy.RatingWorksheet.DriverAssignmentForDriver = _司机分配，司机{0}[支持]
Web.Policy.RatingWorksheet.ForeignExchangeRate = FXRate
Web.Policy.RatingWorksheet.Instruction = 说明
Web.Policy.RatingWorksheet.KeyFactor = 关键因子
Web.Policy.RatingWorksheet.Modifiers = 调整系数
Web.Policy.RatingWorksheet.Node.CodeSuffix = 代码
Web.Policy.RatingWorksheet.Node.CovTermSuffix = 险别条款
Web.Policy.RatingWorksheet.Node.FunctionExpansionLabel = {0}的详细信息...
Web.Policy.RatingWorksheet.Node.MultiFactorVariable = 所有
Web.Policy.RatingWorksheet.Node.RateBookLabel = {0} ({1})
Web.Policy.RatingWorksheet.Node.RateRoutineLabel = {0} ({1})
Web.Policy.RatingWorksheet.Node.Table = 表：
Web.Policy.RatingWorksheet.Node.Table.RateBookFromHierarchy = {0}({1}).{2}
Web.Policy.RatingWorksheet.Node.ValueSuffix = 值
Web.Policy.RatingWorksheet.Operand = 操作数
Web.Policy.RatingWorksheet.OperandValue = 实际值
Web.Policy.RatingWorksheet.Operator = 运算符
Web.Policy.RatingWorksheet.PopupTitle = 费率厘定工作表
Web.Policy.RatingWorksheet.Result = 结果
Web.Policy.RatingWorksheet.TermAmount = TermAmount
Web.Policy.RecalculateLossRatio = 重新计算赔付率
Web.Policy.ReferralReasons.Close = 关闭
Web.Policy.ReferralReasons.Open = 重新立案
Web.Policy.ReferralReasons.SpecialClose = 特别结案
Web.Policy.ReferralReasons.SpecialCloseConfirmMessage = 您的权限配置文件不允许您关闭此转交原因。如果认为您具有或需要此权限，请通知系统管理员。您还具有特殊的覆盖权限，可强行将其关闭。是否要使用此覆盖权限关闭该问题？
Web.Policy.RiskAnalysis.ApproveSelected = 批准
Web.Policy.RiskAnalysis.ClaimSearch.Date = 按出险日期搜索
Web.Policy.RiskAnalysis.ClaimSearch.Error.PolicyNumberRequired = 请为理赔搜索选择保单
Web.Policy.RiskAnalysis.ClaimSearch.PolicyNumber = 按相关保单号搜索
Web.Policy.RiskAnalysis.HistorySelected = 历史记录
Web.Policy.RiskAnalysis.NewLossesIn = 新损失数
Web.Policy.RiskAnalysis.RejectSelected = 拒绝
Web.Policy.RiskAnalysis.ReopenSelected = 重新立案
Web.Policy.RulesService.Validation.NoRuleMessage = 在规则名称为{0}的验证规则中找不到验证原因
Web.Policy.RulesService.Validation.NoRuleSet = 规则引擎报告没有可用规则集，返回了空的验证结果集。
Web.Policy.RulesService.Validation.ValidationFailed = 由于服务出错，验证失败。请稍后重试。
Web.Policy.Schedule.Location.CannotDelete.HasCurrentAndFutureSchedules = 以下计划中的项目引用位置{0}，将其移除后方可移除位置：{1}、{2}
Web.Policy.Schedule.Location.CannotDelete.HasFutureSchedules = 以下计划中的项目引用位置{0}，将其移除后方可移除位置：{1}。
Web.Policy.Schedule.Location.CannotDelete.HasSchedules = 以下计划中的项目引用位置{0}，将其移除后方可移除位置：{1}。
Web.Policy.Schedule.ScheduledItems = 计划项目列表
Web.Policy.Schedule.Schedules = 计划
Web.Policy.Schedule.Validation.AtLeastOneItemInSchedule = {0}必须至少包含一个计划项目。
Web.Policy.ScheduledItem = 计划项目 - {0}
Web.Policy.ScheduledItem.Validation.IntegerPropertyGreaterThanMaximum = 值({0})必须小于或等于最大值({1})。
Web.Policy.ScheduledItem.Validation.IntegerPropertyLessThanMinimum = 值{0}必须大于或等于最小值({1})。
Web.Policy.SplitByRatingPeriod.DateOutsidePeriod = 日期 {0}不在保单期限{1} \=> {2}内
Web.Policy.SplitByRatingPeriod.DuplicatedDate = 风险对象{0}已拆分日期{1}
Web.Policy.UWCompanies.AutoSelect = 自动选择
Web.Policy.UWCompanies.InvalidUWCompany = 核保公司无效。请选择其它核保公司。
Web.Policy.UWCompanies.Name = 核保公司
Web.Policy.UnableToCalculateOrSaveLossRatio = 无法计算或保存赔付率
Web.Policy.UnableToConnectToClaimSystem = 无法连接到理赔系统
Web.Policy.Validation.MissingRequiredField = {0}：缺少必要字段{1}
Web.Policy.Validation.YearBusinessStarted = 业务开始年份必须是介于{0}与{1}之间的有效年份
Web.Policy.WC.AddBlanket = 添加统括保险放弃
Web.Policy.WC.AddClass = 添加类
Web.Policy.WC.AddCoveredJurisdiction = 添加承保的管辖权
Web.Policy.WC.AddOption = 添加选项
Web.Policy.WC.AddSpecific = 添加特定免除责任
Web.Policy.WC.AircraftSeatCharge = 飞机座椅费用
Web.Policy.WC.AircraftSeatCharge.AircraftNumber = 航班编号
Web.Policy.WC.AircraftSeatCharge.Description = 说明
Web.Policy.WC.AircraftSeatCharge.NumberOfSeats = 座位数
Web.Policy.WC.AircraftSeatCharge.State = 省/直辖市
Web.Policy.WC.ClassCode.ClassIndicator = 类指示器
Web.Policy.WC.ClassCode.Domain = 领域
Web.Policy.WC.ClassCode.Location = 地点{0}
Web.Policy.WC.CovEmp = 类
Web.Policy.WC.CovEmp.AnnualRenum = 基础
Web.Policy.WC.CovEmp.ClassCode = 分类代码
Web.Policy.WC.CovEmp.Description = 说明
Web.Policy.WC.CovEmp.IfAnyExposure = 是否有
Web.Policy.WC.CovEmp.Loc = 地点
Web.Policy.WC.CovEmp.NumEmployees = 雇员数量
Web.Policy.WC.CovEmp.SpecialCoverage = 适用法律
Web.Policy.WC.CoveredEmployees = 承保雇员
Web.Policy.WC.CoveredStates = 承保省/直辖市：
Web.Policy.WC.DuplicatedDate = 管辖权{0}已有拆分日期{1}。
Web.Policy.WC.EmployeeLeasing = 雇员租赁
Web.Policy.WC.EmployeeLeasing.Receiver.Include = 包括/排除
Web.Policy.WC.EmployeeLeasing.Receiver.State = 省/直辖市
Web.Policy.WC.EmployeeLeasing.Receiver.SupplierName = 供应商名称
Web.Policy.WC.EmployeeLeasing.Supplier.ClientName = 客户姓名
Web.Policy.WC.EmployeeLeasing.Supplier.Include = 包括/排除
Web.Policy.WC.EmployeeLeasing.Supplier.State = 省/直辖市
Web.Policy.WC.ExcludedWorkplace = {0} ({1})
Web.Policy.WC.FederalLiability = 联邦责任险
Web.Policy.WC.FederalLiability.Classes = 联邦责任险类
Web.Policy.WC.GoverningClass = 管制类：
Web.Policy.WC.InclExcl.ClassCode = 分类代码
Web.Policy.WC.InclExcl.Duties = 职责
Web.Policy.WC.InclExcl.FirstName = 名字
Web.Policy.WC.InclExcl.Include = 包括
Web.Policy.WC.InclExcl.LastName = 姓氏
Web.Policy.WC.InclExcl.Ownership = 所有权%
Web.Policy.WC.InclExcl.Relationship = 所有权/关系
Web.Policy.WC.InclExcl.State = 省/直辖市
Web.Policy.WC.InclExclShort = 包含/排除个人
Web.Policy.WC.Interstate = 省际公务员ID
Web.Policy.WC.ManuscriptDescription = 手写说明
Web.Policy.WC.ManuscriptOption = 手稿选项
Web.Policy.WC.Modifier.ScheduleCredits = 雇主责任计划贷方
Web.Policy.WC.ParticipatingPlan = 参与计划
Web.Policy.WC.ParticipatingPlan.ID = 计划ID
Web.Policy.WC.ParticipatingPlan.LossConversionFactor = 损失转换系数
Web.Policy.WC.ParticipatingPlan.Retention = 留存额
Web.Policy.WC.PerState.Modifiers = 调整系数
Web.Policy.WC.Period = 期限{0}
Web.Policy.WC.PeriodDeductible = 期限{0} {1}
Web.Policy.WC.PeriodHeader = 期限
Web.Policy.WC.PolicyCoveragesAndExclusions = 保单承保范围和免责项
Web.Policy.WC.Premium = 保费
Web.Policy.WC.RatingPeriods = 费率期
Web.Policy.WC.RemoveJurisdictionWarning = 与已移除的管辖权关联的地点也已移除。
Web.Policy.WC.RetroRatingPlan = 回顾保费计算计划
Web.Policy.WC.RetroRatingPlan.BasicPremiumFactor = 基本保费系数
Web.Policy.WC.RetroRatingPlan.ComputationInterval = 计算间隔（月）
Web.Policy.WC.RetroRatingPlan.EstimatedStandardPremium = 预计标准保费
Web.Policy.WC.RetroRatingPlan.FederalExcessLossFactor = 联邦超额赔款
Web.Policy.WC.RetroRatingPlan.FederalTaxMultiplier = 联邦税乘法器
Web.Policy.WC.RetroRatingPlan.FirstComputationDate = 第一个计算日期
Web.Policy.WC.RetroRatingPlan.IncludeALAE = 包括ALAE
Web.Policy.WC.RetroRatingPlan.LOC = 信用证
Web.Policy.WC.RetroRatingPlan.LOC.Amount = 金额
Web.Policy.WC.RetroRatingPlan.LOC.Effective = 生效
Web.Policy.WC.RetroRatingPlan.LOC.Expires = 到期
Web.Policy.WC.RetroRatingPlan.LOC.Issuer = 信用证签发人
Web.Policy.WC.RetroRatingPlan.LOC.validation = 信用证
Web.Policy.WC.RetroRatingPlan.LastComputationDate = 上次计算日期
Web.Policy.WC.RetroRatingPlan.LossConversionFactor = 损失转换系数
Web.Policy.WC.RetroRatingPlan.LossLimitAmount = 损失限额
Web.Policy.WC.RetroRatingPlan.MaxRetroPremiumRatio = 最高追溯保费比率
Web.Policy.WC.RetroRatingPlan.MinRetroPremiumRatio = 最低追溯保费比率
Web.Policy.WC.RetroRatingPlan.MultiplierValidation = 乘法器
Web.Policy.WC.RetroRatingPlan.MultipliersFactors = 省/直辖市乘法器和系数
Web.Policy.WC.RetroRatingPlan.PercentStandardPremium = 标准保费比例
Web.Policy.WC.RetroRatingPlan.State = 省/直辖市
Web.Policy.WC.RetroRatingPlan.StateExcessLossFactor = 省/直辖市超额赔款
Web.Policy.WC.RetroRatingPlan.StateTaxMultiplier = 省/直辖市税乘法器
Web.Policy.WC.SplitBases = 更新所有基本信息
Web.Policy.WC.SplitDate = 拆分日期
Web.Policy.WC.SplitPeriod = 拆分期限
Web.Policy.WC.SplitType = 类型
Web.Policy.WC.StateCoverages = 省/直辖市承保范围
Web.Policy.WC.StateCoveragesHeader = 省/直辖市承保范围
Web.Policy.WC.Validation.AnniversaryDateBeforeEffectiveDate = 周年日期必须小于保单期限生效日期前一年。
Web.Policy.WC.Validation.AtLeastOneFedLiabClass = 必须至少有一个联邦责任险类别
Web.Policy.WC.Validation.AtLeastOneJurisdiction = 保单必须至少指定一个管辖权。
Web.Policy.WC.Validation.CoveredStateMissingClass = {0}缺少类。
Web.Policy.WC.Validation.DifferentAnniversaryDates = {0}的不同周年日期值与值{2}共享相同的省际{1}。
Web.Policy.WC.Validation.DifferentExpModValues = {0}的不同费用调整系数值与值{2}共享相同的省际{1}。
Web.Policy.WC.Validation.DuplicateRatingPeriodStartDate = “{1}”上管辖权“{0}”的重复费率期开始日期
Web.Policy.WC.Validation.ExposuresNotForMonopolisticStates = 无法为雇主责任险垄断省创建省法案、志愿补偿和/或海事有限责任赔付明细。
Web.Policy.WC.Validation.IndustryCode = 必须为行业代码输入值。
Web.Policy.WC.Validation.JurisdictionEffectiveDate = {0}的WCJurisdiction对象从{1}开始生效，而不是{2}的期间开始日期生效
Web.Policy.WC.Validation.JurisdictionExpirationDate = {0}的WCJurisdiction对象在{1}到期，而不是{2}的期限结束日期到期
Web.Policy.WC.Validation.LetterOfCreditDoesNotCoverWholePeriod = “{0}”的信用证没有涵盖雇主责任险追溯费率计划的整个期间。
Web.Policy.WC.Validation.LetterOfCreditExpirationDate = 来自\\"{0}\\"的信用证的到期日期必须在生效日期之后。
Web.Policy.WC.Validation.LocationForNonCoveredState = 地点“{0}”为非承保省/直辖市所列，在承保时将被移除。
Web.Policy.WC.Validation.LocationWithoutPayroll = 地点“{0}”未指定任何工资。此地点将会保留，因其在承保的省或管辖权内。
Web.Policy.WC.Validation.RetroRatingPlanComputationDateBeginningOfMonth = 雇主责任险回顾保费计算计划的第一个和最后一个计算日期必须是当月的开头（第 1 天）。
Web.Policy.WC.Validation.RetroRatingPlanComputationDateLastAfterFirst = 雇主责任险追溯费率计划的最后计算日期必须位于第一个计算日期之后。
Web.Policy.WC.Validation.RetroRatingPlanComputationDateNotPriorExpiration = 雇主责任险回顾保费计算计划的第一个计算日期不能在终保日期{0}之前。
Web.Policy.WC.Validation.RetroRatingPlanComputationIntervalPositive = 雇主责任险回顾保费计算计划的计算间隔必须为正整数。
Web.Policy.WC.Validation.RetroRatingPlanTimeSpan = 雇主责任险追溯费率计划的时间跨度必须是整数个计算间隔。
Web.Policy.WC.Validation.SplitJurisdiction = {0}的WCJurisdiction对象具有多重拆分
Web.Policy.WC.Validation.StopGapOnlyForMonopolisticStates = 补充仅适用于雇主责任险垄断省。
Web.Policy.WC.Validation.UnavailableClassCode = 类代码{0}无效。请另选一个。
Web.Policy.WC.Validation.WaivedAmountExceedsOverallBasis = 类代码{0} （{1}）的免除额超过此类代码（{2}）的整个基本金额。
Web.Policy.WC.WCCoveredStates = 雇主责任险所在省/直辖市
Web.Policy.WC.WCExcludedWorkplace = 免责项
Web.Policy.WC.WCExcludedWorkplace.ExcludedItem = 免责项
Web.Policy.WC.WaiversOfSubrogation = 代位追偿放弃
Web.Policy.WC.WaiversOfSubrogation.ClassCode = 分类代码
Web.Policy.WC.WaiversOfSubrogation.Description = 说明
Web.Policy.WC.WaiversOfSubrogation.JobID = 作业ID
Web.Policy.WC.WaiversOfSubrogation.Payroll = 项目工资
Web.Policy.WC.WaiversOfSubrogation.State = 省/直辖市
Web.Policy.WC.WaiversOfSubrogation.WCLaw = 雇主责任法
Web.PolicyChange.MayResultInPreemption = 此保单期限有另一个未完成的保单更改。您可能要等待该更改完成才可继续。
Web.PolicyChange.PolicyChangeSummary = 保单更改摘要
Web.PolicyChange.StartPolicyChange = 启动保单更改
Web.PolicyChange.StartPolicyChange.Error = 无法更改保单： {0}
Web.PolicyChange.StartPolicyChange.Warning = 警告： {0}
Web.PolicyChange.Warning.SameEditEffectiveDate = 新的生效日期与现有生效日期相同。
Web.PolicyChangeWizard.Differences = 差异
Web.PolicyChangeWizard.OOSE.Conflicts = 更改冲突
Web.PolicyChangeWizard.Offerings = 保障组合
Web.PolicyChangeWizard.Payment = 付款
Web.PolicyChangeWizard.PolicyInfo = 保单信息
Web.PolicyChangeWizard.Quote = 报价
Web.PolicyChangeWizard.QuoteScreen.Cumulative = 保单保费
Web.PolicyChangeWizard.QuoteScreen.Transaction = 成本更改详细信息
Web.PolicyChangeWizard.Review = 保单复核
Web.PolicyChangeWizard.Title = 保单更改{0}
Web.PolicyContactRole.Validation.MismatchedFields = {0}具有保单联系人角色{1}和{2}，它们的下列字段具有不匹配的值： {3}
Web.PolicyContactRole.Validation.MultipleNamedInsured = {0}无法同时包含以下角色：{1}
Web.PolicyDriver.Error.AlreadyExists = 保单司机“{0}”已存在。
Web.PolicyFile.AlertBar.ArchivedWarning = {0}- {1} 生效的保单期限已存档。某些数据不可用，比如账单和财务信息。
Web.PolicyFile.Audits.Actions = 操作
Web.PolicyFile.Audits.ActualAuditMethod = 实际审计方法
Web.PolicyFile.Audits.AddNewAudit = 新增审计
Web.PolicyFile.Audits.AuditMethod = 审计方法
Web.PolicyFile.Audits.AuditPeriodEndDate = 审计期结束日期
Web.PolicyFile.Audits.AuditPeriodStartDate = 审计期开始日期
Web.PolicyFile.Audits.AuditStatus = 状态
Web.PolicyFile.Audits.AuditType = 类型
Web.PolicyFile.Audits.Completed = 已完成
Web.PolicyFile.Audits.DueDate = 到期日期
Web.PolicyFile.Audits.Edit = 编辑
Web.PolicyFile.Audits.EndDate = 结束日期
Web.PolicyFile.Audits.Filters.All = 所有
Web.PolicyFile.Audits.Filters.Closed = 在最近 12 个月内结案
Web.PolicyFile.Audits.Filters.DueDate = 最近 12 个月内的到期日期
Web.PolicyFile.Audits.Filters.EndDate = 最近12个月内的结束日期
Web.PolicyFile.Audits.Filters.InProgress = 进行中
Web.PolicyFile.Audits.Filters.ScheduledInProgress = 已计列/进行中
Web.PolicyFile.Audits.FinalAuditOption = 是否需要审计？
Web.PolicyFile.Audits.InitDate = 过程开始
Web.PolicyFile.Audits.NewAudit = 新建审计
Web.PolicyFile.Audits.ProcessStartDate = 处理开始日期
Web.PolicyFile.Audits.Reverse = 冲销
Web.PolicyFile.Audits.Revise = 修订
Web.PolicyFile.Audits.RevisionType = 修订类型
Web.PolicyFile.Audits.Start = 开始
Web.PolicyFile.Audits.StartDate = 期间开始日期
Web.PolicyFile.Audits.Title = 审计计划
Web.PolicyFile.Audits.TotalCost = 总成本
Web.PolicyFile.Audits.TransactionAmount = 交易金额
Web.PolicyFile.Audits.Waive = 免除
Web.PolicyFile.AutoSymbols = 承保车辆
Web.PolicyFile.Billing = 计费
Web.PolicyFile.Blankets = 统括
Web.PolicyFile.Buildings = 建筑物
Web.PolicyFile.BuildingsAndLocations = 建筑物和地点
Web.PolicyFile.CancelPolicy = 取消保单
Web.PolicyFile.CancellationLabel = {0} ({1})
Web.PolicyFile.ChangePolicy = 更改保单
Web.PolicyFile.Claims = 理赔
Web.PolicyFile.CommercialAutoLine = 商用车保险险类
Web.PolicyFile.CommercialPackage.CommercialProperty = 企业财产险
Web.PolicyFile.CommercialPackage.GeneralLiability = 一般责任险
Web.PolicyFile.CommercialPackage.InlandMarine = 其它财产险类
Web.PolicyFile.Contacts = 联系人
Web.PolicyFile.Contacts.Email = 电子邮件
Web.PolicyFile.Contacts.Name = 名称
Web.PolicyFile.Contacts.Phone = 电话
Web.PolicyFile.Contacts.Roles = 角色
Web.PolicyFile.CopySubmission = 复制投保单
Web.PolicyFile.CoveredAutoSymbols = 承保汽车
Web.PolicyFile.Create = 创建
Web.PolicyFile.DiffPolicyTransactions = 已完成保单交易之间的差异
Web.PolicyFile.DiffPolicyWorkOrders = 待处理保单交易之间的差异
Web.PolicyFile.Documents = 单证
Web.PolicyFile.Documents.Deobsolesce = 取消隐藏单证
Web.PolicyFile.Documents.Obsolesce = 隐藏单证
Web.PolicyFile.DraftPeriodError = 草案期间错误
Web.PolicyFile.DraftPeriodError.Message = 无法在保单文件中查看草案期限。
Web.PolicyFile.Drivers = 司机
Web.PolicyFile.Endorsements = 表格
Web.PolicyFile.Forms = 表格
Web.PolicyFile.GLExposureUnits = 赔付明细
Web.PolicyFile.HOP.PolicyFile_HOPCoverages = 承保范围
Web.PolicyFile.HOP.PolicyFile_HOPDwelling = 住宅
Web.PolicyFile.HOP.PolicyFile_HOPDwellingConstruction = 住宅建筑
Web.PolicyFile.HOP.PolicyFile_HOPModifiers = 调整系数
Web.PolicyFile.History = 历史记录
Web.PolicyFile.InfoBar.AccountNumber = 账户：
Web.PolicyFile.InfoBar.PolicyFile = 保单文件
Web.PolicyFile.InfoBar.PolicyNumber = 保单：
Web.PolicyFile.IssuePolicy = 签发保单
Web.PolicyFile.JobDetails.Account = 账户
Web.PolicyFile.JobDetails.Insured = 被保险人
Web.PolicyFile.JobDetails.Premium = 保单保费
Web.PolicyFile.JobDetails.Producer.Name = 经理人姓名
Web.PolicyFile.JobDetails.SubmissionTitle = 投保单详细信息
Web.PolicyFile.JobUsers.Group = 组
Web.PolicyFile.JobUsers.Phone = 电话
Web.PolicyFile.JobUsers.Role = 角色
Web.PolicyFile.JobUsers.Title = 涉及人员
Web.PolicyFile.JobUsers.User = 用户
Web.PolicyFile.Jobs = 保单交易
Web.PolicyFile.Jobs.PeriodEffDate = 期间生效日期
Web.PolicyFile.Jobs.Status = 状态
Web.PolicyFile.Jobs.TransEffDate = 交易生效日期
Web.PolicyFile.Jobs.Type = 类型
Web.PolicyFile.Jobs.WorkOrderNumber = 交易号
Web.PolicyFile.LocationGroup.Title = 保单文件{0}
Web.PolicyFile.Locations = 地点
Web.PolicyFile.Modifiers = 调整系数
Web.PolicyFile.NewActivity = 新建活动
Web.PolicyFile.NewDocument = 新建单证
Web.PolicyFile.NewEmail = 新建电子邮件
Web.PolicyFile.NewNote = 新建备注
Web.PolicyFile.NewWorkOrder = 新保单交易
Web.PolicyFile.Notes = 备注
Web.PolicyFile.Participants = 参与人
Web.PolicyFile.PolicyContractTitle = 保单合同
Web.PolicyFile.PolicyInfo = 保单信息
Web.PolicyFile.PolicyLine.BusinessownersLine = 中小企业财产责任险
Web.PolicyFile.PolicyLine.CP = 企业财产险
Web.PolicyFile.PolicyLine.CP.Building.RatingOverrideLabel = 地点{1}的{0}
Web.PolicyFile.PolicyLine.CP.CostDetails = {0}在{1}时的成本详细信息
Web.PolicyFile.PolicyLine.CP.NothingToShow = 目前没有要在企业财产险的保单文件中显示的内容
Web.PolicyFile.PolicyLine.CP.TxDetails = {0}在{1}时的交易详细信息
Web.PolicyFile.PolicyLine.HOP.DwellingAddress = 住宅地址：{0}
Web.PolicyFile.PolicyReview = 保单复核
Web.PolicyFile.PolicySummary = 保单摘要：{0}
Web.PolicyFile.PolicySummary.LocationGroup = 摘要
Web.PolicyFile.PolicyVersions = 保单版本
Web.PolicyFile.PreRenewalDirection = 续保前说明
Web.PolicyFile.Pricing = 报价
Web.PolicyFile.Pricing.Cumulative = 保单保费
Web.PolicyFile.Pricing.NoQuote = 此险类未定义报价视图
Web.PolicyFile.PriorHistory.NoPriorPolicies = 没有旧保单信息
Web.PolicyFile.PriorHistory.PriorLosses = 之前的损失
Web.PolicyFile.PriorHistory.PriorPolicies = 旧保单
Web.PolicyFile.ReinstatePolicy = 复效保单
Web.PolicyFile.Reinsurance = 再保险
Web.PolicyFile.RenewPolicy = 续保保单
Web.PolicyFile.RenewPolicy.Confirm = 是否确定要为此保单续保？
Web.PolicyFile.RescindCancellation = 撤销取消
Web.PolicyFile.RescindCancellationFull = 撤消取消：{0}
Web.PolicyFile.RiskAnalysis = 风险分析
Web.PolicyFile.RiskAnalysis.ClaimSearch.Date = 出险日期搜索
Web.PolicyFile.SpinPolicy = 分拆保单
Web.PolicyFile.SpinPolicy.MenuAction = 从此保单分拆
Web.PolicyFile.SplitPolicy = 拆分保单
Web.PolicyFile.SplitPolicy.MenuAction = 保单拆分为二
Web.PolicyFile.StartRewrite.FullTerm = 重新填写全部条款
Web.PolicyFile.StartRewrite.NewTerm = 重新填写新条款
Web.PolicyFile.StartRewrite.RemainderOfTerm = 重新填写剩余条款
Web.PolicyFile.StateInfo = 省/直辖市信息
Web.PolicyFile.Summary.Activities = 当前活动
Web.PolicyFile.Summary.Diff = 比较
Web.PolicyFile.Summary.DividePolicies = 分割保单
Web.PolicyFile.Summary.DividePolicies.Account = 账号
Web.PolicyFile.Summary.DividePolicies.AccountHolder = 账户所有者
Web.PolicyFile.Summary.DividePolicies.CreatedDate = 创建日期
Web.PolicyFile.Summary.DividePolicies.PolicyOrJob = 保单/交易
Web.PolicyFile.Summary.DividePolicies.Status = 状态
Web.PolicyFile.Summary.DividePolicies.Underwriter = 核保人
Web.PolicyFile.Summary.DividedSourcePolicy = 拆分源保单
Web.PolicyFile.Summary.PendingCancellation = 保单待取消
Web.PolicyFile.Summary.PolicyNumOnAccount = 账户{1}上的{0}
Web.PolicyFile.Summary.PolicyPrimary.Address = 地址
Web.PolicyFile.Summary.RewrittenSourcePolicy = 源保单
Web.PolicyFile.Summary.RewrittenTargetPolicy = 已重新填写保单
Web.PolicyFile.ToolsMenuTitle = 工具
Web.PolicyFile.Transactions.AllFinancialTransactions = 所有财务交易
Web.PolicyFile.Transactions.AllTransactions = 所有交易
Web.PolicyFile.Transactions.AllTransactions.Amount = 金额
Web.PolicyFile.Transactions.AllTransactions.Charged = 已收费
Web.PolicyFile.Transactions.AllTransactions.Cost = 成本
Web.PolicyFile.Transactions.AllTransactions.EffDate = 生效日期
Web.PolicyFile.Transactions.AllTransactions.ExpireDate = 到期日期
Web.PolicyFile.Transactions.AllTransactions.Job = 类型（日期）
Web.PolicyFile.Transactions.AllTransactions.PostedDate = 发布日期
Web.PolicyFile.Transactions.AllTransactions.ToBeAccrued = 待应计
Web.PolicyFile.Transactions.AllTransactions.Written = 签单
Web.PolicyFile.Transactions.ByCost = 按成本交易
Web.PolicyFile.Transactions.ByCost.Amount = 金额
Web.PolicyFile.Transactions.ByCost.Charged = 已收费
Web.PolicyFile.Transactions.ByCost.Cost = 成本
Web.PolicyFile.Transactions.ByCost.EffDate = 生效日期
Web.PolicyFile.Transactions.ByCost.ExpDate = 到期日期
Web.PolicyFile.Transactions.ByCost.Job = 保单交易（作业）
Web.PolicyFile.Transactions.ByCost.PostedDate = 发布日期
Web.PolicyFile.Transactions.ByCost.RemainingChargedTotal = 剩余总费用
Web.PolicyFile.Transactions.ByCost.RemainingWrittenTotal = 剩余签单总额
Web.PolicyFile.Transactions.ByCost.ToBeAccrued = 待应计
Web.PolicyFile.Transactions.ByCost.Written = 签单
Web.PolicyFile.Transactions.ByCostKey = 按成本键交易
Web.PolicyFile.Transactions.ByCostKey.Amount = 金额
Web.PolicyFile.Transactions.ByCostKey.Charged = 已收费
Web.PolicyFile.Transactions.ByCostKey.Cost = 成本
Web.PolicyFile.Transactions.ByCostKey.EffDate = 生效日期
Web.PolicyFile.Transactions.ByCostKey.ExpireDate = 到期日期
Web.PolicyFile.Transactions.ByCostKey.Job = 保单交易（作业）
Web.PolicyFile.Transactions.ByCostKey.PostedDate = 发布日期
Web.PolicyFile.Transactions.ByCostKey.ToBeAccrued = 待应计
Web.PolicyFile.Transactions.ByCostKey.TotalCharged = 总费用
Web.PolicyFile.Transactions.ByCostKey.TotalWritten = 总签单
Web.PolicyFile.Transactions.ByCostKey.Written = 签单
Web.PolicyFile.Transactions.ByJob = 交易（按作业）
Web.PolicyFile.Transactions.ByJob.Amount = 金额
Web.PolicyFile.Transactions.ByJob.CancellationDate = 取消日期
Web.PolicyFile.Transactions.ByJob.Charged = 已收费
Web.PolicyFile.Transactions.ByJob.Cost = 成本
Web.PolicyFile.Transactions.ByJob.EditEffectiveDate = 编辑生效日期
Web.PolicyFile.Transactions.ByJob.EffDate = 生效日期
Web.PolicyFile.Transactions.ByJob.ExpireDate = 到期日期
Web.PolicyFile.Transactions.ByJob.Job = 保单交易（作业）
Web.PolicyFile.Transactions.ByJob.PeriodEnd = 期限结束日期
Web.PolicyFile.Transactions.ByJob.PeriodStart = 期间开始日期
Web.PolicyFile.Transactions.ByJob.PostedDate = 发布日期
Web.PolicyFile.Transactions.ByJob.ToBeAccrued = 待应计
Web.PolicyFile.Transactions.ByJob.ViewByCost = 按成本查看
Web.PolicyFile.Transactions.ByJob.ViewByCostKey = 按成本键查看
Web.PolicyFile.Transactions.ByJob.Written = 签单
Web.PolicyFile.Transactions.ByPeriod = 交易（按期间）
Web.PolicyFile.Transactions.FinancialTransactions = 财务交易
Web.PolicyFile.Transactions.TransactionsByJob = 交易（按作业）
Web.PolicyFile.Transactions.TransactionsByPeriod = 交易（按期间）
Web.PolicyFile.UWReferralReasons = 核保转交原因
Web.PolicyFile.User = 用户
Web.PolicyFile.Vehicles = 车辆
Web.PolicyFile.WCCoverages = 雇主责任险承保范围
Web.PolicyFile.WCOptions = 雇主责任险选项
Web.PolicyFile.WCStateRate = 省/直辖市信息
Web.PolicyFile.Warnings.PendingPaymentConfirmation = 此保单期限正在等待赔付确认。
Web.PolicyFile.Warnings.PolicyBeingRewritten = 此保单正在重新填写新账户。
Web.PolicyFile.Warnings.PolicyRewritten = 此保单已重新填写新账户。
Web.PolicyFile.Workplan = 工作计划
Web.PolicyLine.AdditionalInterest = 其他权益方
Web.PolicyLine.AdditionalInterest.LVLabel = {0}其他权益方
Web.PolicyLine.CopyCoverages = 复制承保范围
Web.PolicyLine.CopyCoverages.Button = 复制承保范围
Web.PolicyLine.CopyCoverages.Cancel = 取消
Web.PolicyLine.CopyCoverages.Copy = 复制到选定项
Web.PolicyLine.CopyCoverages.CopyAll = 复制到所有
Web.PolicyLine.CopyCoverages.CopyFrom.Title = 复制自
Web.PolicyLine.CopyCoverages.CopyTo.Title = 复制到
Web.PolicyLine.CopyCoverages.NotSelected = 未选择
Web.PolicyLine.CopyCoverages.Selected = 选定
Web.PolicyLine.CopyCoverages.Title = 复制承保范围
Web.PolicyLine.CopyCoverages.Vehicle.Collision = 车辆损失险
Web.PolicyLine.CopyCoverages.Vehicle.ComprehensiveCov = 补偿
Web.PolicyLine.CopyCoverages.Vehicle.Description = 说明
Web.PolicyLine.CopyCoverages.Vehicle.Rental = 租赁
Web.PolicyLine.CopyCoverages.Vehicle.Towing = 拖车
Web.PolicyLine.CopyCoverages.Vehicle.VehicleNumber = 车辆编号
Web.PolicyLine.CopyCoverages.Vehicle.Vin = 车辆识别号码
Web.PolicyLine.Coverage = {0}承保范围
Web.PolicyLine.Coverage.CovTermValue = 值{0}
Web.PolicyLine.Coverages = 承保范围
Web.PolicyLine.Coverages.Description = 说明
Web.PolicyLine.DriverDetail = 司机详细信息
Web.PolicyLine.Drivers.AccidentViolationSummaryTitle = 事故/违章摘要
Web.PolicyLine.Drivers.AccountDetailsHeader = 账户级别
Web.PolicyLine.Drivers.AddDriver = 添加司机
Web.PolicyLine.Drivers.ApplicableGoodDriverDiscount = 是否适用优秀司机折扣？
Web.PolicyLine.Drivers.DateOfBirth = 出生日期
Web.PolicyLine.Drivers.DoNotOrderMVR = 不预定驾驶记录
Web.PolicyLine.Drivers.DriverDetail = 司机详细信息
Web.PolicyLine.Drivers.DriversInfo = 司机信息
Web.PolicyLine.Drivers.ExcludedDriver = 已排除？
Web.PolicyLine.Drivers.FirstName = 名字
Web.PolicyLine.Drivers.FullName = 姓名
Web.PolicyLine.Drivers.Gender = 性别
Web.PolicyLine.Drivers.HireDate = 雇用日期
Web.PolicyLine.Drivers.LastName = 姓氏
Web.PolicyLine.Drivers.LicenseNumber = 驾驶证编号
Web.PolicyLine.Drivers.LicenseState = 驾驶证所属省/直辖市
Web.PolicyLine.Drivers.MVRReportHeader = 汽车驾驶记录报告
Web.PolicyLine.Drivers.MVRStatus = 汽车驾驶记录状态
Web.PolicyLine.Drivers.MaritalStatus = 婚姻状况
Web.PolicyLine.Drivers.NoMVRsToOrder = 未预定汽车驾驶记录，因为所有选定司机均设置为“不需驾驶记录”
Web.PolicyLine.Drivers.NotOrdered = 未预定
Web.PolicyLine.Drivers.PercentageUse = 使用比例
Web.PolicyLine.Drivers.PolicyDetailsHeader = 保单级别
Web.PolicyLine.Drivers.RemoveDriver = 移除司机
Web.PolicyLine.Drivers.RetrieveMVRButton = 检索汽车驾驶记录
Web.PolicyLine.Drivers.StatusDate = 状态日期
Web.PolicyLine.Drivers.YearLicensed = 驾驶证年份
Web.PolicyLine.Drivers.YearsExperience = 驾龄
Web.PolicyLine.LeasedEmployee.ContractEffectiveDate = 合同生效日期
Web.PolicyLine.LeasedEmployee.ContractExpirationDate = 合同到期日期
Web.PolicyLine.Modifiers.Description = 说明
Web.PolicyLine.Modifiers.Value = 值
Web.PolicyLine.Validation.AdditionalInsured.AddlInformationRequired = 需要类型为{0}的附加被保险人的其它信息。
Web.PolicyLine.Validation.AdditionalInsuredUnique = 附加被保险人{0}有多个条目使用同一个附加被保险人类型{1}
Web.PolicyLine.Validation.AffinityGroupDatesOutOfBound = 保单期限必须完全处于{0}亲和组计划日期内
Web.PolicyLine.Validation.AffinityGroupSelectedIsUnavailableInPolicyPeriodBaseState = 选定的亲和组{0}在管辖区{1}中不可用
Web.PolicyLine.Validation.CoverageCurrenciesInconsistentForCoverage = 存在使用不同币种的承保范围的承保项
Web.PolicyLine.Validation.CurrencyExchangeUnsupported = FX转换不能用于将{0}转换为{1}
Web.PolicyLine.Validation.OnlyAvailableGroupPropertyNotSearchable = 如果提供了开始或结束日期，不能搜索可用组
Web.PolicyLine.Vehicle.AnnualMileage = 年度里程
Web.PolicyLine.Vehicle.BasicVehicleInformation = 车辆基本信息
Web.PolicyLine.Vehicle.BodyType = 车身类型
Web.PolicyLine.Vehicle.ClassCode = 类
Web.PolicyLine.Vehicle.ClassificationInfo = 分类信息
Web.PolicyLine.Vehicle.Collision = 车辆损失险
Web.PolicyLine.Vehicle.Collision.NotSelected = 未选择
Web.PolicyLine.Vehicle.Color = 颜色
Web.PolicyLine.Vehicle.CommutingMiles = 通勤里程 \n（单向）
Web.PolicyLine.Vehicle.Comprehensive = 综合险
Web.PolicyLine.Vehicle.Cost = 成本
Web.PolicyLine.Vehicle.CostNew = 新车购置成本
Web.PolicyLine.Vehicle.CoverageDetails = 承保范围明细
Web.PolicyLine.Vehicle.Description = 说明
Web.PolicyLine.Vehicle.DestinationZone = 目的地区域
Web.PolicyLine.Vehicle.Driver.Driver = 司机
Web.PolicyLine.Vehicle.Driver.DriverPercentages = 将司机分配给车辆
Web.PolicyLine.Vehicle.Driver.DriverPercentages2 = 每个司机使用此车辆的时间百分比各为多少？
Web.PolicyLine.Vehicle.Driver.Percentage = 百分比
Web.PolicyLine.Vehicle.Driver.Total = 总计
Web.PolicyLine.Vehicle.GarageLocation = 车库位置
Web.PolicyLine.Vehicle.Industry = 行业
Web.PolicyLine.Vehicle.IndustryUse = 行业用途
Web.PolicyLine.Vehicle.Information = 车辆信息
Web.PolicyLine.Vehicle.LeaseOrRent = 是否已租赁或租用？
Web.PolicyLine.Vehicle.LengthOfLease = 租赁/租用 \n月数
Web.PolicyLine.Vehicle.LicensePlate = 车牌号
Web.PolicyLine.Vehicle.LicenseState = 驾照所属省/直辖市
Web.PolicyLine.Vehicle.Make = 厂牌
Web.PolicyLine.Vehicle.Model = 车型
Web.PolicyLine.Vehicle.New = 新车
Web.PolicyLine.Vehicle.NotSelected = 未选择
Web.PolicyLine.Vehicle.OriginationZone = 起始区域
Web.PolicyLine.Vehicle.PipCovered = 人身伤害险承保范围
Web.PolicyLine.Vehicle.PrimaryDriver = 主要司机
Web.PolicyLine.Vehicle.PrimaryUse = 主要用途
Web.PolicyLine.Vehicle.Radius = 里程范围
Web.PolicyLine.Vehicle.Rental = 租赁
Web.PolicyLine.Vehicle.Rental.NotSelected = 未选择
Web.PolicyLine.Vehicle.SizeClass = 大小类
Web.PolicyLine.Vehicle.StatedValue = 设定价值
Web.PolicyLine.Vehicle.SubType = 子类型
Web.PolicyLine.Vehicle.TowingLabor = 拖车人工
Web.PolicyLine.Vehicle.TowingLabor.NotSelected = 未选择
Web.PolicyLine.Vehicle.TowingLabor.Selected = 选定
Web.PolicyLine.Vehicle.Type = 车辆类型
Web.PolicyLine.Vehicle.Used = 二手车
Web.PolicyLine.Vehicle.VehicleClassCodeSearch = 车辆分类代码搜索
Web.PolicyLine.Vehicle.VehicleCond = 购买时的车况
Web.PolicyLine.Vehicle.VehicleNumber = 车辆编号
Web.PolicyLine.Vehicle.Vin = 车辆识别号码
Web.PolicyLine.Vehicle.WhereGaraged = 汽车修理地点
Web.PolicyLine.Vehicle.Year = 型号年份
Web.PolicyLine.Vehicle.YearPurchased = 购买年份
Web.PolicyLine.VehicleDetail = 车辆详细信息
Web.PolicyPeriod.EstimatedPremium = 预计保费
Web.PolicyPeriod.SelectedMarker = *
Web.PolicyPeriod.Version = {0} \: {1}
Web.PolicySearch.AccountNumber = 账号
Web.PolicySearch.AddressLine1 = 地址行 1
Web.PolicySearch.AddressLine2 = 地址行 2
Web.PolicySearch.Agency = 经理人
Web.PolicySearch.ArchivedChoices.ExcludeArchived = 排除存档
Web.PolicySearch.ArchivedChoices.IncludeArchived = 包括存档
Web.PolicySearch.AsOfDate = 起始日期
Web.PolicySearch.AssignedRisk = 分派风险
Web.PolicySearch.Code = 经理人代码
Web.PolicySearch.Country = 国家/地区
Web.PolicySearch.DatabaseSearch = 高级
Web.PolicySearch.Date = 按日期搜索
Web.PolicySearch.Date.Field = 要搜索的日期字段
Web.PolicySearch.DeclinationReason = 拒绝原因
Web.PolicySearch.Export = 打印/导出
Web.PolicySearch.Jurisdiction = 管辖权
Web.PolicySearch.NonRenewalCode = 非续保代码
Web.PolicySearch.Normal.Tab = 保单搜索
Web.PolicySearch.OfficialID = 官方ID
Web.PolicySearch.Phone = 电话
Web.PolicySearch.PolicyAddress.Title = 保单地址信息
Web.PolicySearch.PolicyNumber = 保单号
Web.PolicySearch.PolicyPeriodSearchType.Cancellation = 取消
Web.PolicySearch.PolicyPeriodSearchType.FinalAudit = 最终审计
Web.PolicySearch.PolicyPeriodSearchType.Issuance = 出单
Web.PolicySearch.PolicyPeriodSearchType.Policy = 保单
Web.PolicySearch.PolicyPeriodSearchType.PolicyChange = 保单更改
Web.PolicySearch.PolicyPeriodSearchType.PremiumReport = 保费报告
Web.PolicySearch.PolicyPeriodSearchType.Reinstatement = 复效
Web.PolicySearch.PolicyPeriodSearchType.Renewal = 续保
Web.PolicySearch.PolicyPeriodSearchType.Rewrite = 重新填写
Web.PolicySearch.PolicyPeriodSearchType.RewriteNewAccount = 重新填写新账户
Web.PolicySearch.PolicyPeriodSearchType.Submission = 投保
Web.PolicySearch.PolicySearch = 搜索保单
Web.PolicySearch.PrimaryInsured.Title = 主被保险人信息
Web.PolicySearch.ProductName = 保险产品
Web.PolicySearch.Results = 搜索结果
Web.PolicySearch.Results.AccountNumber = 账号
Web.PolicySearch.Results.EffectiveDate = 生效日期
Web.PolicySearch.Results.ExpirationDate = 到期日期
Web.PolicySearch.Results.JobNumber = 交易号
Web.PolicySearch.Results.MainContact = 主要联系人
Web.PolicySearch.Results.PolicyNumber = 保单号
Web.PolicySearch.Results.PolicyPeriodCreationDate = 创建日期
Web.PolicySearch.Results.PolicyPeriodStatus = 状态
Web.PolicySearch.Results.PrimaryNamedInsured = 主要列名被保险人
Web.PolicySearch.Results.Producer = 经理人
Web.PolicySearch.Results.Product = 保险产品
Web.PolicySearch.Results.SubmissionDate = 投保日期
Web.PolicySearch.Results.SubmissionNumber = 投保单号
Web.PolicySearch.Results.SubmissionStatus = 投保单状态
Web.PolicySearch.Results.Underwriter = 核保人
Web.PolicySearch.Results.Version = 版本
Web.PolicySearch.SearchFor = 搜索
Web.PolicySearch.Solr.Address = 地址
Web.PolicySearch.Solr.City = 市/区
Web.PolicySearch.Solr.Filter = 过滤器
Web.PolicySearch.Solr.InForceDate = 生效于
Web.PolicySearch.Solr.Jurisdiction = 管辖权
Web.PolicySearch.Solr.MinimumSearchCriteria = 至少必须在“保单号”、“姓名”、“电话”、“公务人员ID”、“街道”或“市”等其中一个字段内输入搜索词。
Web.PolicySearch.Solr.Name = 名称
Web.PolicySearch.Solr.NeedSearchCriteria = 至少必须在“保单号”、“姓名”、“电话”、“公务人员ID”、“街道”或“市”等其中一个字段内输入搜索词。 \n
Web.PolicySearch.Solr.OfficialId = 公务人员ID
Web.PolicySearch.Solr.Phone = 电话
Web.PolicySearch.Solr.Policy = 保单号
Web.PolicySearch.Solr.PostalCode = 邮政编码
Web.PolicySearch.Solr.Producer = 记录的经理人
Web.PolicySearch.Solr.ProducerCode = 经理人代码
Web.PolicySearch.Solr.ProducerCodeSecurityEnabledWithNoProducerCodes = 您的账户已启用经理人代码安全，但您无权访问经理人代码
Web.PolicySearch.Solr.Product = 产品
Web.PolicySearch.Solr.Result.Address = 地址
Web.PolicySearch.Solr.Result.CanceledStatus = 已取消
Web.PolicySearch.Solr.Result.Effective = 生效日期
Web.PolicySearch.Solr.Result.Expiration = 到期日期
Web.PolicySearch.Solr.Result.InsuredName = 名称
Web.PolicySearch.Solr.Result.Policy = 保单号
Web.PolicySearch.Solr.Result.PolicyFile = 保单
Web.PolicySearch.Solr.Result.Producer = 经理人
Web.PolicySearch.Solr.Result.Product = 产品
Web.PolicySearch.Solr.Result.Rank = 等级
Web.PolicySearch.Solr.Result.Score = 分数
Web.PolicySearch.Solr.Result.Status = 状态
Web.PolicySearch.Solr.Result.Unbound = 交易
Web.PolicySearch.Solr.State = 省/直辖市
Web.PolicySearch.Solr.Street = 街道
Web.PolicySearch.SolrSearch = 基本
Web.PolicySearch.SolrSearch.Tab = Solr保单搜索
Web.PolicySearch.Source = 来源
Web.PolicySearch.SubmissionNumber = 投保单编号
Web.PolicySearch.Title = 搜索保单
Web.PolicySearch.UWCompany = 核保公司
Web.PolicySearch.WorkOrderNumber = 保单交易编号
Web.PopupParent.ContainerTypeError = 未知容器类型：{0}
Web.PreRenewalDirection = 续保前说明
Web.PreRenewalDirection.AssignTo = 分配到
Web.PreRenewalDirection.ConfirmDelete = 是否确定要删除续保前说明？
Web.PreRenewalDirection.Delete = 删除
Web.PreRenewalDirection.Details = 详细信息
Web.PreRenewalDirection.Direction = 说明
Web.PreRenewalDirection.NonRenewAddExplanation = 未续保附加文本
Web.PreRenewalDirection.NonRenewReason = 未续保原因
Web.PreRenewalDirection.NonRenewalExplanation.Explanation = 解释
Web.PreRenewalDirection.NonRenewalExplanations = 未续保解释
Web.PreRenewalDirection.Note = 备注
Web.PreRenewalDirection.ScreenTitle = 保单期限{0} - {1}的续保前说明
Web.PreRenewalDirection.SelectedNonRenewalExplanations = 选定的未续保解释
Web.PreRenewalDirection.ViewNotes = 查看备注
Web.Preferences = 设置
Web.Preferences.Accessibility = 可访问性
Web.Preferences.Currency = 货币
Web.Preferences.Currency.CopySymbol = 在复制金额时包括货币符号
Web.Preferences.Currency.Macros = 在货币输入中启用宏字符（例如，1.5k -> 1500和7m -> 7000000）。
Web.Preferences.Currency.default0Placeholder = 对于null值，显示0作为货币输入占位符
Web.Preferences.Currency.macroCharacter.Billion = b
Web.Preferences.Currency.macroCharacter.Million = m
Web.Preferences.Currency.macroCharacter.Thousand = k
Web.Preferences.Currency.macroCharacter.Trillion = t
Web.Preferences.Dates = 日期
Web.Preferences.Dates.UseComplexDatePickerOptions = 使用复杂的日期选取器选项
Web.Preferences.Dates.capDateTimeUserInput = 将用户输入限制为天、月、分钟和小时的最大值
Web.Preferences.Dates.focusOpenDatePicker = 打开焦点处的日期/时间选取器
Web.Preferences.Dates.smallDatePicker = 使用小日期选取器
Web.Preferences.Dates.todayClosesDatePicker = 单击日期选取器中的“今天”按钮可选择今天并关闭选取器
Web.Preferences.Debug = 调试
Web.Preferences.Debug.AlternateActionsIcon = “替代操作”图标
Web.Preferences.Debug.DrawFlash = 突出显示重画的元素
Web.Preferences.Debug.ignorePCFWidthsAndHeights = 忽略PCF宽度和高度
Web.Preferences.Debug.outlinePCFWidthsAndHeights = 突出显示具有PCF宽度和高度的控件
Web.Preferences.Debug.showWidgetTypesAsInlineTitles = 将控件类型显示为嵌入标题
Web.Preferences.General = 一般
Web.Preferences.General.confirmNavigation = 始终确认浏览器导航
Web.Preferences.General.disableBrowserAutocomplete = 禁用浏览器自动完成
Web.Preferences.General.keyboardNavSelectsListDetail = 使用上下箭头键导航列表详细信息的行时也会选择该行
Web.Preferences.General.removeLvStretchOnCellResize = 手动调整表列大小将禁用表拉伸
Web.Preferences.General.replaceWordProcessingCharacters = 将可编辑字段中的特殊文字处理器字符替换为标准版本。(例如，¾ -> 3/4和“” -> "")
Web.Preferences.General.scrollToTopOnError = 在出现任何错误时将屏幕滚动到顶部
Web.Preferences.General.smartTouchRejection = 尝试更智能地处理该忽略的触屏输入。实质上，应允许“忽略犯错的拇指”和“防止手掌误触”行为。
Web.Preferences.RestoreDefaults = 还原默认设置
Web.Preferences.UI = 见习人员
Web.Preferences.UI.CurrentTheme = 主题
Web.Preferences.UI.Default = 默认
Web.Preferences.UI.FocusOutline = 在带焦点的元素上禁用轮廓
Web.Preferences.UI.FontSize = 应用程序字体大小
Web.Preferences.UI.ForceTextShadows = 强制开启文本阴影
Web.Preferences.UI.GlobalSpacingModifier = 全局间隔修饰符
Web.Preferences.UI.HighlightDirtyData = 突出显示更改的值
Web.Preferences.UI.LeftAlignTopToolbar = 左对齐顶部工具栏
Web.Preferences.UI.lockFocusInApplication = 阻止导航焦点离开该应用程序
Web.PrimaryAddressDV = 主要地址
Web.PrimaryAddressDV.Address = 主要地址
Web.PrintOptions.CharacterEncoding = 字符编码：
Web.PrintOptions.Column = 列
Web.PrintOptions.Export = 导出（CSV格式）
Web.PrintOptions.ExportCustom = 自定义导出（CSV格式）
Web.PrintOptions.Label.SelectPrintOptions = 选择打印/导出选项
Web.PrintOptions.Print = 打印（PDF格式）
Web.PrintOptions.Title = 打印/导出选项
Web.PrintValue = {0}
Web.PrivacyValueWidgetRenderer.Delete = 删除
Web.PrivacyValueWidgetRenderer.New = 输入新值
Web.ProducerCode.Delete.InactiveButton = 无法删除ProducerCode，因为ProducerCode是现有保单上记录的经理人或者是现有保单期间上服务的经理人。
Web.ProducerCode.Detail = 经理人代码： {0}
Web.ProducerCodeDetailDV.AcceptDefault = （接受默认值）
Web.ProducerCodeDetailDV.AuthorizedCurrencies = 授权货币
Web.ProducerCodeDetailScreen.SelectAPlanButton = 选择一个计划
Web.ProducerCodeSearch = 经理人代码
Web.ProducerCodeSearch.NotEnoughInfo = 请输入机构、经理人姓名或业务员代码
Web.ProducerCodeSearch.Title = 搜索经理人代码
Web.ProducerCodeSearchDV.BranchCode = 分支机构代码
Web.ProducerCodeSearchDV.Code = 经理人代码
Web.ProducerCodeSearchDV.Currency = 货币
Web.ProducerCodeSearchDV.Description = 说明
Web.ProducerCodeSearchDV.MissingPrefUW = 搜索缺少的首选核保人
Web.ProducerCodeSearchDV.Organization = 机构
Web.ProducerCodeSearchDV.ParentCode = 上级经理人代码
Web.ProducerCodeSearchDV.PrefUW = 首选核保人
Web.ProducerCodeSearchDV.Status = 状态
Web.ProducerCodeSearchDV.User = 可用于用户
Web.ProducerCodeSearchLV.Branch = 分支
Web.ProducerCodeSearchLV.BranchCode = 分支机构代码
Web.ProducerCodeSearchLV.Code = 经理人代码
Web.ProducerCodeSearchLV.Description = 说明
Web.ProducerCodeSearchLV.Organization = 机构
Web.ProducerCodeSearchLV.Parent = 上级组
Web.ProducerCodeSearchLV.PrefUW = 首选核保人
Web.ProducerCodeSearchLV.Status = 状态
Web.ProducerSelection.Error.SuspendedPolicyProducerCodeOfService = 保单文件的服务经理人代码处于{0}非活动状态。
Web.ProducerSelection.Error.SuspendedProducer = 经理人{0}非活动
Web.ProducerSelection.Error.SuspendedProducerCode = 经理人代码{0}非活动
Web.ProducerSelection.Error.SuspendedProducerCodeOfService = 服务经理人代码{0}处于非活动状态
Web.ProducerSelection.Producer = 机构
Web.ProducerSelection.ProducerAgencyNotActive = 经理人{0}当前非活动。
Web.ProducerSelection.ProducerCode = 经理人代码
Web.ProducerSelection.ProducerCode.OptionLabel = {0} {1}
Web.ProducerSelection.ProducerCodeDescription = 说明
Web.ProducerSelection.ProducerOfRecordInfo = 有记录的经理人
Web.ProducerSelection.ProducerOfServiceInfo = 服务经理人
Web.ProducerSelection.ProducerOrg = 机构
Web.ProductOffers.NoProductsOffered = 没有为此账户/经理人代码提供保险产品。
Web.ProductOffers.NoSubmissionsCreated = 未创建投保单。
Web.Profiler = Guidewire 探查器
Web.Profiler.AdditionalTracing = 附加跟踪（耗费资源）
Web.Profiler.AggregatedQuerySummary = 累计查询
Web.Profiler.Analysis = Profiler分析
Web.Profiler.AnalyzeBatchProcess = 批处理Profiler
Web.Profiler.AnalyzeByTimeRange = 按时间范围
Web.Profiler.AnalyzeSaved = 已保存文件
Web.Profiler.AnalyzeWeb = Web Profiler
Web.Profiler.AnalyzeWebService = Web服务Profiler
Web.Profiler.AnalyzeWorkQueue = 工作队列Profiler
Web.Profiler.AppserverID = 应用服务器ID
Web.Profiler.ArchiveFrom = 存档自
Web.Profiler.ArchiveTo = 存档至
Web.Profiler.Args = 实际参数
Web.Profiler.ArgumentDetails = 实际参数详细信息
Web.Profiler.Arguments = 实际参数
Web.Profiler.AverageQueryTime = 平均时间(ms)
Web.Profiler.AverageRowCount = 平均行
Web.Profiler.BatchProcess = 批处理
Web.Profiler.BatchProcessType = 批处理类型
Web.Profiler.BatchProcesses = 批处理
Web.Profiler.BeginTime = 开始时间
Web.Profiler.CallStack = 域堆栈跟踪
Web.Profiler.CallStackDetails = 调用堆栈详细信息
Web.Profiler.CallStacks = 调用堆栈
Web.Profiler.ClickOnStackNameAndPressThisButtonToViewStackTree = 单击堆栈名称并按此按钮以查看堆栈树
Web.Profiler.Collection = Profiler集合
Web.Profiler.CompleteDate = 完成
Web.Profiler.Configuration = 配置
Web.Profiler.ConfirmChanges = 确认更改
Web.Profiler.DbmsInstrumentationCaptureThresholdMs = DBMS检测捕获阈值（毫秒）
Web.Profiler.DbmsInstrumentationCaptureThresholdMsPerAction = 每个操作的DBMS检测捕获阈值（毫秒）
Web.Profiler.DbmsInstrumentationReports = DBMS检测报告
Web.Profiler.DeleteProfileStack = 从已保存列表删除
Web.Profiler.Depth = 深度
Web.Profiler.DestinationID = ID
Web.Profiler.DestinationName = 目标名称
Web.Profiler.DiffDbmsInstrumentationCounters = 差分DBMS检测计数器
Web.Profiler.Disable = 禁用{0}
Web.Profiler.DisableProfiling = 禁用剖析
Web.Profiler.Display = 显示
Web.Profiler.DistinctArgs = 实际参数数目
Web.Profiler.Done = 完成
Web.Profiler.Edit = 编辑{0}
Web.Profiler.EditConfiguration = 编辑配置
Web.Profiler.ElapsedTime = 实耗时间(ms)
Web.Profiler.Empty = 空
Web.Profiler.Enable = 启用{0}
Web.Profiler.EnableProfilingForBatchProcess = 启用批处理剖析
Web.Profiler.EnableProfilingForGosuServlet = 针对Gosu Servlet启用剖析
Web.Profiler.EnableProfilingForMessageDestination = 启用消息目标剖析
Web.Profiler.EnableProfilingForRestOperation = 对Rest操作启用剖析
Web.Profiler.EnableProfilingForStartablePlugin = 为可启动服务启用剖析
Web.Profiler.EnableProfilingForWebService = 启用Web服务剖析
Web.Profiler.EnableProfilingForWithElipsis = 启用此项的剖析...
Web.Profiler.EnableProfilingForWorkQueue = 启用工作队列剖析
Web.Profiler.EndTime = 结束时间
Web.Profiler.EntryPointConfiguration = 入口点配置
Web.Profiler.EntryPointName = 入口点名称
Web.Profiler.EntryPointType = 类型
Web.Profiler.ExtendedQueryTracing = 扩展查询跟踪
Web.Profiler.FilteredStackTrace = 已过滤堆栈跟踪
Web.Profiler.FrameTime = 框架(ms)
Web.Profiler.Frames = 框架
Web.Profiler.FullStackTrace = 完全堆栈跟踪
Web.Profiler.GosuServlet = Gosu Servlet
Web.Profiler.GosuServletProfilerServerId = 服务器ID
Web.Profiler.GosuServletProfilerServletTypeName = Gosu Servlet
Web.Profiler.GosuServlets = Gosu Servlet
Web.Profiler.HiResolutionClock = 高分辨率时钟（更精密，但可能会降低准确性）
Web.Profiler.IndividualStacks = 个别堆栈
Web.Profiler.InvalidFile = {0}是无效文件({1})
Web.Profiler.MaxQueryTime = 最长时间(ms)
Web.Profiler.Mean = 平均值
Web.Profiler.MessageDestination = 消息目标
Web.Profiler.MessageDestinations = 消息目标
Web.Profiler.More = 更多...
Web.Profiler.Name = 名称
Web.Profiler.NewValue = 新建{0}：
Web.Profiler.NoStacks = 未找到Profiler堆栈
Web.Profiler.NotSupportedByDatabase = 不受数据库支持
Web.Profiler.Number = #
Web.Profiler.OnlyOnWindows = 仅在Windows中
Web.Profiler.OnlyOneStackAnalysisNotMeaningful = 此Profiler源只有一个堆栈。改为使用组堆栈视图。
Web.Profiler.PCFStackTrace = PCF堆栈跟踪
Web.Profiler.Percent = %
Web.Profiler.PleaseConfirmChanges = 请确认更改使其生效。
Web.Profiler.PluginName = 插件名称
Web.Profiler.ProfileSessions = 配置文件会话
Web.Profiler.ProfileSnapshots = 配置文件快照
Web.Profiler.ProfilerSource = Profiler源
Web.Profiler.PropertiesAndCounters = 属性和计数器
Web.Profiler.Queries = 查询
Web.Profiler.QueriesPerStack = 每个堆栈的查询数
Web.Profiler.QueryArgs = 查询实际参数
Web.Profiler.QueryDetails = 查询详细信息
Web.Profiler.QueryOptimizerTracing = 查询优化程序跟踪
Web.Profiler.QueryText = 查询
Web.Profiler.QueryTime = 时间(ms)
Web.Profiler.Refresh = 刷新
Web.Profiler.Reload = 重新加载
Web.Profiler.RestHandlerNameFilter = 按处理程序名称筛选
Web.Profiler.RestHttpOperation = Http路径
Web.Profiler.RestOperation = Rest操作
Web.Profiler.RestOperationName = Rest操作
Web.Profiler.RestartToTakeEffectAlert = 要使您的更改生效，可能需要重新启动关联的批处理流程、工作队列或消息目标。
Web.Profiler.RestoreSnapshot = 恢复快照
Web.Profiler.Result = Profiler结果
Web.Profiler.Results = 结果
Web.Profiler.SQL = SQL
Web.Profiler.SaveProfileStack = 保存当前会话
Web.Profiler.SaveSnapshot = 将快照保存到客户端
Web.Profiler.SaveSnapshotToServerLocation = 保存到服务器
Web.Profiler.Score = 分数
Web.Profiler.SessionProfiler = 会话Profiler
Web.Profiler.SessionProfilerStatus = 已启用会话Profiler
Web.Profiler.ShowTag = 显示
Web.Profiler.ShowTagFilters = 按标记过滤
Web.Profiler.SoapNumCalls = 调用数
Web.Profiler.SoapProfileSessions = SOAP Profiler
Web.Profiler.SoapProfiler = SOAP Profiler
Web.Profiler.SoapProfilerClear = 清除SOAP调用
Web.Profiler.SoapProfilerOperationName = 操作名称
Web.Profiler.SoapProfilerServerId = 服务器ID
Web.Profiler.SoapProfilerServiceName = Web服务名称
Web.Profiler.SoapQueriesPerCall = 每个调用的查询数
Web.Profiler.SoapTurnProfilingOn = 启动SOAP剖析
Web.Profiler.SoapTurnProfilingOnWithStackTrace = 启动含堆栈跟踪的SOAP剖析（耗费资源）
Web.Profiler.StackCounts = 堆栈数
Web.Profiler.StackName = 堆栈名称
Web.Profiler.StackQuerySummary = 堆栈/查询摘要
Web.Profiler.StackTraceTracking = 堆栈跟踪追踪
Web.Profiler.Stacks = 堆栈
Web.Profiler.Start = 开始
Web.Profiler.StartDate = 开始
Web.Profiler.StartTime = 开始时间
Web.Profiler.StartablePluginProfilerPluginName = 服务名称
Web.Profiler.StartablePlugins = 可启动的服务
Web.Profiler.Stop = 停止
Web.Profiler.Tag.Count = 计数
Web.Profiler.Tag.Name = 标记
Web.Profiler.Time = 时间
Web.Profiler.Total = 总计
Web.Profiler.TotalExecutions = 执行次数
Web.Profiler.TotalQueryCount = 查询数
Web.Profiler.TotalQueryTime = 总时间(ms)
Web.Profiler.TotalRowCount = 总行数
Web.Profiler.TreeViewDesc = [帧时间/实耗时间] （profiler标记） {{属性和计数器}
Web.Profiler.TurnOffWebProfiling = 禁用Web剖析
Web.Profiler.TurnOnWebProfiling = 启用此会话的Web剖析
Web.Profiler.Upgrade = 升级
Web.Profiler.ViewType = 视图类型
Web.Profiler.Web = Web
Web.Profiler.WebProfiler = Web Profiler
Web.Profiler.WebService = Web服务
Web.Profiler.WebServiceName = 服务名称
Web.Profiler.WebServiceOperationName = 操作名称
Web.Profiler.WebServices = Web服务
Web.Profiler.WorkQueue = 工作队列
Web.Profiler.WorkQueueType = 工作队列类型
Web.Profiler.WorkQueues = 工作队列
Web.Purge.DoNotDestroyFlag = DoNotDestroy（期间）
Web.Purge.FindOrRefreshJob = 查找/刷新作业
Web.Purge.FlipDoNotDestroyBit = 翻转DoNotDestroy位
Web.Purge.InfoMessages.FindOrRefreshJob = 使用此按钮从数据库中获取作业或其最新版本。无需进行其它操作。
Web.Purge.InfoMessages.SkipChecksForPruning = 请参阅PCPurgeStrategy中的方法canPurgeJob（作业job，日期purgeDate）
Web.Purge.InfoMessages.SkipChecksForPurging = 请参阅PCPurgeStrategy中的方法canPurgeJob（作业job，日期purgeDate）
Web.Purge.InfoMessages.SkipChecksForPurgingPeriod = 请参阅PCPurgeStrategy中的方法canPrunePolicyPeriod（PolicyPeriod期间）
Web.Purge.InternalTools.JobToPurge = 要清除/修剪的作业：
Web.Purge.InternalTools.PCPurge = 正在清除报价测试
Web.Purge.InternalTools.PurgePolicyPeriods = 修剪 -- 清除保单期间
Web.Purge.Job.CloseDate = 结束日期：
Web.Purge.Job.DoNotDestroy = DoNotDestroy标志（保单）：
Web.Purge.Job.EndOfCoverage = 承保结束：
Web.Purge.Job.JobNumber = 作业号：
Web.Purge.Job.JobSubtype = 子类型：
Web.Purge.Job.PolicyPeriods = 保单期间：
Web.Purge.PolicyPeriod = 保单期限
Web.Purge.PolicyPeriodEnd = 期限结束日期
Web.Purge.PolicyPeriodStart = 期间开始日期
Web.Purge.PruneJob = 修剪作业
Web.Purge.Purge = 清除
Web.Purge.PurgeJob = 清除作业
Web.Purge.PurgeOrPruneJob = 清除或修剪作业
Web.Purge.Run = 运行
Web.Purge.RunPurgeBatchProcess = 运行清除批处理
Web.Purge.Selected = 选定
Web.Purge.Set = 设置
Web.Purge.SkipChecksForPruning = 跳过可配置的修剪检查
Web.Purge.SkipChecksForPurging = 跳过可配置的修剪检查
Web.Purge.SkipChecksForPurgingPolicyPeriod = 跳过对清除保单期间的检查
Web.Purge.Status = 期间状态
Web.Purge.Unselected = 取消选择
Web.Purge.Unset = 取消设置
Web.Purge.Validations.JobAlreadyInPrunedState = 作业号{0}仅有一个保单期间，无法修剪
Web.Purge.Validations.JobDoesNotExist = 作业号{0}不存在
Web.Purge.Validations.JobFailedValidationForPruning = 作业号{0}校验失败，无法修剪
Web.Purge.Validations.JobFailedValidationForPurging = 作业号{0}校验失败，无法清除
Web.Purge.Validations.JobPruneSuccessful = 作业号{0}已成功修剪
Web.Purge.Validations.JobPurgeSuccessful = 作业号{0}已成功清除
Web.Purge.Validations.MustEnterJobNumber = 请输入作业号
Web.Purge.Validations.NoJobSelected = 请先选择作业
Web.Purge.Validations.NoPeriodSelected = 请先选择保单期间
Web.Purge.Validations.PeriodFailedValidation = 保单期间校验失败，无法清除
Web.Purge.Validations.PeriodPurgeSuccessful = 作业{0}中的保单期间已成功清除
Web.Purge.Validations.UnableToPruneJob = 作业{0}中有一个或多个保单期间无法清除
Web.Purge.Validations.UnableToPurgeJob = 无法清除作业号{0}
Web.Purge.Validations.UnableToPurgePeriod = 无法清除作业{0}的保单期间
Web.Purge.VersionAndStatus = {0}\: {1}
Web.QuickJump = 转到
Web.QuickJump.RunBatchProcess.BatchProcessCompleted = 批处理“{0}”已成功完成。
Web.QuickJump.RunBatchProcess.BatchProcessStillRunning = {0} 秒后，批处理仍在运行。
Web.QuickJump.RunBatchProcess.CouldNotFindBatchProcess = 找不到代码为“{0}”的批处理。
Web.QuickJump.RunBatchProcess.MustSpecifyBatchProcess = 必须指定批处理类型。
Web.QuickJump.RunBatchProcess.WorkManagerStopped = 已分配工作线程管理器已停止。无法运行工作队列。
Web.QuickJump.RunBatchProcess.WorkersStillRunning = {0} 秒后，已分配工作线程仍在运行。
Web.Quote.CompactView = 简要视图
Web.Quote.CumulDetail.Default.Amount = 金额
Web.Quote.CumulDetail.Default.Basis = 基本金额
Web.Quote.CumulDetail.Default.ClassCode = 代码
Web.Quote.CumulDetail.Default.Desc.Cov = 承保范围说明
Web.Quote.CumulDetail.Default.Desc.EUDesc = 说明
Web.Quote.CumulDetail.Default.Description = 说明
Web.Quote.CumulDetail.Default.EffDate = 生效日期
Web.Quote.CumulDetail.Default.ExpDate = 到期日期
Web.Quote.CumulDetail.Default.OtherCharges = 其它费用
Web.Quote.CumulDetail.Default.PeriodEnd = 到期日期
Web.Quote.CumulDetail.Default.PeriodStart = 生效日期
Web.Quote.CumulDetail.Default.Premium = 保费
Web.Quote.CumulDetail.Default.PremiumSubtotalAndTaxes = 保费小计和税费
Web.Quote.CumulDetail.Default.Premiums = 保费
Web.Quote.CumulDetail.Default.Prorata = 按比例分配
Web.Quote.CumulDetail.Default.Proration = 按比例分配
Web.Quote.CumulDetail.Default.Rate = 费率
Web.Quote.CumulDetail.Default.State = 省/直辖市
Web.Quote.CumulDetail.Default.Subtotal = 小计
Web.Quote.CumulDetail.Default.TermAmount = 附加责任金额
Web.Quote.CumulDetail.Default.TermPremium = 附加责任保费
Web.Quote.ExtendedView = 扩展视图
Web.Quote.Insured = 主要列名被保险人
Web.Quote.PeriodEffectiveDate = 交易生效日期
Web.Quote.PolicyNumber = 保单号
Web.Quote.PremiumSummary.DownPayment = 首付款
Web.Quote.PremiumSummary.DueDate = 到期日期
Web.Quote.PremiumSummary.FixInvoicesBy = 固定发票截止日期
Web.Quote.PremiumSummary.Frequency = 频率
Web.Quote.PremiumSummary.HeldSubjectToAudit = 已将主题保留到最终审计
Web.Quote.PremiumSummary.Installments = 分期付款（{0}）
Web.Quote.PremiumSummary.InvoicingDays = 开票日
Web.Quote.PremiumSummary.PayUsing = 支付方式
Web.Quote.PremiumSummary.Taxes = 税费和附加费用
Web.Quote.TotalCostLabel.Change = 成本更改
Web.Quote.TotalCostLabel.Total = 总成本
Web.Quote.TotalCostLabel.Total2 = 总成本： {0}
Web.Quote.TotalPremLabel.Change = 保费的更改
Web.Quote.TotalPremLabel.Total = 保费总额
Web.Quote.TransactionDescription = 交易说明
Web.Quote.UWCompany = 核保公司
Web.Quote.WC.StandardPremium.OnePeriod = 标准保费
Web.Quote.WC.StandardPremium.SplitPeriod = 标准保费（{0} - {1}）
Web.QuoteScreen.HasOverridesWarning = 警告。此报价有一些成本被覆盖。
Web.RateRoutineConstantPopup.Value = 价值
Web.Rating = 保费计算
Web.Rating.CP.CoverageWrapper = 企业财产险承保范围包装器
Web.Rating.CalcRoutines.PartialWSData = 费率例程{0}的部分工作表
Web.Rating.CalcRoutines.RatingFailed = 保费计算失败。原因：{0}
Web.Rating.CovTermOptionValueProvider.CovTermOption = CovTermOption
Web.Rating.CoverageValueProvider.DisplayLabel = {0} - {1}
Web.Rating.CoverageValueProvider.WrapperPatternCode = {0}.PatternCode
Web.Rating.Errors.AddingDuplicateCalcRoutines = 不允许存在多个代码为{0}的费率例程。
Web.Rating.Errors.ArgumentSourceNotReachable = 费率表“{0}”具有不可访问的实际参数源“{1}”
Web.Rating.Errors.BookActivatedInFuture = 费率手册“{0}”有未来的激活日期
Web.Rating.Errors.BookAlreadyExists = 费率手册“{0}”已存在
Web.Rating.Errors.BookContainsEmptyTable = 费率手册{0}为非草案，包含的费率表{1}没有行或引用不存在的表格
Web.Rating.Errors.BookWithPublicIdExists = 费率手册“{0}”与现有费率手册{1}的公共ID相同
Web.Rating.Errors.CanNotDeleteAllArgSourceSets = 无法删除所有实际参数源集。
Web.Rating.Errors.CanNotWriteAdjRate = 如果成本数据可覆盖，则无法多次写入AdjustedRate成本数据
Web.Rating.Errors.CanNotWriteAmountCostData = 如果成本数据可覆盖，则无法多次写入金额成本数据
Web.Rating.Errors.CanNotWriteBase = 如果成本数据可覆盖，则无法多次写入基本费率成本数据
Web.Rating.Errors.CanNotWriteTermAmount = 如果成本数据可覆盖，则无法多次写入期限金额成本数据
Web.Rating.Errors.CannotDeleteRateBookLockedForExport = 导出过程中无法删除费率手册。
Web.Rating.Errors.CannotUpdateRateBookLockedForExport = 导出过程中无法更新费率手册。
Web.Rating.Errors.CellErrorMessage = {0} （列： {1}）
Web.Rating.Errors.CellErrorMessageWithNote = {0} （列“{1}”）： {2}
Web.Rating.Errors.ConflictingTableDefinition = 费率手册中包含的费率表定义“{0}”与现有费率表定义冲突。
Web.Rating.Errors.CustomEntityDoesNotExist = 表格定义中引用的自定义实体不存在：{0}
Web.Rating.Errors.CustomEntityDoesNotReferenceRateTable = 表定义中引用的自定义实体没有指向费率表的外键：{0}
Web.Rating.Errors.DatabaseQueryWithDefaultRow = 费率表{0}使用具有默认行实体{1}的数据库查询策略。如果您需要数据库策略，请使用自定义的索引行。
Web.Rating.Errors.DatabaseQueryWithPartialIndex = 费率表{0}使用具有索引形式参数的数据库查询策略，但不对因子编制索引。
Web.Rating.Errors.DatabaseQueryWithUnindexedRow = 费率表{0}使用数据库查询策略，但没有正确编制索引。
Web.Rating.Errors.DecimalPlacesExceeded = 导入值的小数位数（{0}）超出目标单元格设定的小数位数（小数位数 \= {1}）。已对值进行舍入。
Web.Rating.Errors.DefaultArgumentSourceDefinedButImpossibleToReach = {0}已定义默认实际参数源，但无法从当前形式参数集对其进行访问。必须设置覆盖。
Web.Rating.Errors.DefaultArgumentSourceNotAvailable = {0}未定义默认实际参数源。必须设置覆盖。
Web.Rating.Errors.DuplicateArgSrcSetCode = 每个实际参数源集都必须具有适用于给定费率表定义的唯一代码。
Web.Rating.Errors.ErrorTypeSummary = {0}（总共{1}）
Web.Rating.Errors.FutureRateAsOfDate = 起始日费率必须为目前或过去
Web.Rating.Errors.ImportRateBookFailed = 导入失败：出现意外错误。要查看日志消息，请单击此处。
Web.Rating.Errors.ImportingActiveRateBookWithoutPermission = 权限不足，无法导入活动费率手册{0}
Web.Rating.Errors.ImportingDraftBook = 无法导入费率手册“{0}”，因其为草案状态。
Web.Rating.Errors.InUseParameterCannotBeRemovedFromRTD = 无法删除形式参数 [{0}]。这些形式参数中的一个或多个正在使用。您必须取消所做的更改。
Web.Rating.Errors.IncompatibleExcelFile = 选定文件与“{0}”费率表不兼容
Web.Rating.Errors.InvalidConstantValue = 常量必须为{0}数据类型（针对{1}）
Web.Rating.Errors.InvalidEntity = 下列表定义包含无效的实体名称： {0}
Web.Rating.Errors.InvalidExcelFile = 无效电子表格文件
Web.Rating.Errors.InvalidMatchOpParamType = {0}不是有效的MatchOp形式参数类型
Web.Rating.Errors.InvalidPolicyLine = 当前费率手册与下列费率表定义之间的保单险类不匹配：{0}
Web.Rating.Errors.InvalidRateRoutines = 存在无效费率例程，无法将费率手册移至“阶段”： {0}
Web.Rating.Errors.InvalidRateTables = 存在无效费率定义，无法将费率手册移至“阶段”：{0}
Web.Rating.Errors.InvalidRatingLevel = 用于初始化保费计算插件的费率级别无效：{0}"
Web.Rating.Errors.InvalidRatingLevel.ForProduction = 用于初始化保费计算插件的费率级别无效：{0}。必须在生产模式服务器中将其设置为{1}。”
Web.Rating.Errors.InvalidValueProvider = 无效的值提供者{0}：{1}
Web.Rating.Errors.InvalidValueProviderForColumnType = 列“{0}”的值提供程序不返回任何{1}值。
Web.Rating.Errors.LastSetMustHaveCodeAndName = 不得将剩余实际参数源集的代码或名称留空。
Web.Rating.Errors.MissingCloseParen = 缺少右括号
Web.Rating.Errors.MissingOpenParen = 缺少左括号
Web.Rating.Errors.MultipleRateRoutineVersions = 在费率手册“{0}”中找到多个版本的费率例程“{1}”
Web.Rating.Errors.MustDefineAllFunctionArguments = 必须设置所有函数实际参数。
Web.Rating.Errors.NewMatchOpMustHaveHigherPriorityThanExistingMatchOps = 新形式参数“{0}”的优先级必须高于现有形式参数的优先级，因为费率表定义包含在已升级的费率手册中。
Web.Rating.Errors.NoImportFileFound = 未导入文件。
Web.Rating.Errors.NoParamSetSpecifiedOrParameterRequiresArgumentSourceOverride = 无法找到{0}的有效实际参数源。该费率例程未定义形式参数集，或形式参数需要指定实际参数源。
Web.Rating.Errors.NoTargetTypes = 未找到匹配的费率表。
Web.Rating.Errors.NonDraftBookHasNoTables = 费率手册“{0}”是非草案手册，其中不含费率表
Web.Rating.Errors.OfferingDoesNotExist = 费率手册“{0}”中存在无效保障组合“{1}”。
Web.Rating.Errors.PolicyLineDoesNotExist = 费率手册“{0}”中存在无效保单险类“{1}”
Web.Rating.Errors.PrecisionExceeded = 值的精度{0}超出目标单元格支持的精度（精度 \= {1}）
Web.Rating.Errors.PrecisionExceededAndUnableToRound = 值的精度{0}超出目标单元支持的精度（精度 \= {1}）。无法对值进行舍入，因此不会设置值。
Web.Rating.Errors.PrecisionExceededOnRateTableExport = 导出表失败。列“{0}”：值的精度({1})超出Microsoft Excel支持的精度（最大精度 \= {2}）。
Web.Rating.Errors.RateBookBadStatusTransition = 无法将费率手册状态从{0}转换为{1}。
Web.Rating.Errors.RateBookMissingTableReference = 费率表{0}引用的{1}不在此费率手册中。
Web.Rating.Errors.RateRoutineNoMoreExist = 不再存在版本为{1}的费率例程{0}
Web.Rating.Errors.RateTableColumnReferencesNonExistentField = 费率表定义参考实体{1}中的不存在字段{0}
Web.Rating.Errors.RateTableErrorSummary = 费率表{0}中存在错误。有关更多详细信息，请参阅行错误图标上的悬停文本。
Web.Rating.Errors.RateTableExcelImportDuplicateRateTableCode = 存在多个费率表代码相同的费率表：{0}
Web.Rating.Errors.RateTableExcelImportInvalidSheet = 以下工作表无效，或者引用的费率表在PolicyCenter中不存在：“{0}”。
Web.Rating.Errors.RateTableExcelImportUnresolvedErrors = 费率表导入操作无法继续。请修复错误后重新导入。
Web.Rating.Errors.RateTableExcelImportValidationError = 无法导入以下费率表：{0}。单击“{1}”查看行错误。
Web.Rating.Errors.RateTableMissingFromRateBook = 下列费率表不存在于本手册中：{0}
Web.Rating.Errors.RateTableWithAlteredDefinition = “表{0}包含无效行，因为定义已发生更改”
Web.Rating.Errors.RateTableWithMissingFactors = 费率表{0}无因子
Web.Rating.Errors.ReferenceTableMissing = 无法导入费率手册“{0}”： 费率表“{1}”引用不存在的表格
Web.Rating.Errors.RoutinesChanged = 费率例程删除或更改。 请单击“取消”并重试
Web.Rating.Errors.RowErrorMessage = {0}
Web.Rating.Errors.TableArgumentListMismatch = 实际参数列表{0}与表{1}不兼容
Web.Rating.Errors.TypeListProviderMustHaveArguments = 新形式参数{0}的类型列表值提供程序必须具有实际参数。
Web.Rating.Errors.UnableToFindRateTableWithFactorType = 无法找到任何系数与预期类型{0}匹配的表
Web.Rating.Errors.UnknownValueProvider = 遇到未知的价值提供者： {0}
Web.Rating.Errors.ValueProviderMissingArguments = 没有为形式参数“{0}”指定值提供程序实际参数。
Web.Rating.Export.Code = \ 代码
Web.Rating.Export.DisplayName = \ 显示名称
Web.Rating.Export.DisplayOnly = 仅显示
Web.Rating.Export.DoNotModify = 请勿修改、插入或删除列
Web.Rating.Export.Errors = 导出错误
Web.Rating.Export.RateBookDetail.NoImportDisclaimer = 只有此工作簿中的费率表可以导回到PolicyCenter中。
Web.Rating.Export.RateBookDetailWorksheetName = 费率手册详细信息
Web.Rating.Export.RateTable.Instruction.Line1 = 要导入此费率表，不要删除现有列。
Web.Rating.Export.RateTable.Instruction.Line2 = 您只能在末尾插入列。这些列将在导入过程中被丢弃。
Web.Rating.Export.RateTable.Instruction.Line3 = PolicyCenter将导入费率表数据，这些数据显示在带有“仅显示”注释的列标题的下方。
Web.Rating.Filter.Generic = <适用于全部>
Web.Rating.Filter.MatchAll = <未指定>
Web.Rating.Flow = 费率例程
Web.Rating.Flow.CalcRoutine.Add1 = 添加 1 行
Web.Rating.Flow.CalcRoutine.Add10 = 添加10行
Web.Rating.Flow.CalcRoutine.All = 所有
Web.Rating.Flow.CalcRoutine.Append = 追加
Web.Rating.Flow.CalcRoutine.BlankComment = （空）
Web.Rating.Flow.CalcRoutine.Boolean = 布尔
Web.Rating.Flow.CalcRoutine.ClearMenuItem = 清除
Web.Rating.Flow.CalcRoutine.Collection = {{{0}}
Web.Rating.Flow.CalcRoutine.CollectionSeparator = ,
Web.Rating.Flow.CalcRoutine.ComparisonOperator = 比较
Web.Rating.Flow.CalcRoutine.ConditionalExpressionLabel = {0}
Web.Rating.Flow.CalcRoutine.ConditionalMenuItem = 条件...
Web.Rating.Flow.CalcRoutine.ConstantMenuItem = 常量
Web.Rating.Flow.CalcRoutine.ConstantPopupMenuItem = 常量...
Web.Rating.Flow.CalcRoutine.CoverageFieldNameLabel = {0} ({1})
Web.Rating.Flow.CalcRoutine.DataTypesFilter = 数据类型
Web.Rating.Flow.CalcRoutine.Date = 日期
Web.Rating.Flow.CalcRoutine.DateConstantMenuItem = 日期常量...
Web.Rating.Flow.CalcRoutine.Duplicate = 复制
Web.Rating.Flow.CalcRoutine.EditConditionalOperand = 指定条件表达式
Web.Rating.Flow.CalcRoutine.EditDateConstantOperand = 指定日期常量
Web.Rating.Flow.CalcRoutine.EditEntityOperand = 选择保单数据字段
Web.Rating.Flow.CalcRoutine.EditRateFunctionOperand = 选择函数
Web.Rating.Flow.CalcRoutine.EditRateTableArguments = 实际参数
Web.Rating.Flow.CalcRoutine.EditRateTableOperand = 选择费率表
Web.Rating.Flow.CalcRoutine.EditTypelistConstantOperand = 选择类型列表值
Web.Rating.Flow.CalcRoutine.Entity = 保单数据
Web.Rating.Flow.CalcRoutine.EntityFieldMenuItem = 形式参数
Web.Rating.Flow.CalcRoutine.EntityPopup.FieldName = 字段名称
Web.Rating.Flow.CalcRoutine.EntityPopup.TextFilter = 文本过滤器
Web.Rating.Flow.CalcRoutine.EntityPopup.ThisEntity = （此）
Web.Rating.Flow.CalcRoutine.EntityPopup.Type = 类型
Web.Rating.Flow.CalcRoutine.ErrorCrossRefNum = 错误编号
Web.Rating.Flow.CalcRoutine.ErrorMsgInSection = {0}：{1}（{2}个错误）
Web.Rating.Flow.CalcRoutine.FunctionMenuItem = 函数...
Web.Rating.Flow.CalcRoutine.FunctionPopup.Arguments = 实际参数
Web.Rating.Flow.CalcRoutine.FunctionPopup.ParameterName = 形式参数名称
Web.Rating.Flow.CalcRoutine.FunctionPopup.Returns = 返回
Web.Rating.Flow.CalcRoutine.FunctionPopup.Source = 源/值
Web.Rating.Flow.CalcRoutine.FunctionPopup.Type = 类型
Web.Rating.Flow.CalcRoutine.FunctionPopup.Usage = 使用情况
Web.Rating.Flow.CalcRoutine.Functions = 函数
Web.Rating.Flow.CalcRoutine.InScopeCovTermCodeSuffix = 代码
Web.Rating.Flow.CalcRoutine.InScopeCovTermFieldNameLabel = {1} [险别条款]
Web.Rating.Flow.CalcRoutine.InScopeCovTermMenuLabel = {0}.{1} [险别条款]
Web.Rating.Flow.CalcRoutine.InScopeCovTermNumericFieldNameLabel = {1} [值]
Web.Rating.Flow.CalcRoutine.InScopeCovTermNumericValueMenuLabel = {0}.{1} [值]
Web.Rating.Flow.CalcRoutine.InScopeCovTermOperandLabel = {0}.{1} [险别条款]
Web.Rating.Flow.CalcRoutine.InScopeCovTermValueSuffix = 值
Web.Rating.Flow.CalcRoutine.InScopeOperandLabel = {0}
Web.Rating.Flow.CalcRoutine.IndentationLevelFive =              {0}
Web.Rating.Flow.CalcRoutine.IndentationLevelFour =            {0}
Web.Rating.Flow.CalcRoutine.IndentationLevelOne =    {0}
Web.Rating.Flow.CalcRoutine.IndentationLevelThree =          {0}
Web.Rating.Flow.CalcRoutine.IndentationLevelTwo =       {0}
Web.Rating.Flow.CalcRoutine.IndexAllSteps = 全部显示（{0}步）
Web.Rating.Flow.CalcRoutine.IndexFirstSection = （第一部分）
Web.Rating.Flow.CalcRoutine.Insert = 插入
Web.Rating.Flow.CalcRoutine.Insert10After = 在以下位置之后插入10行
Web.Rating.Flow.CalcRoutine.Insert10Before = 在以下位置之前插入10行
Web.Rating.Flow.CalcRoutine.InsertAfter = 在以下位置之后插入
Web.Rating.Flow.CalcRoutine.InsertBefore = 在以下位置之前插入
Web.Rating.Flow.CalcRoutine.Instruction = 说明
Web.Rating.Flow.CalcRoutine.LineNumber = #
Web.Rating.Flow.CalcRoutine.LogicalNot = NOT
Web.Rating.Flow.CalcRoutine.LoopVarOperand.Reference.Label = {0}.{1}
Web.Rating.Flow.CalcRoutine.MissingRateFunctionLabel = <无法找到费率函数{0}>
Web.Rating.Flow.CalcRoutine.ModifierFilter = 显示
Web.Rating.Flow.CalcRoutine.Modifiers = 调整系数
Web.Rating.Flow.CalcRoutine.MsgInSection = {0}\: {1}
Web.Rating.Flow.CalcRoutine.NewVariable = 新建变量
Web.Rating.Flow.CalcRoutine.NewVariableHelpText = 变量名称不能为空; 只能包含字母、数字和下划线; 无法使用已定义的变量名称; 变量名称必须以字母开头。
Web.Rating.Flow.CalcRoutine.NewVariableMenuLabel = 新建变量...
Web.Rating.Flow.CalcRoutine.Notes = 行注释
Web.Rating.Flow.CalcRoutine.Null = “（空）”
Web.Rating.Flow.CalcRoutine.Number = 数字
Web.Rating.Flow.CalcRoutine.OnlyLeftParenthesisHere = 此处只能指定一个或多个“（”
Web.Rating.Flow.CalcRoutine.OnlyRightParenthesisHere = 此处只能指定一个或多个“）”
Web.Rating.Flow.CalcRoutine.Operand = 运算
Web.Rating.Flow.CalcRoutine.Operator = 运算符
Web.Rating.Flow.CalcRoutine.Parameter = 形式参数
Web.Rating.Flow.CalcRoutine.ParameterDefaultSource = 默认源
Web.Rating.Flow.CalcRoutine.ParameterSetDeletedAlert = “{0}”形式参数集已删除。您可以复制此费率例程并选择另一个。
Web.Rating.Flow.CalcRoutine.RateConstantLabel = {0}
Web.Rating.Flow.CalcRoutine.RateFunctionLabel = {0}({1})
Web.Rating.Flow.CalcRoutine.RateTable = 费率表
Web.Rating.Flow.CalcRoutine.RateTableArgumentSourceSet = 实际参数源集
Web.Rating.Flow.CalcRoutine.RateTableMenuItem = 费率表...
Web.Rating.Flow.CalcRoutine.RateTableReturnAllFactorsLabel = [所有]
Web.Rating.Flow.CalcRoutine.RateTableReturnValue = 返回值
Web.Rating.Flow.CalcRoutine.RemoveRow = 移除行
Web.Rating.Flow.CalcRoutine.RemoveRowConfirmation = 是否要移除选中的行？
Web.Rating.Flow.CalcRoutine.Save = 应用
Web.Rating.Flow.CalcRoutine.Steps = 步骤
Web.Rating.Flow.CalcRoutine.StepsRange = 查看步骤{0} - {1}：{2}
Web.Rating.Flow.CalcRoutine.String = 字符串
Web.Rating.Flow.CalcRoutine.SubstituteSourceValue = 新建实际参数源/值
Web.Rating.Flow.CalcRoutine.TypelistConstantPopup.TypelistLabel = 类型列表
Web.Rating.Flow.CalcRoutine.TypelistConstantPopup.ValueLabel = 值
Web.Rating.Flow.CalcRoutine.TypelistMenuItem = 类型列表值
Web.Rating.Flow.CalcRoutine.TypelistPopupMenuItem = 类型列表值...
Web.Rating.Flow.CalcRoutine.Usage = 使用情况
Web.Rating.Flow.CalcRoutine.Usage.Argument = 实际参数源
Web.Rating.Flow.CalcRoutine.Usage.ConditionalOperand = 条件运算
Web.Rating.Flow.CalcRoutine.Usage.Operand = 操作数
Web.Rating.Flow.CalcRoutine.Validate = 校验
Web.Rating.Flow.CalcRoutine.ValidateAll = 全部校验
Web.Rating.Flow.CalcRoutine.VariableMenuLabel = 变量
Web.Rating.Flow.CalcRoutine.View = 查看
Web.Rating.Flow.CalcRoutine.ViewDisabledHelp = 当具有待更改时，您无法更改视图。必须首先更新或取消。
Web.Rating.Flow.CalcRoutine.ViewEnabledHelp = 选择此大型费率例程的一部分。
Web.Rating.Flow.CalculationStep.EmptyResult = 无法生成报价，因为在费率表“{0}”上查找实际参数（{1}）失败
Web.Rating.Flow.NoUsages = 未找到与形式参数类型相匹配的变量。
Web.Rating.Flow.RateTableLabel = 表： {0}{1}{2}
Web.Rating.Flow.RoundingScaleLabel = {0}
Web.Rating.Flow.UnspecifiedTable = 未指定费率表
Web.Rating.HOP.CoverageWrapper = 家庭财产险承保范围包装器
Web.Rating.HOP.Validation.UnsupportedModifierType = 不支持的调整系数类型：“{0}”
Web.Rating.ImpactTesting.AddToSelectedRateBooks = 添加到影响测试
Web.Rating.ImpactTesting.BatchJobAlreadyRunning = {0}作业已经在运行。请稍等，待批处理作业终止后再重试。
Web.Rating.ImpactTesting.CancelJob = 取消导出
Web.Rating.ImpactTesting.ChoosePolicies = 选择保单
Web.Rating.ImpactTesting.ContinueQuoteTestPeriods = 继续中断的测试周期报价
Web.Rating.ImpactTesting.ContinueWithInterruptedTestCase = 单击“继续中断的基线创建”，可以重新启动基线创建。
Web.Rating.ImpactTesting.CreateBaseline = 创建基线
Web.Rating.ImpactTesting.CreateBaselineLabel = 单击“新建基线”使用当前费率手册生成一组新的基线期。
Web.Rating.ImpactTesting.DownloadResults = 下载Excel导出文件
Web.Rating.ImpactTesting.Export.FilterShowAll = 所有
Web.Rating.ImpactTesting.Export.FilterShowFailed = 失败
Web.Rating.ImpactTesting.Export.FilterShowSucceeded = 成功
Web.Rating.ImpactTesting.Export.PeriodListFilter = 显示
Web.Rating.ImpactTesting.ImpactTestResultDateTimeStamp = 结果存储时间
Web.Rating.ImpactTesting.ImpactTestingWizard = 影响测试
Web.Rating.ImpactTesting.NotRatedBaselinePeriod = 基线期未计算保费
Web.Rating.ImpactTesting.NotRatedTestPeriod = 测试期间未计算保费
Web.Rating.ImpactTesting.PeriodList.BaselinePeriod = 基线期
Web.Rating.ImpactTesting.PeriodList.OrigPeriodEffective = 生效日期
Web.Rating.ImpactTesting.PeriodList.OrigPeriodExpiration = 到期日期
Web.Rating.ImpactTesting.PeriodList.OrigPeriodJurisdiction = 管辖权
Web.Rating.ImpactTesting.PeriodList.OrigPeriodPolicyNumber = 保单号
Web.Rating.ImpactTesting.PeriodList.OrigPeriodProducer = 经理人
Web.Rating.ImpactTesting.PeriodList.OrigPeriodProduct = 险类
Web.Rating.ImpactTesting.PeriodList.OrigPeriodTerm = 附加责任
Web.Rating.ImpactTesting.PeriodList.TestPeriod = 测试周期
Web.Rating.ImpactTesting.PeriodPrepErrorPopup.AlertMessage = 处理影响测试保单期间时出错： {0}
Web.Rating.ImpactTesting.PeriodPrepErrorPopup.Title = 影响测试保单期间
Web.Rating.ImpactTesting.PeriodSummary.AccountNumber = 账号
Web.Rating.ImpactTesting.PeriodSummary.BaselineJob = 基线
Web.Rating.ImpactTesting.PeriodSummary.BaselineOverview = 基线概述
Web.Rating.ImpactTesting.PeriodSummary.ExitingImpactTestingWizardConfirmationMsg = 您将退出影响测试向导。要返回到当前屏幕，您需要重新进入影响测试向导。是否仍要继续？
Web.Rating.ImpactTesting.PeriodSummary.ImpactPeriods = 影响期间
Web.Rating.ImpactTesting.PeriodSummary.OriginalPeriod = 原始期间
Web.Rating.ImpactTesting.PeriodSummary.PolicyNumber = 保单号
Web.Rating.ImpactTesting.PeriodSummary.Producer = 经理人
Web.Rating.ImpactTesting.PeriodSummary.Product = 产品
Web.Rating.ImpactTesting.PeriodSummary.TermNumber = 附加责任
Web.Rating.ImpactTesting.PeriodSummary.TestPeriodJob = 测试
Web.Rating.ImpactTesting.PeriodSummary.TestPeriodOverview = 测试周期概述
Web.Rating.ImpactTesting.PeriodSummary.TestPrep = 创建基线作业
Web.Rating.ImpactTesting.PeriodSummary.TestPrepError = 消息
Web.Rating.ImpactTesting.PeriodSummary.TestPrepProgress = 进度
Web.Rating.ImpactTesting.PeriodSummary.TestPrepResult = 结果
Web.Rating.ImpactTesting.PeriodSummary.TestRun = 报价测试周期作业
Web.Rating.ImpactTesting.PeriodSummaryPopup.Title = 影响测试保单期间概述
Web.Rating.ImpactTesting.Plugin.BaselinePeriod = 基线
Web.Rating.ImpactTesting.Plugin.TestPeriod = 测试
Web.Rating.ImpactTesting.Prepare.CancelJob = 取消作业
Web.Rating.ImpactTesting.Prepare.CompletedLabel = 已完成{0}/{1}，失败{2}次。
Web.Rating.ImpactTesting.Prepare.ErrorHoverText = {0}\: 单击查看更多信息。
Web.Rating.ImpactTesting.Prepare.ExecuteJob = 新建基线
Web.Rating.ImpactTesting.Prepare.ExportJobRunning = 导出作业正在运行时，无法报价测试周期
Web.Rating.ImpactTesting.Prepare.ExportResults = 表
Web.Rating.ImpactTesting.Prepare.ExportToExcel = 创建Excel导出文件
Web.Rating.ImpactTesting.Prepare.FilterLabel = 显示
Web.Rating.ImpactTesting.Prepare.FilterShowAll = 所有
Web.Rating.ImpactTesting.Prepare.FilterShowFailed = 失败
Web.Rating.ImpactTesting.Prepare.FilterShowSucceeded = 成功
Web.Rating.ImpactTesting.Prepare.FinancialImpactTitle = 财务影响
Web.Rating.ImpactTesting.Prepare.ImpactTestingResults = 图
Web.Rating.ImpactTesting.Prepare.NoValidDataPointsToGraph = 图中没有可用的有效数据点
Web.Rating.ImpactTesting.Prepare.NumberOfPolicies = 保单数
Web.Rating.ImpactTesting.Prepare.PoliciesAffectedTitle = 受影响的保单
Web.Rating.ImpactTesting.Prepare.ProcessingExportFile = 正在处理Excel导出文件
Web.Rating.ImpactTesting.Prepare.ProgressBarStatus = 已处理{0}/{1}，失败{2}次。
Web.Rating.ImpactTesting.Prepare.ReExecuteJob = 重新创建基线
Web.Rating.ImpactTesting.Prepare.ReExecuteJobConfirm = 警告\:系统将重新创建所有基线期，可能需要很长时间。如果想继续，请单击"确定"。
Web.Rating.ImpactTesting.Prepare.RecoverJob = 重新处理失败
Web.Rating.ImpactTesting.Prepare.RecoverJobConfirm = 此操作将仅重新处理失败的基线期。按“确定”继续
Web.Rating.ImpactTesting.Prepare.SelectedRateBookLabel = {0} ({1})
Web.Rating.ImpactTesting.Prepare.SelectedRateBooks = 选定的费率手册
Web.Rating.ImpactTesting.QuoteTestCase.Cancel = 取消测试周期的报价
Web.Rating.ImpactTesting.QuoteTestCase.TestQuoteComplete = {0}个测试期间(共{1}个)已完成报价，出现{2}个错误。
Web.Rating.ImpactTesting.QuoteTestPeriods = 测试周期报价
Web.Rating.ImpactTesting.QuoteTestPeriodsLabel = 单击“测试周期报价”，对带有当前费率手册集的测试周期进行报价。每个保单最多花费5秒。
Web.Rating.ImpactTesting.RemoveFromSelectedRateBooks = 移除
Web.Rating.ImpactTesting.RequoteTestPeriods = 重新报价测试周期
Web.Rating.ImpactTesting.Results = 影响结果
Web.Rating.ImpactTesting.Results.CountHeader = #
Web.Rating.ImpactTesting.Results.CountToolTip = 相关类别中所含的结果数。
Web.Rating.ImpactTesting.Results.CurrencyDifferentialHeader = 成本差别
Web.Rating.ImpactTesting.Results.CurrencyDifferentialToolTip = 相关类别中所有保费金额的差额合计。不包括税收、费用和额外费用。
Web.Rating.ImpactTesting.Results.NumberOfPolicies = 保单数
Web.Rating.ImpactTesting.Results.PercentOfTotalToolTip = 占相关类别数据点总数的百分比。
Web.Rating.ImpactTesting.Results.RangeHeader = 范围
Web.Rating.ImpactTesting.Results.RangeToolTip = 类别标签。
Web.Rating.ImpactTesting.Results.TermAmountRanges = <----- (-) 百分比更改 (+) ----->
Web.Rating.ImpactTesting.Results.Total = 总计：
Web.Rating.ImpactTesting.Results.TotalAmountOfDifference = 期限金额({0})的总差额
Web.Rating.ImpactTesting.Search.AddJurisdiction = 添加
Web.Rating.ImpactTesting.Search.AddProducerCode = 添加
Web.Rating.ImpactTesting.Search.AddProduct = 添加
Web.Rating.ImpactTesting.Search.Back = < 上一步
Web.Rating.ImpactTesting.Search.BaselinesConfirmationMessage = 正在创建基线期。完成后，将显示基线期。
Web.Rating.ImpactTesting.Search.CriteriaOutOfDate = 自上次搜索后搜索条件已更改。
Web.Rating.ImpactTesting.Search.EffectiveDateMax = 早于
Web.Rating.ImpactTesting.Search.EffectiveDateMin = 等于或晚于
Web.Rating.ImpactTesting.Search.EffectiveDateRange = 生效日期
Web.Rating.ImpactTesting.Search.ExpirationDateMax = 早于
Web.Rating.ImpactTesting.Search.ExpirationDateMin = 等于或晚于
Web.Rating.ImpactTesting.Search.ExpirationDateRange = 到期日期
Web.Rating.ImpactTesting.Search.ExportJobRunning = 导出作业正在运行时，无法继续处理搜索结果
Web.Rating.ImpactTesting.Search.InForceOnDate = 具体生效日期
Web.Rating.ImpactTesting.Search.Jurisdictions = 管辖权
Web.Rating.ImpactTesting.Search.Next = 下一步>
Web.Rating.ImpactTesting.Search.NextWithPreviousTestCase = 打开上一个测试案例 >
Web.Rating.ImpactTesting.Search.NextWithSearchResults = 继续处理搜索结果>
Web.Rating.ImpactTesting.Search.Periods = 影响测试周期
Web.Rating.ImpactTesting.Search.PostalCodeMax = 最大
Web.Rating.ImpactTesting.Search.PostalCodeMin = 最小
Web.Rating.ImpactTesting.Search.PostalCodes = 邮政编码
Web.Rating.ImpactTesting.Search.PostalCodesHelp = 逗号分隔的邮政编码列表：如 94033, 94012, 94070, 94404
Web.Rating.ImpactTesting.Search.ProducerCodes = 经理人代码
Web.Rating.ImpactTesting.Search.Product = 产品
Web.Rating.ImpactTesting.Search.Range = 范围
Web.Rating.ImpactTesting.Search.RemoveJurisdictions = 移除
Web.Rating.ImpactTesting.Search.RemoveProducerCodes = 移除
Web.Rating.ImpactTesting.Search.RemoveProducts = 移除
Web.Rating.ImpactTesting.Search.Result.EffectiveDate = 生效日期
Web.Rating.ImpactTesting.Search.Result.ExpirationDate = 到期日期
Web.Rating.ImpactTesting.Search.Result.Jurisdiction = 管辖权
Web.Rating.ImpactTesting.Search.Result.PolicyNumber = 保单号
Web.Rating.ImpactTesting.Search.Result.PolicyTerm = 期限
Web.Rating.ImpactTesting.Search.Result.PostalCode = 邮政编码
Web.Rating.ImpactTesting.Search.Result.ProducerCode = 经理人代码
Web.Rating.ImpactTesting.Search.Result.Product = 产品
Web.Rating.ImpactTesting.Search.SpecifyCodes = 指定代码
Web.Rating.ImpactTesting.Search.TestQuoteConfirmationMessage = 正在创建测试报价。完成后，单击“下一步”查看结果。
Web.Rating.ImpactTesting.Search.UseStartsWith = 搜索以此内容开头的信息
Web.Rating.ImpactTesting.Search.UseStartsWithHelp = 查找以上述值开头的邮政编码。
Web.Rating.ImpactTesting.Search.WarningToOverrideTestCase = 搜索结果中的保单将成为新的测试案例，因此，将覆盖现有测试案例。单击“确定”继续，或单击“取消”返回到“搜索”屏幕。
Web.Rating.ImpactTesting.SelectRateBook = 选择费率手册
Web.Rating.ImpactTesting.TestingPeriods = 测试周期
Web.Rating.ImpactTesting.WizardLabel = 影响测试
Web.Rating.Import.Add = 将导入新的费率表
Web.Rating.Import.Cancel = 取消
Web.Rating.Import.ChangedRateBook = 单击“更新”提交第一次导入并更新费率手册更改。单击“取消”取消导入和费率手册更改。
Web.Rating.Import.ChangedRateTable = 将导入对此费率表所做的修改
Web.Rating.Import.Confirmation = 是否确定要导入此费率手册？
Web.Rating.Import.Import = 导入
Web.Rating.Import.MissingPath = 导入文件路径为必填
Web.Rating.Import.OK = 确定
Web.Rating.Import.RateBookAlreadyExists = 正在导入的费率手册已存在
Web.Rating.Import.Scan.Summary = Excel导入操作将添加{0}个表并覆盖{1}个表。Excel导入操作将在更新时验证{2}个大型费率表。如果不想这样做，请取消编辑。（将不会导入费率例程）
Web.Rating.Import.Title = 从电子表格导入表格
Web.Rating.Import.TooLarge = 在导入前，不会校验大型表或检查其是否有更改，因此状态未知。当您单击更新时，将校验此表，如果该表发生更改，会将其包含在导入之中。
Web.Rating.Matchop.ExactMatch = 完全匹配
Web.Rating.Matchop.GreaterThan = 大于
Web.Rating.Matchop.GreaterThanOrEqual = 大于或等于（已不建议使用）
Web.Rating.Matchop.GreaterThanOrEqualV2 = 大于或等于（新）
Web.Rating.Matchop.Interpolate = 内插
Web.Rating.Matchop.InterpolateWithRelax = 内插-带近似
Web.Rating.Matchop.LessThan = 小于
Web.Rating.Matchop.LessThanOrEqual = 小于或等于（已不建议使用）
Web.Rating.Matchop.LessThanOrEqualV2 = 小于或等于（新）
Web.Rating.Matchop.LongestSubstringMatch = 最长子字符串匹配
Web.Rating.Matchop.RangeMatchMaxExcl = 范围匹配（排除最大值）
Web.Rating.Matchop.RangeMatchMaxIncl = 范围匹配（包括最大值）
Web.Rating.Parameter.CoveragePattern.HelpText = 在险种形式参数集中搜索承保范围模式。如果未选择险种，则无法使用此控件。
Web.Rating.Parameter.Delimiter = ,
Web.Rating.Parameter.Name = 名称
Web.Rating.Parameter.ParamType = 类型
Web.Rating.Parameter.RemoveLabel = 删除
Web.Rating.Parameter.Search.CoverageWrapperSearch = 承保范围包装器搜索
Web.Rating.Parameter.Search.WrapperName = 包装器名称
Web.Rating.Parameter.Search.WrapperType = 包装器类型
Web.Rating.Parameter.UseWrapper = 使用包装器
Web.Rating.Parameter.WrapperOrCovCode = 包装器/承保范围
Web.Rating.Parameter.Writable = 是否可写？
Web.Rating.ParameterSet.Code = 代码
Web.Rating.ParameterSet.Name = 名称
Web.Rating.ParameterSet.Parameters = 形式参数
Web.Rating.ParameterSet.RemoveLabel = 删除
Web.Rating.ParameterSets = 形式参数集
Web.Rating.ParameterSets.CPCoverageWrapper = 商业财产险 - 具有包装的承保范围的承保范围形式参数集
Web.Rating.ParameterSets.CPCoverageWrapperDTO = 企业财产险 - 具有包装的承保范围DTO的承保范围形式参数集
Web.Rating.ParameterSets.CPStateTax = 企业财产险所属省/直辖市税务参数集
Web.Rating.ParameterSets.HOPAllPerilsDeductParamSet = HOP险类所有危险事故免赔额形式参数集
Web.Rating.ParameterSets.HOPBasePremiumParamSet = HOP基本保费形式参数集
Web.Rating.ParameterSets.HOPCoverageWrapper = 具有包装的承保范围的HOP承保范围参数集
Web.Rating.ParameterSets.HOPModifierPremiumParamSet = HOP调整系数保费形式参数集
Web.Rating.ParameterSets.IncludeCost = 包括成本
Web.Rating.ParameterSets.PACancellationShortPenaltyParamSet = 私家车短期费率取消罚款参数集
Web.Rating.ParameterSets.PACoverage = 私家车承保范围参数集
Web.Rating.ParameterSets.PADriverAssignment = 私家车司机分配参数集
Web.Rating.ParameterSets.PAStateTax = 私家车所属省/直辖市税务参数集
Web.Rating.ParameterSets.PAVehicleCoverage = 私家车车辆承保范围参数集
Web.Rating.ParameterSets.PIPNJ = 人身伤害保障 - 新泽西参数集
Web.Rating.ParameterSets.PolicyLine = 保单险类
Web.Rating.ParameterSets.PolicyLineSetting = 保费计算形式参数屏幕保单险类设置
Web.Rating.ParameterSets.StateTax = 所属省/直辖市税务形式参数集
Web.Rating.ParameterSets.Title = 形式参数集
Web.Rating.RateBook.HOPRTMDemoRateBookName = HOP RTM演示保费计算
Web.Rating.RateBooks = 费率手册
Web.Rating.RateBooks.ActivationDate = 激活日期
Web.Rating.RateBooks.Activity = 活动
Web.Rating.RateBooks.AddToRatebookButton = 添加到费率手册
Web.Rating.RateBooks.ApproveButton = 批准费率手册
Web.Rating.RateBooks.AvailableActiveRateBooks = 可用的活动费率手册
Web.Rating.RateBooks.AvailableCalcRoutinesTitle = 可用费率例程
Web.Rating.RateBooks.AvailableStageApprovedRateBooks = 可用阶段或批准的费率手册
Web.Rating.RateBooks.BeforeMustBeLaterThanOnOrAfter = 必须晚于“{0}”
Web.Rating.RateBooks.BookGroup = 组
Web.Rating.RateBooks.CalcRoutineCode = 代码
Web.Rating.RateBooks.CalcRoutineJurisdiction = 管辖权
Web.Rating.RateBooks.CalcRoutineVersion = 版本
Web.Rating.RateBooks.CalcRoutines = 费率例程
Web.Rating.RateBooks.CancelRatingJarGeneration = 取消生成
Web.Rating.RateBooks.CanceledRatingJarGeneration = JAR生成先前已取消
Web.Rating.RateBooks.CascadedLookup = 级联查找
Web.Rating.RateBooks.CascadedLookup.Boolean.False = 否
Web.Rating.RateBooks.CascadedLookup.Boolean.True = 是
Web.Rating.RateBooks.Code = 代码
Web.Rating.RateBooks.ContainsReferences = 包含引用
Web.Rating.RateBooks.DateIsNotEarlierThanBefore = 必须出现在“{0}”之前
Web.Rating.RateBooks.DeleteButton = 删除
Web.Rating.RateBooks.DeleteButtonConfirmation = 是否删除所有选定的费率手册？
Web.Rating.RateBooks.DeleteConfirmation = 是否确定要删除此费率手册？
Web.Rating.RateBooks.Description = 说明
Web.Rating.RateBooks.DetailRateBookTitle = 费率手册详细信息
Web.Rating.RateBooks.Download = 下载
Web.Rating.RateBooks.DownloadRatingJar = 下载JAR文件
Web.Rating.RateBooks.DownloadSpreadsheet = 下载电子表格
Web.Rating.RateBooks.DownloadXML = 下载XML
Web.Rating.RateBooks.EditButton = 编辑
Web.Rating.RateBooks.EditRateBookTitle = 编辑费率手册
Web.Rating.RateBooks.Edition = 版本
Web.Rating.RateBooks.EffectiveDate = 保单生效或承保范围参考日期
Web.Rating.RateBooks.EffectiveDate.After = 等于或晚于
Web.Rating.RateBooks.EffectiveDate.AsOf = 自
Web.Rating.RateBooks.EffectiveDate.LaterThan = 晚于
Web.Rating.RateBooks.EntityName = 代码：{0}，版本：{1}
Web.Rating.RateBooks.Errors.DeleteValidation.CanOnlyDeleteDraftBooks = 无法删除非草案费率手册。
Web.Rating.RateBooks.Errors.DeleteValidation.CannotDeleteBooksLockedForExport = 导出费率手册时无法删除它们。
Web.Rating.RateBooks.Errors.MergeValidation.MustBeSamePolicyLine = 选定的费率手册具有不同的保单险类。要进行合并，这两个费率手册必须具有相同的保单险类。
Web.Rating.RateBooks.Errors.MergeValidation.MustSelectTwoRateBooks = 选定的费率手册数量不正确。只能合并两个费率手册。
Web.Rating.RateBooks.ExcelExportResultDateTimeStamp = 电子表格上次导出时间
Web.Rating.RateBooks.ExitButton = 返回
Web.Rating.RateBooks.Export = 导出
Web.Rating.RateBooks.ExportInProgress = 导出正在进行中
Web.Rating.RateBooks.ExportToSpreadsheet = 导出到电子表格
Web.Rating.RateBooks.ExportToSpreadsheetFailed = 导出到电子表格失败，请刷新页面并重试。
Web.Rating.RateBooks.ExportToXML = 导出到XML
Web.Rating.RateBooks.ExportToXMLFailed = 导出到XML失败，请刷新页面并重试。
Web.Rating.RateBooks.FailedExcelExportResultDateTimeStamp = 上次导出到电子表格失败
Web.Rating.RateBooks.FailedXMLExportResultDateTimeStamp = 上次导出到XML失败
Web.Rating.RateBooks.GenerateRatingJar = 生成JAR文件
Web.Rating.RateBooks.ImportBook = 从XML导入
Web.Rating.RateBooks.ImportRateBookButton = 从XML导入
Web.Rating.RateBooks.Jurisdiction = 管辖权
Web.Rating.RateBooks.L10nDV.Description = 说明
Web.Rating.RateBooks.L10nDV.Name = 全名
Web.Rating.RateBooks.LastStatusChangeDate = 上次状态更改日期
Web.Rating.RateBooks.LastUpdateTime = 上次更新时间
Web.Rating.RateBooks.LastUpdatedBy = 上次更新人员
Web.Rating.RateBooks.Locale = 区域设置
Web.Rating.RateBooks.Merge.AllRows = 所有
Web.Rating.RateBooks.Merge.CodeAndEdition = {0} ({1})
Web.Rating.RateBooks.Merge.CompleteMerge = 完成合并
Web.Rating.RateBooks.Merge.EffectiveDate.After = 　　　　 等于或晚于
Web.Rating.RateBooks.Merge.EffectiveDate.Before = 　　　　 早于
Web.Rating.RateBooks.Merge.Errors.DuplicateCodeEdition = 标识符不唯一。此标识符的代码和版本分别为{0}和{1}，它与某个现有费率手册的标识符相同。
Web.Rating.RateBooks.Merge.First = 首页
Web.Rating.RateBooks.Merge.FirstRateBook = 仅存在于第一个费率手册中。
Web.Rating.RateBooks.Merge.FirstRateBookModified = 合并冲突。公共父级中第一个费率手册中的费率表已进行修改。
Web.Rating.RateBooks.Merge.Generic = 通用
Web.Rating.RateBooks.Merge.Identical = 在这两个费用手册中相同。
Web.Rating.RateBooks.Merge.Instructions = 提供已合并的费用手册的版本。检查结果列并使用单选按钮为已合并的费率手册选择值。
Web.Rating.RateBooks.Merge.MergeInstructions = 合并冲突。
Web.Rating.RateBooks.Merge.None = 无
Web.Rating.RateBooks.Merge.OnlyInBook1OptionLabel = {0}　|　--
Web.Rating.RateBooks.Merge.OnlyInBook2OptionLabel = --　|　{0}
Web.Rating.RateBooks.Merge.Properties = 属性
Web.Rating.RateBooks.Merge.PropertyHeader = ○ {0}({1}) 　　　　 ○ {2} ({3})
Web.Rating.RateBooks.Merge.RateBookMerge = 合并费率手册：解决冲突
Web.Rating.RateBooks.Merge.Result = 结果
Web.Rating.RateBooks.Merge.Second = 第二个
Web.Rating.RateBooks.Merge.SecondRateBook = 仅存在于第二个费率手册中。
Web.Rating.RateBooks.Merge.SecondRateBookModified = 合并冲突。公共父级中第二个费率手册中的费率表已进行修改。
Web.Rating.RateBooks.Merge.Show = 显示
Web.Rating.RateBooks.Merge.ShowConflicts = 显示冲突
Web.Rating.RateBooks.MergeButton = 合并
Web.Rating.RateBooks.MoveToProductionButton = 激活费率手册
Web.Rating.RateBooks.MoveToProductionConfirmation = 是否确定要将此费率手册设为活动并投入生产环节？
Web.Rating.RateBooks.Name = 全名
Web.Rating.RateBooks.NewEdition = 创建新版本
Web.Rating.RateBooks.NewRateBookTitle = 新建费率手册
Web.Rating.RateBooks.NewRatebookButton = 新建费率手册
Web.Rating.RateBooks.NoExportedExcelDataFound = 未找到导出的Excel数据，请重新导出
Web.Rating.RateBooks.Offering = 保障组合
Web.Rating.RateBooks.PendingImport = 等待导入
Web.Rating.RateBooks.PolicyCenterVersion = PolicyCenter版本
Web.Rating.RateBooks.PolicyCriteriaTitle = 保单条件
Web.Rating.RateBooks.PolicyLine = 保单险类
Web.Rating.RateBooks.ProcessingExportToSpreadsheet = 导出到电子表格：已处理{0}项，共{1}项
Web.Rating.RateBooks.ProcessingExportToXML = 导出到XML：已处理{0}项，共{1}项
Web.Rating.RateBooks.PromoteToStageButton = 提升到演示
Web.Rating.RateBooks.RateTables = 费率表
Web.Rating.RateBooks.Ratebook = 在费率手册中
Web.Rating.RateBooks.RatingJarGenerationInitializing = 正在初始化...
Web.Rating.RateBooks.RatingJarGenerationProgress = {0}/{1}个例程
Web.Rating.RateBooks.RatingJarMissing = 访问先前生成的费率例程JAR时出错：“{0}”。请重新生成JAR。
Web.Rating.RateBooks.RatingJarNotAvailable = 没有费率例程JAR可下载。请先生成JAR。
Web.Rating.RateBooks.RatingJarProgressLabel = JAR生成完成后，请下载该文件并部署到服务器中。生成开始时间为
Web.Rating.RateBooks.RatingJarTooOld = JAR太旧。生成可能已取消。JAR的上次更新时间为
Web.Rating.RateBooks.RemoveFromRateBookButton = 移除
Web.Rating.RateBooks.RemoveFromRateBookTooltip = 从费率手册中移除
Web.Rating.RateBooks.RenewalEffectiveDate = 续保生效日期
Web.Rating.RateBooks.RenewalEffectiveDate.After = 等于或晚于
Web.Rating.RateBooks.RenewalEffectiveDate.Before = 早于
Web.Rating.RateBooks.RenewalEffectiveDate.BeforeHelp = 日期将自动设置为其它保单交易的生效截止日期
Web.Rating.RateBooks.ReturnToDraftButton = 返回到草案
Web.Rating.RateBooks.SelectedRateBooks = 影响测试的费率手册
Web.Rating.RateBooks.SelectedRateRoutinesTitle = 包含的费率例程
Web.Rating.RateBooks.SelectedRateTablesTitle = 包含的费率表
Web.Rating.RateBooks.SelfContained = 独立
Web.Rating.RateBooks.SelfContainedConfirmMessage = 将此费率手册设为独立会复制此手册引用的所有费率表的存储。此操作无法撤消。是否确定要继续？
Web.Rating.RateBooks.Status = 状态
Web.Rating.RateBooks.Storage = 存储
Web.Rating.RateBooks.StorageIconToolTip = 设为独立，以便此费率手册不引用以前的版本
Web.Rating.RateBooks.SuccessfulRatingJarGeneration = JAR生成已成功完成
Web.Rating.RateBooks.SuccessfullyImported = 费率手册已成功导入
Web.Rating.RateBooks.TableName = 全名
Web.Rating.RateBooks.Title = 费率手册
Web.Rating.RateBooks.UWCompany = 核保公司
Web.Rating.RateBooks.XMLExportResultDateTimeStamp = 上次导出的XML
Web.Rating.RateFactors.Boolean.False = 否
Web.Rating.RateFactors.Boolean.True = 是
Web.Rating.RateFactors.NoFactors = 没有为此费率表定义系数。
Web.Rating.RateFactors.RateTableContent = 费率表内容
Web.Rating.RateRoutine.HOPAllPerilsDeductRRName = HOP所有危险事故免赔额保费算法
Web.Rating.RateRoutine.HOPBasePremiumRRName = HOP基本费率保费算法
Web.Rating.RateRoutine.HOPCovCIncreasedLimitRRName = HOP承保范围C增加限额算法
Web.Rating.RateRoutine.HOPCovDIncreasedLimitRRName = HOP承保范围D增加限额算法
Web.Rating.RateRoutine.HOPCovEIncreasedLimitRRName = HOP承保范围E增加限额算法
Web.Rating.RateRoutine.HOPCovFIncreasedLimitRRName = HOP承保范围F增加限额算法
Web.Rating.RateRoutine.HOPKeyFactorRRName = HOP关键因子费率算法
Web.Rating.RateRoutine.HOPKeyFactorWorksheetNodeName = 关键因子
Web.Rating.RateRoutine.HOPLineComments.GetPrimaryCovForCovCIncLimitRR = 获取承保范围A限额值。
Web.Rating.RateRoutine.HOPLineComments.GetPrimaryCoverage = 对于住宅承保范围部分，获取承保范围A限额值；对于其它，获取承保范围C限额值。
Web.Rating.RateRoutine.HOPLineComments.GetSectionIDedPerilsTermValue = 获取第一部分免赔额“所有危险事故”条款值。如果“所有危险事故”条款不存在，获取“所有其它危险事故”条款值。
Web.Rating.RateRoutine.HOPLineComments.GetTerritoryCode = 获取住宅地点的地区代码。
Web.Rating.RateRoutine.HOPLineComments.LookupAllPerilsDedFactor = 基于承保范围部分类型、地区代码、限额和免赔额查找所有危险事故免赔额因子。
Web.Rating.RateRoutine.HOPLineComments.LookupCovEIncLimitFactor = 基于承保范围E限额条款值查找增加的限额因子。
Web.Rating.RateRoutine.HOPLineComments.LookupCovFIncLimitFactor = 基于承保范围F限额条款值查找增加的限额因子。
Web.Rating.RateRoutine.HOPLineComments.LookupTerritoryBaseLostCost = 基于承保范围部分类型和地区代码查找地区基本损失成本乘法器。
Web.Rating.RateRoutine.HOPLineComments.ModifierBasis = 调整系数基础包含所有基本成本的总和。
Web.Rating.RateRoutine.HOPModifierPremiumRRName = HOP调整系数保费算法
Web.Rating.RateRoutine.HOPOrdinanceOrLawRRName = HOP法令或法律因子算法
Web.Rating.RateRoutine.HOPScheduledItemRRName = HOP计列个人财产算法
Web.Rating.RateRoutine.SectionComments.AllPerilsCalSection = ---- 所有危险事故免赔额因子计算部分 ----
Web.Rating.RateRoutine.SectionComments.CostDataFieldsCalSection = ---- 成本数据字段计算部分 ----
Web.Rating.RateRoutines.AddButton = 添加
Web.Rating.RateRoutines.Branch.Jurisdiction = 管辖权
Web.Rating.RateRoutines.Branch.JurisdictionButton = 创建管辖权变体
Web.Rating.RateRoutines.Code = 代码
Web.Rating.RateRoutines.CopyButton = 复制
Web.Rating.RateRoutines.CopyPrefix = Copy - {0}
Web.Rating.RateRoutines.DeleteButton = 删除
Web.Rating.RateRoutines.DeleteButtonTooltip = 删除只能在例程当前未被编辑的情况下进行。
Web.Rating.RateRoutines.DeleteConfirmation = 是否确定要删除费率例程？
Web.Rating.RateRoutines.Description = 说明
Web.Rating.RateRoutines.EditButton = 编辑
Web.Rating.RateRoutines.EditRateRoutineTitle = 编辑费率例程
Web.Rating.RateRoutines.ExitButton = 取消
Web.Rating.RateRoutines.Jurisdiction = 管辖权
Web.Rating.RateRoutines.LastUpdateTime = 上次更新时间
Web.Rating.RateRoutines.LastUpdatedBy = 上次更新人员
Web.Rating.RateRoutines.Name = 名称
Web.Rating.RateRoutines.NewRateRoutineTitle = 新建费率例程
Web.Rating.RateRoutines.ParameterSet = 形式参数集
Web.Rating.RateRoutines.Parameters = 形式参数集中的形式参数
Web.Rating.RateRoutines.PolicyLine = 保单险类
Web.Rating.RateRoutines.StepRemovalWarning = 警告：更改此项将会清除任何现有的费率例程步骤。
Web.Rating.RateRoutines.Title = 费率例程
Web.Rating.RateRoutines.UpToRateBook = 向上返回到{0}
Web.Rating.RateRoutines.UpToRateRoutines = 向上返回到费率例程
Web.Rating.RateRoutines.UsedByPromotedRateBook = 此例程为只读，因为它由升级的费率手册使用。
Web.Rating.RateRoutines.Version = 版本
Web.Rating.RateRoutines.VersionButton = 创建新版本
Web.Rating.RateTable.ArgumentSourceSet.Default.Name = 默认
Web.Rating.RateTable.Column.HOPConstructionType.Label = 建筑类型
Web.Rating.RateTable.Column.HOPCoverageForm.Label = 承保范围形式
Web.Rating.RateTable.Column.HOPCoveragePart.Label = 承保范围部分
Web.Rating.RateTable.Column.HOPDeductible.Label = 免赔额
Web.Rating.RateTable.Column.HOPFactor.Label = 因子
Web.Rating.RateTable.Column.HOPLimitMax.Label = 最大限额
Web.Rating.RateTable.Column.HOPLimitMin.Label = 最小限额
Web.Rating.RateTable.Column.HOPLimitPercentage.Label = 限额百分比
Web.Rating.RateTable.Column.HOPMax.Label = 最大值(<\=)
Web.Rating.RateTable.Column.HOPMin.Label = 最小值(>\=)
Web.Rating.RateTable.Column.HOPModifier.Label = 调整系数
Web.Rating.RateTable.Column.HOPModifierValue.Label = 调整系数值
Web.Rating.RateTable.Column.HOPProtectionClass.Label = 保护类
Web.Rating.RateTable.Column.HOPScheduledPersonalPropertyItemTypeCode.Label = 代码
Web.Rating.RateTable.Column.HOPTerritoryCode.Label = 地区代码
Web.Rating.RateTable.Column.HOPUWCompany.Label = 核保公司
Web.Rating.RateTable.HOPModifierTable.Name = 调整系数
Web.Rating.RateTable.MatchOp.HOPConstructionType.Name = CONSTRUCTION_TYPE
Web.Rating.RateTable.MatchOp.HOPCoverageForm.Name = COVERAGE_FORM
Web.Rating.RateTable.MatchOp.HOPCoveragePart.Name = COVERAGE_PART
Web.Rating.RateTable.MatchOp.HOPDeductible.Name = 免赔额
Web.Rating.RateTable.MatchOp.HOPItemTypeCode.Name = 代码
Web.Rating.RateTable.MatchOp.HOPLimit.Name = 限额
Web.Rating.RateTable.MatchOp.HOPModifier.Name = 调整系数
Web.Rating.RateTable.MatchOp.HOPModifierValue.Name = MODIFIER_VALUE
Web.Rating.RateTable.MatchOp.HOPProtectionClass.Name = PROTECTION_CLASS
Web.Rating.RateTable.MatchOp.HOPTerritoryCode.Name = TERRITORY_CODE
Web.Rating.RateTable.MatchOp.HOPUWCompany.Name = UW_COMPANY
Web.Rating.RateTable.OwnedAndNotShared = 自有 - 非共享
Web.Rating.RateTable.OwnedAndShared = 自有 - 共享
Web.Rating.RateTable.Reference = 引用
Web.Rating.RateTableDefinition.AllowMultipleValues = 允许多个值
Web.Rating.RateTableDefinition.Argument = 实际参数
Web.Rating.RateTableDefinition.ArgumentSource = 实际参数源
Web.Rating.RateTableDefinition.ArgumentSourceSet.AddButton = 添加源集
Web.Rating.RateTableDefinition.ArgumentSourceSet.Code = 代码
Web.Rating.RateTableDefinition.ArgumentSourceSet.DeleteButton = 删除
Web.Rating.RateTableDefinition.ArgumentSourceSet.MultipleSetsTitle = 源集
Web.Rating.RateTableDefinition.ArgumentSourceSet.Name = 名称
Web.Rating.RateTableDefinition.ArgumentSourceSet.Parameters = 形式参数
Web.Rating.RateTableDefinition.ArgumentSourceSet.SingleSetTitle = 来源
Web.Rating.RateTableDefinition.ArgumentSources = 实际参数源
Web.Rating.RateTableDefinition.Basics = 基本情况
Web.Rating.RateTableDefinition.CannotDelete = 无法删除费率表定义，因其正在使用。
Web.Rating.RateTableDefinition.Code = 代码
Web.Rating.RateTableDefinition.ColumnCode = 列代码
Web.Rating.RateTableDefinition.ColumnDataType = 数据类型
Web.Rating.RateTableDefinition.ColumnLabel = 列标签
Web.Rating.RateTableDefinition.ColumnLabels = 列标签
Web.Rating.RateTableDefinition.CopyPrefix = 复制 - {0}
Web.Rating.RateTableDefinition.CopyRateTableDefButton = 复制
Web.Rating.RateTableDefinition.DataType = 数据类型
Web.Rating.RateTableDefinition.DecimalPlaces = 小数位
Web.Rating.RateTableDefinition.DefinitionInUse = 无法修改费率表定义，因其正在使用。
Web.Rating.RateTableDefinition.Delete = 删除
Web.Rating.RateTableDefinition.DeleteConfirmation = 是否确定要删除这一未使用的费率表定义？
Web.Rating.RateTableDefinition.DependsOn = 取决于
Web.Rating.RateTableDefinition.DependsOnMultiValueParameterError = 不能依赖允许使用多个值的形式参数
Web.Rating.RateTableDefinition.DisplayText = 标签
Web.Rating.RateTableDefinition.DisplayType = 显示类型
Web.Rating.RateTableDefinition.EntityName = 代码：{0}，保单险类：{1}
Web.Rating.RateTableDefinition.FactorDetails = 系数详细信息
Web.Rating.RateTableDefinition.FactorNotFound = 未在表“{1}”中找到系数“{0}”
Web.Rating.RateTableDefinition.Factors = 系数
Web.Rating.RateTableDefinition.MatchOpColumnHeader = 实际参数{0}
Web.Rating.RateTableDefinition.MatchingRule = 匹配规则
Web.Rating.RateTableDefinition.NewRateTableDefButton = 添加
Web.Rating.RateTableDefinition.NewRateTableDefinition = 新建费率表定义
Web.Rating.RateTableDefinition.NoEditDueToReferencedMessage = 一些字段无法编辑，因为在某个费率手册或费率例程中引用了此费率表定义。
Web.Rating.RateTableDefinition.ParameterDetails = 形式参数详细信息
Web.Rating.RateTableDefinition.ParameterName = 形式参数名称
Web.Rating.RateTableDefinition.ParameterSet = 实际参数对象的源
Web.Rating.RateTableDefinition.Parameters = 形式参数
Web.Rating.RateTableDefinition.ParametersInSet = 可用于实际参数的对象
Web.Rating.RateTableDefinition.PhysicalColumn = 物理列
Web.Rating.RateTableDefinition.PhysicalColumnNotAvailable = 无效
Web.Rating.RateTableDefinition.Priority = 优先级
Web.Rating.RateTableDefinition.Usage = 使用情况
Web.Rating.RateTableDefinition.Usage.RateBookEdition = 费率手册版本
Web.Rating.RateTableDefinition.Usage.RateBookEffectiveDate = 费率手册生效日期
Web.Rating.RateTableDefinition.Usage.RateBookLabel = {0} - {1}
Web.Rating.RateTableDefinition.Usage.RateBookStatus = 费率手册状态
Web.Rating.RateTableDefinition.Usage.RateTable = 费率表
Web.Rating.RateTableDefinition.ValueProvider = 值提供者
Web.Rating.RateTableDefinition.ValueProvider.HelpText.CovTermOptionValueProvider = 指定：COV_CODE、COV_TERM_CODE
Web.Rating.RateTableDefinition.ValueProvider.HelpText.CovTermValueProvider = 指定：COV_CODE
Web.Rating.RateTableDefinition.ValueProvider.HelpText.CoverageValueProvider = 指定：COV_CODE
Web.Rating.RateTableDefinition.ValueProvider.HelpText.ReferenceFactorValueProvider = 指定：TABLE_CODE、COLUMN_CODE
Web.Rating.RateTableDefinitionSearch = 费率表定义
Web.Rating.RateTableDefinitions = 费率表定义
Web.Rating.RateTableDefinitions.DeleteChecked = 删除
Web.Rating.RateTableDefinitions.DeleteCheckedConfirmation = 是否删除所有选定的费率表定义？
Web.Rating.RateTables.Code = 代码
Web.Rating.RateTables.Description = 说明
Web.Rating.RateTables.EntityName = 物理表
Web.Rating.RateTables.EntityName.DefaultEntityName = DefaultRateFactorRow
Web.Rating.RateTables.ExportTable = 导出到电子表格
Web.Rating.RateTables.LastUpdateTime = 上次更新时间
Web.Rating.RateTables.LastUpdatedBy = 上次更新人员
Web.Rating.RateTables.Name = 名称
Web.Rating.RateTables.OwnerStrategy = ({0})
Web.Rating.RateTables.PolicyLine = 保单险类
Web.Rating.RateTables.ReduceMemoryUsage = 减少内存使用
Web.Rating.RateTables.ReduceMemoryUsageHelpText = 该表包含在内部创建标准行的重叠范围。默认的快速搜索算法将使用大量内存来维持该查找的速度，但可能会影响系统其它部分的性能。通过选中该框，可使用慢速算法减少内存使用。
Web.Rating.RateTables.Strategy = 查找
Web.Rating.RateTables.StrategyHelp = 将用于此表的查找方法。仅在此费率手册拥有行时才可编辑。
Web.Rating.RateTables.TooManyNormalizationRows = 该表包含在内部创建超过{0}行的标准行的重叠范围。默认的快速搜索算法将使用大量内存来维持该查找的速度，但可能会影响系统其它部分的性能。请从以下选项中选择是否应通过运行慢速搜索算法让此表使用较少的内存。
Web.Rating.RateTables.Usage = 使用情况
Web.Rating.Ratebooks.AvailableRatingTables = 可用的费率表
Web.Rating.Warnings.NewRateRoutineVersionAddedParameters = 新版本的费率例程{0}添加了形式参数：{1}
Web.Rating.Warnings.NewRateRoutineVersionChangedParameters = 新版本的费率例程{0}更改了形式参数：{1}
Web.Rating.Warnings.NewRateRoutineVersionRemovedParameters = 新版本的费率例程{0}移除了形式参数：{1}
Web.Rating.Warnings.ParameterChangedForSuperSetForAllVersionsForRoutine = 新版本的费率例程{0}包含所有版本和变体中形式参数集的变化形式。请确保您的调用代码传入以下实际参数，这些实际参数对于例程的部分或全部版本或变体是必需的：{1}
Web.Rating.Warnings.RateTable.FailedToNormalize = 标准化表{0}的范围会创建过多的行。
Web.RatingCostBreakdownPopup.Description = 说明
Web.RatingCostBreakdownPopup.Title = 按成本细分
Web.RatingCostBreakdownPopup.Total = 总计
Web.RatingCostBreakdownPopup.Type = 费用类型
Web.RatingCostDetailPopup.ActualAdjRate = 调整后费率
Web.RatingCostDetailPopup.ActualAmount = 金额
Web.RatingCostDetailPopup.ActualAnnualAmount = 年度金额
Web.RatingCostDetailPopup.ActualBaseRate = 费率
Web.RatingCostDetailPopup.ActualTermAmount = 条款项金额
Web.RatingCostDetailPopup.Basis = 基本信息
Web.RatingCostDetailPopup.BillGroup = 金额组
Web.RatingCostDetailPopup.ChargeGroup = 费用组
Web.RatingCostDetailPopup.ChargePattern = 费用类型
Web.RatingCostDetailPopup.EffDate = 自
Web.RatingCostDetailPopup.ExpDate = 至
Web.RatingCostDetailPopup.OverrideReason = 覆盖原因
Web.RatingCostDetailPopup.Proration = 按比例分配
Web.RatingCostDetailPopup.RateAmountType = 金额类型
Web.RatingCostDetailPopup.Title = 成本详细信息：{0}
Web.RatingErrors.FailEmptyRateBookPromotionToStaging = 无法将不含表或费率例程的手册提升到阶段。
Web.RatingFactors.JustificationNeeded = 必须为非零费率因子提供调整
Web.ReferralReasonDetails.Title = 转交原因详细信息
Web.Regions.CannotEditRegions = 区域配置中出现错误，因此无法修改地区。
Web.Reinstatement.ReasonCode = 原因
Web.Reinstatement.ReasonDescription = 原因说明
Web.Reinstatement.ReinstatementDate = 复效的生效日期
Web.ReinstatementWizard.Menu.New = 开始复效
Web.ReinstatementWizard.Menu.Payment = 付款
Web.ReinstatementWizard.Menu.Quote = 报价
Web.ReinstatementWizard.QuoteScreen.Cumulative = 保单保费
Web.ReinstatementWizard.QuoteScreen.Transaction = 成本更改详细信息
Web.ReinstatementWizard.Title = 复效{0}
Web.Reinsurance.AddFacButton = 添加临分
Web.Reinsurance.AddFacButton.CreateNew = 新建
Web.Reinsurance.AddFacButton.LinkExisting = 链接现有
Web.Reinsurance.Agreement.AdjustCedingRates = 设置差别分保比例
Web.Reinsurance.Agreement.AdjustCommissionRates = 设置差别佣金率
Web.Reinsurance.Agreement.AdjustFlatPremium = 设置固定差额保费
Web.Reinsurance.Agreement.AgreementNumber = 协议编号
Web.Reinsurance.Agreement.AgreementType = 类型
Web.Reinsurance.Agreement.AppliesTo = 适用于
Web.Reinsurance.Agreement.Arrangement = 安排
Web.Reinsurance.Agreement.AttachmentPoint = 起赔
Web.Reinsurance.Agreement.CededRisk = 分保风险
Web.Reinsurance.Agreement.CededShare = 份额%
Web.Reinsurance.Agreement.Clone = 克隆
Web.Reinsurance.Agreement.CoverageGroup = 承保范围组
Web.Reinsurance.Agreement.CoverageLimit = 限额
Web.Reinsurance.Agreement.Currency = 货币
Web.Reinsurance.Agreement.Delete = 删除
Web.Reinsurance.Agreement.EffectiveDate = 生效日期
Web.Reinsurance.Agreement.EffectiveDates = 生效日期
Web.Reinsurance.Agreement.EffectiveOn = 生效日期
Web.Reinsurance.Agreement.ExpirationDate = 到期日期
Web.Reinsurance.Agreement.From = 自
Web.Reinsurance.Agreement.IncludedCoverageGroups = 包含的承保范围组
Web.Reinsurance.Agreement.Lines = 险类
Web.Reinsurance.Agreement.MakeActive = 设为活动
Web.Reinsurance.Agreement.MaxCeding = 最大分保
Web.Reinsurance.Agreement.Name = 名称
Web.Reinsurance.Agreement.NotificationThreshold = 最大留存额
Web.Reinsurance.Agreement.Participants = 协议参与人
Web.Reinsurance.Agreement.Proportion = 财产%
Web.Reinsurance.Agreement.Search.Title = 添加协议
Web.Reinsurance.Agreement.SetCedingRate = 移除差别分保比例
Web.Reinsurance.Agreement.SetCommissionRate = 移除差别佣金率
Web.Reinsurance.Agreement.SetFlatPremium = 移除固定差额保费
Web.Reinsurance.Agreement.Status = 状态
Web.Reinsurance.Agreement.To = 至
Web.Reinsurance.Agreement.Type = 类型
Web.Reinsurance.Agreement.Validate = 校验
Web.Reinsurance.Agreement.Validate.FacPropRequiresCededShareOrAmount = 临分比例协议要求设置分保份额或承保范围金额，但不能同时设置两者。
Web.Reinsurance.Agreement.Validate.InvalidCedingRate = 所有参与人的总分保比例必须小于或等于 100。
Web.Reinsurance.Agreement.Verify.DuplicateAgreementNumber = 协议编号“{0}”已使用
Web.Reinsurance.Agreement.Verify.DuplicateParticipants = 参与人列表中包含同一联系人的重复条目。
Web.Reinsurance.Agreement.Verify.LimitToAttachPointError = 承保范围限额不能小于起赔点
Web.Reinsurance.Agreement.Verify.MakeActiveFailedError = 一个或多个协议无法设为活动，因为它们未通过校验
Web.Reinsurance.Agreement.Verify.MaxRetentionToAttachPointError = 最大自留额不能大于起赔点
Web.Reinsurance.Agreement.Verify.MissingCoverageGroup = 必须至少有一个承保范围组。
Web.Reinsurance.Agreement.Verify.NeedParticipants = 必须至少有一个参与人。
Web.Reinsurance.Agreement.Verify.SurplusMaxRetNotEqualToQuotaShareLimit = 溢额合约“{0}”的最大自留额不等于成数合约“{1}”的承保范围限额
Web.Reinsurance.Agreement.Verify.SurplusMaxRetentionNotEqual = 溢额合约的最大总留存额{0}与{1}不匹配
Web.Reinsurance.Agreement.Verify.TotalRiskShare = 所有参与人的总风险份额应为100%。
Web.Reinsurance.Agreement.Verify.VerificationPasses = 此协议有效
Web.Reinsurance.AgreementSearch.Title = 搜索协议
Web.Reinsurance.ApplicableReinsurance = 适用的再保险
Web.Reinsurance.Attachment.Inclusion = 包含
Web.Reinsurance.Attachment.InclusionPopup.Title = 编辑分保形式参数
Web.Reinsurance.Attachment.Projected = 预计
Web.Reinsurance.CPTransactionPopup = 分保保费交易
Web.Reinsurance.CPTransactionPopup.Agreement = 协议
Web.Reinsurance.CPTransactionPopup.BasisGNP = 基本毛净保费(GNP)
Web.Reinsurance.CPTransactionPopup.CalculationOrder = 计算顺序
Web.Reinsurance.CPTransactionPopup.CalculationTimeStamp = 计算时间戳
Web.Reinsurance.CPTransactionPopup.CededPremium = 分保保费
Web.Reinsurance.CPTransactionPopup.CededPremiumMarkup = 分保保费增额
Web.Reinsurance.CPTransactionPopup.CededRiskAmount = 分保风险金额
Web.Reinsurance.CPTransactionPopup.CedingRate = 分保比例
Web.Reinsurance.CPTransactionPopup.Commission = 佣金
Web.Reinsurance.CPTransactionPopup.CommissionRate = 佣金率
Web.Reinsurance.CPTransactionPopup.DatePosted = 发布日期
Web.Reinsurance.CPTransactionPopup.DateWritten = 填写日期
Web.Reinsurance.CPTransactionPopup.EffDate = 生效日期
Web.Reinsurance.CPTransactionPopup.ExpDate = 到期日期
Web.Reinsurance.CPTransactionPopup.MarkupRate = 加价率
Web.Reinsurance.CPTransactionPopup.Program = 程序
Web.Reinsurance.CededPremiums.AgreementByCost = 成本的所有协议
Web.Reinsurance.CededPremiums.AgreementByCost.Agreement = 协议
Web.Reinsurance.CededPremiums.AgreementByCost.BasisGNP = 基本毛净保费(GNP)
Web.Reinsurance.CededPremiums.AgreementByCost.Commission = 佣金
Web.Reinsurance.CededPremiums.AgreementByCost.CommissionRate = 佣金%
Web.Reinsurance.CededPremiums.AgreementByCost.Cost = 成本
Web.Reinsurance.CededPremiums.AgreementByCost.Coverable = 承保项
Web.Reinsurance.CededPremiums.AgreementByCost.Date = 日期
Web.Reinsurance.CededPremiums.AgreementByCost.MarkUp = 增额
Web.Reinsurance.CededPremiums.AgreementByCost.Ord = 顺序
Web.Reinsurance.CededPremiums.AgreementByCost.Premium = 保费
Web.Reinsurance.CededPremiums.AgreementByCost.RateShare = 费率/份额%
Web.Reinsurance.CededPremiums.AgreementByCost.Subtitle = 成本的所有协议
Web.Reinsurance.CededPremiums.AgreementByCost.TotalCost = 总成本
Web.Reinsurance.CededPremiums.AgreementByCost.Type = 类型
Web.Reinsurance.CededPremiums.AgreementsOverTime = 协议的分期分保
Web.Reinsurance.CededPremiums.AgreementsOverTime.BasisGNP = 基本毛净保费(GNP)
Web.Reinsurance.CededPremiums.AgreementsOverTime.CalculationTime = 计算时间
Web.Reinsurance.CededPremiums.AgreementsOverTime.CededRisk = 分保风险
Web.Reinsurance.CededPremiums.AgreementsOverTime.Comment = 注释
Web.Reinsurance.CededPremiums.AgreementsOverTime.Commission = 佣金
Web.Reinsurance.CededPremiums.AgreementsOverTime.CommissionRate = 佣金%
Web.Reinsurance.CededPremiums.AgreementsOverTime.Coverable = 承保项
Web.Reinsurance.CededPremiums.AgreementsOverTime.Markup = 增额
Web.Reinsurance.CededPremiums.AgreementsOverTime.Premium = 保费
Web.Reinsurance.CededPremiums.AgreementsOverTime.RateShare = 费率/份额%
Web.Reinsurance.CededPremiums.AgreementsOverTime.Reason = 原因
Web.Reinsurance.CededPremiums.AgreementsOverTime.Subtitle = 协议的分期分保
Web.Reinsurance.CededPremiums.AllPopup = 查看所有分保保费
Web.Reinsurance.CededPremiums.AllPopup.Agreement = 协议
Web.Reinsurance.CededPremiums.AllPopup.AppliesToSlice = 应用到分割
Web.Reinsurance.CededPremiums.AllPopup.BasisGNP = 基本毛净保费(GNP)
Web.Reinsurance.CededPremiums.AllPopup.Calculated = 计算值
Web.Reinsurance.CededPremiums.AllPopup.CededPremium = 保费
Web.Reinsurance.CededPremiums.AllPopup.CededPremiumMarkup = 增额
Web.Reinsurance.CededPremiums.AllPopup.CededRiskAmount = 分保风险金额
Web.Reinsurance.CededPremiums.AllPopup.CedingRate = 费率
Web.Reinsurance.CededPremiums.AllPopup.Comm = 佣金
Web.Reinsurance.CededPremiums.AllPopup.CommPercentage = 佣金%
Web.Reinsurance.CededPremiums.AllPopup.Cost = 成本
Web.Reinsurance.CededPremiums.AllPopup.Coverable = 承保项
Web.Reinsurance.CededPremiums.AllPopup.Order = 顺序
Web.Reinsurance.CededPremiums.AllPopup.Type = 类型
Web.Reinsurance.CededPremiums.CostsByAgreement = 协议的全部成本
Web.Reinsurance.CededPremiums.CostsByAgreement.Amount = 金额
Web.Reinsurance.CededPremiums.CostsByAgreement.BasisGNP = 基本毛净保费(GNP)
Web.Reinsurance.CededPremiums.CostsByAgreement.CededRisk = 分保风险
Web.Reinsurance.CededPremiums.CostsByAgreement.Commission = 佣金
Web.Reinsurance.CededPremiums.CostsByAgreement.CommissionRate = 佣金%
Web.Reinsurance.CededPremiums.CostsByAgreement.Cost = 成本
Web.Reinsurance.CededPremiums.CostsByAgreement.Coverable = 承保项
Web.Reinsurance.CededPremiums.CostsByAgreement.Markup = 增额
Web.Reinsurance.CededPremiums.CostsByAgreement.Premium = 保费
Web.Reinsurance.CededPremiums.CostsByAgreement.RateShare = 费率/份额%
Web.Reinsurance.CededPremiumsPopup = 查看分保保费
Web.Reinsurance.CededPremiumsPopup.AgreementByCostLabel = 在各项成本计算中查看各项协议的分保
Web.Reinsurance.CededPremiumsPopup.AgreementCedingsAcrossTimeLabel = 查看每项协议的成本分期分保
Web.Reinsurance.CededPremiumsPopup.AllAggreementsForACost = 成本的所有协议
Web.Reinsurance.CededPremiumsPopup.AllCostsForAnAgreement = 协议的全部成本
Web.Reinsurance.CededPremiumsPopup.AllTransactions = 所有交易
Web.Reinsurance.CededPremiumsPopup.CedingsAcrossTime = 协议的分期分保
Web.Reinsurance.CededPremiumsPopup.CostsByAgreementLabel = 查看协议分保的各项成本构成
Web.Reinsurance.CededPremiumsPopup.Risk = 风险
Web.Reinsurance.Coverage = 承保范围
Web.Reinsurance.CoverageGroup = 承保范围组
Web.Reinsurance.EditProgram.Title = 再保险计划
Web.Reinsurance.Error.CannotBindInvalidReinsurance = 无法绑定保单期限，因为再保险无效。请重新报价。
Web.Reinsurance.Error.InvalidRIRisk = 附加再保险风险时出错：{0}
Web.Reinsurance.Error.InvalidReinsurance = 创建再保险时出错：{0}。
Web.Reinsurance.FacAgreement.AmountCeded = 分保的风险金额
Web.Reinsurance.FacAgreement.CededPremiumRecalcReason = 已编辑活动临分{0}
Web.Reinsurance.FacAgreement.DeleteError = 无法删除正在使用的临时分保协议。
Web.Reinsurance.FacAgreement.Markup = 增额(%)
Web.Reinsurance.FacAgreement.NewTitle = 新建临时分保协议
Web.Reinsurance.FacAgreement.Premium = 分保保费（定额）
Web.Reinsurance.FacAgreement.TotalCost = 总成本
Web.Reinsurance.Navigation.Agreements = 协议
Web.Reinsurance.Navigation.Programs = 计划
Web.Reinsurance.New = {0}
Web.Reinsurance.NewProgram = 新建计划
Web.Reinsurance.NewProgram.Aggregate = 总额
Web.Reinsurance.NewProgram.Input.EffectiveDate = 生效日期
Web.Reinsurance.NewProgram.Input.ExpirationDate = 到期日期
Web.Reinsurance.NewProgram.Input.ImpliedNetRetention = 隐含的留存额
Web.Reinsurance.NewProgram.Input.Name = 名称
Web.Reinsurance.NewProgram.Input.SingleRiskMaximum = 单一风险最大值
Web.Reinsurance.NewProgram.Input.Status = 状态
Web.Reinsurance.NewProgram.Input.TargetNetRetention = 目标净留存额
Web.Reinsurance.NewProgram.PerRisk = 每项风险
Web.Reinsurance.NewProgram.Title = 新建计划
Web.Reinsurance.NewProgram.Treaties = 合约
Web.Reinsurance.Participant.CedingRate = 分保比例(%)
Web.Reinsurance.Participant.CommissionRate = 佣金%
Web.Reinsurance.Participant.CommissionShare = 总佣金的百分率
Web.Reinsurance.Participant.FlatPremium = 定额保费
Web.Reinsurance.Participant.Participant = 参与人
Web.Reinsurance.Participant.PremiumShare = 保费比例%
Web.Reinsurance.Participant.RefNumber = 参考编号
Web.Reinsurance.Participant.RiskShare = 风险份额%
Web.Reinsurance.Participant.Total = 总计
Web.Reinsurance.PercentageDisplayFormat = #.####
Web.Reinsurance.PolicyFile.CededPremiumRecalcReason = 分保保费重新计算的原因
Web.Reinsurance.PolicyFile.CoveredByNXOL = NXOL承保
Web.Reinsurance.PolicyFile.CoveredByXOL = 被XOL承保
Web.Reinsurance.PolicyFile.Edit = 编辑
Web.Reinsurance.PolicyFile.FacRINeeded = 需要临分再保险
Web.Reinsurance.PolicyFile.GrossRetention = 总留存额
Web.Reinsurance.PolicyFile.NetRetention = 净留存额
Web.Reinsurance.PolicyFile.OpenJobs = 此保单有待处理保单交易时，再保险不可编辑。
Web.Reinsurance.PolicyFile.PropRetention = 财产自留额
Web.Reinsurance.PolicyFile.RetainedPropShare = 预留的财产份额（%）
Web.Reinsurance.PolicyFile.SharedAmongProp = 财产共享
Web.Reinsurance.PolicyFile.TargetMaxRetention = 目标最大自留额
Web.Reinsurance.PolicyFile.TotalRisk = 总风险
Web.Reinsurance.ProbableMaxLoss = PML金额
Web.Reinsurance.ProbableMaxLossPct = 可能的最大损失%
Web.Reinsurance.ProbableMaxLossReason = PML原因
Web.Reinsurance.Program.Currency = 货币
Web.Reinsurance.Program.DeleteError = 无法删除与保单关联的计划。
Web.Reinsurance.Program.RecalcButton = 测试留存额
Web.Reinsurance.Program.Validation.ActiveProgramDraftTreaty = 活动的程序{0}无法与草案合约{1}关联
Web.Reinsurance.Program.Validation.EffectiveDateNormalization = “{0}”的生效日期未标准化
Web.Reinsurance.Program.Validation.ExpirationDateNormalization = “{0}”的到期日期未标准化
Web.Reinsurance.Program.Validation.ExpiresBeforeEffective = “{0}”的生效日期不能在到期日期之后
Web.Reinsurance.Program.Validation.InconsistentCurrency = 合约“{0}”的货币与计划“{1}”的货币不同
Web.Reinsurance.Program.Validation.InvalidCovGroup = 承保范围组“{0}”必须存在于每个合约中。
Web.Reinsurance.Program.Validation.InvalidProgram = 再保险计划{0}无效
Web.Reinsurance.Program.Validation.InvalidTreaty = 合约{0}无效。
Web.Reinsurance.Program.Validation.InvalidTreatyEffectiveDates = 合约“{0}”的生效日期未完全覆盖计划的生效日期。
Web.Reinsurance.Program.Validation.LimitTooHigh = 合约“{0}”的限额大于计划单一风险最大值。
Web.Reinsurance.Program.Validation.MissingCoverageGroup = 必须至少有一个承保范围组。
Web.Reinsurance.Program.Validation.NetRetentionGreaterThanTargetNetRetention = 隐含的留存额大于目标净留存额。
Web.Reinsurance.Program.Validation.OverlappingCoverageError = 两个合约{0}与{1}之间存在承保范围重叠
Web.Reinsurance.Program.Validation.VerificationPasses = 此计划及其所有合约均有效。
Web.Reinsurance.ProgramSearch.Title = 搜索计划
Web.Reinsurance.ProximitySearch.LocationNotGeocoded = 此位置尚未进行地理编码。
Web.Reinsurance.RIRisk.Validation.AgreementAttachmentAbovePML = 再保险协议{0}没有分保风险，因为{1}的起赔点高于再保险风险{3}的{2}的PML。
Web.Reinsurance.RIRisk.Validation.AgreementDoesNotCedeToCapacity = 再保险协议{0}无法为再保险风险{1}分保承担能力。
Web.Reinsurance.RIRisk.Validation.Agreements = , {0}
Web.Reinsurance.RIRisk.Validation.AgreementsDoNotCedeToCapacityLong = 以下{0}再保险协议没有分保到风险承担能力：{1}
Web.Reinsurance.RIRisk.Validation.AgreementsDoNotCedeToCapacityShort = 某些再保险协议没有分保到风险承担能力
Web.Reinsurance.RIRisk.Validation.AgreementsHaveNoCededRiskLong = 以下{0}再保险协议没有分保风险：{1}
Web.Reinsurance.RIRisk.Validation.AgreementsHaveNoCededRiskShort = 某些成本固定的临分再保险协议没有分保风险
Web.Reinsurance.RIRisk.Validation.FacPropExceedsMaxPropRetention = 分保到临分比例协议的金额超过要在{0}上的比例协议之间共享的总风险（分保到任何超额赔款协议之后）
Web.Reinsurance.RIRisk.Validation.FacPropNullTIVRequiresCededPercentage = 包含无限承保范围的临分{0}必须具有分保份额，而不能具有分保金额。
Web.Reinsurance.RIRisk.Validation.InvalidAttachmentForRisk = 再保险风险{0}无效
Web.Reinsurance.RIRisk.Validation.InvalidAttachmentForRiskWithNoTIV = 溢额合约不能与具有未定义保险价值总额的风险关联。
Web.Reinsurance.RIRisk.Validation.OverlappingCoverageError = 始于{2}的两个合约{0}与{1}之间存在承保范围重叠
Web.Reinsurance.RIRisk.Validation.TreatyAssociatedWithRiskDoesNotApplyToRICoverageGroup = 所有与风险关联的合约都应该应用到该风险的再保险承保范围组
Web.Reinsurance.RIRiskLocationProximitySearchPopup.AssignButton = 分配到地点组
Web.Reinsurance.RIRiskLocationProximitySearchPopup.CoverageEffective = 承保范围有效
Web.Reinsurance.RIRiskLocationProximitySearchPopup.CoverageGroup = 承保范围组
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LineOfBusiness = 险种
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationId = 地点ID
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.Account = 账号
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.Address = 地址
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.CoverageGroup = 再保险险别组
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.Description = 说明
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.Distance = 距离
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.ID = ID
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.LocationGroup = 地点组
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.PolicyNumber = 保单号
Web.Reinsurance.RIRiskLocationProximitySearchPopup.LocationRisk.TIV = TIV
Web.Reinsurance.RIRiskLocationProximitySearchPopup.Radius = 搜寻半径
Web.Reinsurance.RIRiskLocationProximitySearchPopup.SearchAddress = 地址
Web.Reinsurance.RIRiskLocationProximitySearchPopup.SearchCriteria = 搜索条件：
Web.Reinsurance.RIRiskLocationProximitySearchPopup.SearchNear = 搜索附近：
Web.Reinsurance.RIRiskLocationProximitySearchPopup.TIVTotal = 总计
Web.Reinsurance.RIRiskLocationProximitySearchPopup.Title = 搜索附近地点
Web.Reinsurance.RIRiskLocationProximitySearchPopup.Units = 单位
Web.Reinsurance.ReinsurableRisk.Description = {1}的{0}承保范围
Web.Reinsurance.ReinsurableRisks = 再保险风险
Web.Reinsurance.RemoveFacButton = 移除临分
Web.Reinsurance.Risk = 风险
Web.Reinsurance.RiskDetails = 风险详细信息
Web.Reinsurance.RiskDetails.ViewCededPremiums = 查看分保保费
Web.Reinsurance.TIV = 被保险价值总额 / 被保险人合计
Web.Reinsurance.Treaty.AmountOfCoverage = 再保险金额
Web.Reinsurance.Treaty.ApplyOnlyGrossRetention = 仅适用于总留存额
Web.Reinsurance.Treaty.AttachmentIndexed = 已编制索引？
Web.Reinsurance.Treaty.AttachmentPoint = 起赔点
Web.Reinsurance.Treaty.Broker = 经纪人
Web.Reinsurance.Treaty.CalculateCededPremium = 计算分保保费
Web.Reinsurance.Treaty.CededShare = 分保份额(%)
Web.Reinsurance.Treaty.CedingRate = 分保比例(%)
Web.Reinsurance.Treaty.Comments = 注释
Web.Reinsurance.Treaty.Commission = 佣金(%)
Web.Reinsurance.Treaty.CountTowardTotalLimit = 计入累计限额
Web.Reinsurance.Treaty.CoverageHeader = 承保范围
Web.Reinsurance.Treaty.CoverageLimit = 承保范围限额
Web.Reinsurance.Treaty.DeleteError = 无法删除与计划关联的合约。
Web.Reinsurance.Treaty.DepositPmtSchedule = 预缴金付款计划
Web.Reinsurance.Treaty.EffectiveDate = 生效日期
Web.Reinsurance.Treaty.ExpDateValidation = 到期日期不能早于生效日期
Web.Reinsurance.Treaty.ExpirationDate = 到期日期
Web.Reinsurance.Treaty.GNPBasis = 基本毛净保费
Web.Reinsurance.Treaty.LimitIndexed = 已编制索引？
Web.Reinsurance.Treaty.Lines = 险类
Web.Reinsurance.Treaty.LossAttachBasis = 损失起赔基础
Web.Reinsurance.Treaty.MaxRetention = 最大自留额
Web.Reinsurance.Treaty.MinDepositPremium = 最低保费(MDP)
Web.Reinsurance.Treaty.Name = 名称
Web.Reinsurance.Treaty.NewTitle = 新建合约
Web.Reinsurance.Treaty.NotificationThresh = 通知阈值
Web.Reinsurance.Treaty.OtherTermsHeader = 其它条款
Web.Reinsurance.Treaty.PayableBasis = 签单应付款
Web.Reinsurance.Treaty.PremiumAndCommissionsHeader = 保费和佣金
Web.Reinsurance.Treaty.StartLine = 开始险类
Web.Reinsurance.Treaty.Status = 状态
Web.Reinsurance.Treaty.StopLine = 停止险类
Web.Reinsurance.Treaty.TreatyNumber = 协议编号
Web.Reinsurance.Treaty.Type = 类型
Web.Reinsurance.Validation.CannotAddInvalidFac = 临时分保协议“{0}”无效，无法添加。
Web.Reinsurance.Validation.EffectiveAfterExpiration = 生效日期不能晚于到期日期。
Web.Reinsurance.ViewAsOf = 查看自
Web.Reinsurance.Warning.ChangeEditEffectiveDate = 如果更改分割边界的生效日期，您对再保险的更改将会丢失。
Web.RelatedContacts.AddRelatedContactDV.Contact = 相关联系人
Web.RelatedContacts.AddRelatedContactDV.Relationship = 关系
Web.RelatedContacts.RelatedContactsLV.Label = 当前相关联系人
Web.RelatedContactsLV.Contact = 名称
Web.RelatedContactsLV.Rel = 关系
Web.RenewWizard.Differences = 差异
Web.RenewWizard.Review = 保单复核
Web.Renewal.Complete.ViewRenewal = 查看您的续保(#{0})
Web.Renewal.Warning.NonRenewLeadTime = 非续保此保单的最新日期已过。
Web.Renewal.Warning.NonRenewProductNotAvailable = 保险产品{0}在{2}的{1}中不可用。
Web.Renewal.Warning.NonRenewReason = 非续保原因
Web.Renewal.Warning.OpenCancellation = 这一必须首先完成的保单具有未完成的取消。
Web.Renewal.Warning.RenewalNotificationDate = 续保通知日期未设置。
Web.RenewalGroup = 续保组
Web.RenewalGroup.Activities = 活动
Web.RenewalGroup.CloseDate = 结束日期
Web.RenewalGroup.CreateDate = 创建日期
Web.RenewalGroup.Info = 续保组确认
Web.RenewalGroup.NumRenewals = 续保次数
Web.RenewalGroup.PolicyNum = 保单号
Web.RenewalGroup.PolicyType = 产品
Web.RenewalGroup.RenewalNum = 续保号
Web.RenewalGroup.Renewals = 续保
Web.RenewalGroup.RiskAnalysis = 风险分析
Web.RenewalGroup.Status = 状态
Web.RenewalGroup.Title = 续保组{0}
Web.RenewalGroup.TotalCost = 总成本
Web.RenewalWizard.NonRenew.Title = 未续保数据输入
Web.RenewalWizard.OtherPeriod.Message = 另一个期间为待续保、非续保或不投保。如果要对此期间执行续保、非续保或不投保操作，则必须撤消其它期间。
Web.RenewalWizard.PriorTerm.Message = 之前的附加责任具有尚未应用到此续保的绑定更改;查看要应用的之前保单更改交易。
Web.RenewalWizard.Quote.RenewalNo = 续保号
Web.RenewalWizard.Renew.Title = 续保数据输入
Web.RenewalWizard.RenewalCode = 续保代码
Web.RenewalWizard.Title = 续保{0}
Web.RenewalWizardMenu.Payment = 付款
Web.RenewalWizardMenu.PolicyInfo = 保单信息
Web.RenewalWizardMenu.ViewQuote = 查看报价
Web.Reporting.ManagerDownWarning = 未检测到报告管理器。请与管理员联系以确保报告管理器正在运行。
Web.Reporting.NoLoginWarning = 您未定义报告文件夹查看权限。请与管理员联系。
Web.Reporting.ServerDownWarning = 未检测到报告服务器。请与管理员联系以确保报告服务器正在运行。
Web.Reports.Repository = 资源库
Web.ReportsDashboard.ReportsDashboard = 面板
Web.ResolverService.Errors.UnknownClusterUrl = 无法获得群集URL。请检查日志了解详细信息。
Web.Rewrite.OOSEMessage = 此重新填写包含从之前取消的期间复制的生效日期之后的更改。
Web.RewriteNewAccountComplete.ViewRewriteNewAccount = 查看您重新填写的新账户交易(#{0})
Web.RewriteNewAccountWizard.Offerings = 保障组合
Web.RewriteNewAccountWizard.PolicyInfo = 保单信息
Web.RewriteNewAccountWizard.Qualification = 资格
Web.RewriteNewAccountWizard.Review = 保单复核
Web.RewriteNewAccountWizard.Title = 重新填写新账户{0}
Web.RewriteWizard.Bound.ReviewChanges = 审查更改
Web.RewriteWizard.Offerings = 保障组合
Web.RewriteWizard.Payment = 付款
Web.RewriteWizard.PolicyInfo = 保单信息
Web.RewriteWizard.PolicyInfo.ChangePolicyNumber = 是否分配新的保单号？
Web.RewriteWizard.PolicyInfo.PolicyNumber = 保单号
Web.RewriteWizard.QuoteScreen.Cumulative = 保单保费
Web.RewriteWizard.Review = 保单复核
Web.RewriteWizard.Title = 重新填写{0}
Web.RiskAssessment.Integration.BadLatLongAndAddressForRiskAssessment = 在Spotlight中计算地点需要有效的地址
Web.RiskAssessment.Integration.ErrorContactingParameterService = 联系Spotlight Interactive参数服务时出错。如果此问题持续存在，请联系您的系统管理员。
Web.RiskAssessment.Integration.ErrorForUnexpectedLocation = 风险评估服务针对未请求的地点报告了一个错误。
Web.RiskAssessment.Integration.HttpBadRequest = 风险评估服务报告了错误请求，请检查出站风险评估数据的格式和内容。
Web.RiskAssessment.Integration.InsufficientPermissions = 权限不足，无法访问风险评估服务。
Web.RiskAssessment.Integration.InvalidJson = 出现内部地点数据编码错误。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.InvalidLocation.CoordinatesInvalid = 指定的地点纬度或经度无效。
Web.RiskAssessment.Integration.InvalidLocation.CoordinatesOrAddressRequired = 没有指定要撤消地理编码的地址。
Web.RiskAssessment.Integration.InvalidLocationGeocodeableAddress.CouldNotGeoCode = 无法对指定地址进行地理编码。
Web.RiskAssessment.Integration.InvalidRiskProfileCode = 指定的风险配置文件代码无效。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.LacksMultipleLocationRiskAssessmentPermission = 权限不足，无法提出多地点风险评估请求。
Web.RiskAssessment.Integration.LacksSingleLocationRiskAssessmentPermission = 权限不足，无法提出单一地点风险评估请求。
Web.RiskAssessment.Integration.LocationErrorDescriptionDelimiter = \ \ 
Web.RiskAssessment.Integration.LocationRequired = 没有为Spotlight Interactive提供地点。
Web.RiskAssessment.Integration.MissingRiskProfileCode = 未指定风险配置文件代码。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.NoResponseEntityFromRiskAssessmentService = 未从风险评估服务接收到响应实体，请联系服务管理员。
Web.RiskAssessment.Integration.NoSelectedLocation = Spotlight Interactive服务未返回选定的地点
Web.RiskAssessment.Integration.PluginNotEnabled = 无法联系风险评估服务，因为风险评估插件未启用。如果此问题持续存在，请联系您的系统管理员。
Web.RiskAssessment.Integration.PolicySystemIdRequired = 未向风险评估服务发送地点ID。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.RiskAssessmentAuthenticationFailed = 风险评估服务身份验证失败，请检查配置文件中的登录凭据。
Web.RiskAssessment.Integration.RiskAssessmentComplete.DescriptionWithPolicy = 您在{0}从Spotlight为{2} #{3}下的保单{1}请求的评估已完成。结果现已归入{2}。
Web.RiskAssessment.Integration.RiskAssessmentComplete.DescriptionWithoutPolicy = 您在{0}从Spotlight为{1} #{2}请求的评估已完成。结果现已归入{1}。
Web.RiskAssessment.Integration.RiskAssessmentComplete.Subject = 风险评估完成
Web.RiskAssessment.Integration.RiskAssessmentFailure = 无法获取作业的风险评估结果：{0}
Web.RiskAssessment.Integration.RiskAssessmentFailure.DescriptionWithPolicy = 为{1} #{2}下的保单{0}请求的风险评估失败。
Web.RiskAssessment.Integration.RiskAssessmentFailure.DescriptionWithoutPolicy = 为{0} #{1}请求的风险评估失败。
Web.RiskAssessment.Integration.RiskAssessmentFailure.Subject = 风险评估失败
Web.RiskAssessment.Integration.RiskAssessmentLocationFailure = 作业“{1}”上针对地点“{0}”的风险评估错误
Web.RiskAssessment.Integration.RiskAssessmentServiceConnectionRefused = 与风险评估服务的连接被拒绝，请稍后重试。如果此问题仍然存在，请联系您的系统管理员。
Web.RiskAssessment.Integration.TimeoutContactingParameterService = 联系Spotlight Interactive参数服务时超时。如果此问题持续存在，请联系您的系统管理员。
Web.RiskAssessment.Integration.UnableToParseJSONErrors = 无法解析JSON错误。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.UnknownErrorCode = 未知的错误代码。如果这种情况持续存在，请联系管理员。
Web.RiskAssessment.Integration.UnknownUIDescription = 类型代码的UI说明未知：{0}
Web.RiskClassSearch = 风险类搜索
Web.RiskClassSearch.Description = 说明
Web.RiskClassSearch.Hazard = 风险级别
Web.SamplePages = 示例页面
Web.SamplePages.DetailViewPage.GosuValidation.Text3 = 值必须是“goo”，但却是“{0}”
Web.SamplePages.DetailViewPage.GosuValidation.TypeKey = 值必须是“California”，但却是“{0}”
Web.Search.ExclusionAndCondition.Title = 搜索{0}的免责项和条款
Web.Search.LocationGroup.Title = 搜索
Web.Search.Results = 搜索结果
Web.Search.SearchCriteria.BillingAccountSearchCriteriaMinimumCriteriaNotMet = 请提供账号或账户名称。
Web.Search.SearchCriteria.ClausePattern.MinCriteria = 请指定有效的保单险类模式。
Web.Search.WrongQueryType = 尝试限制查询，但查询类型错误。
Web.ServerTools = 服务器工具
Web.ServerTools.ArchiveInfo.ArchiveErrorsTitle = 出错的项目
Web.ServerTools.ArchiveInfo.ArchiveFailureReason = 存档失败原因
Web.ServerTools.ArchiveInfo.ArchiveInfoByDay = 存档摘要（按天）
Web.ServerTools.ArchiveInfo.ArchiveInfoFor = 数据模型{0}的存档摘要
Web.ServerTools.ArchiveInfo.ArchiveItemListReason = {0}
Web.ServerTools.ArchiveInfo.Archived = 已存档
Web.ServerTools.ArchiveInfo.Back = 返回到{0}
Web.ServerTools.ArchiveInfo.BeginTime = 开始时间
Web.ServerTools.ArchiveInfo.Clear = 存档数据库： 清除
Web.ServerTools.ArchiveInfo.Count = 计数
Web.ServerTools.ArchiveInfo.CreateLink = 删除并重新创建所有数据库链接
Web.ServerTools.ArchiveInfo.Date = 日期
Web.ServerTools.ArchiveInfo.DaysToArchive = 存档前的天数
Web.ServerTools.ArchiveInfo.DownloadUpgradeInfo = 导出升级信息
Web.ServerTools.ArchiveInfo.EarliestDate = 最早日期
Web.ServerTools.ArchiveInfo.EndTime = 结束时间
Web.ServerTools.ArchiveInfo.EntitiesArchived = 已存档实体
Web.ServerTools.ArchiveInfo.EntitiesInProcess = 处理中的实体
Web.ServerTools.ArchiveInfo.EntitiesSkipped = 已跳过
Web.ServerTools.ArchiveInfo.Entity = 实体
Web.ServerTools.ArchiveInfo.ExcludedBecauseOfFailure = 失败
Web.ServerTools.ArchiveInfo.ExcludedBecauseOfRules = 已排除
Web.ServerTools.ArchiveInfo.ExecutionTime = 执行时间
Web.ServerTools.ArchiveInfo.FailureDetails = 失败详细信息({0})
Web.ServerTools.ArchiveInfo.Item = 项目
Web.ServerTools.ArchiveInfo.Items = 项目
Web.ServerTools.ArchiveInfo.Last24Hours = 详细信息： 自{0}之后（批处理运行编号{1}）
Web.ServerTools.ArchiveInfo.LatestDate = 最近日期
Web.ServerTools.ArchiveInfo.ListOfArchiveItems = 项目列表({0})
Web.ServerTools.ArchiveInfo.Name = 表名称
Web.ServerTools.ArchiveInfo.NoneExcludedBecauseOfFailure = 无失败项
Web.ServerTools.ArchiveInfo.NoneExcludedBecauseOfRules = 无排除项
Web.ServerTools.ArchiveInfo.NoneSkipped = 无跳过项
Web.ServerTools.ArchiveInfo.Overview = 概述
Web.ServerTools.ArchiveInfo.ProcessedCount = 已处理的计数
Web.ServerTools.ArchiveInfo.Ready = 准备存档：
Web.ServerTools.ArchiveInfo.ReasonExcludeBecauseOfFailure = 失败原因
Web.ServerTools.ArchiveInfo.ReasonExcludeBecauseOfRules = 排除原因
Web.ServerTools.ArchiveInfo.ReasonSkipped = 跳过原因
Web.ServerTools.ArchiveInfo.Refresh = 刷新状态
Web.ServerTools.ArchiveInfo.Reset = 重置
Web.ServerTools.ArchiveInfo.ResetItem = 重置项目
Web.ServerTools.ArchiveInfo.ResetItems = 重置所有项目
Web.ServerTools.ArchiveInfo.ResetSelected = 重置选定项目
Web.ServerTools.ArchiveInfo.Rowcount = 行计数
Web.ServerTools.ArchiveInfo.Rules = 存档规则摘要
Web.ServerTools.ArchiveInfo.Selected = 已选定进行存档处理
Web.ServerTools.ArchiveInfo.Skipped = 已跳过
Web.ServerTools.ArchiveInfo.SourceInfo = 存档源信息
Web.ServerTools.ArchiveInfo.SourceInfo.asof = 已刷新：
Web.ServerTools.ArchiveInfo.SourceInfo.deleteStatus = 删除可用性：
Web.ServerTools.ArchiveInfo.SourceInfo.refresh = 刷新
Web.ServerTools.ArchiveInfo.SourceInfo.restoreStatus = 检索可用性：
Web.ServerTools.ArchiveInfo.SourceInfo.storeStatus = 存储可用性：
Web.ServerTools.ArchiveInfo.StartTime = 开始时间
Web.ServerTools.ArchiveInfo.Status = 状态
Web.ServerTools.ArchiveInfo.StatusDetail = 状态详细信息
Web.ServerTools.ArchiveInfo.SummaryTitle = 存档摘要（按数据模型版本）
Web.ServerTools.ArchiveInfo.Title = 存档信息
Web.ServerTools.ArchiveInfo.TooManyUniqueResults = 找到超过{0}个唯一原因： 不显示结果。
Web.ServerTools.ArchiveInfo.TraceDetails = 跟踪详细信息（{0}）
Web.ServerTools.ArchiveInfo.TraceItem = 跟踪项目
Web.ServerTools.ArchiveInfo.UploadSuccess = 已成功导入升级信息
Web.ServerTools.ArchiveInfo.UploadSuccessNoAction = 已加载升级信息；不采取任何措施
Web.ServerTools.ArchiveInfo.UploadUpgradeInfo = 导入升级信息
Web.ServerTools.ArchiveInfo.Version = 版本（平台主要版本、平台次要版本、应用主要版本、应用次要版本、扩展版本）
Web.ServerTools.ArchiveInfo.View = 查看
Web.ServerTools.ArchiveInfo.ViewDetailedStatus = 查看进度
Web.ServerTools.NoPermission = 您无权查看任何服务器工具页面。
Web.ServerTools.ProductModelInfo.Reload = 重新加载可用性
Web.ServerTools.ProductModelInfo.Reload.Successful = 重新加载可用性成功。
Web.ServerTools.ProductModelInfo.Title = 保险产品模型信息
Web.ServerTools.Solr.SolrTools = 自由文本搜索
Web.ServerTools.Solr.SolrTools.AlertDeleted = 保单索引已删除
Web.ServerTools.Solr.SolrTools.AlertReloaded = 保单索引已同步
Web.ServerTools.Solr.SolrTools.Consistency.CloseReport = 结束报告
Web.ServerTools.Solr.SolrTools.Consistency.ConsistencyReport = 一致性报告
Web.ServerTools.Solr.SolrTools.Consistency.FailureCount = 失败
Web.ServerTools.Solr.SolrTools.Consistency.FailureType = 类型
Web.ServerTools.Solr.SolrTools.Consistency.Message = 消息
Web.ServerTools.Solr.SolrTools.Consistency.PeriodPublicID = 期间公共ID
Web.ServerTools.Solr.SolrTools.Consistency.RecordsProcessed = 已处理
Web.ServerTools.Solr.SolrTools.Consistency.SliceDate = 分割日期
Web.ServerTools.Solr.SolrTools.ConsistencyCheck = 运行一致性检查
Web.ServerTools.Solr.SolrTools.DeleteAll = 删除保单索引
Web.ServerTools.Solr.SolrTools.Reload = 同步保单索引
Web.Shuttle.Add = 添加到所选内容
Web.Shuttle.Remove = 从所选内容中移除
Web.SpinPolicy.Button.Create = 创建投保单
Web.SplitPolicy.Button.Cancel = 取消
Web.SplitPolicy.Button.Create = 创建投保单
Web.SplitPolicy.CopierInstructions = 选择新投保单中要包含的数据
Web.SplitPolicy.PrimaryNamedInsured = 主要列名被保险人
Web.SplitPolicy.Submission1 = 投保单1
Web.SplitPolicy.Submission2 = 投保单2
Web.SplitPolicy.SubmissionDetails = 投保单详细信息
Web.StartupPageError.NoPermissions = 您没有足够权限运行{Global.AppName}。
Web.StartupPageError.Title = 权限不足
Web.Submission.Products.MakeSubmissions = 创建投保单
Web.Submission.Products.MaxToCreate = 创建最大值
Web.Submission.Products.Multiple = 多个
Web.Submission.Products.NumberToCreate = 待创建编号
Web.Submission.Products.QuoteType = 报价类型
Web.Submission.Products.Select = 选择
Web.Submission.Products.Single = 单个
Web.Submission.Products.SingleMultiplePolicy = 单个还是多个保单？
Web.SubmissionComplete.ReturnToDesktop = 转到桌面
Web.SubmissionComplete.SubmissionManager = 转到此账户的投保单负责人
Web.SubmissionComplete.SubmitAnother = 为不同账户提交申请
Web.SubmissionComplete.ViewPolicy = 查看您的保单（#{0}）
Web.SubmissionComplete.ViewSubmission = 查看您的投保单(#{0})
Web.SubmissionConfirmLetter = 确认函
Web.SubmissionConfirmLetter.GenerateLetter = 生成确认函
Web.SubmissionConfirmLetter.GenerateLetter.Unavailable = “生成确认函”不可用，因为单证生成已禁用或者不可用。请联系您的管理员。
Web.SubmissionConfirmLetter.MustCheckErr = 必须至少选中一个投保单以生成确认函。
Web.SubmissionConfirmLetterDV.ProductsLabel = 为下列收到的投保单创建确认函：
Web.SubmissionConfirmLetterLV.EffectiveDate = 生效日期
Web.SubmissionConfirmLetterLV.Product = 保险产品
Web.SubmissionConfirmLetterLV.Status = 状态
Web.SubmissionConfirmLetterLV.SubmissionNumber = 投保单号
Web.SubmissionGroup = 投保单组名称
Web.SubmissionGroup.CloseDate = 结束日期
Web.SubmissionGroup.CreateDate = 创建日期
Web.SubmissionGroup.FirstEffDate = 生效日期
Web.SubmissionGroup.Info = 投保单组信息
Web.SubmissionGroup.LastExpDate = 到期日期
Web.SubmissionGroup.NumSubmissions = 投保单数
Web.SubmissionGroup.PolicyNum = 保单号
Web.SubmissionGroup.PolicyType = 产品
Web.SubmissionGroup.Status = 状态
Web.SubmissionGroup.SubmissionNum = 投保单号
Web.SubmissionGroup.Submissions = 投保单
Web.SubmissionGroup.Title = 投保单组{0}
Web.SubmissionGroup.TotalCost = 总成本
Web.SubmissionLetterSuccess = 投保单函件已发送
Web.SubmissionLetterSuccess.SendConfirmLetter = 发送确认函
Web.SubmissionLetterSuccess.SendDeclineLetter = 发送拒绝函
Web.SubmissionLetterSuccess.SendNotTakenLetter = 发送不投保确认
Web.SubmissionLetterSuccess.SubmissionManager = 返回到投保单管理器
Web.SubmissionLetterSuccess.Success = 以下投保单函件已成功发送。
Web.SubmissionLetterSuccess.Unsure = 下列投保单函件已发送到外部系统，但尚未收到确认。
Web.SubmissionLetterSuccessEmailLV.Email1 = 主要电子邮件地址
Web.SubmissionLetterSuccessEmailLV.Email2 = 次要电子邮件地址
Web.SubmissionLetterSuccessEmailLV.Name = 代理人姓名
Web.SubmissionLetterSuccessEmailLV.Title = 电子邮件通信
Web.SubmissionLetterSuccessLV.EffectiveDate = 生效日期
Web.SubmissionLetterSuccessLV.ExternalStatus = 状态
Web.SubmissionLetterSuccessLV.Product = 保险产品
Web.SubmissionLetterSuccessLV.SubmissionNumber = 投保单号
Web.SubmissionLetterSuccessLV.Title = 选定保险产品
Web.SubmissionManager.Filter.All = 所有投保单
Web.SubmissionManager.Filter.Complete = 完成投保单
Web.SubmissionManager.Filter.Open = 未完成投保单
Web.SubmissionManager.NoSubmissions = 此账户无投保单。
Web.SubmissionManager.SelectionLV.Actions = 操作
Web.SubmissionManager.SelectionLV.Actions.ConfirmLetter = 创建确认
Web.SubmissionManager.SelectionLV.Actions.ConfirmWithdraw = 是否确定要撤消此投保单？
Web.SubmissionManager.SelectionLV.Actions.Decline = 拒绝
Web.SubmissionManager.SelectionLV.Actions.DeclineLetter = 创建拒保函
Web.SubmissionManager.SelectionLV.Actions.NotTakenLetter = 创建不投保函
Web.SubmissionManager.SelectionLV.Actions.Withdraw = 撤消
Web.SubmissionManager.SelectionLV.EffectiveDate = 生效日期
Web.SubmissionManager.SelectionLV.Letters = 函件
Web.SubmissionManager.SelectionLV.Product = 保险产品
Web.SubmissionManager.SelectionLV.QuoteType = 报价类型
Web.SubmissionManager.SelectionLV.Status = 状态
Web.SubmissionManager.SelectionLV.SubmissionNumber = 投保单号
Web.SubmissionManager.SelectionLV.TotalCost = 总成本
Web.SubmissionManager.Title = 投保单管理器
Web.SubmissionManagerLV.BaseStateRequired = 需要默认省/直辖市。
Web.SubmissionManagerLV.DefaultPPEffDateRequired = 需要默认生效日期。
Web.SubmissionManagerLV.Description = 保险产品说明
Web.SubmissionManagerLV.Name = 保险产品名称
Web.SubmissionManagerLV.ProducerCodeRequired = 需要经理人代码。
Web.SubmissionManagerLV.Status = 状态
Web.SubmissionManagerLV.UnavailableProduct = {0}不是可用的保险产品。请选择另一个保险产品或更改形式参数。
Web.SubmissionRejectLetter = 拒绝函
Web.SubmissionRejectLetter.GenerateLetter = 生成函件
Web.SubmissionRejectLetter.GenerateLetter.Unavailable = “生成函件”不可用，因为单证生成已禁用或者不可用。请联系您的管理员。
Web.SubmissionRejectLetterDV.ProductsLabel = 为收到的下列投保单创建函件：
Web.SubmissionRejectLetterDV.RejectReason = 原因代码
Web.SubmissionRejectLetterDV.RejectReasonText = 原因文本（用于信函）
Web.SubmissionRejectLetterLV.EffectiveDate = 生效日期
Web.SubmissionRejectLetterLV.Product = 保险产品
Web.SubmissionRejectLetterLV.ReasonCode = 原因代码
Web.SubmissionRejectLetterLV.ReasonText = 原因文本
Web.SubmissionRejectLetterLV.Status = 状态
Web.SubmissionRejectLetterLV.SubmissionNumber = 投保单号
Web.SubmissionWizard.Account.Applicant.Company.Phone = 办公电话
Web.SubmissionWizard.Account.FEIN = 雇主税号(FEIN)
Web.SubmissionWizard.Account.SSN = SSN
Web.SubmissionWizard.DateQuoteNeeded = 需报价日期
Web.SubmissionWizard.NamedInsured.FEIN = 雇主税号(FEIN)
Web.SubmissionWizard.NamedInsured.IndustryCode = 行业代码
Web.SubmissionWizard.NamedInsured.Relationship = 与主要列名被保险人的关系
Web.SubmissionWizard.NamedInsured.SSN = SSN
Web.SubmissionWizard.OOSE.Conflicts = 冲突
Web.SubmissionWizard.PolicyInfo.AnniversaryDate = 周年日期
Web.SubmissionWizard.PolicyInfo.AnniversaryDate.Error1 = 周年日期必须等于或早于保单生效日期。
Web.SubmissionWizard.PolicyInfo.AnniversaryDate.Error2 = 周年日期必须小于保单生效日期前一年。
Web.SubmissionWizard.PolicyInfo.BaseState = 基本省/直辖市
Web.SubmissionWizard.PolicyInfo.EffectiveDate = 生效日期
Web.SubmissionWizard.PolicyInfo.ExpirationDate = 到期日期
Web.SubmissionWizard.PolicyInfo.PolicyPeriod = 保单详细信息
Web.SubmissionWizard.PolicyInfo.RateAsOfDate = 费率起始日期
Web.SubmissionWizard.PolicyInfo.TermNumber = 期限数
Web.SubmissionWizard.PolicyInfo.TermType = 期限类型
Web.SubmissionWizard.PolicyInfo.WrittenDate = 填写日期
Web.SubmissionWizard.PolicyReview.Card.Differences = 差异
Web.SubmissionWizard.PolicyReview.Card.Summary = 摘要
Web.SubmissionWizard.PolicyReview.DateQuoteNeeded = 需报价日期
Web.SubmissionWizard.PolicyReview.EffectiveDate = 生效日期
Web.SubmissionWizard.PolicyReview.ExpirationDate = 到期日期
Web.SubmissionWizard.PolicyReview.Insured = 主要列名被保险人
Web.SubmissionWizard.PolicyReview.PolicyDetails = 保单详细信息
Web.SubmissionWizard.PolicyReview.Product = 保险产品
Web.SubmissionWizard.PolicyReview.QuoteNotVisible = 投保单已报价，但您没有权限查看生成的报价。
Web.SubmissionWizard.Quote.Completed = 此报价无效，因为投保单为{0}。
Web.SubmissionWizard.Quote.GL.ExposurePremium = 风险单位保费
Web.SubmissionWizard.Quote.GL.Subtotal.TotalCost = {0}总成本
Web.SubmissionWizard.Quote.GL.Subtotal.TotalPremium = {0}保费总额
Web.SubmissionWizard.Quote.SubmissionNo = 投保单编号
Web.SubmissionWizard.Quote.SubmissionRejected = 此投保单是{0}
Web.SubmissionWizard.Quote.WC.Amount = 金额
Web.SubmissionWizard.Quote.WC.Basis = 基本金额
Web.SubmissionWizard.Quote.WC.Desc = 说明
Web.SubmissionWizard.Quote.WC.Loc = 锁定
Web.SubmissionWizard.Quote.WC.OtherPremiumAndTax = 其它保费和费用
Web.SubmissionWizard.Quote.WC.Premium = 保费
Web.SubmissionWizard.Quote.WC.Prorata = 按比例分配
Web.SubmissionWizard.Quote.WC.Rate = 费率
Web.SubmissionWizard.Quote.WC.Subtotal.ManualPremium = 手动保费
Web.SubmissionWizard.Quote.WC.Subtotal.ModifiedPremium = 调整后的保费
Web.SubmissionWizard.Quote.WC.Subtotal.StandardPremium = 标准保费
Web.SubmissionWizard.Quote.WC.Subtotal.SubjectPremium = 从属保费
Web.SubmissionWizard.Quote.WC.Subtotal.TotalCost = {0}总成本
Web.SubmissionWizard.Quote.WC.Subtotal.TotalPremium = {0}保费总额
Web.SubmissionWizard.QuoteReviewMessage.InvalidQuote = 生成了无效的报价。
Web.SubmissionWizard.QuoteReviewMessage.InvalidQuote.ReferToPartialWorksheet = 请查看“操作”菜单上的部分工作表。
Web.SubmissionWizard.QuoteReviewMessage.InvalidQuote.ReferToPartialWorksheetNotVisible = 部分工作表中有其它信息，但您无权查看。请联系管理员。
Web.SubmissionWizard.QuoteReviewMessage.InvalidRate = 生成的费率无效。
Web.SubmissionWizard.QuoteReviewMessage.Quoting = 您的投保单正在报价。
Web.SubmissionWizard.QuoteScreen.Commission_Ext = 佣金
Web.SubmissionWizard.QuoteScreen.Cumulative = 保单保费
Web.SubmissionWizard.QuoteScreen.FutureBlockAtBind = 此报价需要核保批准才可承保。
Web.SubmissionWizard.QuoteScreen.FutureBlockAtIssuance = 此报价需要核保批准才可出单。
Web.SubmissionWizard.QuoteScreen.PolicyCommission_Ext = 保单佣金
Web.SubmissionWizard.QuoteScreen.Transaction = 成本更改详细信息
Web.SubmissionWizard.Title = 投保单{0}
Web.SubmissionWizardMenu.Modifiers = 调整系数
Web.SubmissionWizardMenu.Offerings = 保障组合
Web.SubmissionWizardMenu.Payment = 付款
Web.SubmissionWizardMenu.PolicyInfo = 保单信息
Web.SubmissionWizardMenu.PolicyLines.Forms = 表格
Web.SubmissionWizardMenu.PolicyReview = 保单复核
Web.SubmissionWizardMenu.Qualification = 资格
Web.SubmissionWizardMenu.ViewQuote = 报价
Web.SystemClock.AddDay = 添加天
Web.SystemClock.AddHour = 添加小时
Web.SystemClock.AddMinute = 添加分钟
Web.SystemClock.AddMonth = 添加月份
Web.SystemClock.AddWeek = 添加星期
Web.SystemClock.AddYear = 增加年份
Web.SystemClock.ChangeDate = 更改日期
Web.SystemClock.Date = 日期
Web.SystemClock.InCluster = 此服务器属于群集，但所配置的ITestingClock插件无法更改事个群集的时钟。如果活动服务器的时间不同，将导致出现问题。
Web.SystemClock.NotEnabled = 由于未配置ItestingClock插件，此页面不可编辑。
Web.SystemClock.Title = 测试系统时钟
Web.TabBar.About = 关于
Web.TabBar.Account = 账户
Web.TabBar.Account.AccountNumberSearch = 账号
Web.TabBar.Account.AccountNumberSearch.Error = 无法找到账号{0}或您无权访问它。
Web.TabBar.AddressBook = 通讯簿
Web.TabBar.Admin = 管理
Web.TabBar.Admin.EntityDictionary = 实体字典
Web.TabBar.Admin.ScriptParameters = 脚本参数
Web.TabBar.Admin.Workflows = 工作流
Web.TabBar.Administration = 管理
Web.TabBar.Contact = 联系人
Web.TabBar.Contact.NewContact = 新建联系人
Web.TabBar.Contact.NewContactCompany = 新建公司
Web.TabBar.Contact.NewContactPerson = 新建个人
Web.TabBar.Contact.Search = 搜索
Web.TabBar.Dashboard = 面板
Web.TabBar.Desktop = 桌面
Web.TabBar.HVQSearch.Policies = 报价
Web.TabBar.Help = 帮助
Web.TabBar.Logout = 退出{0}
Web.TabBar.More = 更多...
Web.TabBar.Policy = 保单
Web.TabBar.Policy.NewSubmission = 新投保单
Web.TabBar.Policy.PolicyNumberSearchMenuItem = 保单号
Web.TabBar.Policy.PolicyRetrieval.Error = 无法找到保单号{0}或您无权访问它。
Web.TabBar.Policy.SubmissionNumberSearchMenuItem = 投保单号
Web.TabBar.Policy.SubmissionNumberSearchMenuItem.Error = 无法找到投保单{0}或您无权访问它。
Web.TabBar.Prefs = 首选项
Web.TabBar.Reinsurance = 再保险
Web.TabBar.Reporting = 报告
Web.TabBar.ReturnToApp = 返回到{Global.AppName}
Web.TabBar.Search = 搜索
Web.TabBar.Search.Accounts = 账户
Web.TabBar.Search.Activities = 活动
Web.TabBar.Search.Contacts = 联系人
Web.TabBar.Search.DocumentTemplates = 单证模板
Web.TabBar.Search.Policies = 保单
Web.TabBar.Search.ProducerCodes = 经理人代码
Web.TabBar.SystemAlertBar.PlannedShutdown.DV.CustomMessage = 自定义消息
Web.TabBar.SystemAlertBar.PlannedShutdown.Logout = 退出
Web.TabBar.SystemAlertBar.PlannedShutdown.RollingUpgradeMessage = 滚动升级正在进行中，请保存您的工作并注销，以重定向到新的服务器。
Web.TabBar.SystemAlertBar.PlannedShutdown.ScaleInMessage = 请保存您的工作并注销，以重定向到新的服务器。
Web.TabBar.SystemAlertBar.PlannedShutdown.Title.Early = {Global.AppName}将在{0}后重新启动。
Web.TabBar.SystemAlertBar.PlannedShutdown.Title.Soon = {Global.AppName}很快将重新启动。
Web.TabBar.Team = 团队
Web.TableCatalogStatisticsDV.RangeInput = 选取表以显示状态
Web.TaxLocationSearch.PageTitle = 纳税地点搜索
Web.Team.Activities = {0}：活动{1} {2}
Web.Team.Activities.Assign = 分配
Web.Team.Activities.Header = 活动\n{0}
Web.Team.Activities.Tab = 活动
Web.Team.JobCountToDisplayExceedsMax = {2}中超过{0} {1}。请转到子团队或各个用户进行查看。
Web.Team.LV.AssignedTo = 负责人
Web.Team.Reassign = 分配
Web.Team.Reassign.Assign = 分配
Web.Team.Reassign.ReassignRole = 正在为这些项目重新分配角色{0}。
Web.Team.Reassign.User = 到以下用户：
Web.Team.Renewals = {0}：续保{1} {2}
Web.Team.Renewals.Header = 续保\n{0}
Web.Team.Renewals.Tab = 续保
Web.Team.Submissions = {0}：投保单{1} {2}
Web.Team.Submissions.Header = 投保单\n{0}
Web.Team.Submissions.Tab = 投保单
Web.Team.Summary = {0}：摘要{1}
Web.Team.Summary.Activities.Completed = 已完成
Web.Team.Summary.Activities.Open = 未完成
Web.Team.Summary.Activities.Overdue = 过期
Web.Team.Summary.CalculateDate = （计算日期：{0}）
Web.Team.Summary.Name = 名称
Web.Team.Summary.PolicyChanges.Approved = 已批准
Web.Team.Summary.PolicyChanges.New = 新建
Web.Team.Summary.PolicyChanges.Open = 未完成
Web.Team.Summary.Renewals.New = 新建
Web.Team.Summary.Renewals.NonRenewed = 未续保
Web.Team.Summary.Renewals.NotTaken = 不投保
Web.Team.Summary.Renewals.Open = 未完成
Web.Team.Summary.Renewals.Renewed = 已续保
Web.Team.Summary.Submissions.Bound = 已承保
Web.Team.Summary.Submissions.New = 新建
Web.Team.Summary.Submissions.Open = 未完成
Web.Team.Summary.Tab = 摘要
Web.Team.Summary.ViewJobs = 查看保单交易
Web.Team.Summary.ViewJobs.AndByActivity = 和按活动
Web.Team.Summary.ViewJobs.ByActivity = 按活动
Web.Team.Summary.ViewJobs.ByRole = 按角色
Web.Team.Summary.ViewJobs.For = 针对{0}
Web.Team.Summary.Window.LastDay = 前一天
Web.Team.Summary.Window.LastNDays = 过去{0}天
Web.Team.Summary.Window.ThisMonth = 本月
Web.Team.Summary.Window.ThisWeek = 本周
Web.Team.WorkOrders = {0}：其它待处理保单交易{1} {2}
Web.Team.WorkOrders.Header = 其它保单交易\n{0}
Web.Team.WorkOrders.Tab = 其它保单交易
Web.TemplateImport.CostCategory.Unknown = 未知成本类别：{0}
Web.TemplateImport.CostCategory.UpdateSystemTable = 须向成本类别系统表中添加正确的详细信息
Web.TemplateImport.GenericCost.Unknown = 未知通用成本：{0}
Web.TemplateImport.GenericCost.UpdateSystemTable = 需向CostCode系统表添加正确的详细信息
Web.TemplateImport.Peril.Unknown = 未知危险事故：{0}
Web.TemplateImport.Peril.UpdateSystemTable = 需向危险事故系统表添加正确的详细信息
Web.Theme.Base = Guidewire 桌面蓝
Web.Theme.Dark = Guidewire 桌面黑
Web.Theme.Default = Guidewire Web 绿
Web.Theme.GreenWhiteWebHighContrast = Guidewire 高对比度
Web.Tile.PerformanceIndicator.Label = 包含DisplayKey的绩效指标
Web.Tile.ViewAll = 查看全部
Web.Tile.ViewMore = 查看更多
Web.UWAuthorityProfile.Clone = 克隆
Web.UWAuthorityProfile.Delete.Warning = 您将删除一个或多个配置文件。如果正在进行使用，则它们将会从那些用户中删除而不发出警告。 \n\n是否要继续？
Web.UWAuthorityProfile.New = 新建
Web.UWAuthorityProfile.Profile.Description = 说明
Web.UWAuthorityProfile.Profile.InUseBy = {0}个用户
Web.UWAuthorityProfile.Profile.Name = 名称
Web.UWAuthorityProfile.Title = 权限配置文件
Web.UWIssue.IssueType = 核保项类型
Web.UWIssue.LongDescription = 详细说明
Web.UWIssue.ManualIssue.Title = 新建核保项
Web.UWIssue.RiskApprovalDetailsPopup.ApprovalNoEditBeforeBind = 警告： 您要申请的一项或多项审批“在承保前未编辑”，但该保单已打开，可供编辑。 \n\n您或他人在报价之前执行的任何编辑都不会移除这些审批。
Web.UWIssue.RiskApprovalDetailsPopup.History = 历史记录
Web.UWIssue.RiskApprovalDetailsPopup.NewApproval = 新建审批
Web.UWIssue.RiskApprovalDetailsPopup.NoHistory = 未找到问题的历史记录
Web.UWIssue.RiskApprovalDetailsPopup.ReferenceValue = 当前值： {0}
Web.UWIssue.RiskApprovalDetailsPopup.RiskApprovalDetails = 风险审批详细信息
Web.UWIssue.ShortDescription = 简要说明
Web.UWIssue.ShortDescription.ManualDefault = 特别核保项
Web.UWIssue.ThroughValue.Bind = 承保
Web.UWIssue.ThroughValue.Issuance = 出单
Web.UWIssue.ThroughValue.None = （无）
Web.UWIssue.ThroughValue.Quote = 报价
Web.UWIssue.ThroughValue.QuoteRelease = 报价发布
Web.UWIssue.ThroughValue.RateRelease = 费率发布
Web.UWIssue.UWApprovalLV.EditBeforeBind = 允许编辑？
Web.UWIssue.UWApprovalLV.InvalidFrom = 有效期截止日期
Web.UWIssue.UWApprovalLV.ReferenceValue = 值
Web.UWIssue.UWApprovalLV.ReferenceValueCurrency = 货币
Web.UWIssue.UWApprovalLV.Through = 至
Web.UWIssue.UWIssueHistoryLV.EditBeforeBind = 允许编辑？
Web.UWIssue.UWIssueHistoryLV.HistoryCreateDate = 日期
Web.UWIssue.UWIssueHistoryLV.HistoryEffDate = 生效日期
Web.UWIssue.UWIssueHistoryLV.InvalidFrom = 有效期截止日期
Web.UWIssue.UWIssueHistoryLV.Job = 保单交易
Web.UWIssue.UWIssueHistoryLV.Job.JobAndVersionDescription = {0} #{1} ({2})
Web.UWIssue.UWIssueHistoryLV.Job.JobDescription = {0} #{1}
Web.UWIssue.UWIssueHistoryLV.ReferenceValue = 价值
Web.UWIssue.UWIssueHistoryLV.ResponsibleUser = 用户
Web.UWIssue.UWIssueHistoryLV.ResponsibleUser.Automated = ({0})
Web.UWIssue.UWIssueHistoryLV.Status = 状态
Web.UWIssue.UWIssueHistoryLV.Through = 通过
Web.UWIssue.Value = 价值
Web.UWReferralReasonLV.AddUWReferralReason = 添加核保转交原因
Web.UWReferralReasonLV.Close = 关闭
Web.UWReferralReasonLV.ClosedReferralReasonsCategoryTitle = 已结案转交原因
Web.UWReferralReasonLV.OpenReferralReasonsCategoryTitle = 未决转交原因
Web.UWReferralReasonLV.Reopen = 重新立案
Web.UWReferralReasonLV.ViewDetails = 查看详细信息
Web.UWReferralReasonPopup.Title = 创建新的核保转交原因
Web.UWRequest.Activity.Title = 核保活动
Web.UnanalyzedCatalogsStatsDV.TableName = 表名称
Web.UnanalyzedIndexStatsDV.Name = 索引名称
Web.UnanalyzedIndexStatsDV.TableName = 表名称
Web.UnderwritingFiles.Filter.All = 所有
Web.UnderwritingFiles.Filter.Complete = 完成
Web.UnderwritingFiles.Filter.Open = 未完成
Web.UnderwritingFiles.Filter.RenewalOnly = 仅续保
Web.UnderwritingFiles.Filter.SubmissionAndRenewal = 投保单和续保
Web.UnderwritingFiles.Filter.SubmissionOnly = 仅投保单
Web.UnderwritingFiles.FirstEffectiveDate = 生效日期
Web.UnderwritingFiles.GroupName = 名称
Web.UnderwritingFiles.LastEffectiveDate = 失效日期
Web.UnderwritingFiles.NoWorkOrders = 该账户无待处理保单交易。
Web.UnderwritingFiles.NumJobs = 待处理交易数
Web.UnderwritingFiles.Title = 核保文件
Web.UnderwritingFiles.UnrecognizedJobGroup = 未识别的作业组类型{0}
Web.UnderwritingFiles.WorkOrderType = 交易类型
Web.UnsupportedTools = 内部工具
Web.UnsupportedTools.SampleData.Description = 说明
Web.UnsupportedTools.SampleData.Load = 加载
Web.UnsupportedTools.SampleData.Name = 名称
Web.UnsupportedTools.SampleData.Success = 集“{0}”已成功加载。
Web.UpFrontPayment.Demo.AddressLine1 = 地址行1
Web.UpFrontPayment.Demo.AddressLine2 = 地址行2
Web.UpFrontPayment.Demo.CVC = CVC
Web.UpFrontPayment.Demo.CardDetails = 卡详细信息
Web.UpFrontPayment.Demo.CardNumber = 卡号
Web.UpFrontPayment.Demo.ConfirmationMessage = 您的交易已接受
Web.UpFrontPayment.Demo.Country = 国家/地区
Web.UpFrontPayment.Demo.DemoPaymentGateway = 演示支付网关
Web.UpFrontPayment.Demo.DemoTransactionConfirmationTitle = 演示交易确认
Web.UpFrontPayment.Demo.Error.InvalidCardNumber = 卡号无效
Web.UpFrontPayment.Demo.Error.MissingMandatoryField = 缺少必要字段值：{0}
Web.UpFrontPayment.Demo.ExpirationMonth = 到期月份
Web.UpFrontPayment.Demo.ExpirationYear = 到期年份
Web.UpFrontPayment.Demo.ReturnToMerchantSite = 返回到商户网站
Web.UpFrontPayment.Demo.ShippingAddress = 送货地址
Web.UpFrontPayment.Demo.ShippingTo = 运送至
Web.UpFrontPayment.Demo.TotalPurchaseAmount = 总购买额
Web.UpFrontPayment.Demo.TransactionReference = 交易参考
Web.UpFrontPaymentDV.Add = 添加
Web.UpFrontPaymentDV.Amount = 金额
Web.UpFrontPaymentDV.AmountCheck = 金额不能为空、负数或零
Web.UpFrontPaymentDV.Cash = 现金
Web.UpFrontPaymentDV.Check = 支票
Web.UpFrontPaymentDV.ChooseCard = 选择卡
Web.UpFrontPaymentDV.DifferentCurrencies = 无法使用一种以上货币添加付款
Web.UpFrontPaymentDV.Editable.Synchronize = 同步
Web.UpFrontPaymentDV.Electronic = 电子
Web.UpFrontPaymentDV.Error.CouldNotProcessPaymentGatewayResponse = 目前我们无法处理您的付款请求，因为收到您的付款处理方的以下消息：{0}
Web.UpFrontPaymentDV.Error.UnableToProcessPaymentGatewayResponse = 无法处理支付网关响应：{0}
Web.UpFrontPaymentDV.Error.UnprocessedPaymentTransactions = 存在未处理的付款交易。请单击同步按钮完成处理。
Web.UpFrontPaymentDV.Error.UnprocessedTransactionsAvailable = 有未处理的付款。这可能造成PolicyCenter与支付网关之间的不一致。单击下面的同步按钮完成交易。
Web.UpFrontPaymentDV.Error.UnsupportedTransactionType = 不支持的交易类型：{0}
Web.UpFrontPaymentDV.Error.VoidedTransaction = 我们无法处理您的付款，因为交易已失效
Web.UpFrontPaymentDV.HeldByAgent = 代理人保留
Web.UpFrontPaymentDV.Other = 其它
Web.UpFrontPaymentDV.PaymentInstrument = 付款方式
Web.UpFrontPaymentDV.PaymentInstrumentCheck = 请选择支付工具
Web.UpFrontPaymentDV.Reference = 参考
Web.UpFrontPaymentDV.RemovalConfirmation = 是否确定要移除此项？
Web.UpFrontPaymentDV.Remove = 移除
Web.UpFrontPaymentDV.SaveForFutureUse = 保存以备将来使用
Web.UpFrontPaymentDV.SynchronizationSuccessful = 已成功完成同步。
Web.UpFrontPaymentDV.SynchronizationUnsuccessful = 目前无法完成同步。请稍后再试。
Web.UpFrontPaymentDV.TakePayment = 接受付款
Web.UpFrontPaymentDV.Title = 预付款
Web.UpFrontPaymentDV.Total = 总计：
Web.User.Preferences.PrimaryPhoneType = 主要电话
Web.User.Preferences.UserDefaultCountry = 默认国家/地区
Web.User.Preferences.UserDefaultPhoneRegion = 默认电话区域
Web.User.Preferences.UserLanguage = 用户语言
Web.User.Preferences.UserRegionalFormats = 区域格式
Web.UserAuthority.Authority.Description = 说明
Web.UserAuthority.Authority.Name = 权限配置文件名称
Web.UserPreferences = 首选项
Web.UserPreferences.ConfirmPassword = 确认密码
Web.UserPreferences.MaxRecentAccounts = 最大最近账户数
Web.UserPreferences.MaxRecentContacts = 最大最近联系人数
Web.UserPreferences.MaxRecentPoliciesAndJobs = 最近保单和保单交易最大数
Web.UserPreferences.OldPassword = 旧密码
Web.UserPreferences.Password = 密码
Web.UserPreferences.ProductDesignMode = 保险产品设计模式
Web.UserPreferences.SendEmailOnActivityAssign = 活动分配给我时发送电子邮件通知
Web.UserPreferences.StartupPage = 启动页面
Web.UserRoles.Role.Description = 说明
Web.UserRoles.Role.Name = 名称
Web.UserSearch.NotEnoughInfo = 信息不足 - 请指定更多详细信息以缩小搜索范围。
Web.UserSearch.NotInAnyGroup = 只搜索未分配用户
Web.UserSearch.ProducerCode = 可用的经理人代码
Web.UserSearch.Role = 角色
Web.UserSearch.UserType = 用户类型
Web.UserSearch.Username = 用户名
Web.UserSearchResults.DisplayName = 名称
Web.UserSearchResults.GroupName = 组名称
Web.UserSearchResults.Organization = 机构
Web.UserSearchResults.Username = 用户名
Web.Validation.CloseErrorWindow = 关闭窗口
Web.Validation.ResultsTitle = 校验结果
Web.Wizard.InfoBar.AccountNumber = 账户：
Web.Wizard.InfoBar.CanceledFlatStatus = 已完全取消：{0}
Web.Wizard.InfoBar.CanceledStatus = 已取消：{0}
Web.Wizard.InfoBar.EditLock = 核保审查中
Web.Wizard.InfoBar.EffectiveDate = 生效日期：{0}
Web.Wizard.InfoBar.JobEditLock = 核保审查中的保单交易
Web.Wizard.InfoBar.JobStatus = {0} ({1})
Web.Wizard.InfoBar.PolicyNumber = 保单：
Web.Wizard.InfoBar.StatusAndExpDate = {0}（到期日期：{1}）
Web.Wizard.InfoBar.Underwriter = 核保人：
Web.Wizard.InfoBar.WorkflowStatus = 工作流：（{0}）
Web.Wizard.LineWizardStepGroup = 保单合同
Web.Wizard.LineWizardStepGroup.WorkersComp = 雇主责任险承保范围
Web.Wizard.QuoteReviewMessage.SoftDeclined = {0}需要更改才可报价。
Web.WorkItem.Attempts = 尝试
Web.WorkItem.AvailableAt = 可用
Web.WorkItem.CheckedOutBy = 服务器
Web.WorkItem.CreateTime = 创建时间
Web.WorkItem.Exception = 错误
Web.WorkItem.Id = ID
Web.WorkItem.InstanceId = 编写程序
Web.WorkItem.NumRetries = 重试次数
Web.WorkItem.UpdateTime = 更新时间
Web.WorkQueueExecutors.Title = 按执行人
Web.WorkQueueExecutorsLv.ClusterWideState = 群集范围内的状态
Web.WorkQueueExecutorsLv.Exceptions = 异常
Web.WorkQueueExecutorsLv.Failed = 失败项
Web.WorkQueueExecutorsLv.Hostname = 主机名称
Web.WorkQueueExecutorsLv.MaxWorkers = 工人的最大数量
Web.WorkQueueExecutorsLv.Orphans = 收回的孤立项
Web.WorkQueueExecutorsLv.ProcessedItemCount = 已处理项目
Web.WorkQueueExecutorsLv.Skipped = 跳过项目
Web.WorkQueueExecutorsLv.Started = 已启动
Web.WorkQueueExecutorsLv.Status = 状态
Web.WorkQueueExecutorsLv.Stopped = 已停用
Web.WorkQueueExecutorsLv.Success = 成功
Web.WorkQueueExecutorsLv.UpTime = 正常运行时间
Web.WorkQueueExecutorsLv.Writer = 编写程序
Web.WorkQueueItemsByWriter.Title = 按编写程序
Web.WorkQueueItemsByWriterLv.AvailableItemCount = 有效
Web.WorkQueueItemsByWriterLv.CheckedOutItemCount = 已检出
Web.WorkQueueItemsByWriterLv.CreationItem = 项目创建时间
Web.WorkQueueItemsByWriterLv.ExecutionTime = 执行时间
Web.WorkQueueItemsByWriterLv.FailedCount = 失败
Web.WorkQueueItemsByWriterLv.ItemCount = 项目数
Web.WorkQueueItemsByWriterLv.LastWorkerEndTime = 工作线程结束时间
Web.WorkQueueItemsByWriterLv.ProcessId = 进程ID
Web.WorkQueueItemsByWriterLv.Scheduled = 已计划
Web.WorkQueueItemsByWriterLv.ServerId = 服务器
Web.WorkQueueItemsByWriterLv.SucceededItemCount = 成功
Web.WorkQueueWorkItems.Restart = 重新启动
Web.WorkQueueWorkItems.Title = 工作项目
Web.WorkQueueWorkerRunsInfo.Title = 工作线程运行
Web.WorkQueueWorkerRunsLv.Duration = 持续时间
Web.WorkQueueWorkerRunsLv.EndTime = 结束
Web.WorkQueueWorkerRunsLv.ExceptionItemCount = 异常
Web.WorkQueueWorkerRunsLv.FailedItemsCount = 失败孤立项计数
Web.WorkQueueWorkerRunsLv.ProcessedItemCount = 已处理
Web.WorkQueueWorkerRunsLv.ReclaimedItemsCount = 收回的孤立项
Web.WorkQueueWorkerRunsLv.StartTime = 开始
Web.WorkQueueWorkerRunsLv.SuccessFlag = 成功
Web.WorkQueueWorkers.Title = 按任务
Web.WorkQueueWorkersLv.Active = 活动
Web.WorkQueueWorkersLv.CheckedOut = 已检出项目
Web.WorkQueueWorkersLv.ConsecutiveErrors = 连续错误
Web.WorkQueueWorkersLv.Duration = 持续时间
Web.WorkQueueWorkersLv.Ended = 结束
Web.WorkQueueWorkersLv.Hostname = 主机名称
Web.WorkQueueWorkersLv.InstanceId = ID
Web.WorkQueueWorkersLv.LastAwakened = 上次唤醒时间
Web.WorkQueueWorkersLv.LastBatch = 找到的上一个批处理
Web.WorkQueueWorkersLv.LastException = 上一个异常
Web.WorkQueueWorkersLv.LastSuccessfulWorkItem = 上次成功
Web.WorkQueueWorkersLv.ProcessedItemCount = 已处理项目
Web.WorkQueueWorkersLv.ShowRuns = 显示运行
Web.WorkQueueWorkersLv.Started = 已启动
Web.WorkQueueWorkersLv.Success = 成功
Web.WorkQueueWorkersLv.TaskFilter = 任务
Web.WorkQueueWorkersLv.UpTime = 正常运行时间
Web.WorkQueueWorkersLv.WriterId = 编写程序
Web.Workplan.Activities = 活动
Web.Workplan.Assign = 分配
Web.Workplan.AssignedBy = 分配人
Web.Workplan.AssignedTo = 负责人
Web.Workplan.Complete = 完成
Web.Workplan.Due = 到期日期
Web.Workplan.EscalationDate = 升级日期
Web.Workplan.Priority = 优先级
Web.Workplan.Skip = 跳过
Web.Workplan.Status = 状态
Web.Workplan.Subject = 主题
Web.XMind.AddDescription = {0}：请添加正确的说明
Web.XMind.Node.Attribute = 属性
Web.XMind.Node.Clause = 条款
Web.XMind.Node.ClauseCategory = 条款类别
Web.XMind.Node.Condition = 条件
Web.XMind.Node.Coverage = 承保范围
Web.XMind.Node.Exclusion = 免责项
Web.XMind.Node.ProductLine = 险类
Web.XMind.Node.RiskObject = 风险对象
Web.XMind.Node.ScheduleRiskObject = 风险对象（计列项）
Webservice.Error.CannotDeactivateAccountHolder = 无法取消激活账户所有者。
Webservice.Error.CannotFindAccount = 找不到账号为{0}的账户
Webservice.Error.CannotFindAddressByPublicID = 找不到公共ID为{0}的地址
Webservice.Error.CannotFindContactByAddressBookUID = 找不到通讯簿UID为{0}的联系人
Webservice.Error.CannotFindContactByPublicID = 找不到公共ID为{0}的联系人
Webservice.Error.CannotFindEntity = 找不到公共ID为“{1}”的{0}。
Webservice.Error.CannotFindPolicyByPublicID = 找不到公共ID为{0}的保单
Webservice.Error.CannotFindPolicyForPolicyNumber = 无法找到PolicyNumber为{0}且日期为{1}的保单
Webservice.Error.CannotFindProducerCode = 无法找到PublicID为{0}的经理人代码
Webservice.Error.CannotFindProductCode = 无法找到代码为{0}的产品
Webservice.Error.CannotFindUWReferralReason = 键值为{1}类型为{2}的保单{0}不存在核保转交原因
Webservice.Error.CannotRemoveAccountHolder = 无法移除联系人{0}，因为该联系人为账户{1}的账户所有者
Webservice.Error.CannotRemoveContactUnlessAutoSyncIsAllowed = 除非允许自动同步，否则无法移除联系人{0}。
Webservice.Error.CannotUpdateContactUnlessAutoSyncIsAllowed = 除非允许自动同步，否则无法更新联系人{0}。
Webservice.Error.ContactAlreadyExists = 联系人已存在
Webservice.Error.ContactNotOnAccount = 联系人： {0}不在账户： {1}中
Webservice.Error.ContactToRemoveHasAtLeastOneRoleInUse = 无法移除联系人{0}，因其至少有一个角色正在使用：{1}
Webservice.Error.Currency.Unknown = 未知货币代码：{0}。
Webservice.Error.EarnedBeforePeriodStart = 已赚得起始日期{0}早于期间开始日期{1}
Webservice.Error.IncludeEBURNotValidForPolicy = 包括对于非报告保单而言无效的EBUR
Webservice.Error.MissingRequiredField = 必填字段“{0}”为空
Webservice.Messaging.Ack.Required = 需要确认参数
Webservice.Messaging.CutoffDateRequired = 必须指定中断日期。
Webservice.Messaging.DestinationIdInvalid = 目标id“{0}”无效
Webservice.Messaging.MessageIdInvalid = 消息id“{0}”无效
WorkersComp.CoveredEmployee.NotInWindowMode = 必须处于窗口模式
WorkersComp.InsuredStates.CannotIncludeNonMonopolisticState = {0}不是雇主责任险垄断省。
WorkersComp.InsuredStates.CannotInsureCoveredState = 无法保险{0}，它是承保的省/直辖市（有其赔付明细）
WorkersComp.InsuredStates.CannotInsureMonopolisticState = 无法投保{0}，其为垄断省/直辖市。
WorkersComp.InsuredStates.ListRequired = 请输入要包含的省/直辖市列表。
WorkersComp.InsuredStates.MustExcludeMonopolisticState = 请排除垄断的省/直辖市：{0}用于其它省/直辖市的保险承保范围。
WorkersComp.Jurisdiction.CannotRemove = 管辖权{0}无法移除，因为它仍具有承保雇员。
WorkersComp.Jurisdiction.CannotSplitRPSD = 不允许拆分费率期开始日期(RPSD)。
WorkersComp.Jurisdiction.DateOutsidePeriod = 日期{0}在保单期限之外，期限({1}, {2})
WorkersComp.Jurisdiction.MultipleRPSDs = 非法费率期开始日期(RPSD)： 找到多个开始日期\={0}、类型\={1}的评价期间开始日期
WorkersComp.Jurisdiction.NoDateFound = 找不到包含“{0}”的评价日期范围; 评价日期列表为（{1}）
config.duplicateNodes = 配置文件中定义了多个同名的节点
config.nodeNotFound = 未在配置文件中找到节点{0}
config.primaryNotFound = 配置文件中未定义主节点{0}
entity.APDInvolvedParty = 相关方
entity.APDManualPolicyLine = 手工保险产品险类
entity.APDPolicyInvolvedParty = 相关方
entity.Account = 账户
entity.AccountHolder = 账户所有者
entity.AccountingContact = 会计联系人
entity.Activity = 活动
entity.AdditionalInsured = 附加被保险人
entity.AdditionalInterest = 其他权益方
entity.AddlInterestDetail.AdditionalInterestType = 权益方类型
entity.AddlInterestDetail.CertRequired = 要求提供证书
entity.AddlInterestDetail.ContractNumber = 合同编号
entity.Address = 地址
entity.Adjudicator = 审判员
entity.Adjudicator.PrimaryLocale = 主要区域设置
entity.Approvable = 可批准
entity.Assignable = 可分配
entity.Attribute = 属性
entity.Audit = 审计
entity.Auditable = 可审计
entity.Auditable.AuditedAmount = 审计金额
entity.BAHiredAutoBasis.Basis = 基本信息
entity.BAHiredAutoBasis.IfAnyExposure = 是否有
entity.BAHiredSpecPerilCov = 租用汽车的特定损失原因
entity.BAHiredSpecPerilCov.HiredCauseOfLoss = 租用汽车损失原因
entity.BAJurisdiction = 管辖权
entity.BAJurisdiction.HiredAutoBasis = 租用汽车基本信息
entity.BAJurisdiction.NonOwnedBasis = 非自有基本信息
entity.BAJurisdiction.State = 省/直辖市
entity.BANonOwnedBasis.NumEmployees = 雇员数
entity.BANonOwnedBasis.NumPartners = 合作伙伴数
entity.BANonOwnedBasis.NumVolunteers = 志愿者数
entity.BAPolicyContactRole.BusinessAutoLine = 商用车险险类
entity.BASpecCausesLossCov = 指定损失原因
entity.BASpecCausesLossCov.SpecifiedCauseOfLoss = 指定损失原因
entity.BAVhcleAddlInterest = 商用车车辆的其他权益方
entity.BOPBldgAddlInterest = 中小企业财产责任险 - 建筑物其他权益方
entity.BOPBuilding = 中小企业财产责任险 - 建筑物
entity.BOPBuilding.BasisAmount = 基本金额
entity.BOPBuilding.Building = 建筑物
entity.BOPBuilding.ClassCode = 分类代码
entity.BOPBuilding.ConstructionType = 建筑类型
entity.BOPBuilding.NumDiving = 跳板数
entity.BOPBuilding.NumPools = 游泳池数
entity.BOPLocation = 中小企业财产责任险 - 地点
entity.BOPLocation.CityLimits = 城市范围
entity.BOPLocation.Location = 地点
entity.BOPLocation.PrincipalOpsDesc = 主营业务描述
entity.BOPLocation.RiskClass = 风险类
entity.BOPPolicyContactRole.BusinessOwnersLine = 中小企业财产责任险险类
entity.BOPScheduledEquipment = 中小企业财产责任险 - 计列设备
entity.BOPScheduledEquipment.Description = 说明
entity.BOPScheduledEquipment.EquipmentNumber = 设备编号
entity.BOPScheduledEquipment.EquipmentValue = 设备价值
entity.BOPScheduledEquipment.SerialNumber = 序列号
entity.BillingContact = 计费联系人
entity.Building = 建筑物
entity.Building.AlarmCertificate = 报警凭证
entity.Building.AlarmCertification = 报警认证
entity.Building.AlarmClass = 报警类
entity.Building.AlarmExpiration = 报警到期
entity.Building.AlarmGrade = 报警级
entity.Building.AreaFinished = 已完成面积
entity.Building.AreaLeased = 租赁面积
entity.Building.AreaUnfinished = 未完成面积
entity.Building.BasementArea = 地下室面积
entity.Building.BuildingAlarmType = 报警类型
entity.Building.BuildingNum = 建筑物编号
entity.Building.BurglarySafeguard = 防盗
entity.Building.ConstructionType = 建筑类型
entity.Building.Description = 说明
entity.Building.EffectivenessGrade = 效力级别
entity.Building.HeatingBoilerElsewhere = 其它地点的采暖锅炉
entity.Building.HeatingBoilerOnPremises = 经营场所中的采暖锅炉
entity.Building.InterestType = 权益方类型
entity.Building.NumBasements = 地下室数
entity.Building.NumStories = 楼层数
entity.Building.NumUnits = 单元数
entity.Building.PercentOccupied = 使用比例
entity.Building.PercentVacant = 空置百分比
entity.Building.RentedOthers = 已租给其他人
entity.Building.RoofType = 屋顶类型
entity.Building.SprinklerCoverage = 消防喷头承保范围
entity.Building.TotalArea = 总面积
entity.Building.WindRating = 抗风能力
entity.Building.YearBuilt = 建造年份
entity.BuildingImprovement.BuildingImprType = 建筑物修缮类型
entity.BuildingImprovement.Notes = 备注
entity.BuildingImprovement.YearAdded = 添加年份
entity.BuildingSide.BuildingSideType = 建设方类型
entity.BuildingSide.Description = 说明
entity.BusinessAutoLine = 商用车保险
entity.BusinessAutoLine.AutoSymbolsManualEditDate = 汽车符号手动编辑日期
entity.BusinessAutoLine.BusinessVehicleAutoNumberSeq = 商务车 - 汽车数序
entity.BusinessAutoLine.CustomAutoSymbolDesc = 自定义汽车符号说明
entity.BusinessAutoLine.Fleet = 车队
entity.BusinessAutoLine.PolicyType = 保单类型
entity.BusinessOwnersLine = 中小企业财产责任险 - 
entity.BusinessOwnersLine.BlanketType = 统括类型
entity.BusinessOwnersLine.EquipmentAutoNumberSeq = 设备自动编号序列
entity.BusinessOwnersLine.SmallBusinessType = 小企业类型
entity.BusinessOwnersLine.ViewBundledCoverages = 查看捆绑承保范围
entity.BusinessVehicle = 商务车
entity.BusinessVehicle.AntiLockBrakes = 防锁死刹车系统
entity.BusinessVehicle.AntiTheft = 防盗
entity.BusinessVehicle.BodyType = 车身类型
entity.BusinessVehicle.Color = 颜色
entity.BusinessVehicle.CostNew = 新车购置成本
entity.BusinessVehicle.DestinationZone = 目的地区域
entity.BusinessVehicle.DoesUMUIMApply = UMUIM是否适用
entity.BusinessVehicle.Experience = 经验
entity.BusinessVehicle.Industry = 行业
entity.BusinessVehicle.IndustryUse = 行业用途
entity.BusinessVehicle.IntraInterStateUsage = 省际用途
entity.BusinessVehicle.LeaseOrRent = 租赁或租用
entity.BusinessVehicle.LengthOfLease = 租期
entity.BusinessVehicle.LicensePlate = 车牌号
entity.BusinessVehicle.LicenseState = 驾照所属省/直辖市
entity.BusinessVehicle.Location = 地点
entity.BusinessVehicle.Make = 厂牌
entity.BusinessVehicle.Model = 车型
entity.BusinessVehicle.OriginationZone = 起始区域
entity.BusinessVehicle.OwnedByPoliticalSub = 由行政区域拥有
entity.BusinessVehicle.PipCovered = 人身伤害险承保范围
entity.BusinessVehicle.PrimaryUse = 主要用途
entity.BusinessVehicle.SafeDrivingCert = 安全驾驶凭证
entity.BusinessVehicle.StatedValue = 设定价值
entity.BusinessVehicle.VehicleClassCode = 车辆分类代码
entity.BusinessVehicle.VehicleCondition = 车况
entity.BusinessVehicle.VehicleNumber = 车辆编号
entity.BusinessVehicle.VehicleRadius = 搜寻半径
entity.BusinessVehicle.VehicleSizeClass = 尺寸分类
entity.BusinessVehicle.VehicleType = 车辆类型
entity.BusinessVehicle.Vin = 车辆识别号码
entity.BusinessVehicle.Year = 年份
entity.BusinessVehicle.YearPurchased = 购买年份
entity.CPBlanket = 商业财产统括保险
entity.CPBlanket.BlanketGroupType = 组类型
entity.CPBlanket.BlanketType = 统括类型
entity.CPBlanket.CPBlanketDescription = 商业财产险统括说明
entity.CPBlanket.CPBlanketNum = 企业财产险 - 统括编号
entity.CPBlanket.CPBuildingCovName = 企业财产险 - 建筑物承保范围名称
entity.CPBlanket.CPLocation = 企业财产险 - 地点
entity.CPBlanketCov = 企业财产统括保险的承保范围
entity.CPBldgAddlInterest = 商业地产建筑物其他权益方
entity.CPBuilding = 商业地产建筑物
entity.CPBuilding.Building = 建筑物
entity.CPBuilding.ClassCode = 分类代码
entity.CPBuilding.CoverageForm = 承保范围形式
entity.CPBuilding.RateType = 费率类型
entity.CPLocation = 企业财产险地点
entity.CPLocation.Location = 地点
entity.CPLocation.PrincipalOpsDesc = 主营业务描述
entity.CPPolicyContactRole.CommercialPropertyLine = 企业财产险类
entity.Cancellation = 取消
entity.Claim = 赔案
entity.ClaimsInfoContact = 理赔信息联系人
entity.Clause = 子句
entity.CommercialDriver.DateOfBirth = 出生日期
entity.CommercialDriver.DriverTraining = 司机培训
entity.CommercialDriver.FirstName = 名字
entity.CommercialDriver.FirstNameKanji = 名字（汉字）
entity.CommercialDriver.Gender = 性别
entity.CommercialDriver.GoodDriverDiscount = 优秀司机折扣
entity.CommercialDriver.HireDate = 雇用日期
entity.CommercialDriver.LastName = 姓氏
entity.CommercialDriver.LastNameKanji = 姓氏（汉字）
entity.CommercialDriver.LicenseNumber = 驾驶证编号
entity.CommercialDriver.LicenseState = 驾照所属省/直辖市
entity.CommercialDriver.MaritalStatus = 婚姻状况
entity.CommercialDriver.MatureDriverTraining = 成熟司机培训
entity.CommercialDriver.NumberofAccidents = 事故数
entity.CommercialDriver.NumberofViolations = 违章次数
entity.CommercialDriver.SeqNumber = 序号
entity.CommercialDriver.Student = 学生
entity.CommercialDriver.YearLicensed = 获得驾照年份
entity.CommercialDriver.YearsExperience = 驾龄
entity.CommercialPropertyLine = 企业财产险
entity.CommercialPropertyLine.CPBlanketAutoNumberSeq = 企业财产险 - 统括汽车数序
entity.Company = 公司
entity.Company.PrimaryLocale = 主要区域设置
entity.CompanyVendor = 经销商（公司）
entity.CompanyVendor.PrimaryLocale = 主要区域设置
entity.Contact = 联系人
entity.Contact.PrimaryLocale = 主要区域设置
entity.Contingency = 事故
entity.ContractorsEquipPart = 承包商设备
entity.ContractorsEquipPart.Coinsurance = 共同保险
entity.ContractorsEquipPart.ContrEqPartAutoNumberSeq = 承包商设备部分 - 汽车数序
entity.ContractorsEquipPart.ContractorType = 承包商类型
entity.ContractorsEquipPart.PerOccurrenceLimit = 每次事故发生限额
entity.ContractorsEquipPart.Reporting = 报告
entity.ContractorsEquipment.ContractorsEquipmentID = 设备ID
entity.ContractorsEquipment.ContractorsEquipmentNumber = 设备编号
entity.ContractorsEquipment.Description = 说明
entity.ContractorsEquipment.Manufacturer = 制造商
entity.ContractorsEquipment.Model = 车型
entity.ContractorsEquipment.ModelYear = 型号和年份
entity.ContractorsEquipment.YearBought = 购买年份
entity.Cost = 成本
entity.Coverable = 承保项
entity.Coverable.InitialConditionsCreated = 已创建初始条件
entity.Coverable.InitialCoveragesCreated = 已创建初始承保范围
entity.Coverable.InitialExclusionsCreated = 已创建初始免责项
entity.Coverable.PreferredCoverageCurrency = 首选承保范围货币
entity.Coverable.ReferenceDateInternal = 参考日期
entity.Coverage = 承保范围
entity.Coverage.Currency = 货币
entity.Coverage.ReferenceDateInternal = 参考日期
entity.CoverageSymbol.Description = 说明
entity.Credential = 证书
entity.DestructionRootPinnable.DoNotDestroy = 不销毁
entity.DiagRateflowParamRef = 诊断费率厘定工作表形式参数引用
entity.DiagRateflowParamRef.CalcRoutineParameter = 计算例程参数
entity.DiagRateflowParamRef.StringValue = 字符串值
entity.DiagRatingWorksheetRef.ReferencedID = 引用的ID
entity.DiagRatingWorksheetRef.ReferencedType = 引用的类型
entity.DiagnosticRatingWorksheet.DiagnosticCapture = 诊断捕获
entity.DiagnosticRatingWorksheet.Reason = 原因
entity.DiagnosticRatingWorksheet.TextData = 文本数据
entity.Document = 文档
entity.Driver = 司机
entity.DwellingAnimal = 住宅内动物
entity.DwellingAnimal.AdditionalInformation = 附加信息
entity.DwellingAnimal.AnimalBiteHistory = 咬伤历史记录
entity.DwellingAnimal.AnimalBreed = 种类
entity.DwellingAnimal.AnimalType = 类型
entity.DwellingHazard = 住宅危险
entity.DwellingHazard.AdditionalInformation = 附加信息
entity.DwellingHazard.HazardType = 类型
entity.DwellingHazard.SpecificHazard = 特定风险
entity.ETLDirectCovTermPattern = ETLDirectCovTermPattern
entity.ETLGenericCovTermPattern = ETLGenericCovTermPattern
entity.ETLOptionCovTermPattern = ETLOptionCovTermPattern
entity.ETLPackageCovTermPattern = ETLPackageCovTermPattern
entity.ETLTypekeyCovTermPattern = ETLTypekeyCovTermPattern
entity.Editable = 可编辑
entity.EffDated.ChangeType = 更改类型
entity.EffDated.EffectiveDate = 生效日期
entity.EffDated.ExpirationDate = 到期日期
entity.EffDatedBranch.AllowGapsBefore = 以下日期前允许缺口：
entity.EffDatedBranch.BasedOnDate = 所基于的日期
entity.EffDatedBranch.CancellationDate = 取消日期
entity.EffDatedBranch.EditEffectiveDate = 编辑生效日期
entity.EffDatedBranch.FuturePeriods = 未来期间
entity.EffDatedBranch.Locked = 已锁定
entity.EffDatedBranch.ModelDate = 模型日期
entity.EffDatedBranch.ModelNumber = 型号
entity.EffDatedBranch.ModelNumberIndex = 型号索引
entity.EffDatedBranch.MostRecentModel = 最新模型
entity.EffDatedBranch.MostRecentModelIndex = 最新模型索引
entity.EffDatedBranch.PeriodEnd = 期限结束日期
entity.EffDatedBranch.PeriodStart = 期间开始日期
entity.EffDatedBranch.Preempted = 占先
entity.EffDatedBranch.TemporaryBranch = 临时分支
entity.EffectiveDatedFields.BillingContact = 计费联系人
entity.EffectiveDatedFields.OfferingCode = 保障组合
entity.EffectiveDatedFields.PolicyAddress = 保单地址
entity.EffectiveDatedFields.PrimaryLocation = 主要地点
entity.EffectiveDatedFields.PrimaryNamedInsured = 主要列名被保险人
entity.EffectiveDatedFields.ProducerCode = 经理人代码
entity.EffectiveDatedFields.SecondaryNamedInsured = 次要列名被保险人
entity.Exclusion = 免责项
entity.Exclusion.Currency = 货币
entity.Exclusion.ReferenceDateInternal = 参考日期
entity.Extractable = 可提取
entity.Extractable.ArchivePartition = 存档分区
entity.Facultative = 临时分保
entity.Form = 表格
entity.FrozenSetMember.FrozenSet = 冻结集
entity.GLExposure = 赔付明细
entity.GLExposure.AuditedBasis = 已审计基本信息
entity.GLExposure.ClassCodeInternal = 分类代码
entity.GLExposure.Description = 说明
entity.GLExposure.FixedBasisAmount = 固定的基本金额
entity.GLExposure.Location = 地点
entity.GLExposure.ScalableBasisAmount = 可按比例确定的基本金额
entity.GLLineScheduleCovItem.ScheduledItemClause = 条款
entity.GLPolicyContactRole.GeneralLiabilityLine = 一般责任险类
entity.GeneralLiabilityLine = 一般责任险
entity.GeneralLiabilityLine.ClaimsMadeOrigEffDate = 提出理赔的原始生效日期
entity.GeneralLiabilityLine.GLCoverageForm = 一般责任险承保范围形式
entity.GeneralLiabilityLine.LocationLimits = 地点限额
entity.GeneralLiabilityLine.PollutionCleanupExp = 污染清除到期
entity.GeneralLiabilityLine.RetroactiveDate = 追溯日期
entity.GeneralLiabilityLine.SplitLimits = 分割限额
entity.Group = 组
entity.HOPCovPartSchCondItem.ScheduledItemClause = 条款
entity.HOPCovPartSchExclItem.ScheduledItemClause = 条款
entity.HOPCovPartScheduleCovItem.ScheduledItemClause = 条款
entity.HOPCoveragePart.CoveragePartType = 承保范围部分类型
entity.HOPCoveragePartCond = HOP CoveragePart条件
entity.HOPCoveragePartExcl = HOP CoveragePart免责项
entity.HOPCoveragePartMod = HOP CoveragePart调整系数
entity.HOPCoveragePartRF = HOP CoveragePart RateFactor
entity.HOPDwellAddlInterest = 住宅其他权益方
entity.HOPDwellAddlInterest.AddlIntEffDate = 其他权益方生效日期
entity.HOPDwellAddlInterest.AddlIntExpDate = 其他权益方到期日期
entity.HOPDwellAddlInterest.Description = 说明
entity.HOPDwellScheduleCondItem.ScheduledItemClause = 条款
entity.HOPDwellScheduleCovItem.ScheduledItemClause = 条款
entity.HOPDwellScheduleExclItem.ScheduledItemClause = 条款
entity.HOPDwelling = 住宅
entity.HOPDwelling.BurglarAlarmType = 防盗报警类型
entity.HOPDwelling.ConstructionType = 建筑类型
entity.HOPDwelling.ConstructionTypeDescription = 建筑类型说明
entity.HOPDwelling.CoverageForm = 承保范围形式
entity.HOPDwelling.Deadbolts = 固定栓
entity.HOPDwelling.DistanceToFireHydrant = 到消防栓的距离
entity.HOPDwelling.DistanceToFireStation = 到消防站的距离
entity.HOPDwelling.DwellingLocation = 住宅地点
entity.HOPDwelling.DwellingUsage = 使用情况
entity.HOPDwelling.ElectricalSystemUpgradeDate = 电气系统升级日期
entity.HOPDwelling.ElectricalType = 电气类型
entity.HOPDwelling.FireAlarmType = 消防报警类型
entity.HOPDwelling.FireplaceOrWoodStovesNumber = 壁炉或火炉数
entity.HOPDwelling.FloodingHazard = 水灾危险
entity.HOPDwelling.Foundation = 地基
entity.HOPDwelling.GarageType = 车库类型
entity.HOPDwelling.HeatingUpgradeDate = 供暖系统升级日期
entity.HOPDwelling.InsuredUnits = 被保险人单元
entity.HOPDwelling.KnownWaterLeakage = 已知的漏水
entity.HOPDwelling.KnownWaterLeakageDescription = 已知的漏水说明
entity.HOPDwelling.Location = 地点
entity.HOPDwelling.NearCommercial = 接近商业区
entity.HOPDwelling.NumberOfFireExtinguishers = 灭火器数
entity.HOPDwelling.Occupancy = 使用
entity.HOPDwelling.PlumbingType = 管道系统类型
entity.HOPDwelling.PlumbingTypeDescription = 管道系统类型说明
entity.HOPDwelling.PlumbingUpgradeDate = 管道系统升级日期
entity.HOPDwelling.PrimaryHeatingDescription = 主要供暖系统说明
entity.HOPDwelling.PrimaryHeatingFuelLineLocation = 主要供暖系统燃料管路位置
entity.HOPDwelling.PrimaryHeatingFuelTankLocation = 主要供暖系统燃料桶位置
entity.HOPDwelling.PrimaryHeatingType = 主要供暖系统类型
entity.HOPDwelling.ReplacementCost = 重置成本
entity.HOPDwelling.ResidenceType = 住宅类型
entity.HOPDwelling.RoofType = 屋顶类型
entity.HOPDwelling.RoofTypeDescription = 屋顶类型说明
entity.HOPDwelling.RoofingUpgradeDate = 屋顶升级日期
entity.HOPDwelling.RoomerBoardersNumber = 寄宿者/寄膳者数
entity.HOPDwelling.SecondaryHeatingType = 次要供暖系统类型
entity.HOPDwelling.SmokeAlarm = 烟雾报警
entity.HOPDwelling.SprinklerSystemType = 洒水装置系统类型
entity.HOPDwelling.StoriesNumber = 楼层数
entity.HOPDwelling.SwimmingPool = 游泳池
entity.HOPDwelling.TrampolineExists = 存在弹簧床
entity.HOPDwelling.TrampolineSafetyNet = 弹簧床安全网
entity.HOPDwelling.UnitsNumber = 单元数
entity.HOPDwelling.VisibleToNeighbors = 邻居可以看见
entity.HOPDwelling.WiringType = 电线类型
entity.HOPDwelling.YearBuilt = 建造年份
entity.HOPDwellingCond = 住宅条件
entity.HOPDwellingCov = 住宅承保范围
entity.HOPDwellingMod = 住宅调整系数
entity.HOPDwellingRF = 住宅RateFactor
entity.HOPLine = 家庭财产险
entity.HOPLineCond = 家庭财产险条件
entity.HOPLineExcl = 家庭财产险免责项
entity.HOPLineMod = 家庭财产险调整系数
entity.HOPLineRF = 家庭财产险RateFactor
entity.HOPLineScheduleCondItem.ScheduledItemClause = 条款
entity.HOPLineScheduleCovItem.ScheduledItemClause = 条款
entity.HOPLineScheduleExclItem.ScheduledItemClause = 条款
entity.HOPSwimmingPool = 游泳池
entity.HOPSwimmingPool.AdditionalInformation = 附加信息
entity.HOPSwimmingPool.ApprovedFence = 已批准的围栏
entity.HOPSwimmingPool.DivingBoard = 跳板
entity.HOPSwimmingPool.PoolType = 游泳池类型
entity.HOPSwimmingPool.Slide = 滑梯
entity.History = 历史记录
entity.Holiday = 假期
entity.IMAccountsRecPart = 其它财产险应收账款部分
entity.IMAccountsRecPart.ARAutoNumberSeq = 应收账款 - 汽车数序
entity.IMAccountsRecPart.BusinessClass = 业务类别
entity.IMAccountsRecPart.Coinsurance = 共同保险
entity.IMAccountsRecPart.Description = 说明
entity.IMAccountsRecPart.Reporting = 报告
entity.IMAccountsReceivable = 其它财产险类应收账款
entity.IMAccountsReceivable.AccountsRecNumber = 应收账款数
entity.IMAccountsReceivable.Description = 说明
entity.IMAccountsReceivable.ForwardToHomeOffice = 转发到总部
entity.IMAccountsReceivable.IMBuilding = 其它财产险 - 建筑物
entity.IMAccountsReceivable.PercentDuplicated = 重复的百分比
entity.IMAccountsReceivable.ReceptacleType = 贮藏器类型
entity.IMBuilding = 其它财产险建筑物
entity.IMBuilding.Building = 建筑物
entity.IMExcludedAccount.AccountNumber = 账号
entity.IMExcludedAccount.Description = 说明
entity.IMLocation = 其它财产险地点
entity.IMLocation.Location = 地点
entity.IMPolicyContactRole.InlandMarineLine = 其它财产险种
entity.IMSchEquipAddlInterest = 其它财产险计列设备其他权益方
entity.IMSign = 其它财产标志险
entity.IMSign.Description = 说明
entity.IMSign.IMLocation = 其它财产险 - 地点
entity.IMSign.Interior = 内饰
entity.IMSign.SignNumber = 标志编号
entity.IMSign.SignType = 标志类型
entity.IMSignPart = 其它财产标志险部分
entity.IMSignPart.Coinsurance = 共同保险
entity.IMSignPart.SignAutoNumberSeq = 标牌 - 汽车数序
entity.InclusionPerson.Duties = 职责
entity.InclusionPerson.FirstName = 名字
entity.InclusionPerson.Inclusion = 包含
entity.InclusionPerson.LastName = 姓氏
entity.InclusionPerson.Relationship = 关系
entity.InclusionPerson.State = 省/直辖市
entity.InlandMarineLine = 其它财产险类
entity.InspectionContact = 检查联系人
entity.InvoiceStreamOverrides = 发票流覆盖
entity.Issuance = 出单
entity.Job = 作业
entity.LaborClient = 劳工委托人
entity.LaborContractor = 劳工承包商
entity.Lease = 租赁
entity.LegalVenue = 司法机构
entity.LegalVenue.PrimaryLocale = 主要区域设置
entity.Letter = 信函
entity.LinkedAddress = 链接的地址
entity.LocationRisk = 地点再保险风险
entity.LocationRisk.AccountLocation = 账户地点
entity.LocationRiskAssessment.InputChecksum = 输入校验和
entity.Lookup = 查找
entity.MVR = 汽车驾驶记录
entity.Message = 消息
entity.Modifiable = 可调整
entity.Modifier = 调整系数
entity.Modifier.BooleanModifier = 布尔调整系数
entity.Modifier.DateModifier = 日期调整系数
entity.Modifier.Eligible = 合格
entity.Modifier.Justification = 调整
entity.Modifier.RateModifier = 费率调整系数
entity.Modifier.ReferenceDateInternal = 参考日期
entity.Modifier.State = 省/市
entity.Modifier.TypeKeyModifier = 类型键值修饰符
entity.Modifier.ValueFinal = 最终值
entity.NamedInsured = 列名被保险人
entity.Note = 备注
entity.Obfuscatable = 可模糊处理
entity.Operable = 可行驶
entity.Organization = 机构
entity.OwnerOfficer = 所有者/雇员
entity.PAVhcleAddlInterest = PA车辆其他权益方
entity.Parameter = 形式参数
entity.Person = 个人
entity.Person.PrimaryLocale = 主要区域设置
entity.PersonVendor = 经销商（个人）
entity.PersonVendor.PrimaryLocale = 主要区域设置
entity.PersonalAutoLine = 私家车险
entity.PersonalAutoLine.PersonalVehicleAutoNumberSeq = 个人车辆自动编号序列
entity.PersonalVehicle = 个人车辆
entity.PersonalVehicle.AnnualMileage = 年度里程
entity.PersonalVehicle.BasisAmount = 基本金额
entity.PersonalVehicle.BodyType = 车身类型
entity.PersonalVehicle.Color = 颜色
entity.PersonalVehicle.CommutingMiles = 通勤里程
entity.PersonalVehicle.CostNew = 新车购置成本
entity.PersonalVehicle.GarageLocation = 车库位置
entity.PersonalVehicle.LeaseOrRent = 租赁或租用
entity.PersonalVehicle.LengthOfLease = 租期
entity.PersonalVehicle.LicensePlate = 车牌号
entity.PersonalVehicle.LicenseState = 驾照所属省/直辖市
entity.PersonalVehicle.Make = 厂牌
entity.PersonalVehicle.Model = 车型
entity.PersonalVehicle.PipCovered = 人身伤害险承保范围
entity.PersonalVehicle.PrimaryUse = 主要用途
entity.PersonalVehicle.QuickQuoteNumber = 快速报价编号
entity.PersonalVehicle.StatedValue = 设定价值
entity.PersonalVehicle.VehicleNumber = 车辆编号
entity.PersonalVehicle.VehicleType = 车辆类型
entity.PersonalVehicle.Vin = 车辆识别号码
entity.PersonalVehicle.Year = 年份
entity.Place = 地点
entity.Place.PrimaryLocale = 主要区域设置
entity.PlcyNonPriNamedInsured.Relationship = 关系
entity.Policy = 保单
entity.PolicyAddlInsured = 附加被保险人
entity.PolicyAddlInsuredDetail.AdditionalInformation = 附加信息
entity.PolicyAddlInsuredDetail.AdditionalInsuredType = 被保险人类型
entity.PolicyAddlInterest = 其他权益方
entity.PolicyAddlNamedInsured = 附加列名被保险人
entity.PolicyAddress = 保单地址
entity.PolicyAddress.Address = 地址
entity.PolicyAddress.AddressLine1Internal = 地址行 1
entity.PolicyAddress.AddressLine1KanjiInternal = 地址行1（汉字）
entity.PolicyAddress.AddressLine2Internal = 地址行 2
entity.PolicyAddress.AddressLine2KanjiInternal = 地址行2（汉字）
entity.PolicyAddress.AddressLine3Internal = 地址行 3
entity.PolicyAddress.AddressTypeInternal = 地址类型
entity.PolicyAddress.CEDEXBureauInternal = CEDEX办公处
entity.PolicyAddress.CEDEXInternal = CEDEX
entity.PolicyAddress.CityInternal = 市/区
entity.PolicyAddress.CityKanjiInternal = 城市（汉字）
entity.PolicyAddress.CountryInternal = 国家/地区
entity.PolicyAddress.CountyInternal = 区/县
entity.PolicyAddress.DescriptionInternal = 说明
entity.PolicyAddress.PostalCodeInternal = 邮政编码
entity.PolicyAddress.StateInternal = 省/直辖市
entity.PolicyBillingContact = 计费联系人
entity.PolicyChange = 保单更改
entity.PolicyCondition.Currency = 货币
entity.PolicyCondition.ReferenceDateInternal = 参考日期
entity.PolicyContactRole.AccountContactRole = 账户联系人角色
entity.PolicyContactRole.CompanyNameInternal = 公司名称
entity.PolicyContactRole.CompanyNameKanjiInternal = 公司名称（汉字）
entity.PolicyContactRole.ContactDenorm = 联系人
entity.PolicyContactRole.DateOfBirthInternal = 出生日期
entity.PolicyContactRole.FirstNameInternal = 名字
entity.PolicyContactRole.FirstNameKanjiInternal = 名字（汉字）
entity.PolicyContactRole.LastNameInternal = 姓氏
entity.PolicyContactRole.LastNameKanjiInternal = 姓氏（汉字）
entity.PolicyContactRole.MaritalStatusInternal = 婚姻状况
entity.PolicyContactRole.ParticleInternal = 粒子
entity.PolicyContactRole.SeqNumber = 序号
entity.PolicyDriver = 司机
entity.PolicyDriver.ApplicableGoodDriverDiscount = 适用的优秀司机折扣
entity.PolicyDriver.DoNotOrderMVR = 不需驾驶记录
entity.PolicyDriver.ExcludedInternal = 已排除
entity.PolicyDriver.LicenseNumberInternal = 驾驶证编号
entity.PolicyDriver.LicenseStateInternal = 驾照所属省/直辖市
entity.PolicyDriver.NumberOfAccidents = 事故数
entity.PolicyDriver.NumberOfViolations = 违章次数
entity.PolicyDriver.PolicyDriverMVR = 保单司机的汽车驾驶记录
entity.PolicyDriver.QuickQuoteNumber = 快速报价编号
entity.PolicyDriverMVR = 保单司机的汽车驾驶记录
entity.PolicyDriverMVR.InternalRequestID = 内部请求
entity.PolicyDriverMVR.NumberOfAccidents = 事故数
entity.PolicyDriverMVR.NumberOfViolations = 违章次数
entity.PolicyDriverMVR.OrderStatus = 订购状态
entity.PolicyDriverMVR.Points = 得分
entity.PolicyDriverMVR.StatusDate = 状态日期
entity.PolicyLaborClient = 劳工委托人
entity.PolicyLaborContractor = 劳工承包商
entity.PolicyLine.NumAddInsured = 附加被保险人数
entity.PolicyLocation.AccountLocation = 账户地点
entity.PolicyLocation.AddressLine1Internal = 地址行 1
entity.PolicyLocation.AddressLine1KanjiInternal = 地址行1（汉字）
entity.PolicyLocation.AddressLine2Internal = 地址行 2
entity.PolicyLocation.AddressLine2KanjiInternal = 地址行2（汉字）
entity.PolicyLocation.AddressLine3Internal = 地址行 3
entity.PolicyLocation.AddressTypeInternal = 地址类型
entity.PolicyLocation.BuildingAutoNumberSeq = 建筑物 - 汽车数序
entity.PolicyLocation.CEDEXBureauInternal = CEDEX办公处
entity.PolicyLocation.CEDEXInternal = CEDEX
entity.PolicyLocation.CityInternal = 市/区
entity.PolicyLocation.CityKanjiInternal = 城市（汉字）
entity.PolicyLocation.CountryInternal = 国家/地区
entity.PolicyLocation.CountyInternal = 区/县
entity.PolicyLocation.DescriptionInternal = 说明
entity.PolicyLocation.EmployeeCountInternal = 雇员计数
entity.PolicyLocation.FireProtectClass = 防火等级
entity.PolicyLocation.IndustryCode = 行业代码
entity.PolicyLocation.LocationNum = 地点编号
entity.PolicyLocation.OutboundLocationRiskAssessmentTempStore = 出站地点风险评估临时商店
entity.PolicyLocation.PostalCodeInternal = 邮政编码
entity.PolicyLocation.StateInternal = 省/直辖市
entity.PolicyLocation.TaxLocation = 纳税地点
entity.PolicyLocation.ValidUntilInternal = 有效期截止日期
entity.PolicyOwnerOfficer = 所有者/雇员
entity.PolicyOwnerOfficer.ClassCode = 分类代码
entity.PolicyOwnerOfficer.Included = 已包含
entity.PolicyOwnerOfficer.OwnershipPct = 所有权百分比
entity.PolicyOwnerOfficer.RelationshipTitleInternal = 关系所有权
entity.PolicyOwnerOfficer.State = 省/直辖市
entity.PolicyPeriod.ActiveWorkflow = 活动的工作流
entity.PolicyPeriod.AllocationOfRemainder = 剩余项分配
entity.PolicyPeriod.AltBillingAccountNumber = 备用计费账号
entity.PolicyPeriod.AssignedRisk = 分派风险
entity.PolicyPeriod.BaseState = 基本省/直辖市
entity.PolicyPeriod.BillImmediatelyPercentage = 立即缴费百分比
entity.PolicyPeriod.BillingMethod = 计费方法
entity.PolicyPeriod.BranchName = 分支名称
entity.PolicyPeriod.BranchNumber = 分支编号
entity.PolicyPeriod.DepositAmount = 预缴金
entity.PolicyPeriod.DepositCollected = 收集的预缴金
entity.PolicyPeriod.DepositOverridePct = 预缴金覆盖百分比
entity.PolicyPeriod.EditLocked = 编辑已锁定
entity.PolicyPeriod.EffectiveDatedFields = “生效日期”字段
entity.PolicyPeriod.EstimatedPremium = 预计保费
entity.PolicyPeriod.FailedOOSEEvaluation = OOSE评估失败
entity.PolicyPeriod.FailedOOSEValidation = OOSE校验失败
entity.PolicyPeriod.InvoiceStreamCode = 发票流
entity.PolicyPeriod.InvoiceStreamOverrides = 发票流覆盖
entity.PolicyPeriod.InvoicingMethod = 发票管理方法
entity.PolicyPeriod.LocationAutoNumberSeq = 地点 - 汽车数序
entity.PolicyPeriod.LockingColumn = 锁定列
entity.PolicyPeriod.NewInvoiceStream = 新发票流
entity.PolicyPeriod.Orphaned = 孤立项
entity.PolicyPeriod.OverrideBillingAllocation = 覆盖缴费分配
entity.PolicyPeriod.PNIContactDenorm = 主要列名被保险人联系人
entity.PolicyPeriod.Period = 期限
entity.PolicyPeriod.PolicyNumber = 保单号
entity.PolicyPeriod.PolicyTerm = 保单期限
entity.PolicyPeriod.PreferredCoverageCurrency = 首选承保范围货币
entity.PolicyPeriod.PreferredSettlementCurrency = 首选赔付货币
entity.PolicyPeriod.PrimaryInsuredName = 主被保险人姓名
entity.PolicyPeriod.ProducerCodeOfRecord = 记录的经理人代码
entity.PolicyPeriod.QuoteCloneOriginalPeriod = 报价克隆原始期间
entity.PolicyPeriod.QuoteCloneSequenceNumber = 报价克隆序号
entity.PolicyPeriod.QuoteHidden = 报价隐藏
entity.PolicyPeriod.QuoteIdentifier = 报价标识符
entity.PolicyPeriod.QuoteMaturityLevel = 报价成熟度级别
entity.PolicyPeriod.RateAsOfDate = 费率起始日期
entity.PolicyPeriod.RefundCalcMethod = 退款计算方法
entity.PolicyPeriod.Segment = 分类
entity.PolicyPeriod.SelectedPaymentPlan = 选定的付款计划
entity.PolicyPeriod.SelectedTermType = 选定的期限类型
entity.PolicyPeriod.SeriesCheckingPatternCode = 系列检查模式代码
entity.PolicyPeriod.SingleCheckingPatternCode = 单一检查模式代码
entity.PolicyPeriod.SpecialHandling = 特殊处理
entity.PolicyPeriod.Status = 状态
entity.PolicyPeriod.TaxSurchargesRPT = 附加税费RPT
entity.PolicyPeriod.TemporaryCloneStatus = 临时克隆状态
entity.PolicyPeriod.TermNumber = 期限
entity.PolicyPeriod.TotalCostRPT = 相关方交易总成本
entity.PolicyPeriod.TotalPremiumRPT = 相关方交易保费总额
entity.PolicyPeriod.TransactionCostRPT = 相关方交易的交易成本
entity.PolicyPeriod.TransactionPremiumRPT = 相关方交易的交易保费
entity.PolicyPeriod.UWCompany = 核保公司
entity.PolicyPeriod.ValidReinsurance = 有效再保险
entity.PolicyPeriod.WaiveDepositChange = 放弃预缴金更改
entity.PolicyPeriod.WorksheetContainer = 工作表容器
entity.PolicyPeriod.WrittenDate = 填写日期
entity.PolicyPriNamedInsured = 主要列名被保险人
entity.PolicyRisk = 保单再保险风险
entity.PolicySecNamedInsured = 次要列名被保险人
entity.RateBook = 费率手册
entity.RateFactor.Assessment = 评估
entity.RateFactor.Justification = 调整
entity.RatingPeriodStartDate.StartDate = 开始日期
entity.RatingPeriodStartDate.Type = 类型
entity.Referenceable = 可引用
entity.Region = 地区
entity.Reinstatement = 复效
entity.Reinsurable = 再保险
entity.Reinsurable.CoverageGroup = 承保范围组
entity.Reinsurable.ReinsuranceCurrency = 再保险币种
entity.Reinsurable.RiskNumber = 风险编号
entity.Reinsurable.TotalInsuredValue = 保险价值总额
entity.Renewal = 续保
entity.RestCallHistory = Rest调用历史记录
entity.RestProfilerConfig = Rest Profiler配置
entity.Retireable = 可撤消
entity.Rewrite = 重新写入
entity.RewriteNewAccount = 重新填写新账户
entity.Role = 角色
entity.RootInfo.ArchiveDate = 存档日期
entity.RootInfo.ArchiveFailure = 存档失败
entity.RootInfo.ArchiveFailureDetails = 存档失败详细信息
entity.RootInfo.ArchiveSchemaInfo = 存档架构信息
entity.RootInfo.ArchiveState = 存档状态
entity.RootInfo.ExcludeReason = 排除原因
entity.RootInfo.ExcludedFromArchive = 拒绝存档
entity.Rule = 规则
entity.ScheduleAutoNumberSequence.ScheduleAutoNumberSeq = 已计列 - 汽车数序
entity.ScheduledItem.NamedInsured = 列名被保险人
entity.ScheduledItem.PolicyLocation = 保单地点
entity.ScheduledItem.ScheduleNumber = 计划编号
entity.SecondaryContact = 次要联系人
entity.Sequence = 顺序
entity.Submission = 投保单
entity.SubmissionGroup = 投保单组
entity.Territory = 地区
entity.TerritoryCode.Code = 代码
entity.TerritoryCode.PolicyLinePatternCode = 保单行模式代码
entity.Transaction = 交易
entity.Treaty = 合约
entity.UWRule = UWRule
entity.User = 用户
entity.UserContact = 用户联系人
entity.Validatable = 可校验
entity.VehicleDriver.PercentageDriven = 驱动百分比
entity.Versionable = 版本可控
entity.WCAircraftSeat.AircraftNumber = 航班编号
entity.WCAircraftSeat.Description = 说明
entity.WCAircraftSeat.PassengerSeats = 乘客座椅
entity.WCAircraftSeat.State = 省/直辖市
entity.WCCoveredEmployeeBase.BasisAmount = 基本金额
entity.WCCoveredEmployeeBase.ClassCode = 分类代码
entity.WCCoveredEmployeeBase.IfAnyExposure = 是否有
entity.WCCoveredEmployeeBase.Location = 地点
entity.WCCoveredEmployeeBase.NumEmployees = 雇员数
entity.WCCoveredEmployeeBase.SpecialCov = 特殊险别
entity.WCExcludedWorkplace.AddressLine1 = 地址行 1
entity.WCExcludedWorkplace.AddressLine2 = 地址行 2
entity.WCExcludedWorkplace.City = 市
entity.WCExcludedWorkplace.ExcludedItem = 免责项
entity.WCExcludedWorkplace.State = 省/直辖市
entity.WCFedCoveredEmployee.RailroadOrVessel = 铁路或船舶
entity.WCJurisdiction = 管辖权
entity.WCJurisdiction.AnniversaryDateInternal = 周年日期
entity.WCJurisdiction.State = 省/直辖市
entity.WCLaborContactDetail.ContractEffectiveDate = 合同生效日期
entity.WCLaborContactDetail.ContractExpirationDate = 合同到期日期
entity.WCLaborContactDetail.DescriptionOfDuties = 职责说明
entity.WCLaborContactDetail.Inclusion = 包含
entity.WCLaborContactDetail.NumberOfEmployees = 雇员数
entity.WCLaborContactDetail.WorkLocation = 工作地点
entity.WCParticipatingPlan.LossConversionFactor = 损失转换系数
entity.WCParticipatingPlan.PlanID = 计划
entity.WCParticipatingPlan.Retention = 留存额
entity.WCRetroRatingLetterOfCredit.Amount = 金额
entity.WCRetroRatingLetterOfCredit.IssuerName = 签发人姓名
entity.WCRetroRatingLetterOfCredit.ValidFrom = 有效期起始日期
entity.WCRetroRatingLetterOfCredit.ValidTo = 有效期截止日期
entity.WCRetrospectiveRatingPlan.BasicPremiumFactor1 = 基本保费系数 1
entity.WCRetrospectiveRatingPlan.BasicPremiumFactor2 = 基本保费系数 2
entity.WCRetrospectiveRatingPlan.BasicPremiumFactor3 = 基本保费系数 3
entity.WCRetrospectiveRatingPlan.ComputationInterval = 计算间隔
entity.WCRetrospectiveRatingPlan.EstimatedStandardPremium = 预计标准保费
entity.WCRetrospectiveRatingPlan.FirstComputationDate = 第一个计算日期
entity.WCRetrospectiveRatingPlan.IncludeALAE = 包括ALAE
entity.WCRetrospectiveRatingPlan.LastComputationDate = 上次计算日期
entity.WCRetrospectiveRatingPlan.LossConversionFactor = 损失转换系数
entity.WCRetrospectiveRatingPlan.LossLimitAmount = 损失限额
entity.WCRetrospectiveRatingPlan.MaxRetroPremiumRatio = 最高追溯保费比率
entity.WCRetrospectiveRatingPlan.MinRetroPremiumRatio = 最低追溯保费比率
entity.WCRetrospectiveRatingPlan.PercentStandardPremium1 = 标准保费百分比 1
entity.WCRetrospectiveRatingPlan.PercentStandardPremium2 = 标准保费百分比 2
entity.WCRetrospectiveRatingPlan.PercentStandardPremium3 = 标准保费百分比 3
entity.WCStateMultiplier.FederalExcessLossFactor = 联邦超额赔款系数
entity.WCStateMultiplier.FederalTaxMultiplier = 联邦税乘法器
entity.WCStateMultiplier.State = 省/直辖市
entity.WCStateMultiplier.StateExcessLossFactor = 省/直辖市超额赔款系数
entity.WCStateMultiplier.StateTaxMultiplier = 省/直辖市税乘法器
entity.WCWaiverOfSubro.BasisAmount = 基本金额
entity.WCWaiverOfSubro.ClassCode = 分类代码
entity.WCWaiverOfSubro.Description = 说明
entity.WCWaiverOfSubro.IfAnyExposure = 是否有
entity.WCWaiverOfSubro.JobID = 作业
entity.WCWaiverOfSubro.NumEmployees = 雇员数
entity.WCWaiverOfSubro.SpecialCov = 特殊承保范围
entity.WCWaiverOfSubro.State = 省/直辖市
entity.WCWaiverOfSubro.Type = 类型
entity.WorkersCompLine = 雇主责任
entity.WorkersCompLine.GoverningClass = 管制类
entity.WorkersCompLine.ManuscriptOptionDesc = 手稿选项说明
entity.WorkersCompLine.ManuscriptPremium = 手稿保费
entity.WorkersCompLine.ParticipatingPlan = 参与计划
entity.WorkersCompLine.RetrospectiveRatingPlan = 回顾保费计算计划
entity.Workflow = 工作流
entity.Zone = 区域
on.Delete = 删除
schedule.EntityDisplay = {0} - {1}

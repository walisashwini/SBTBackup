<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <ModalCell
    id="AccountContactDisplayCell"
    mode="Driver">
    <Require
      name="acctContactRole"
      type="AccountContactRole"/>
    <Variable
      initialValue="acctContactRole as Driver"
      name="driver"
      recalculateOnRefresh="true"
      type="Driver"/>
    <Variable
      initialValue="gw.lob.pa.mvr.InternalMVRService.getInstance()"
      name="mvrService"
      type="gw.lob.pa.mvr.InternalMVRService"/>
    <Variable
      initialValue="mvrService.getAllExistingMVRs(((driver.AccountContact.Contact as Person).getMVRSearchCriteria()))"
      name="driverMVRs"
      type="gw.api.motorvehiclerecord.IMVROrder[]"/>
    <FormatCell
      id="details">
      <ContentInput
        visible="CurrentLocation.InEditMode">
        <Link
          action="AccountContactRolePopup.push(acctContactRole)"
          id="editContactRole"
          label="DisplayKey.get(&quot;Web.Account.Contact.Edit&quot;)"
          styleClass="miniButton"/>
      </ContentInput>
      <TextInput
        id="datecompletedtrainingclass"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.DateCompletedTrainingClass&quot;)"
        value="driver.DateCompletedTrainingClass"
        valueType="java.util.Date"/>
      <TextInput
        id="trainingclasstype"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.TrainingClassType&quot;)"
        value="driver.TrainingClassType"
        valueType="typekey.TrainingClassType"/>
      <TextInput
        id="numberofaccidents"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.NumberOfAccidents&quot;)"
        value="driver.NumberofAccidents"
        valueType="typekey.NumberOfAccidents"/>
      <TextInput
        id="numberofviolations"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.NumberOfViolations&quot;)"
        value="driver.NumberofViolations"
        valueType="typekey.NumberOfAccidents"/>
      <TextInput
        id="student"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.Student&quot;)"
        value="driver.Student"
        valueType="java.lang.Boolean"/>
      <TextInput
        id="yearlicensed"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.YearGotLicence&quot;)"
        value="driver.YearLicensed"
        valueType="java.lang.Integer"/>
      <TextInput
        id="gooddriverdiscount"
        label="DisplayKey.get(&quot;Web.Account.Contact.Driver.GoodDriverDiscount&quot;)"
        value="driver.GoodDriverDiscount ? DisplayKey.get(&quot;Java.NameValueView.Boolean.True&quot;) : DisplayKey.get(&quot;Java.NameValueView.Boolean.False&quot;)"/>
      <TextInput
        id="norecordsonfile"
        labelAbove="true"
        value="DisplayKey.get(&quot;Web.PersonalAuto.MotorVehicleRecord.NoRecordsOnFile&quot;)"
        visible="mvrUnavailable()"/>
      <ContentInput
        visible="mvrAvailable()">
        <Link
          action="DriverMVRInfoPopup.push(driverMVRs)"
          id="MVRReportButton"
          label="DisplayKey.get(&quot;Web.PersonalAuto.MotorVehicleRecord.MVRReportDetails&quot;)"
          styleClass="miniButton"/>
      </ContentInput>
    </FormatCell>
    <Code><![CDATA[function mvrUnavailable() : boolean {
  return driverMVRs == null or (driverMVRs.length == 1 and driverMVRs.first().getOrderStatus() == typekey.MVRStatus.TC_ORDERED) or driverMVRs.allMatch(\ m -> m.getOrderStatus() == typekey.MVRStatus.TC_ORDERED)
}

function mvrAvailable() : boolean {
  return driverMVRs != null and not driverMVRs.where(\ m -> m.getOrderStatus() == typekey.MVRStatus.TC_RECEIVED).IsEmpty
}]]></Code>
  </ModalCell>
</PCF>
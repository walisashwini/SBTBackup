<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Screen
    editable="true"
    id="ProducerCodeDetailScreen">
    <Require
      name="producerCode"
      type="ProducerCode"/>
    <Require
      name="producerCodeUIHelper"
      type="gw.web.admin.ProducerCodeUIHelper"/>
    <Variable
      initialValue="CurrentLocation.InEditMode"
      name="localInEditMode"
      recalculateOnRefresh="true"
      type="Boolean"/>
    <Toolbar>
      <EditButtons/>
      <ToolbarButton
        action="gw.api.admin.ProducerCodeUtil.deleteProducerCode(producerCode); AdminProducerCodeSearch.go()"
        available="!gw.api.admin.ProducerCodeUtil.hasRelatedPolicies(producerCode) &amp;&amp; !gw.api.admin.ProducerCodeUtil.hasRelatedPolicyPeriods(producerCode)"
        confirmMessage="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.DeleteConfirm&quot;)"
        hideIfEditable="true"
        id="DeleteButton"
        label="DisplayKey.get(&quot;Button.Delete&quot;)"
        shortcut="L"
        tooltip="if (gw.api.admin.ProducerCodeUtil.hasRelatedPolicies(producerCode) || gw.api.admin.ProducerCodeUtil.hasRelatedPolicyPeriods(producerCode)) {return (DisplayKey.get(&quot;Web.ProducerCode.Delete.InactiveButton&quot;))} return &quot;&quot;"
        visible="perm.System.prodcodedelete"/>
    </Toolbar>
    <CardViewPanel>
      <Card
        id="ProducerCodeDetail_BasicCard"
        title="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.Basic&quot;)">
        <PanelRef
          def="ProducerCodeDetail_BasicDV(producerCode)"/>
        <PanelRef
          def="LocalizedValuesDV(producerCode, { &quot;Description&quot;}, { DisplayKey.get(&quot;Web.Admin.ProducerCodeLocalizedLV.Description&quot;) })"/>
      </Card>
      <Card
        id="ProducerCodeDetail_RolesCard"
        title="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.Roles&quot;)">
        <PanelRef
          def="ProducerCodeDetail_RolesLV(producerCode)">
          <Toolbar>
            <AddButton
              hideIfReadOnly="true"
              id="AddRoleButton"
              iterator="ProducerCodeDetail_RolesLV.ProducerCodeDetail_RolesLV"
              label="DisplayKey.get(&quot;Button.Add&quot;)"/>
            <CheckedValuesToolbarButton
              allCheckedRowsAction="CheckedValues.each(\ p -&gt; producerCodeUIHelper.removeProducerCodeRole(p)); gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, ProducerCodeRole);"
              hideIfReadOnly="true"
              id="RemoveRoleButton"
              iterator="ProducerCodeDetail_RolesLV.ProducerCodeDetail_RolesLV"
              label="DisplayKey.get(&quot;Button.Remove&quot;)"/>
          </Toolbar>
        </PanelRef>
      </Card>
      <Card
        id="ProducerCodeDetail_CommissionPlansCard"
        title="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.CommissionPlans&quot;)"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()">
        <PanelSet>
          <Verbatim
            id="CommissionPlanWarningMessage"
            label="producerCodeUIHelper.CommissionPlansWarningMessage"
            visible="producerCodeUIHelper.PlansNotExistingInBillingSystem.HasElements"
            warning="true"/>
        </PanelSet>
        <PanelRef
          editable="producerCode.OrganizationWithUpdate != null"
          id="SelectCommissionPlanPanel">
          <Toolbar>
            <PickerToolbarButton
              action="CommissionPlanSearchPopup.push(producerCode.OrganizationWithUpdate.Tier, producerCodeUIHelper.DisplayableCommissionPlans*.PlanName)"
              hideIfReadOnly="true"
              id="SelectPlanButton"
              label="DisplayKey.get(&quot;Web.ProducerCodeDetailScreen.SelectAPlanButton&quot;)"
              onPick="producerCodeUIHelper.addCommissionPlanFromPicker(PickedValue)"
              visible="producerCode.OrganizationWithUpdate != null"/>
          </Toolbar>
          <DetailViewPanel>
            <InputColumn>
              <TextInput
                id="NeedOrganizationMessage"
                labelAbove="true"
                value="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.CommissionPlans.NoOrganizationSelected&quot;)"
                visible="producerCode.OrganizationWithUpdate == null"/>
              <Label/>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
        <PanelRef
          editable="producerCode.OrganizationWithUpdate != null"
          id="CommissionPlanPanel">
          <Toolbar
            id="CommissionPlanToolbar">
            <RemoveButton
              hideIfReadOnly="true"
              id="RemoveCommissionPlanButton"
              iterator="ProducerCodeDetail_CommissionPlansLV"
              label="DisplayKey.get(&quot;Button.Remove&quot;)"/>
          </Toolbar>
          <ListViewPanel
            id="ProducerCodeDetail_CommissionPlansLV"
            visible="!producerCodeUIHelper.DisplayableCommissionPlans.Empty">
            <RowIterator
              checkBoxVisible="commissionPlan.isPlanRemovable()"
              editable="true"
              elementName="commissionPlan"
              forceRefreshDespiteChangedEntries="true"
              hideCheckBoxesIfReadOnly="true"
              toRemove="producerCodeUIHelper.DisplayableCommissionPlans.remove(commissionPlan)"
              value="producerCodeUIHelper.DisplayableCommissionPlans"
              valueType="java.util.List&lt;gw.web.admin.ProducerCodeUIHelper.MultiCurrencyCommissionPlan&gt;">
              <Row>
                <TextCell
                  colspan="2"
                  id="CommissionPlanName"
                  value="commissionPlan.PlanName">
                  <PostOnChange/>
                </TextCell>
              </Row>
              <RowIterator
                canPick="false"
                editable="true"
                elementName="planCurrency"
                id="CurrencyIterator"
                pageSize="0"
                value="commissionPlan.Currencies"
                valueType="java.util.List&lt;gw.web.admin.ProducerCodeUIHelper.CommissionPlanCurrency&gt;">
                <Row
                  visible="(planCurrency.Configured &amp;&amp; !localInEditMode) || localInEditMode">
                  <CheckBoxCell
                    available="producerCodeUIHelper.isCurrencyCheckboxAvailable(commissionPlan, planCurrency.Currency) and localInEditMode"
                    editable="true"
                    id="CurrencyCheckbox"
                    value="planCurrency.Configured"
                    valueVisible="localInEditMode"
                    width="30">
                    <PostOnChange/>
                  </CheckBoxCell>
                  <TextCell
                    align="left"
                    id="Currency"
                    value="planCurrency.Currency.DisplayName"
                    width="300"/>
                </Row>
              </RowIterator>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
      </Card>
      <Card
        id="ProducerCodeDetail_GroupsCard"
        title="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.Groups&quot;)">
        <PanelRef
          def="ProducerCodeDetail_GroupsLV(producerCode)"
          editable="false"
          id="groupPanel">
          <Toolbar/>
          <Verbatim
            id="groupVerbatim"
            label="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.UserGroupLabel&quot;)"
            warning="true"/>
        </PanelRef>
      </Card>
      <Card
        id="ProducerCodeDetail_UsersCard"
        title="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.Users&quot;)">
        <PanelRef
          def="ProducerCodeDetail_UsersLV(producerCode)"
          editable="false"
          id="userPanel">
          <Toolbar/>
          <Verbatim
            id="userVerbatim"
            label="DisplayKey.get(&quot;Web.Admin.ProducerCodeDetail.UserLabel&quot;)"
            warning="true"/>
        </PanelRef>
      </Card>
    </CardViewPanel>
  </Screen>
</PCF>
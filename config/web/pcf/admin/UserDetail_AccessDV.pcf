<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <DetailViewPanel
    id="UserDetail_AccessDV">
    <Require
      name="user"
      type="User"/>
    <Variable
      initialValue="user.UseProducerCodeSecurity"
      name="usePCSecurity"
      recalculateOnRefresh="true"
      type="java.lang.Boolean"/>
    <InputColumn>
      <BooleanRadioInput
        confirmMessage="DisplayKey.get(&quot;Web.Admin.UserAccessDV.SwitchFromProducerCodeSecurity&quot;)"
        editable="perm.System.usereditpcsec"
        id="UseProducerCodeSecurity"
        label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.UseProducerCodeSecurity&quot;)"
        showConfirmMessage="user.UseProducerCodeSecurity"
        value="usePCSecurity">
        <PostOnChange
          onChange="user.updateUseProducerCodeSecurity(usePCSecurity)"/>
      </BooleanRadioInput>
      <ListViewInput
        boldLabel="true"
        label="DisplayKey.get(&quot;Web.Admin.UserDetailDV.Groups&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            addVisible="gw.api.system.ExternalUserAccessParameterKey.ExternalUserAccessIsFullyRestricted()"
            iterator="UserGroupsLV"
            removeVisible="gw.api.system.ExternalUserAccessParameterKey.ExternalUserAccessIsFullyRestricted()"/>
          <AddButton
            id="AddGroupButton"
            iterator="UserGroupsLV"
            label="DisplayKey.get(&quot;Web.Admin.GroupUsers.AddButton&quot;)"
            visible="not gw.api.system.ExternalUserAccessParameterKey.ExternalUserAccessIsFullyRestricted()">
            <AddMenuItem
              conversionExpression="gw.web.admin.UserUIHelper.validateAndAddGroup(PickedValue, user)"
              hideIfReadOnly="true"
              id="AddUserGroup"
              iterator="UserGroupsLV"
              label="DisplayKey.get(&quot;Web.Admin.GroupUsers.AddUserGroup&quot;)"
              pickLocation="OrganizationGroupTreePopup.push(user.makeOrganizationSelection(), false, false)"/>
            <AddMenuItem
              conversionExpression="gw.web.admin.UserUIHelper.validateAndAddGroup(PickedValue, user)"
              hideIfReadOnly="true"
              id="SearchAndAddGroup"
              iterator="UserGroupsLV"
              label="DisplayKey.get(&quot;Web.Admin.GroupUsers.SearchAndAddGroup&quot;)"
              pickLocation="GroupSearchPopup.push()"></AddMenuItem>
          </AddButton>
          <IteratorButtons
            addVisible="false"
            id="RemoveGroupButton"
            iterator="UserGroupsLV"
            removeVisible="not gw.api.system.ExternalUserAccessParameterKey.ExternalUserAccessIsFullyRestricted()"/>
        </Toolbar>
        <ListViewPanel
          id="UserGroupsLV">
          <RowIterator
            conversionExpression="gw.web.admin.UserUIHelper.validateAndAddGroup(PickedValue, user)"
            editable="true"
            elementName="groupUser"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            pickLocation="OrganizationGroupTreePopup.push(user.makeOrganizationSelection(), false, false)"
            toAdd="gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, UserProducerCode)"
            toRemove="groupUser.Group.removeUser(user)"
            value="user.AllGroupUsersAsArray"
            valueType="entity.GroupUser[]">
            <Row>
              <AltGroupCell
                action="GroupDetailPage.go(groupUser.Group)"
                available="groupUser.Group != null and groupUser.Group.GroupType != TC_ROOT"
                id="Group"
                label="DisplayKey.get(&quot;Web.Admin.GroupUsers.Group&quot;)"
                required="true"
                unique="true"
                value="groupUser.Group"/>
              <CheckBoxCell
                id="Member"
                label="DisplayKey.get(&quot;Web.Admin.GroupUsers.Member&quot;)"
                value="groupUser.Member"/>
              <CheckBoxCell
                id="Manager"
                label="DisplayKey.get(&quot;Web.Admin.GroupUsers.Manager&quot;)"
                value="groupUser.Manager"/>
              <TypeKeyCell
                align="left"
                editable="true"
                id="LoadFactorType"
                label="DisplayKey.get(&quot;Web.Admin.GroupUsers.LoadFactorType&quot;)"
                value="groupUser.LoadFactorType"
                valueType="typekey.LoadFactorType"/>
              <TextCell
                align="left"
                editable="true"
                id="LoadFactor"
                label="DisplayKey.get(&quot;Web.Admin.GroupUsers.LoadFactor&quot;)"
                validationExpression="!(groupUser.LoadFactor &lt; 0 or groupUser.LoadFactor &gt; 100)                     ? null : DisplayKey.get(&quot;Web.Admin.GroupUsers.LoadFactor.OufOfRange&quot;)"
                value="groupUser.LoadFactor"
                valueType="java.lang.Integer"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <InputDivider
        visible="user.UseProducerCodeSecurity"/>
      <ListViewInput
        boldLabel="true"
        label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodesFromGroups&quot;)"
        labelAbove="true"
        visible="user.UseProducerCodeSecurity">
        <Toolbar/>
        <ListViewPanel
          id="ProducerCodesFromGroupsLV">
          <RowIterator
            editable="true"
            elementName="prodCode"
            type="ProducerCode"
            value="user.InheritedProducerCodes.toArray()"
            valueType="java.lang.Object[]">
            <Variable
              initialValue="gw.web.admin.UserUIHelper.initialGroups(prodCode, user)"
              name="groups"
              type="entity.Group[]"/>
            <Row>
              <TextCell
                action="AdminProducerCodeDetail.go(prodCode)"
                id="Code"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeCode&quot;)"
                unique="true"
                value="prodCode.Code"/>
              <TextCell
                id="Desci"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeDescription&quot;)"
                value="prodCode.Description"/>
              <TypeKeyCell
                id="Status"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeStatus&quot;)"
                value="prodCode.ProducerStatus"
                valueType="typekey.ProducerStatus"/>
              <LinkCell
                id="Groups"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.InheritFromGroup&quot;)">
                <LinkIterator
                  elementName="grp"
                  value="groups"
                  valueType="entity.Group[]">
                  <Link
                    action="GroupDetailPage.go(grp)"
                    available="grp.GroupType != TC_ROOT"
                    id="Link"
                    label="grp"/>
                  <Link
                    id="Filler"
                    label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.Filler&quot;)"
                    visible="groups.last() != grp"/>
                </LinkIterator>
              </LinkCell>
              <LinkCell
                id="Roles"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.Actions&quot;)">
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode, false)"
                  id="ViewRolesButton"
                  label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ViewRolesButton&quot;)"
                  styleClass="miniButton"
                  visible="prodCode.ProducerCodeRoles.Count &gt; 0"/>
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode)"
                  hideIfReadOnly="true"
                  id="ModifyRolesButton"
                  label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ModifyRolesButton&quot;)"
                  styleClass="miniButton"
                  visible="prodCode.ProducerCodeRoles.Count &gt; 0"/>
              </LinkCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.AdditionalProducerCodes&quot;)"
        labelAbove="true"
        visible="user.UseProducerCodeSecurity">
        <Toolbar>
          <IteratorButtons
            iterator="AdditionalProducerCodesLV"/>
        </Toolbar>
        <ListViewPanel
          id="AdditionalProducerCodesLV">
          <RowIterator
            editable="true"
            elementName="prodCode"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            pickLocation="AdminProducerCodeSearchPopup.push(user.Organization.Carrier                                        ? null : user.Organization,                                        user.InheritedProducerCodes, true)"
            toAdd="prodCode.addUser(user)"
            toRemove="prodCode.removeUser(user)"
            type="ProducerCode"
            value="user.AdditionalProducerCodes.toArray()"
            valueType="java.lang.Object[]">
            <Row>
              <TextCell
                action="AdminProducerCodeDetail.go(prodCode)"
                id="Code"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeCode&quot;)"
                unique="true"
                value="prodCode.Code"/>
              <TextCell
                id="Description"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeDescription&quot;)"
                value="prodCode.Description"/>
              <TypeKeyCell
                id="Status"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ProducerCodeStatus&quot;)"
                value="prodCode.ProducerStatus"
                valueType="typekey.ProducerStatus"/>
              <LinkCell
                id="Roles"
                label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.Actions&quot;)">
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode, false)"
                  id="ViewRolesButton"
                  label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ViewRolesButton&quot;)"
                  styleClass="miniButton"/>
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode)"
                  hideIfReadOnly="true"
                  id="ModifyRolesButton"
                  label="DisplayKey.get(&quot;Web.Admin.UserAccessDV.ModifyRolesButton&quot;)"
                  styleClass="miniButton"/>
              </LinkCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputColumn>
  </DetailViewPanel>
</PCF>
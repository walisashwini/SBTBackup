<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <ListViewTile
    id="CurrentPoliciesListViewTile"
    stretch="true"
    title="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies')"
    viewMoreAction="currentPoliciesHelper.viewMore()"
    viewMoreLabel="DisplayKey.get('Web.Tile.ViewAll')"
    viewMoreVisible="currentPoliciesHelper.ViewMoreVisible">
    <Require
      name="contact"
      type="Contact"/>
    <Variable
      initialValue="gw.api.web.dashboard.ui.policy.CurrentPolicyHelper.forContact(contact)"
      name="currentPoliciesHelper"
      type="gw.api.web.dashboard.ui.policy.CurrentPolicyHelper"/>
    <Variable
      initialValue="gw.api.web.dashboard.ui.DashboardParameters.AccountHolderSummaryPermissions.Instance"
      name="permissions"
      type="gw.api.web.dashboard.ui.DashboardParameters.AccountHolderSummaryPermissions"/>
    <RowIterator
      editable="false"
      elementName="policyPeriod"
      value="currentPoliciesHelper.PolicyPeriods"
      valueType="entity.PolicyPeriod[]">
      <IteratorSort
        sortBy="policyPeriod.PeriodStart"
        sortDirection="descending"
        sortOrder="1"/>
      <Row>
        <TextCell
          action="PolicyFileForward.go(policyPeriod.PolicyNumber, policyPeriod.PeriodStart)"
          id="Policy"
          label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Policy')"
          value="policyPeriod.PolicyNumberDisplayString"
          valueType="String"
          wrap="false"/>
        <TextCell
          grow="true"
          id="Product"
          label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Product')"
          value="policyPeriod.Policy.Product"
          valueType="gw.api.productmodel.Product"/>
        <TextCell
          grow="true"
          id="Status"
          label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Status')"
          value="policyPeriod.PeriodDisplayStatus"
          wrap="false"/>
        <DateCell
          id="EffectiveDate"
          label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.EffectiveDate')"
          value="policyPeriod.PeriodStart"
          wrap="false"/>
        <DateCell
          id="EndDate"
          label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.EndDate')"
          value="policyPeriod.Policy.findCoverageEndDate()"
          wrap="false"/>
        <ButtonCell
          action="StartPolicyChange.go(policyPeriod)"
          available="policyPeriod.Policy.Issued and permissions.canChangePolicy(policyPeriod)"
          id="PolicyActions"
          value="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Change')"
          wrap="false">
          <MenuItem
            action="StartCancellation.go(policyPeriod)"
            id="PolicyCancel"
            label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Cancel')"
            visible="permissions.canCancelPolicy(policyPeriod)"/>
          <MenuItem
            action="currentPoliciesHelper.startRenewal(policyPeriod, CurrentLocation)"
            confirmMessage="DisplayKey.get('Web.PolicyFile.RenewPolicy.Confirm')"
            id="PolicyRenew"
            label="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.Renew')"
            visible="permissions.canRenewPolicy(policyPeriod)"/>
        </ButtonCell>
        <ButtonCell
          action="currentPoliciesHelper.fileClaim(policyPeriod)"
          available="currentPoliciesHelper.CanFileClaim and permissions.ViewInClaimCenter"
          id="FileClaim"
          value="DisplayKey.get('Web.Dashboard.Tile.CurrentPolicies.FileClaim')"
          visible="currentPoliciesHelper.CanFileClaim and permissions.ViewInClaimCenter"
          wrap="false"/>
      </Row>
    </RowIterator>
  </ListViewTile>
</PCF>
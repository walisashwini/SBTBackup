<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <ListViewPanel
    id="FederatedDesktopAssignableQueuesLV"
    stretch="true">
    <ExposeIterator
      flags="assignableActivity"
      valueType="gw.api.web.desktop.data.activity.ActivityDTO"
      widget="FederatedDesktopAssignableQueuesLV"/>
    <Require
      name="processedActivities"
      type="Set&lt;String&gt;"/>
    <Variable
      initialValue="getVisibleQueues()"
      name="queues"
      type="AssignableQueue[]"/>
    <Variable
      initialValue="new gw.api.web.desktop.data.queue.QueueActivityFederatedData(queues)"
      name="federatedDataActivities"
      type="gw.api.web.desktop.data.FederatedDataIteratorBackingData"/>
    <Variable
      initialValue="new gw.api.web.desktop.data.queue.QueueDataFilters(queues)"
      name="aQFilterSet"
      type="gw.api.web.desktop.data.queue.QueueDataFilters"/>
    <RowIterator
      appendPageInfo="true"
      checkBoxVisible="perm.Activity.pickfromqueue"
      editable="false"
      elementName="activity"
      hasCheckBoxes="true"
      type="gw.api.web.desktop.data.activity.ActivityDTO"
      value="federatedDataActivities"
      valueType="gw.api.web.desktop.data.FederatedDataIteratorBackingData">
      <ToolbarFilter
        name="assignableQueueFilter">
        <ToolbarFilterOption
          filter="gw.api.web.desktop.data.queue.QueueDataFilters.all()"
          label="DisplayKey.get(&quot;Web.DesktopAssignableQueues.Filter.All&quot;)"/>
        <ToolbarFilterOptionGroup
          filters="aQFilterSet.Filters.toTypedArray()"/>
      </ToolbarFilter>
      <ToolbarFlag
        name="assignableActivity"/>
      <IteratorSort
        sortBy="activity.PriorityValue"
        sortOrder="1"/>
      <IteratorSort
        sortBy="activity.PriorityCode"
        sortOrder="2"/>
      <IteratorSort
        sortBy="activity.TargetDate"
        sortOrder="3"/>
      <Row
        highlighted="processedActivities.contains(activity.PublicId)">
        <BooleanRadioCell
          enableSort="false"
          icon="&quot;new&quot;"
          iconType="svgFileName"
          id="UpdatedSinceLastViewed"
          tooltip="DisplayKey.get(&quot;Web.DesktopActivitiesLV.NewActivityTooltip&quot;)"
          value="activity.UpdatedSinceLastViewed"/>
        <BooleanRadioCell
          enableSort="false"
          icon="&quot;escalated&quot;"
          iconColor="gw.api.web.color.GWColor.THEME_ALERT_ERROR"
          iconType="svgFileName"
          id="Overdue"
          tooltip="DisplayKey.get(&quot;Web.DesktopActivitiesLV.EscalatedActivityTooltip&quot;)"
          value="activity.Overdue"/>
        <DateCell
          id="Due"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.DueDate&quot;)"
          value="activity.TargetDate"
          wrap="false"/>
        <TypeKeyCell
          id="Priority"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Priority&quot;)"
          sortBy="activity.PriorityValue,activity.PriorityCode"
          value="typekey.Priority.get(activity.PriorityCode)"
          valueType="typekey.Priority"
          wrap="false"/>
        <TypeKeyCell
          id="Status"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Status&quot;)"
          sortBy="activity.StatusPriority,activity.StatusCode"
          value="typekey.ActivityStatus.get(activity.StatusCode)"
          valueType="typekey.ActivityStatus"
          wrap="false"/>
        <TextCell
          action="FederatedActivityForward.push(activity.PublicId, activity.AccountPublicId, activity.Id)"
          available="gw.api.web.activity.FederatedActivityEditPermissionHandler.canEditActivity(User.util.getCurrentUser(), activity)"
          grow="true"
          id="Subject"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Subject&quot;)"
          value="activity.Subject"/>
        <TextCell
          enableSort="false"
          id="JobID"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.ID&quot;)"
          value="activity.PolicyNumberOrJobNumber"
          wrap="false"/>
        <TextCell
          enableSort="false"
          id="Insured"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.AccountHolder&quot;)"
          value="activity.ContactName"
          wrap="false"/>
        <TextCell
          id="Product"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Product&quot;)"
          sortBy="activity.PolicyProductCode"
          value="activity.PolicyProduct"
          wrap="false"/>
        <TextCell
          id="AssignedBy"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.AssignedBy&quot;)"
          value="activity.AssignedByUser"
          valueType="java.lang.String"
          wrap="false"/>
        <TypeKeyCell
          enableSort="false"
          id="State"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.State&quot;)"
          value="activity.UIDisplayState"
          valueType="typekey.State"
          wrap="false"/>
      </Row>
    </RowIterator>
    <Code><![CDATA[// The results are needed all at once because the array will be reused to avoid querying twice.
      function getVisibleQueues() : AssignableQueue[] {
        var retValue = new java.util.ArrayList<AssignableQueue>()
        var processor = AssignableQueue.finder.findVisibleQueuesInUserAndAncestorGroups(User.util.CurrentUser) as gw.api.database.IQueryBeanResult<AssignableQueue>
        foreach (i in processor.iterator()) {
          retValue.add(i)
        }
        return retValue?.toTypedArray()
      }]]></Code>
  </ListViewPanel>
</PCF>
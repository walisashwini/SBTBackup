<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="BOPLocationBuildingsPanelSet">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Require
      name="jobWizardHelper"
      type="gw.api.web.job.JobWizardHelper"/>
    <Variable
      initialValue="policyPeriod.BOPLine"
      name="bopLine"
      type="BOPLine"/>
    <ListDetailPanel
      selectionName="bopLocation"
      selectionType="BOPLocation">
      <PanelRef
        def="BOPLocationsLV(bopLine)">
        <TitleBar
          title="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.List.Title&quot;)"/>
        <Toolbar/>
      </PanelRef>
      <CardViewPanel>
        <Card
          id="BuildingCard"
          title="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.Building.List.Title&quot;)">
          <ListDetailPanel
            selectionName="selectedBuilding"
            selectionType="BOPBuilding">
            <PanelRef>
              <Toolbar>
                <IteratorButtons
                  iterator="BOPLocationBuildingsLV"
                  removeShortcut="E"/>
              </Toolbar>
              <ListViewPanel
                id="BOPLocationBuildingsLV">
                <RowIterator
                  editable="true"
                  elementName="building"
                  hasCheckBoxes="true"
                  hideCheckBoxesIfReadOnly="true"
                  pickLocation="BOPBuildingPopup.push(bopLine, bopLocation, null, openForEdit, true, jobWizardHelper)"
                  toRemove="bopLocation.removeFromLineSpecificBuildings(building)"
                  value="bopLocation.Buildings"
                  valueType="entity.BOPBuilding[]">
                  <Row>
                    <TextCell
                      action="BOPBuildingPopup.push(bopLine, bopLocation, building, openForEdit, true, jobWizardHelper)"
                      align="right"
                      id="BuildingNumEdit"
                      label="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.Building.BuildingNum&quot;)"
                      sortOrder="1"
                      value="building.Building.BuildingNum"
                      valueType="java.lang.Integer"/>
                    <TextCell
                      action="BOPBuildingPopup.push(bopLine, bopLocation, building, openForEdit, true, jobWizardHelper)"
                      id="DescriptionEdit"
                      label="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.Building.Description&quot;)"
                      value="building.Building.Description"/>
                    <TypeKeyCell
                      id="CoverageCurrency"
                      label="DisplayKey.get(&quot;Web.Policy.CoverableCurrency&quot;)"
                      value="building.PreferredCoverageCurrency"
                      valueType="typekey.Currency"
                      visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()"/>
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
            <PanelRef
              available="selectedBuilding != null"
              def="PreferredCoverageCurrencyPanelSet(selectedBuilding, false, jobWizardHelper)"
              id="PreferredCoverageCurrencySelectorRef"
              visible="selectedBuilding != null"/>
            <CardViewPanel>
              <Card
                id="BOPBuilding_DetailsCard"
                title="DisplayKey.get(&quot;Web.Policy.BOP.Buildings.Details&quot;)">
                <PanelRef
                  def="BOPBuilding_DetailsDV(selectedBuilding, false)"
                  editable="false"/>
                <PanelRef
                  def="AdditionalInterestDetailsDV(selectedBuilding, false)"/>
              </Card>
              <Card
                id="BOPBuilding_AdditionalCoveragesCard"
                title="DisplayKey.get(&quot;Web.Policy.BOP.Buildings.AdditionalCoverage&quot;)"
                visible="selectedBuilding != null">
                <PanelRef
                  def="AdditionalCoveragesPanelSet(selectedBuilding, new String[]{&quot;BOPBuildingOtherCat&quot;,&quot;BOPIncomeExpenseCat&quot;,&quot;BOPBuildingUtilitiesCat&quot;,&quot;BOPBuildingSpecialPerilCat&quot;,&quot;BOPStateCat&quot;}, true)"
                  editable="false"
                  visible="selectedBuilding != null"/>
              </Card>
            </CardViewPanel>
          </ListDetailPanel>
        </Card>
      </CardViewPanel>
    </ListDetailPanel>
  </PanelSet>
</PCF>
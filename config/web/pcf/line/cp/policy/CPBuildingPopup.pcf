<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <Popup
    afterCancel="if (policyPeriodShouldBeMadeEditable) {cpLine.Branch.JobProcess.edit(); jobWizardHelper.Wizard.saveDraft(); policyPeriodShouldBeMadeEditable = false}"
    afterEnter="cpBuilding = gw.web.line.cp.policy.CPBuildingPopupUIHelper.initialize(jobWizardHelper, building, cpBuilding, cpLocation, openForEdit);if (cpBuilding != null &amp;&amp; !openForEdit) cpLocation = cpBuilding.CPLocation "
    beforeCommit="gw.lob.cp.CPBuildingValidation.validateBuilding(cpBuilding)"
    beforeValidate="if (policyPeriodShouldBeMadeEditable) {jobWizardHelper.Wizard.saveDraft(); policyPeriodShouldBeMadeEditable = false}"
    canEdit="true"
    countsAsWork="false"
    id="CPBuildingPopup"
    startInEditMode="openForEdit"
    title="return cpBuilding == null ? DisplayKey.get(&quot;CommercialProperty.Building.NewBuilding&quot;) : cpBuilding.DisplayName">
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpBuilding : CPBuilding, openForEdit : boolean, jobWizardHelper : gw.api.web.job.JobWizardHelper)"/>
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpLocation : CPLocation, openForEdit : boolean, jobWizardHelper : gw.api.web.job.JobWizardHelper)"/>
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpLocation : CPLocation, building : Building, openForEdit : boolean, jobWizardHelper : gw.api.web.job.JobWizardHelper)"/>
    <Variable
      name="cpLine"
      type="CommercialPropertyLine"/>
    <Variable
      name="cpBuilding"
      type="CPBuilding"/>
    <Variable
      name="cpLocation"
      type="CPLocation"/>
    <Variable
      name="building"
      type="Building"/>
    <Variable
      name="openForEdit"
      type="boolean"/>
    <Variable
      name="jobWizardHelper"
      type="gw.api.web.job.JobWizardHelper"/>
    <Variable
      initialValue="cpBuilding.Building.BuildingAlarmType != null"
      name="showAlarmFields"
      type="boolean"/>
    <Variable
      initialValue="false"
      name="policyPeriodShouldBeMadeEditable"
      type="Boolean"/>
    <Screen>
      <Toolbar>
        <EditButtons
          editVisible="false"/>
        <ToolbarButton
          action="CurrentLocation.startEditing(); cpLine.Branch.JobProcess.edit(); policyPeriodShouldBeMadeEditable = true"
          confirmMessage="DisplayKey.get('Job.Operation.Edit.Confirm')"
          id="EditPolicyButton"
          label="DisplayKey.get('Job.Operation.EditWorkOrder')"
          visible="cpLine.Branch.JobProcess.canEdit().Okay"/>
      </Toolbar>
      <PanelRef
        def="PreferredCoverageCurrencyPanelSet(cpBuilding, openForEdit, jobWizardHelper)"
        id="PreferredCoverageCurrencySelectorRef"/>
      <CardViewPanel>
        <Card
          id="BuildingDetails"
          title="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location.Building.Details&quot;)">
          <DetailViewPanel
            id="DetailsDV">
            <!-- Left column -->
            <InputColumn>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BuildingInfo&quot;)"/>
              <RangeInput
                editable="cpLocation == null"
                id="BuildingLocation"
                label="DisplayKey.get(&quot;Web.Policy.LocationContainer.Location&quot;)"
                value="cpBuilding.CPLocation"
                valueRange="cpLine.CPLocations"
                valueType="entity.CPLocation">
                <PostOnChange
                  deferUpdate="false"
                  onChange="cpLocation.Location.resetBuildingAutoNumberSequence()"/>
              </RangeInput>
              <TextInput
                id="BuildingNumber"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Number&quot;)"
                value="cpBuilding.Building.BuildingNum"
                valueType="java.lang.Integer"/>
              <TextInput
                editable="true"
                id="Description"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Description&quot;)"
                value="cpBuilding.Building.Description"/>
              <PickerInput
                editable="true"
                id="ClassCode"
                inputConversion="gw.web.line.cp.policy.CPBuildingPopupUIHelper.findFirstMatchingClassCode(cpBuilding, VALUE)"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.ClassCode&quot;)"
                outputConversion="VALUE == null ? &quot;&quot; : VALUE.Code"
                pickLocation="CPClassCodeSearchPopup.push(cpLine, cpBuilding)"
                value="cpBuilding.ClassCode"
                valueType="entity.CPClassCode">
                <PostOnChange
                  deferUpdate="false"/>
              </PickerInput>
              <TextAreaInput
                id="ClassDescription"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.ClassDescription&quot;)"
                numRows="2"
                value="cpBuilding.ClassCode.Classification"/>
              <TypeKeyInput
                editable="true"
                id="CoverageForm"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.CoverageForm&quot;)"
                value="cpBuilding.CoverageForm"
                valueType="typekey.CoverageForm">
                <PostOnChange
                  onChange="if (openForEdit) { gw.web.productmodel.ProductModelSyncIssuesHandler.syncCoverages({cpBuilding}, jobWizardHelper) }"/>
              </TypeKeyInput>
              <InputDivider/>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Rating&quot;)"/>
              <TypeKeyInput
                editable="true"
                id="RateType"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.RateType&quot;)"
                value="cpBuilding.RateType"
                valueType="typekey.RateType"/>
              <InputDivider/>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Construction&quot;)"/>
              <TextInput
                align="left"
                editable="true"
                id="YearBuilt"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.YearBuilt&quot;)"
                maxChars="4"
                validationExpression="cpBuilding.validateYearBuilt(cpBuilding.Building.YearBuilt)"
                value="cpBuilding.Building.YearBuilt"
                valueType="java.lang.Integer"/>
              <TypeKeyInput
                editable="true"
                id="ConstructionType"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.ConstructionType&quot;)"
                value="cpBuilding.Building.ConstructionType"
                valueType="typekey.ConstructionType"/>
              <TextInput
                align="left"
                editable="true"
                id="NumStories"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.NumStories&quot;)"
                value="cpBuilding.Building.NumStories"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="NumBasements"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.NumBasements&quot;)"
                value="cpBuilding.Building.NumBasements"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="TotalArea"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.TotalArea&quot;)"
                value="cpBuilding.Building.TotalArea"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="BasementArea"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BasementArea&quot;)"
                validationExpression="cpBuilding.validateBasementArea(cpBuilding.Building.BasementArea)"
                value="cpBuilding.Building.BasementArea"
                valueType="java.lang.Integer"/>
              <TypeKeyInput
                editable="true"
                id="PercentSprinklered"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Sprinklered&quot;)"
                value="cpBuilding.Building.SprinklerCoverage"
                valueType="typekey.Sprinklered"/>
              <TypeKeyInput
                editable="true"
                id="RoofType"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.RoofType&quot;)"
                value="cpBuilding.Building.RoofType"
                valueType="typekey.RoofType"/>
              <TypeKeyInput
                editable="true"
                id="WindRating"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.WindRating&quot;)"
                value="cpBuilding.Building.WindRating"
                valueType="typekey.WindRating"/>
              <BooleanRadioInput
                editable="true"
                id="HeatingBoilerOnPremises"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BoilerOnPremises&quot;)"
                value="cpBuilding.Building.HeatingBoilerOnPremises">
                <PostOnChange
                  deferUpdate="false"
                  onChange="cpBuilding.Building.HeatingBoilerElsewhere = gw.web.line.cp.policy.CPBuildingPopupUIHelper.getBoilerInsuredValue(cpBuilding, cpBuilding.Building.HeatingBoilerOnPremises)"/>
              </BooleanRadioInput>
              <BooleanRadioInput
                available="cpBuilding.Building.HeatingBoilerOnPremises"
                editable="true"
                id="HeatingBoilerElsewhere"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BoilerInsuredElsewhere&quot;)"
                value="cpBuilding.Building.HeatingBoilerElsewhere"/>
              <TextInput
                editable="true"
                id="FrontExposure"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Front&quot;)"
                value="cpBuilding.Building.FrontSide.Description"/>
              <TextInput
                editable="true"
                id="RightExposure"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Right&quot;)"
                value="cpBuilding.Building.RightSide.Description"/>
              <TextInput
                editable="true"
                id="LeftExposure"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Left&quot;)"
                value="cpBuilding.Building.LeftSide.Description"/>
              <TextInput
                editable="true"
                id="RearExposure"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Rear&quot;)"
                value="cpBuilding.Building.RearSide.Description"/>
            </InputColumn>
            <!-- Right column -->
            <InputColumn>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BurglarAlarm&quot;)"/>
              <TypeKeyInput
                editable="true"
                id="BurglarySafeguard"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.BurglarySafeguard&quot;)"
                value="cpBuilding.Building.BurglarySafeguard"
                valueType="typekey.BurglarySafeguard"/>
              <InputGroup
                allowToggle="true"
                alwaysShowCheckbox="true"
                childrenVisible="showAlarmFields"
                id="AlarmInfoInputGroup"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.HasAlarm&quot;)"
                onToggle="if (VALUE) {showAlarmFields = true} else {gw.web.line.cp.policy.CPBuildingPopupUIHelper.clearAlarmFields(cpBuilding);showAlarmFields = false}">
                <TypeKeyInput
                  editable="true"
                  id="AlarmType"
                  label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.AlarmType&quot;)"
                  value="cpBuilding.Building.BuildingAlarmType"
                  valueType="typekey.BuildingAlarmType"/>
                <TypeKeyInput
                  editable="true"
                  id="AlarmGrade"
                  label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.AlarmGrade&quot;)"
                  value="cpBuilding.Building.AlarmGrade"
                  valueType="typekey.AlarmGrade"/>
                <TextInput
                  editable="true"
                  id="AlarmCertificate"
                  label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.AlarmCertificateNum&quot;)"
                  value="cpBuilding.Building.AlarmCertificate"/>
                <DateInput
                  editable="true"
                  id="AlarmExpiration"
                  label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.AlarmExpiration&quot;)"
                  value="cpBuilding.Building.AlarmExpiration"/>
                <TypeKeyInput
                  editable="true"
                  id="AlarmClass"
                  label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.AlarmClass&quot;)"
                  value="cpBuilding.Building.AlarmClass"
                  valueType="typekey.AlarmClass"/>
              </InputGroup>
              <InputDivider/>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Improvements&quot;)"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdateHeating"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.LastUpdateHeating&quot;)"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Heating.YearAdded)"
                value="cpBuilding.Building.Heating.YearAdded"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdatePlumbing"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.LastUpdatePlumbing&quot;)"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Plumbing.YearAdded)"
                value="cpBuilding.Building.Plumbing.YearAdded"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdateRoofing"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.LastUpdateRoofing&quot;)"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Roofing.YearAdded)"
                value="cpBuilding.Building.Roofing.YearAdded"
                valueType="java.lang.Integer"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdateWiring"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.LastUpdateWiring&quot;)"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Wiring.YearAdded)"
                value="cpBuilding.Building.Wiring.YearAdded"
                valueType="java.lang.Integer"/>
              <InputDivider/>
              <Label
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Other&quot;)"/>
              <TypeKeyInput
                editable="true"
                id="InterestType"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.InterestType&quot;)"
                value="cpBuilding.Building.InterestType"
                valueType="typekey.InterestType"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="RentedOthers"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.RentedToOthers&quot;)"
                value="cpBuilding.Building.RentedOthers"
                valueType="typekey.PercentByTens"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="PercentVacant"
                label="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.Vacancy&quot;)"
                value="cpBuilding.Building.PercentVacant"
                valueType="typekey.PercentByTens"/>
              <InputDivider/>
            </InputColumn>
          </DetailViewPanel>
        </Card>
        <Card
          id="BuildingCoverages"
          title="DisplayKey.get(&quot;Web.Policy.CP.Location.CPBuilding.CoveragesCardTitle&quot;)">
          <PanelRef>
            <PanelRow>
              <PanelColumn>
                <PanelRef
                  def="CPBldgSuggestedCovDV(cpBuilding, openForEdit)"/>
              </PanelColumn>
              <PanelColumn>
                <PanelRef
                  def="AdditionalCoveragesPanelSet(cpBuilding, new String[]{&quot;CPContentsCategory&quot;}, true)"
                  editable="true"
                  visible="cpBuilding != null"/>
              </PanelColumn>
            </PanelRow>
          </PanelRef>
        </Card>
        <Card
          id="BuildingAddlInterest"
          title="DisplayKey.get(&quot;CommercialProperty.Building.AdditionalInterest&quot;)">
          <PanelRef
            def="AdditionalInterestDetailsDV(cpBuilding, openForEdit)"/>
        </Card>
      </CardViewPanel>
    </Screen>
  </Popup>
</PCF>
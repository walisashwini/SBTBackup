<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <DetailViewPanel
    id="PolicyLineDV"
    mode="GLLine">
    <Require
      name="policyLine"
      type="PolicyLine"/>
    <Variable
      initialValue="policyLine as GLLine"
      name="glLine"
      type="productmodel.GLLine"/>
    <Variable
      initialValue="glLine.Pattern.getCoverageCategoryByPublicId(&quot;GLGroup&quot;)"
      name="glGroupCategory"
      type="gw.api.productmodel.CoverageCategory"/>
    <Require
      name="jobWizardHelper"
      type="gw.api.web.job.JobWizardHelper"/>
    <Variable
      initialValue="glLine.ClaimsMadeOrigEffDate"
      name="previousClaimsMadeDate"
      type="java.util.Date"/>
    <Variable
      initialValue="policyLine.Branch"
      name="policyPeriod"
      type="entity.PolicyPeriod"/>
    <Variable
      initialValue="glGroupCategory.coveragePatternsForEntity(GeneralLiabilityLine).whereSelectedOrAvailable(glLine, CurrentLocation.InEditMode)"
      name="glGroupCategoryCoveragePatterns"
      recalculateOnRefresh="true"
      type="gw.api.productmodel.CoveragePattern[]"/>
    <Variable
      initialValue="glGroupCategory.conditionPatternsForEntity(GeneralLiabilityLine).where(\ c -&gt; glLine.isConditionSelectedOrAvailable(c))"
      name="glGroupCategoryConditionPatterns"
      recalculateOnRefresh="true"
      type="gw.api.productmodel.ConditionPattern[]"/>
    <InputColumn>
      <TypeKeyInput
        editable="policyPeriod.PolicyChange == null"
        id="GLPolicyClaimsMade"
        label="DisplayKey.get(&quot;Web.Policy.GL.PolicyBasis&quot;)"
        required="true"
        showConfirmMessage="true"
        value="glLine.GLCoverageForm"
        valueType="typekey.GLCoverageFormType">
        <PostOnChange
          deferUpdate="false"/>
      </TypeKeyInput>
      <DateInput
        editable="policyPeriod.EditEffectiveDate == policyPeriod.PeriodStart"
        id="ClaimsMadeOrigEffDate"
        label="DisplayKey.get(&quot;Web.Policy.GL.ClaimsMadeOrigEffDate&quot;)"
        required="true"
        value="glLine.ClaimsMadeOrigEffDate"
        visible="glLine.GLCoverageForm == TC_CLAIMSMADE">
        <PostOnChange
          deferUpdate="false"
          onChange="changeRetroactiveDateIfTheSame()"/>
      </DateInput>
      <DateInput
        editable="policyPeriod.EditEffectiveDate == policyPeriod.PeriodStart"
        id="Retrodate"
        label="DisplayKey.get(&quot;Web.Policy.GL.RetroDate&quot;)"
        required="true"
        value="glLine.RetroactiveDate"
        visible="glLine.GLCoverageForm == TC_CLAIMSMADE"/>
      <BooleanRadioInput
        editable="true"
        id="GLPolicySplitLimits"
        label="DisplayKey.get(&quot;Web.Policy.GL.SplitLimits&quot;)"
        value="glLine.SplitLimits">
        <PostOnChange
          deferUpdate="false"
          onChange="gw.web.productmodel.ProductModelSyncIssuesHandler.syncCoverages({glLine}, null)"/>
      </BooleanRadioInput>
      <InputDivider/>
      <InputIterator
        elementName="coveragePattern"
        forceRefreshDespiteChangedEntries="true"
        id="GLGroupIterator"
        value="glGroupCategoryCoveragePatterns"
        valueType="gw.api.productmodel.CoveragePattern[]">
        <IteratorSort
          sortBy="coveragePattern.Priority"
          sortOrder="1"/>
        <InputSetRef
          def="CoverageInputSet(coveragePattern, glLine, CurrentLocation.InEditMode)"
          mode="coveragePattern.PublicID"/>
      </InputIterator>
      <InputIterator
        elementName="conditionpattern"
        forceRefreshDespiteChangedEntries="true"
        id="GLConditionGroupIterator"
        value="glGroupCategoryConditionPatterns"
        valueType="gw.api.productmodel.ConditionPattern[]">
        <InputSetRef
          def="CoverageInputSet(conditionpattern, glLine, CurrentLocation.InEditMode)"
          mode="conditionpattern.PublicID"/>
      </InputIterator>
    </InputColumn>
    <Code><![CDATA[function changeRetroactiveDateIfTheSame(){
  if(gw.api.web.util.PCDateUtil.equalsIgnoreTime(glLine.RetroactiveDate, previousClaimsMadeDate)){
    glLine.RetroactiveDate = glLine.ClaimsMadeOrigEffDate
  }
  previousClaimsMadeDate = glLine.ClaimsMadeOrigEffDate
}]]></Code>
  </DetailViewPanel>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="GL7UnmannedAircraftsPanelSet">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Require
      name="jobWizardHelper"
      type="gw.api.web.job.JobWizardHelper"/>
    <Variable
      initialValue="&quot;&quot;"
      name="typeFilterChoice" type="java.lang.String"/>
    <Variable
      initialValue="gw.lob.gl7.GL7UnmannedAircraftFilter.TypeFilterSet"
      name="typeFilterSet" type="java.util.List&lt;java.lang.String&gt;"/>
    <Variable
      initialValue="&quot;&quot;"
      name="filterValue"
      type="String"/>
    <Variable
      initialValue="policyPeriod.GL7Line"
      name="line"
      type="productmodel.GL7Line"/>
    <Variable
      initialValue="null"
      name="locationFilter"
      type="entity.PolicyLocation"/>
    <Variable
      initialValue="null"
      name="sublineFilter"
      type="java.lang.String"/>
    <PanelRef>
      <Toolbar>
        <AddButton
          hideIfReadOnly="true"
          id="AddUnmannedAircraftBtn"
          iterator="UnmannedAircraftLV"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.NewUnmannedAircraft&quot;)"
          toCreateAndAdd="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter.createWithNewUnmannedAircraft(policyPeriod)"/>
        <RemoveButton
          hideIfReadOnly="true"
          id="RemoveUnmannedAircraftBtn"
          iterator="UnmannedAircraftLV"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.RemoveUnmannedAircraft&quot;)"/>
        <ToolbarRangeInput
          id="TypeFilter"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.FilterBy&quot;)"
          value="typeFilterChoice"
          valueType="java.lang.String"
          valueRange="typeFilterSet">
          <PostOnChange
            onChange="filterValue = &quot;&quot;; locationFilter = null; sublineFilter = &quot;&quot;"/>
        </ToolbarRangeInput>
        <ToolbarInput
          editable="true"
          id="MakeFilterInput"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Model&quot;)"
          value="filterValue"
          valueType="java.lang.String"
          visible="typeFilterChoice == gw.lob.gl7.GL7UnmannedAircraftFilter.ModelTypeFilter">
          <PostOnChange/>
        </ToolbarInput>
        <ToolbarInput
          editable="true"
          id="ManufacturerFilterInput"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Manufacturer&quot;)"
          value="filterValue"
          valueType="java.lang.String"
          visible="typeFilterChoice == gw.lob.gl7.GL7UnmannedAircraftFilter.ManufacturerTypeFilter">
          <PostOnChange/>
        </ToolbarInput>
        <ToolbarInput
          editable="true"
          id="UAIdCodeFilterInput"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.UAIdentificationCode&quot;)"
          value="filterValue"
          valueType="java.lang.String"
          visible="typeFilterChoice == gw.lob.gl7.GL7UnmannedAircraftFilter.AircraftIdCodeTypeFilter">
          <PostOnChange/>
        </ToolbarInput>
        <ToolbarRangeInput
          id="GL7LocationFilter"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Location&quot;)"
          value="locationFilter"
          valueType="entity.PolicyLocation"
          valueRange="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter.validLocations(line)"
          visible="typeFilterChoice == gw.lob.gl7.GL7UnmannedAircraftFilter.LocationTypeFilter">
          <PostOnChange
            onChange="filterValue = locationFilter.PublicID"/>
        </ToolbarRangeInput>
        <ToolbarRangeInput
          id="GL7SublineFilter"
          label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Subline&quot;)"
          value="sublineFilter"
          valueType="java.lang.String"
          valueRange="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter.validSublines(line)"
          visible="typeFilterChoice == gw.lob.gl7.GL7UnmannedAircraftFilter.SublineTypeFilter">
          <PostOnChange
            onChange="filterValue = sublineFilter"/>
        </ToolbarRangeInput>
      </Toolbar>
      <ListDetailPanel
        id="UnmannedAircraftDV"
        selectionName="selectedUnmannedAircraftPresenter"
        selectionType="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter">
        <ListViewPanel
          id="UnmannedAircraftLV">
          <RowIterator
            editable="true"
            elementName="unmannedAircraftPresenter"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            toRemove="unmannedAircraftPresenter.removeFromPolicy()"
            value="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter.validUnmannedAircrafts(line, typeFilterChoice, filterValue)"
            valueType="gw.lob.gl7.presenters.GL7UnmannedAircraftPresenter[]"
          >
            <IteratorSort
              sortBy="unmannedAircraftPresenter.UnmannedAircraftNumber"
              sortOrder="1"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.UAIdentificationCode"
              sortOrder="2"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.Manufacturer"
              sortOrder="3"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.Model"
              sortOrder="4"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.Model"
              sortOrder="5"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.ClassCode"
              sortOrder="6"/>
            <IteratorSort
              sortBy="unmannedAircraftPresenter.Location"
              sortOrder="7"/>
            <Row
              editable="unmannedAircraftPresenter.IsEditEffective">
              <TextCell
                id="UAircraftNumber"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Sequence&quot;)"
                value="unmannedAircraftPresenter.UnmannedAircraftNumber"
                valueType="java.lang.Integer"/>
              <TextCell
                id="UAIdentificationCode"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.UAIdentificationCode&quot;)"
                value="unmannedAircraftPresenter.UAIdentificationCode"
                valueType="java.lang.String"/>
              <TextCell
                id="Manufacturer"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Manufacturer&quot;)"
                value="unmannedAircraftPresenter.Manufacturer"
                valueType="java.lang.String"/>
              <TextCell
                id="Model"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Model&quot;)"
                value="unmannedAircraftPresenter.Model"
                valueType="java.lang.String"/>
              <TextCell
                id="ClassCode"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.ClassCode&quot;)"
                value="unmannedAircraftPresenter.ClassCode"
                valueType="java.lang.String"/>
              <TextCell
                id="Location"
                label="DisplayKey.get(&quot;Web.Policy.GL7.UnmannedAircraft.Location&quot;)"
                required="true"
                value="unmannedAircraftPresenter.Location"
                valueType="entity.PolicyLocation"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
        <PanelRef
          def="GL7UnmannedAircraftsCV(policyPeriod, selectedUnmannedAircraftPresenter, openForEdit, jobWizardHelper, gw.lob.gl7.GL7Category.CategoriesForUnmannedAircraft)"
          editable="openForEdit"
          visible="selectedUnmannedAircraftPresenter != null"/>
      </ListDetailPanel>
    </PanelRef>
  </PanelSet>
</PCF>

<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="WCOptionCardPanelSet"
    mode="EmployeeLeasing">
    <Require
      name="wcLine"
      type="WorkersCompLine"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="gw.plugin.Plugins.get(gw.plugin.contact.IContactConfigPlugin)"
      name="contactConfigPlugin"
      type="gw.plugin.contact.IContactConfigPlugin"/>
    <PanelRef>
      <TitleBar
        title="DisplayKey.get(&quot;Web.Contact.LaborClient&quot;)"/>
      <Toolbar>
        <AddButton
          hideIfReadOnly="true"
          id="AddPolicyLaborClient"
          iterator="PolicyLaborClientDetailsLV"
          label="DisplayKey.get(&quot;Web.Generic.Add&quot;)"
          visible="true">
          <AddMenuItemIterator
            elementName="contactType"
            value="contactConfigPlugin.getAllowedContactTypesForPolicyContactRoleType(typekey.PolicyContactRole.TC_POLICYLABORCLIENT)"
            valueType="typekey.ContactType[]">
            <IteratorSort
              sortBy="contactType.DisplayName"
              sortOrder="1"/>
            <AddMenuItem
              id="ContactType"
              iterator="PolicyLaborClientDetailsLV"
              label="DisplayKey.get(&quot;Web.Contact.AddNewOfType&quot;, contactType)"
              pickLocation="NewLaborClientForContactTypePopup.push(wcLine, contactType)"/>
          </AddMenuItemIterator>
          <AddMenuItem
            conversionExpression="wcLine.addNewLaborClientDetailForContact(PickedValue)"
            id="AddFromSearch"
            iterator="PolicyLaborClientDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.FromAddressBook&quot;)"
            pickLocation="ContactSearchPopup.push(TC_LABORCLIENT)"/>
          <AddMenuItem
            hideIfReadOnly="true"
            id="AddExistingContact"
            iterator="PolicyLaborClientDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.Existing&quot;, PolicyLaborClient.Type.TypeInfo.DisplayName)">
            <AddMenuItemIterator
              elementName="acctContact"
              value="wcLine.PolicyLaborClientDetailExistingCandidates"
              valueType="entity.AccountContact[]">
              <IteratorSort
                sortBy="acctContact.DisplayName"
                sortOrder="1"/>
              <AddMenuItem
                id="AccountContact"
                iterator="PolicyLaborClientDetailsLV"
                label="acctContact"
                toCreateAndAdd="wcLine.addNewLaborClientDetailForContact(acctContact.Contact)"/>
            </AddMenuItemIterator>
          </AddMenuItem>
          <AddMenuItem
            hideIfReadOnly="true"
            id="AddOtherContact"
            iterator="PolicyLaborClientDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.OtherContacts&quot;)">
            <AddMenuItemIterator
              elementName="acctContact"
              value="wcLine.PolicyLaborClientDetailOtherCandidates"
              valueType="entity.AccountContact[]">
              <IteratorSort
                sortBy="acctContact.DisplayName"
                sortOrder="1"/>
              <AddMenuItem
                id="AccountContact"
                iterator="PolicyLaborClientDetailsLV"
                label="acctContact"
                toCreateAndAdd="wcLine.addNewLaborClientDetailForContact(acctContact.Contact)"/>
            </AddMenuItemIterator>
          </AddMenuItem>
        </AddButton>
        <IteratorButtons
          id="ANIIteratorButtons"
          iterator="PolicyLaborClientDetailsLV"/>
      </Toolbar>
      <ListViewPanel
        disableUserCustomization="true"
        id="PolicyLaborClientDetailsLV"
        stretch="true">
        <RowIterator
          checkBoxVisible="true"
          editable="true"
          elementName="policyLaborClientDetail"
          hasCheckBoxes="true"
          hideCheckBoxesIfReadOnly="true"
          toRemove="policyLaborClientDetail.WCLaborContact.removeDetail(policyLaborClientDetail)"
          value="wcLine.PolicyLaborClients.arrays(&quot;Details&quot;).toArray(new entity.WCLaborContactDetail[0])"
          valueType="entity.WCLaborContactDetail[]">
          <Row>
            <TextCell
              action="EditPolicyContactRolePopup.push(policyLaborClientDetail.WCLaborContact, openForEdit)"
              grow="true"
              id="Name"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Supplier.ClientName&quot;)"
              required="true"
              value="policyLaborClientDetail.WCLaborContact"
              valueType="entity.WCLaborContact"/>
            <TypeKeyCell
              editable="true"
              id="Inclusion"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Supplier.Include&quot;)"
              required="true"
              value="policyLaborClientDetail.Inclusion"
              valueType="typekey.Inclusion"
              wrap="false"/>
            <TypeKeyCell
              id="State"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Supplier.State&quot;)"
              value="policyLaborClientDetail.WCLaborContact.AccountContactRole.AccountContact.Contact.PrimaryAddress.State"
              valueType="typekey.State"
              wrap="false"/>
            <DateCell
              editable="true"
              id="ContractEffectiveDate"
              label="DisplayKey.get(&quot;Web.PolicyLine.LeasedEmployee.ContractEffectiveDate&quot;)"
              required="true"
              value="policyLaborClientDetail.ContractEffectiveDate"
              wrap="false"/>
            <DateCell
              editable="true"
              id="ContractExpirationDate"
              label="DisplayKey.get(&quot;Web.PolicyLine.LeasedEmployee.ContractExpirationDate&quot;)"
              required="true"
              value="policyLaborClientDetail.ContractExpirationDate"
              wrap="false"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </PanelRef>
    <PanelRef>
      <TitleBar
        title="DisplayKey.get(&quot;Web.Contact.LaborContractor&quot;)"/>
      <Toolbar>
        <AddButton
          hideIfReadOnly="true"
          id="AddPolicyLaborContractor"
          iterator="PolicyLaborContractorDetailsLV"
          label="DisplayKey.get(&quot;Web.Generic.Add&quot;)"
          visible="true">
          <AddMenuItemIterator
            elementName="contactType"
            value="contactConfigPlugin.getAllowedContactTypesForPolicyContactRoleType(typekey.PolicyContactRole.TC_POLICYLABORCONTRACTOR)"
            valueType="typekey.ContactType[]">
            <IteratorSort
              sortBy="contactType.DisplayName"
              sortOrder="1"/>
            <AddMenuItem
              id="ContactType"
              iterator="PolicyLaborContractorDetailsLV"
              label="DisplayKey.get(&quot;Web.Contact.AddNewOfType&quot;, contactType)"
              pickLocation="NewLaborContractorForContactTypePopup.push(wcLine, contactType)"/>
          </AddMenuItemIterator>
          <AddMenuItem
            conversionExpression="wcLine.addNewLaborContractorDetailForContact(PickedValue)"
            id="AddFromSearch"
            iterator="PolicyLaborContractorDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.FromAddressBook&quot;)"
            pickLocation="ContactSearchPopup.push(TC_LABORCONTRACTOR)"/>
          <AddMenuItem
            hideIfReadOnly="true"
            id="AddExistingContact"
            iterator="PolicyLaborContractorDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.Existing&quot;, PolicyLaborContractor.Type.TypeInfo.DisplayName)">
            <AddMenuItemIterator
              elementName="acctContact"
              value="wcLine.PolicyLaborContractorDetailExistingCandidates"
              valueType="entity.AccountContact[]">
              <IteratorSort
                sortBy="acctContact.DisplayName"
                sortOrder="1"/>
              <AddMenuItem
                id="AccountContact"
                iterator="PolicyLaborContractorDetailsLV"
                label="acctContact"
                toCreateAndAdd="wcLine.addNewLaborContractorDetailForContact(acctContact.Contact)"/>
            </AddMenuItemIterator>
          </AddMenuItem>
          <AddMenuItem
            hideIfReadOnly="true"
            id="AddOtherContact"
            iterator="PolicyLaborContractorDetailsLV"
            label="DisplayKey.get(&quot;Web.Policy.Contact.OtherContacts&quot;)">
            <AddMenuItemIterator
              elementName="acctContact"
              value="wcLine.PolicyLaborContractorDetailOtherCandidates"
              valueType="entity.AccountContact[]">
              <IteratorSort
                sortBy="acctContact.DisplayName"
                sortOrder="1"/>
              <AddMenuItem
                id="AccountContact"
                iterator="PolicyLaborContractorDetailsLV"
                label="acctContact"
                toCreateAndAdd="wcLine.addNewLaborContractorDetailForContact(acctContact.Contact)"/>
            </AddMenuItemIterator>
          </AddMenuItem>
        </AddButton>
        <IteratorButtons
          id="ANIIteratorButtons"
          iterator="PolicyLaborContractorDetailsLV"/>
      </Toolbar>
      <ListViewPanel
        disableUserCustomization="true"
        id="PolicyLaborContractorDetailsLV"
        stretch="true">
        <RowIterator
          checkBoxVisible="true"
          editable="true"
          elementName="policyLaborContractorDetail"
          hasCheckBoxes="true"
          hideCheckBoxesIfReadOnly="true"
          toRemove="policyLaborContractorDetail.WCLaborContact.removeDetail(policyLaborContractorDetail)"
          value="wcLine.PolicyLaborContractors.arrays(&quot;Details&quot;).toArray(new entity.WCLaborContactDetail[0])"
          valueType="entity.WCLaborContactDetail[]">
          <Row>
            <TextCell
              action="EditPolicyContactRolePopup.push(policyLaborContractorDetail.WCLaborContact, openForEdit)"
              grow="true"
              id="Name"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Receiver.SupplierName&quot;)"
              required="true"
              value="policyLaborContractorDetail.WCLaborContact"
              valueType="entity.WCLaborContact"/>
            <TypeKeyCell
              editable="true"
              id="Inclusion"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Receiver.Include&quot;)"
              required="true"
              value="policyLaborContractorDetail.Inclusion"
              valueType="typekey.Inclusion"
              wrap="false"/>
            <TypeKeyCell
              id="State"
              label="DisplayKey.get(&quot;Web.Policy.WC.EmployeeLeasing.Receiver.State&quot;)"
              value="policyLaborContractorDetail.WCLaborContact.AccountContactRole.AccountContact.Contact.PrimaryAddress.State"
              valueType="typekey.State"
              wrap="false"/>
            <DateCell
              editable="true"
              id="ContractEffectiveDate"
              label="DisplayKey.get(&quot;Web.PolicyLine.LeasedEmployee.ContractEffectiveDate&quot;)"
              required="true"
              value="policyLaborContractorDetail.ContractEffectiveDate"
              wrap="false"/>
            <DateCell
              editable="true"
              id="ContractExpirationDate"
              label="DisplayKey.get(&quot;Web.PolicyLine.LeasedEmployee.ContractExpirationDate&quot;)"
              required="true"
              value="policyLaborContractorDetail.ContractExpirationDate"
              wrap="false"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </PanelRef>
  </PanelSet>
</PCF>
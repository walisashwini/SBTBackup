<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="WCOptionCardPanelSet"
    mode="IndividualsIncludedExcluded">
    <Require
      name="wcLine"
      type="WorkersCompLine"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <DetailViewPanel>
      <InputColumn>
        <InputSet
          id="InclExclIndividualsInputSet">
          <ListViewInput
            editable="true"
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="IndividualsInclusionExclusionLV"/>
            </Toolbar>
            <ListViewPanel
              id="IndividualsInclusionExclusionLV"
              stretch="true">
              <RowIterator
                editable="true"
                elementName="inclusionPerson"
                hasCheckBoxes="true"
                hideCheckBoxesIfReadOnly="true"
                toCreateAndAdd="wcLine.createAndAddInclusionPerson()"
                toRemove="wcLine.removeFromInclusionPersons(inclusionPerson)"
                value="wcLine.InclusionPersons"
                valueType="entity.InclusionPerson[]">
                <Row>
                  <TypeKeyCell
                    align="left"
                    editable="true"
                    id="Include"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.Include&quot;)"
                    required="true"
                    value="inclusionPerson.Inclusion"
                    valueType="typekey.Inclusion"
                    wrap="false">
                    <PostOnChange/>
                  </TypeKeyCell>
                  <RangeCell
                    align="left"
                    editable="true"
                    id="State"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.State&quot;)"
                    required="true"
                    value="inclusionPerson.State"
                    valueRange="wcLine.Jurisdictions.map(\j -&gt; j.State)"
                    valueType="typekey.Jurisdiction"
                    wrap="false"/>
                  <TypeKeyCell
                    align="left"
                    editable="true"
                    filter="inclusionPerson.filterRelationship(VALUE)"
                    id="Relationship"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.Relationship&quot;)"
                    value="inclusionPerson.Relationship"
                    valueType="typekey.Relationship"
                    wrap="false"/>
                  <TextCell
                    editable="true"
                    id="FirstName"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.FirstName&quot;)"
                    value="inclusionPerson.FirstName"
                    wrap="false"/>
                  <TextCell
                    editable="true"
                    id="LastName"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.LastName&quot;)"
                    value="inclusionPerson.LastName"
                    wrap="false"/>
                  <TextCell
                    editable="true"
                    grow="true"
                    id="Duties"
                    label="DisplayKey.get(&quot;Web.Policy.WC.InclExcl.Duties&quot;)"
                    value="inclusionPerson.Duties"/>
                </Row>
              </RowIterator>
            </ListViewPanel>
          </ListViewInput>
        </InputSet>
      </InputColumn>
    </DetailViewPanel>
  </PanelSet>
</PCF>
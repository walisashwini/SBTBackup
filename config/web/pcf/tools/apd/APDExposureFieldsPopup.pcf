<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Popup
    beforeCommit="exposure.Coverable.ProductLine.productLineUpdated()"
    canEdit="startInEditMode"
    canVisit="true"
    id="APDExposureFieldsPopup"
    startInEditMode="startInEditMode"
    title="DisplayKey.get(&quot;Web.APDExposureFields.Title&quot;)">
    <LocationEntryPoint
      signature="APDExposureFieldsPopup(exposure : APDExposure)"/>
    <LocationEntryPoint
      signature="APDExposureFieldsPopup(exposure : APDExposure, startInEditMode : boolean)"/>
    <Variable
      name="exposure"
      type="APDExposure"/>
    <Variable
      initialValue="false"
      name="startInEditMode"
      type="boolean"/>
    <Variable
      initialValue="new gw.api.web.userpreference.UserPreferencesOfCurrentUser().inDevelopMode()"
      name="inDevelopMode"
      type="Boolean"/>    
    <Screen>
      <Toolbar>
        <EditButtons/>
      </Toolbar>
      <ListDetailPanel
        selectionName="fieldDetail"
        selectionType="APDExposureField">
        <PanelRef>
          <Toolbar>
            <IteratorButtons
              iterator="FieldsLV"
              removeFlags="all canDelete"/>
          </Toolbar>
          <ListViewPanel>
            <RowIterator
              editable="true"
              elementName="field"
              id="FieldsLV"
              toCreateAndAdd="exposure.createAndAddField()"
              toRemove="exposure.removeField(field)"
              value="exposure.Fields"
              valueType="APDExposureField[]">
              <IteratorSort
                sortBy="field.Sequence"
                sortOrder="1"/>
              <ToolbarFlag
                condition="not field.Jurisdiction"
                name="canDelete"/>
              <Row>
                <TextCell
                  editable="true"
                  enableSort="false"
                  id="Label"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Label&quot;)"
                  required="true"
                  value="field.Label"/>
                <TypeKeyCell
                  editable="not field.Jurisdiction"
                  enableSort="false"
                  id="Type"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Type&quot;)"
                  required="true"
                  value="field.Type"
                  valueType="APDFieldType">
                  <PostOnChange
                    onChange="field.DropDownType = field.Type == APDFieldType.TC_TYPEKEY ? APDDropDownType.TC_TYPELIST : null"/>
                  <MenuItem
                    action="APDDropDownDefinitionPopup.push(field, false, CurrentLocation.InEditMode)"
                    id="DropDownDefinition"
                    label="DisplayKey.get(&quot;Web.APDAttributeDropDownDefinition.Button&quot;)"
                    visible="field.Type == APDFieldType.TC_TYPEKEY"/>
                </TypeKeyCell>
                <BooleanRadioCell
                  editable="true"
                  enableSort="false"
                  id="BasisScalingKey"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.BasisScalingKey&quot;)"
                  value="field.BasisScalingKey"/>
                <CheckBoxCell
                  editable="true"
                  enableSort="false"
                  id="Jurisdiction"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Jurisdiction&quot;)"
                  value="field.Jurisdiction"
                  valueVisible="field.Type == APDFieldType.TC_LOCATION">
                  <PostOnChange
                    onChange="field.autoSetRiskLocation()"/>
                </CheckBoxCell>
                <RangeCell
                  action="APDAttributeRulePopup.push(field.Rules.firstWhere(\r -&gt; r.RuleType == APDRuleType.TC_EXISTENCE and not (r typeis APDDropdownEntryRule)), field, APDRuleType.TC_EXISTENCE, startInEditMode)"
                  enableSort="false"
                  id="Usage"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.ExistenceRule&quot;)"
                  value="field.Rules.firstWhere(\r -&gt; r.RuleType == APDRuleType.TC_EXISTENCE and not (r typeis APDDropdownEntryRule)).DefaultExistence ?: APDDataExistenceType.TC_CAPTURED"
                  valueRange="APDDataExistenceType.getTypeKeys(false)"
                  valueType="APDDataExistenceType"/>
                <ModalCellRef
                  def="APDAttributeDefaultValue(field, APDRuleType.TC_DEFAULT, null, startInEditMode)"
                  editable="false"
                  grow="true"
                  id="DefaultValue"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.DefaultingRule&quot;)"
                  mode="field.getUIRuleMode(APDRuleType.TC_DEFAULT)"
                  required="false"/>
                <ModalCellRef
                  def="APDAttributeDefaultValue(field, APDRuleType.TC_MIN, null, startInEditMode)"
                  editable="false"
                  grow="true"
                  id="MinimumValue"
                  label="DisplayKey.get(&quot;Web.Policy.ManualLine.RiskCoverable.MinimumAmountRule&quot;)"
                  mode="field.getUIRuleMode(APDRuleType.TC_MIN)"
                  required="false"/>
                <ModalCellRef
                  def="APDAttributeDefaultValue(field, APDRuleType.TC_MAX, null, startInEditMode)"
                  editable="false"
                  grow="true"
                  id="MaximumValue"
                  label="DisplayKey.get(&quot;Web.Policy.ManualLine.RiskCoverable.MaximumAmountRule&quot;)"
                  mode="field.getUIRuleMode(APDRuleType.TC_MAX)"
                  required="false"/>
                <TextCell
                  action="APDTagPopup.push(field, startInEditMode)"
                  enableSort="false"
                  id="Tags"
                  label="DisplayKey.get(&quot;Web.Policy.ManualLine.RiskCoverable.Tags&quot;)"
                  value="field.TagDisplayValue"
                  valueVisible="field.ShowDisplayValue"
                  visible="false"/>
                <CheckBoxCell
                  editable="true"
                  enableSort="false"
                  id="SplitByRatingPeriods"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.SplitByRatingPeriods&quot;)"
                  value="field.SplitByRatingPeriods">
                  <PostOnChange
                    onChange="if (field.SplitByRatingPeriods == false) {field.Scalable = false}"/>
                </CheckBoxCell>
                <CheckBoxCell
                  editable="true"
                  enableSort="false"
                  id="Scalable"
                  label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Scalable&quot;)"
                  value="field.Scalable"
                  valueVisible="field.CanScale"/>
                <TextCell
                  editable="true"
                  enableSort="false"
                  id="Description"
                  label="DisplayKey.get(&quot;Web.APD.RequiredForGeneration&quot;, DisplayKey.get(&quot;Web.APDProductScreen.APDField.Description&quot;))"
                  value="field.Description"/>
                <TextCell
                  editable="true"
                  enableSort="false"
                  id="Name"
                  label="DisplayKey.get(&quot;Web.APD.RequiredForGeneration&quot;, DisplayKey.get(&quot;Web.APDProductScreen.APDField.Name&quot;))"
                  value="field.Name"
                  visible="inDevelopMode"/>
                <ButtonCell
                  hideIfDisabled="false"
                  hideIfReadOnly="true"
                  id="MoveButton"
                  label="DisplayKey.get(&quot;Web.APD.LVColumnHeading.Move&quot;)"
                  value="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Move&quot;)">
                  <MenuItem
                    action="field.moveUp()"
                    available="field.Sequence != 1"
                    id="MoveUp"
                    label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Move.Up&quot;)"/>
                  <MenuItem
                    action="field.moveDown()"
                    available="field.Sequence != field.Exposure.Fields.Count"
                    id="MoveDown"
                    label="DisplayKey.get(&quot;Web.APDProductScreen.APDField.Move.Down&quot;)"/>
                </ButtonCell>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
        <CardViewPanel
          hideTabIfSingle="true">
          <Card
            id="TermDetail"
            title="&quot;&quot;">
            <PanelRef
              def="LocalizedValuesDV(fieldDetail, {&quot;Label&quot;, &quot;Description&quot;}, {DisplayKey.get(&quot;Web.Policy.ManualLine.APDAttribute.Label&quot;), DisplayKey.get(&quot;Web.APDProductScreen.APDField.Description&quot;)})"
              id="ExposureLocalizedValues"/>
          </Card>
        </CardViewPanel>
      </ListDetailPanel>
    </Screen>
  </Popup>
</PCF>
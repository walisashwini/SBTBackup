//TODO: revisit if this min is causing spacing problems
$gw-InputColumn--row-min-height: calc(#{gw-emFixed($gw-app--line-height-unitless + (4 / gw-stripUnit($gw-app--base-font-size--in-px)))} + #{$gw-app--inputs--pad-v-rem * 2});

.gw-InputColumnWidget {
  @include gw-borderRadius();
  display: inline-block;
  overflow: hidden;

  @include gw-ie11Only {
      overflow: visible !important;
  }

  min-width: $gw-app--InputColumn--min-width-em;
  max-width: $gw-app--InputColumn--max-width-em;
  flex-shrink: 1;

  @include gw-panelOuterSpacing();
  @include gw-panelInnerSpacing();
  @include gw-widgetStyles();
}

//$widgetName: "InputWidget-in-InputColumn"
@mixin gw-formatInputWidgetsInInputColumnLikes(
    $marg-top: $gw-app--InputWidget-in-InputColumn--spacing-widget-top-rem,
    $marg-left: $gw-app--InputWidget-in-InputColumn--spacing-widget-left-rem,
    $marg-right: $gw-app--InputWidget-in-InputColumn--spacing-widget-right-rem,
    $marg-bottom: $gw-app--InputWidget-in-InputColumn--spacing-widget-bottom-rem,
    $pad-top: $gw-app--InputWidget-in-InputColumn--spacing-inner-top-rem,
    $pad-left: $gw-app--InputWidget-in-InputColumn--spacing-inner-left-rem,
    $pad-right: $gw-app--InputWidget-in-InputColumn--spacing-inner-right-rem,
    $pad-bottom: $gw-app--InputWidget-in-InputColumn--spacing-inner-bottom-rem,
    $label-pad-right: $gw-app--InputWidget-in-InputColumn--row-label-pad-right-rem,
    $label-col: $gw-app--InputWidget-in-InputColumn--label-col) {
  display: flex;
  justify-content: flex-start;
  flex-direction: row;

  &:not(.gw-LabelWidget):not(.gw-InputGroupWidget):not(.gw-InputColumnSubGroupWidget) {
    // Position to other widgets
    margin-top: $marg-top;
    margin-left: $marg-left;
    margin-right: $marg-right;
    margin-bottom: $marg-bottom;

    // Internal padding
    padding-top: $pad-top;
    padding-left: $pad-left;
    padding-right: $pad-right;
    padding-bottom: $pad-bottom;
  }

  .gw-ContentInputWidget--children {
    flex-wrap: wrap;
    align-items: center;
  }

  .gw-vw--value {
    flex-grow: 1;
    flex-shrink: 1;

    > textarea, select[multiselect] {
      flex-grow: 1;
    }
  }

  &:not(.gw-labelAbove) {
    align-items: flex-start;

    & > .gw-label {
      @include gw-wrapOnWhiteSpace();
      flex-shrink: 0;
      color: $label-col;
      margin-right: $label-pad-right;
      width: $gw-app--InputColumn--fallback-label-size-em;
      margin-top: $gw-app--InputColumn--label-margin-top-rem;
      border-top: gw-border(transparent);
      border-bottom: gw-border(transparent); //.gw-vw--value has a transparent border for error display, the label needs the same invisible border so that we can space things correctly
    }

    & > .gw-value {
      display: inline-block;
      position: relative;
      flex-grow: 1;
      flex-shrink: 1;
      @include gw-allowShrinkSmallerThanContents();
      min-height: $gw-InputColumn--row-min-height;

      > .gw-required, > .gw-TemplateValueWidget > .gw-required {
        @include gw-required();
      }
    }

    &.gw-ContentInputWidget > .gw-value {
      display: inline-flex;
    }

    // We do most of our alignment based on a value widget having a gw-vw-value section
    // This widget just has a single button in it, so vertical alignment is off
    &.gw-ButtonInputWidget > .gw-value {
      display: inline-flex;
      align-items: center;
    }
  }

  &.gw-labelAbove {
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;

    & > .gw-label {
      max-width: $gw-app--InputColumn--max-label-above-width-em;
      display: block;
      @include gw-wrapOnWhiteSpace();
    }

    > .gw-value {
      display: block;
      position: relative;
      > .gw-required, > .gw-TemplateValueWidget > .gw-required {
        @include gw-required($left:$gw-app--InputColumn--required--label-above--left-em,
                $top:$gw-app--InputColumn--required--label-above--top-em,
                $size:$gw-app--InputColumn--required--label-above--size-em);
      }
    }

    &.gw-ContentInputWidget > .gw-value {
      display: flex;
    }

    // We do most of our alignment based on a value widget having a gw-vw-value section
    // This widget just has a single button in it, so vertical alignment is off
    &.gw-ButtonInputWidget > .gw-value {
      display: flex;
      align-items: center;
    }
  }
}

//Note: not listing InputGroup and InputColumnSubGroup here
.gw-styleTag--InputSectionWidget,
.gw-styleTag--ConfirmPasswordInputWidget,
.gw-styleTag--InputColumnWidget,
.gw-styleTag--TableLayoutDetailViewWidget, //Table-Layout DetailViews contain Inputs directly
.gw-styleTag--ChoiceWidget {
  @include gw-formatInputWidgetsInInputColumnLikes();
}

.gw-styleTag--FormatCellWidget {
  @include gw-formatInputWidgetsInInputColumnLikes(
          $marg-top: 0,
          $marg-left: 0,
          $marg-right: 0,
          $marg-bottom: 0,
          $pad-left: 0,
          $pad-right: 0
  );
}

.gw-styleTag--InputGroupWidget {
  @include gw-formatInputWidgetsInInputColumnLikes(
          $marg-top: $gw-app--InputWidget-in-InputGroup--spacing-widget-top-rem,
          $marg-left: $gw-app--InputWidget-in-InputGroup--spacing-widget-left-rem,
          $marg-right: $gw-app--InputWidget-in-InputGroup--spacing-widget-right-rem,
          $marg-bottom: $gw-app--InputWidget-in-InputGroup--spacing-widget-bottom-rem,
          $pad-top: $gw-app--InputWidget-in-InputGroup--spacing-inner-top-rem,
          $pad-left: $gw-app--InputWidget-in-InputGroup--spacing-inner-left-rem,
          $pad-right: $gw-app--InputWidget-in-InputGroup--spacing-inner-right-rem,
          $pad-bottom: $gw-app--InputWidget-in-InputGroup--spacing-inner-bottom-rem,
          $label-pad-right: $gw-app--InputWidget-in-InputGroup--row-label-pad-right-rem,
          $label-col: $gw-app--InputWidget-in-InputGroup--label-col);
}

.gw-styleTag--InputColumnSubGroupWidget {
  @include gw-formatInputWidgetsInInputColumnLikes(
          $marg-top: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-widget-top-rem,
          $marg-left: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-widget-left-rem,
          $marg-right: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-widget-right-rem,
          $marg-bottom: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-widget-bottom-rem,
          $pad-top: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-inner-top-rem,
          $pad-left: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-inner-left-rem,
          $pad-right: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-inner-right-rem,
          $pad-bottom: $gw-app--InputWidget-in-InputColumnSubGroup--spacing-inner-bottom-rem,
          $label-pad-right: $gw-app--InputWidget-in-InputColumnSubGroup--row-label-pad-right-rem,
          $label-col: $gw-app--InputWidget-in-InputColumnSubGroup--label-col);
}

/**
  We allow setting specific defaults per language, in addition to allowing each app to modify the overall label values
 */
@mixin gw-buildI18nLabelWidths($map-name) {

  @each $lang-code, $lang-val in $map-name {
    .gw-lang-#{$lang-code} {
      .gw-styleTag--InputSectionWidget,
      .gw-styleTag--ConfirmPasswordInputWidget,
      .gw-styleTag--InputColumnWidget,
      .gw-styleTag--TableLayoutDetailViewWidget,
      .gw-styleTag--ChoiceWidget,
      .gw-styleTag--FormatCellWidget,
      .gw-styleTag--InputGroupWidget,
      .gw-styleTag--InputColumnSubGroupWidget {

        &:not(.gw-labelAbove) {
          & > .gw-label {
            width: $lang-val;
          }
        }
      }
    }
  }
}

// Normal Language Values
@include gw-buildI18nLabelWidths($gw-app--i18n--label-width-overrides);

// Per App Overrides
.gw-app-CM {
  @include gw-buildI18nLabelWidths($gw-app--i18n--label-width-CM-specific-overrides);
}

.gw-app-BC {
  @include gw-buildI18nLabelWidths($gw-app--i18n--label-width-BC-specific-overrides);
}

.gw-app-CC {
  @include gw-buildI18nLabelWidths($gw-app--i18n--label-width-CC-specific-overrides);
}

.gw-app-PC {
  @include gw-buildI18nLabelWidths($gw-app--i18n--label-width-PC-specific-overrides);
}







